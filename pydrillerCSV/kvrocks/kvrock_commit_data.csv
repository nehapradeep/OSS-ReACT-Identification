Commit Hash,Author Email,Author Date,Committer Email,Committer Date,Commit Message,Branches,In Main Branch,Is Merge Commit,Number of Modified Files,File Name,File Extension,Added Lines,Deleted Lines,Total Lines Changed
82caf45a1e05e69f2b6e1fc8d90953c352a46df9,linty@meitu.com,2019-08-15 21:10:11+08:00,linty@meitu.com,2019-08-15 21:10:11+08:00,ADD: MIT LICENSE,unstable,True,False,1,LICENSE,None,21,0,21
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,.gitignore,gitignore,40,0,40
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,.gitmodules,gitmodules,21,0,21
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,.travis.yml,yml,54,0,54
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,.travis.yml.swn,swn,0,0,0
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,CMakeLists.txt,txt,267,0,267
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,CONTRIBUTING,None,16,0,16
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,Changelog,None,2,0,2
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,Dockerfile,None,10,0,10
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,Makefile,None,31,0,31
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,README.md,md,64,0,64
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,build.sh,sh,50,0,50
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,gflags.cmake,cmake,43,0,43
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,glog.cmake,cmake,46,0,46
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,gtest.cmake,cmake,35,0,35
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,jemalloc.cmake,cmake,34,0,34
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,libevent.cmake,cmake,36,0,36
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,rocksdb.cmake,cmake,51,0,51
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,snappy.cmake,cmake,43,0,43
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,cppcheck.sh,sh,6,0,6
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,cpplint.sh,sh,1,0,1
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,docker_push.sh,sh,3,0,3
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,metadata-design.md,md,56,0,56
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,multi-tenant.CN.md,md,31,0,31
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,replication-design.md,md,49,0,49
288dd08eca2e3c5336b180355fac4f8996f2b07a,hulk.website@gmail.com,2019-08-15 21:11:22+08:00,linty@meitu.com,2019-08-16 18:39:29+08:00,MOD: cleanup for open source,unstable,True,False,143,support-commands.md,md,180,0,180
d2c801e6d5cf093874371250930de8df63a06d9f,hulk.website@gmail.com,2019-08-16 19:04:42+08:00,hulk.website@gmail.com,2019-08-16 19:04:42+08:00,MOD: add git submodule init and update command to build.sh,unstable,True,False,1,build.sh,sh,2,0,2
b26e5c3fab3a4bbc8ba02e58ec856074392d3650,hulk.website@gmail.com,2019-08-16 19:26:59+08:00,hulk.website@gmail.com,2019-08-16 19:31:32+08:00,MOD: update README,unstable,True,False,4,README.md,md,48,2,50
b26e5c3fab3a4bbc8ba02e58ec856074392d3650,hulk.website@gmail.com,2019-08-16 19:26:59+08:00,hulk.website@gmail.com,2019-08-16 19:31:32+08:00,MOD: update README,unstable,True,False,4,chart-commands.png,png,0,0,0
b26e5c3fab3a4bbc8ba02e58ec856074392d3650,hulk.website@gmail.com,2019-08-16 19:26:59+08:00,hulk.website@gmail.com,2019-08-16 19:31:32+08:00,MOD: update README,unstable,True,False,4,chart-threads.png,png,0,0,0
b26e5c3fab3a4bbc8ba02e58ec856074392d3650,hulk.website@gmail.com,2019-08-16 19:26:59+08:00,hulk.website@gmail.com,2019-08-16 19:31:32+08:00,MOD: update README,unstable,True,False,4,chart-values.png,png,0,0,0
6316458024751598420568c7d9e2c4b9236995b9,hulk.website@gmail.com,2019-08-16 22:08:55+08:00,hulk.website@gmail.com,2019-08-16 22:29:15+08:00,MOD: update travis ci,unstable,True,False,1,.travis.yml,yml,4,5,9
dda0fd8cb501f6963a8f8f3e3272b6379afb0313,hulk.website@gmail.com,2019-08-16 22:10:57+08:00,hulk.website@gmail.com,2019-08-16 22:29:19+08:00,TST: sleep 1s to wait for task queue exit,unstable,True,False,1,task_runner_test.cc,cc,1,1,2
d83867c31368c341385ed274282e2ddeace7d556,hulk.website@gmail.com,2019-08-19 10:08:31+08:00,hulk.website@gmail.com,2019-08-19 10:08:44+08:00,"ADD: object dump command, usage: object dump",unstable,True,False,5,redis_cmd.cc,cc,27,3,30
d83867c31368c341385ed274282e2ddeace7d556,hulk.website@gmail.com,2019-08-19 10:08:31+08:00,hulk.website@gmail.com,2019-08-19 10:08:44+08:00,"ADD: object dump command, usage: object dump",unstable,True,False,5,redis_db.cc,cc,52,0,52
d83867c31368c341385ed274282e2ddeace7d556,hulk.website@gmail.com,2019-08-19 10:08:31+08:00,hulk.website@gmail.com,2019-08-19 10:08:44+08:00,"ADD: object dump command, usage: object dump",unstable,True,False,5,redis_db.h,h,1,0,1
d83867c31368c341385ed274282e2ddeace7d556,hulk.website@gmail.com,2019-08-19 10:08:31+08:00,hulk.website@gmail.com,2019-08-19 10:08:44+08:00,"ADD: object dump command, usage: object dump",unstable,True,False,5,redis_metadata.cc,cc,7,3,10
d83867c31368c341385ed274282e2ddeace7d556,hulk.website@gmail.com,2019-08-19 10:08:31+08:00,hulk.website@gmail.com,2019-08-19 10:08:44+08:00,"ADD: object dump command, usage: object dump",unstable,True,False,5,redis_metadata.h,h,9,0,9
2d80e5cb23878f71716fad2ae5dd22b5027049d5,hulk.website@gmail.com,2019-08-19 10:21:54+08:00,hulk.website@gmail.com,2019-08-19 10:22:25+08:00,MOD: update README,unstable,True,False,1,README.md,md,7,7,14
19f315249e799c1cae1fffed40187d524e28243e,hulk.website@gmail.com,2019-08-19 14:47:12+08:00,hulk.website@gmail.com,2019-08-19 14:47:12+08:00,TST: add test case for object command,unstable,True,False,2,support-commands.md,md,1,1,2
19f315249e799c1cae1fffed40187d524e28243e,hulk.website@gmail.com,2019-08-19 14:47:12+08:00,hulk.website@gmail.com,2019-08-19 14:47:12+08:00,TST: add test case for object command,unstable,True,False,2,key_test.py,py,120,1,121
13e2442350cf42eea6d579146bb911e6a38b62fe,hulk.website@gmail.com,2019-08-19 18:48:12+08:00,hulk.website@gmail.com,2019-08-19 18:48:12+08:00,FIX: pthread library was not found in some os,unstable,True,False,1,CMakeLists.txt,txt,17,2,19
5aa3195b1d98f635f927d707650b2111830e5980,hulk.website@gmail.com,2019-08-19 18:58:03+08:00,hulk.website@gmail.com,2019-08-19 18:58:03+08:00,MOD: make clean just remove the build dir,unstable,True,False,1,Makefile,None,1,1,2
d3f636fb1095603ef28331491e44743a2333bfb4,hulk.website@gmail.com,2019-08-20 19:05:33+08:00,hulk.website@gmail.com,2019-08-20 19:05:33+08:00,MOD: update metadata design,unstable,True,False,2,README.md,md,1,1,2
d3f636fb1095603ef28331491e44743a2333bfb4,hulk.website@gmail.com,2019-08-20 19:05:33+08:00,hulk.website@gmail.com,2019-08-20 19:05:33+08:00,MOD: update metadata design,unstable,True,False,2,metadata-design.md,md,144,32,176
25b45463775c8e71cce45a4fe12bbabf5197a273,hulk.website@gmail.com,2019-08-20 19:02:54+08:00,noreply@github.com,2019-08-20 19:02:54+08:00,Update metadata-design.md,unstable,True,False,1,metadata-design.md,md,2,2,4
99fccfe5fef540568cb49667b415a652ca7de300,hulk.website@gmail.com,2019-08-21 10:00:23+08:00,hulk.website@gmail.com,2019-08-21 10:00:23+08:00,"FIX: incorrect command name, flushall=>flushdb",unstable,True,False,3,redis_cmd.cc,cc,5,5,10
99fccfe5fef540568cb49667b415a652ca7de300,hulk.website@gmail.com,2019-08-21 10:00:23+08:00,hulk.website@gmail.com,2019-08-21 10:00:23+08:00,"FIX: incorrect command name, flushall=>flushdb",unstable,True,False,3,redis_db.cc,cc,1,1,2
99fccfe5fef540568cb49667b415a652ca7de300,hulk.website@gmail.com,2019-08-21 10:00:23+08:00,hulk.website@gmail.com,2019-08-21 10:00:23+08:00,"FIX: incorrect command name, flushall=>flushdb",unstable,True,False,3,redis_db.h,h,1,1,2
4c890ed4cca9f3dad5031de89666045c3b510a94,hulk.website@gmail.com,2019-08-21 10:03:39+08:00,hulk.website@gmail.com,2019-08-21 10:03:39+08:00,MOD: update support commands,unstable,True,False,1,support-commands.md,md,1,0,1
81b105d2f122d941e6185a63bf21aa196a89b19f,hulk.website@gmail.com,2019-08-21 10:28:23+08:00,hulk.website@gmail.com,2019-08-21 10:28:23+08:00,DOC: update metadata design,unstable,True,False,1,metadata-design.md,md,1,1,2
26be58c75f0d1ea5d22264e1926b1c57aa8a9843,hulk.website@gmail.com,2019-08-21 11:42:32+08:00,hulk.website@gmail.com,2019-08-21 11:42:32+08:00,FIX: hscan should return empty list when key was not found,unstable,True,False,1,redis_cmd.cc,cc,1,2,3
78926c755082ee70d8b4972ec4fd9f596d9cac38,hulk.website@gmail.com,2019-08-21 11:44:34+08:00,hulk.website@gmail.com,2019-08-21 11:44:34+08:00,MOD: remove unused condition guard and whitespace,unstable,True,False,1,redis_db.cc,cc,0,8,8
4dc445f3de28d1a7ac1c1b0397835b00bb68133c,hulk.website@gmail.com,2019-08-21 14:53:10+08:00,hulk.website@gmail.com,2019-08-21 14:53:10+08:00,MOD: set current dir as default data dir,unstable,True,False,1,kvrocks.conf,conf,1,1,2
c18f318c1d308f7d58caa9fe645ebb0698fcb0f3,hulk.website@gmail.com,2019-08-21 16:17:46+08:00,hulk.website@gmail.com,2019-08-21 16:17:46+08:00,MOD: allow the empty requirepass while namespace is empty,unstable,True,False,5,kvrocks.conf,conf,3,3,6
c18f318c1d308f7d58caa9fe645ebb0698fcb0f3,hulk.website@gmail.com,2019-08-21 16:17:46+08:00,hulk.website@gmail.com,2019-08-21 16:17:46+08:00,MOD: allow the empty requirepass while namespace is empty,unstable,True,False,5,config.cc,cc,9,11,20
c18f318c1d308f7d58caa9fe645ebb0698fcb0f3,hulk.website@gmail.com,2019-08-21 16:17:46+08:00,hulk.website@gmail.com,2019-08-21 16:17:46+08:00,MOD: allow the empty requirepass while namespace is empty,unstable,True,False,5,redis_cmd.cc,cc,15,8,23
c18f318c1d308f7d58caa9fe645ebb0698fcb0f3,hulk.website@gmail.com,2019-08-21 16:17:46+08:00,hulk.website@gmail.com,2019-08-21 16:17:46+08:00,MOD: allow the empty requirepass while namespace is empty,unstable,True,False,5,redis_request.cc,cc,7,4,11
c18f318c1d308f7d58caa9fe645ebb0698fcb0f3,hulk.website@gmail.com,2019-08-21 16:17:46+08:00,hulk.website@gmail.com,2019-08-21 16:17:46+08:00,MOD: allow the empty requirepass while namespace is empty,unstable,True,False,5,config_test.cc,cc,4,0,4
4a563d5fd8b9295b456dbae8f452bf7ba3982495,karelrooted@gmail.com,2019-08-22 16:21:47+08:00,karelrooted@gmail.com,2019-08-22 17:04:23+08:00,ADD: command flushall,unstable,True,False,3,redis_cmd.cc,cc,23,0,23
4a563d5fd8b9295b456dbae8f452bf7ba3982495,karelrooted@gmail.com,2019-08-22 16:21:47+08:00,karelrooted@gmail.com,2019-08-22 17:04:23+08:00,ADD: command flushall,unstable,True,False,3,redis_db.cc,cc,32,0,32
4a563d5fd8b9295b456dbae8f452bf7ba3982495,karelrooted@gmail.com,2019-08-22 16:21:47+08:00,karelrooted@gmail.com,2019-08-22 17:04:23+08:00,ADD: command flushall,unstable,True,False,3,redis_db.h,h,1,0,1
074e9684f797176a4b6b63d37edb1082727fd20d,karelrooted@gmail.com,2019-08-22 17:08:55+08:00,karelrooted@gmail.com,2019-08-22 17:08:55+08:00,MOD: add detect delete error,unstable,True,False,1,redis_db.cc,cc,5,1,6
ab47ed3a4ea776744fefe1162e4f9c82c5369c33,karelrooted@gmail.com,2019-08-22 17:21:10+08:00,karelrooted@gmail.com,2019-08-22 17:29:49+08:00,TST: add flushdb and flushall testcase,unstable,True,False,1,key_test.py,py,70,0,70
73e8c2f6280d0d13e6e8965df0ebb086e937d2dd,hulk.website@gmail.com,2019-08-22 18:48:45+08:00,hulk.website@gmail.com,2019-08-22 18:49:29+08:00,MOD: update README,unstable,True,False,1,README.md,md,11,0,11
f8d5c1924726377b7c666245849272b1afc4dfa3,hulk.website@gmail.com,2019-08-23 15:44:10+08:00,hulk.website@gmail.com,2019-08-23 15:44:10+08:00,DOC: update support commands,unstable,True,False,1,support-commands.md,md,1,0,1
a94bfeb1a754ba7da9d9df0960b0b6a7713a60fb,hulk.website@gmail.com,2019-08-23 15:44:37+08:00,hulk.website@gmail.com,2019-08-26 12:56:51+08:00,Bump v1.0.1,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
a94bfeb1a754ba7da9d9df0960b0b6a7713a60fb,hulk.website@gmail.com,2019-08-23 15:44:37+08:00,hulk.website@gmail.com,2019-08-26 12:56:51+08:00,Bump v1.0.1,unstable,True,False,2,Changelog,None,6,0,6
9ac7bda3e0c1f35f0b19252d23cc946f04bb46d0,linty@meitu.com,2019-08-28 18:27:00+08:00,linty@meitu.com,2019-08-28 18:27:00+08:00,FIX: empty requirepass shouldn't rewrite to config,unstable,True,False,1,config.cc,cc,1,1,2
0ff6da8facac129a35992757129443d97d483c52,hulk.website@gmail.com,2019-08-28 18:28:32+08:00,hulk.website@gmail.com,2019-08-29 13:51:11+08:00,MOD: supports profiling the rocksdb in-flight,unstable,True,False,8,config.cc,cc,95,2,97
0ff6da8facac129a35992757129443d97d483c52,hulk.website@gmail.com,2019-08-28 18:28:32+08:00,hulk.website@gmail.com,2019-08-29 13:51:11+08:00,MOD: supports profiling the rocksdb in-flight,unstable,True,False,8,config.h,h,8,0,8
0ff6da8facac129a35992757129443d97d483c52,hulk.website@gmail.com,2019-08-28 18:28:32+08:00,hulk.website@gmail.com,2019-08-29 13:51:11+08:00,MOD: supports profiling the rocksdb in-flight,unstable,True,False,8,redis_cmd.cc,cc,41,0,41
0ff6da8facac129a35992757129443d97d483c52,hulk.website@gmail.com,2019-08-28 18:28:32+08:00,hulk.website@gmail.com,2019-08-29 13:51:11+08:00,MOD: supports profiling the rocksdb in-flight,unstable,True,False,8,redis_cmd.h,h,1,0,1
0ff6da8facac129a35992757129443d97d483c52,hulk.website@gmail.com,2019-08-28 18:28:32+08:00,hulk.website@gmail.com,2019-08-29 13:51:11+08:00,MOD: supports profiling the rocksdb in-flight,unstable,True,False,8,redis_request.cc,cc,37,2,39
0ff6da8facac129a35992757129443d97d483c52,hulk.website@gmail.com,2019-08-28 18:28:32+08:00,hulk.website@gmail.com,2019-08-29 13:51:11+08:00,MOD: supports profiling the rocksdb in-flight,unstable,True,False,8,redis_request.h,h,2,0,2
0ff6da8facac129a35992757129443d97d483c52,hulk.website@gmail.com,2019-08-28 18:28:32+08:00,hulk.website@gmail.com,2019-08-29 13:51:11+08:00,MOD: supports profiling the rocksdb in-flight,unstable,True,False,8,server.cc,cc,48,0,48
0ff6da8facac129a35992757129443d97d483c52,hulk.website@gmail.com,2019-08-28 18:28:32+08:00,hulk.website@gmail.com,2019-08-29 13:51:11+08:00,MOD: supports profiling the rocksdb in-flight,unstable,True,False,8,server.h,h,27,0,27
9ac11a2bbe142be7c1656bf0fab5a9b7f0ba40bd,hulk.website@gmail.com,2019-08-29 10:07:42+08:00,hulk.website@gmail.com,2019-08-29 13:51:11+08:00,TST: add test cases for config profiling options,unstable,True,False,2,config.cc,cc,8,12,20
9ac11a2bbe142be7c1656bf0fab5a9b7f0ba40bd,hulk.website@gmail.com,2019-08-29 10:07:42+08:00,hulk.website@gmail.com,2019-08-29 13:51:11+08:00,TST: add test cases for config profiling options,unstable,True,False,2,config_test.cc,cc,47,0,47
910751e7771cc7e01cfeee826aef22869eae58c2,hulk.website@gmail.com,2019-08-29 15:03:51+08:00,hulk.website@gmail.com,2019-08-29 15:03:51+08:00,FIX: disable the profiling when perf context is empty,unstable,True,False,1,redis_request.cc,cc,1,1,2
12a0492eeb25fef6503496a0b41fae84545d7b5a,karelrooted@gmail.com,2019-08-29 17:40:04+08:00,karelrooted@gmail.com,2019-08-29 17:40:04+08:00,DOC: fix typo,unstable,True,False,1,support-commands.md,md,1,1,2
b07ad01f07fb2c1222802ba2ee89163a9c929621,hulk.website@gmail.com,2019-08-29 15:23:20+08:00,hulk.website@gmail.com,2019-08-29 18:02:18+08:00,"FIX: typo, GetPerlog => GetPerfLog",unstable,True,False,6,config.cc,cc,1,1,2
b07ad01f07fb2c1222802ba2ee89163a9c929621,hulk.website@gmail.com,2019-08-29 15:23:20+08:00,hulk.website@gmail.com,2019-08-29 18:02:18+08:00,"FIX: typo, GetPerlog => GetPerfLog",unstable,True,False,6,redis_cmd.cc,cc,1,1,2
b07ad01f07fb2c1222802ba2ee89163a9c929621,hulk.website@gmail.com,2019-08-29 15:23:20+08:00,hulk.website@gmail.com,2019-08-29 18:02:18+08:00,"FIX: typo, GetPerlog => GetPerfLog",unstable,True,False,6,redis_request.cc,cc,3,3,6
b07ad01f07fb2c1222802ba2ee89163a9c929621,hulk.website@gmail.com,2019-08-29 15:23:20+08:00,hulk.website@gmail.com,2019-08-29 18:02:18+08:00,"FIX: typo, GetPerlog => GetPerfLog",unstable,True,False,6,redis_request.h,h,1,1,2
b07ad01f07fb2c1222802ba2ee89163a9c929621,hulk.website@gmail.com,2019-08-29 15:23:20+08:00,hulk.website@gmail.com,2019-08-29 18:02:18+08:00,"FIX: typo, GetPerlog => GetPerfLog",unstable,True,False,6,server.h,h,1,1,2
b07ad01f07fb2c1222802ba2ee89163a9c929621,hulk.website@gmail.com,2019-08-29 15:23:20+08:00,hulk.website@gmail.com,2019-08-29 18:02:18+08:00,"FIX: typo, GetPerlog => GetPerfLog",unstable,True,False,6,config_test.cc,cc,6,6,12
b18c603673bed0096374dfd71e4cc4e3783baa1f,hulk.website@gmail.com,2019-08-30 11:21:45+08:00,hulk.website@gmail.com,2019-08-30 11:21:45+08:00,FIX: index out of range in perflog get,unstable,True,False,1,redis_cmd.cc,cc,1,1,2
637291df05cd729c6cab074e11699d189739507d,hulk.website@gmail.com,2019-08-30 11:46:48+08:00,hulk.website@gmail.com,2019-08-30 11:46:48+08:00,FIX: typo in docs/metadata-design.md,unstable,True,False,1,metadata-design.md,md,14,14,28
df948e31e89d6fb3a8e78c811f6d8b2f411de81f,hulk.website@gmail.com,2019-09-02 15:10:18+08:00,hulk.website@gmail.com,2019-09-02 15:40:00+08:00,MOD: refactor the perf/slowlog entry into template class,unstable,True,False,8,CMakeLists.txt,txt,8,1,9
df948e31e89d6fb3a8e78c811f6d8b2f411de81f,hulk.website@gmail.com,2019-09-02 15:10:18+08:00,hulk.website@gmail.com,2019-09-02 15:40:00+08:00,MOD: refactor the perf/slowlog entry into template class,unstable,True,False,8,config.cc,cc,2,1,3
df948e31e89d6fb3a8e78c811f6d8b2f411de81f,hulk.website@gmail.com,2019-09-02 15:10:18+08:00,hulk.website@gmail.com,2019-09-02 15:40:00+08:00,MOD: refactor the perf/slowlog entry into template class,unstable,True,False,8,log_collector.cc,cc,98,0,98
df948e31e89d6fb3a8e78c811f6d8b2f411de81f,hulk.website@gmail.com,2019-09-02 15:10:18+08:00,hulk.website@gmail.com,2019-09-02 15:40:00+08:00,MOD: refactor the perf/slowlog entry into template class,unstable,True,False,8,log_collector.h,h,51,0,51
df948e31e89d6fb3a8e78c811f6d8b2f411de81f,hulk.website@gmail.com,2019-09-02 15:10:18+08:00,hulk.website@gmail.com,2019-09-02 15:40:00+08:00,MOD: refactor the perf/slowlog entry into template class,unstable,True,False,8,redis_cmd.cc,cc,9,7,16
df948e31e89d6fb3a8e78c811f6d8b2f411de81f,hulk.website@gmail.com,2019-09-02 15:10:18+08:00,hulk.website@gmail.com,2019-09-02 15:40:00+08:00,MOD: refactor the perf/slowlog entry into template class,unstable,True,False,8,redis_request.cc,cc,7,2,9
df948e31e89d6fb3a8e78c811f6d8b2f411de81f,hulk.website@gmail.com,2019-09-02 15:10:18+08:00,hulk.website@gmail.com,2019-09-02 15:40:00+08:00,MOD: refactor the perf/slowlog entry into template class,unstable,True,False,8,server.cc,cc,7,82,89
df948e31e89d6fb3a8e78c811f6d8b2f411de81f,hulk.website@gmail.com,2019-09-02 15:10:18+08:00,hulk.website@gmail.com,2019-09-02 15:40:00+08:00,MOD: refactor the perf/slowlog entry into template class,unstable,True,False,8,server.h,h,7,46,53
7c4dc89bdcad2965fb1c6c9e5540bbd822937e36,hulk.website@gmail.com,2019-09-02 15:39:39+08:00,hulk.website@gmail.com,2019-09-02 15:40:00+08:00,MOD: refactor the slowlog command,unstable,True,False,1,redis_cmd.cc,cc,9,21,30
e8c87359169ce4c0541559d44e420792f26246fb,hulk.website@gmail.com,2019-09-02 15:33:58+08:00,hulk.website@gmail.com,2019-09-02 15:40:00+08:00,TST: add test cases for log collector and remove old case,unstable,True,False,3,CMakeLists.txt,txt,2,1,3
e8c87359169ce4c0541559d44e420792f26246fb,hulk.website@gmail.com,2019-09-02 15:33:58+08:00,hulk.website@gmail.com,2019-09-02 15:40:00+08:00,TST: add test cases for log collector and remove old case,unstable,True,False,3,config_test.cc,cc,0,13,13
e8c87359169ce4c0541559d44e420792f26246fb,hulk.website@gmail.com,2019-09-02 15:33:58+08:00,hulk.website@gmail.com,2019-09-02 15:40:00+08:00,TST: add test cases for log collector and remove old case,unstable,True,False,3,log_collector_test.cc,cc,17,0,17
92f37cc64e6a30b4e5e186fb6c5ed804761235e9,hulk.website@gmail.com,2019-09-03 11:11:08+08:00,hulk.website@gmail.com,2019-09-03 11:11:08+08:00,FIX: incorrect config set slowlog-max-len with slowlog-log-slower-than,unstable,True,False,1,config.cc,cc,1,1,2
bdd004f14c5f3e887dd389995a9527080ea6941c,karelrooted@gmail.com,2019-08-30 11:36:34+08:00,karelrooted@gmail.com,2019-09-03 14:14:13+08:00,ADD: support sortedint data type,unstable,True,False,5,CMakeLists.txt,txt,6,0,6
bdd004f14c5f3e887dd389995a9527080ea6941c,karelrooted@gmail.com,2019-08-30 11:36:34+08:00,karelrooted@gmail.com,2019-09-03 14:14:13+08:00,ADD: support sortedint data type,unstable,True,False,5,redis_cmd.cc,cc,145,0,145
bdd004f14c5f3e887dd389995a9527080ea6941c,karelrooted@gmail.com,2019-08-30 11:36:34+08:00,karelrooted@gmail.com,2019-09-03 14:14:13+08:00,ADD: support sortedint data type,unstable,True,False,5,redis_metadata.h,h,7,1,8
bdd004f14c5f3e887dd389995a9527080ea6941c,karelrooted@gmail.com,2019-08-30 11:36:34+08:00,karelrooted@gmail.com,2019-09-03 14:14:13+08:00,ADD: support sortedint data type,unstable,True,False,5,redis_sortint.cc,cc,137,0,137
bdd004f14c5f3e887dd389995a9527080ea6941c,karelrooted@gmail.com,2019-08-30 11:36:34+08:00,karelrooted@gmail.com,2019-09-03 14:14:13+08:00,ADD: support sortedint data type,unstable,True,False,5,redis_sortint.h,h,28,0,28
6edeec4e65ba74626e037f52c5bdc6b322fb6d2a,karelrooted@gmail.com,2019-08-30 11:36:56+08:00,karelrooted@gmail.com,2019-09-03 14:14:13+08:00,DOC: support sortedint data type,unstable,True,False,2,metadata-design.md,md,19,0,19
6edeec4e65ba74626e037f52c5bdc6b322fb6d2a,karelrooted@gmail.com,2019-08-30 11:36:56+08:00,karelrooted@gmail.com,2019-09-03 14:14:13+08:00,DOC: support sortedint data type,unstable,True,False,2,support-commands.md,md,10,0,10
4b363f79298cfb9b38384b9021c0949547bc3973,karelrooted@gmail.com,2019-08-30 11:37:41+08:00,karelrooted@gmail.com,2019-09-03 14:14:13+08:00,TST: add sortedint data type testcase,unstable,True,False,1,sortint_test.py,py,70,0,70
1a62f28e59497c78af5d987638cdf48bc61642b6,karelrooted@gmail.com,2019-08-30 18:55:28+08:00,karelrooted@gmail.com,2019-09-03 14:14:13+08:00,"FIX: sortedint 's id should use stoull (uint64_t)
FIX: code style",unstable,True,False,5,CMakeLists.txt,txt,6,6,12
1a62f28e59497c78af5d987638cdf48bc61642b6,karelrooted@gmail.com,2019-08-30 18:55:28+08:00,karelrooted@gmail.com,2019-09-03 14:14:13+08:00,"FIX: sortedint 's id should use stoull (uint64_t)
FIX: code style",unstable,True,False,5,redis_cmd.cc,cc,28,28,56
1a62f28e59497c78af5d987638cdf48bc61642b6,karelrooted@gmail.com,2019-08-30 18:55:28+08:00,karelrooted@gmail.com,2019-09-03 14:14:13+08:00,"FIX: sortedint 's id should use stoull (uint64_t)
FIX: code style",unstable,True,False,5,redis_metadata.h,h,3,3,6
1a62f28e59497c78af5d987638cdf48bc61642b6,karelrooted@gmail.com,2019-08-30 18:55:28+08:00,karelrooted@gmail.com,2019-09-03 14:14:13+08:00,"FIX: sortedint 's id should use stoull (uint64_t)
FIX: code style",unstable,True,False,5,redis_sortedint.cc,cc,19,23,42
1a62f28e59497c78af5d987638cdf48bc61642b6,karelrooted@gmail.com,2019-08-30 18:55:28+08:00,karelrooted@gmail.com,2019-09-03 14:14:13+08:00,"FIX: sortedint 's id should use stoull (uint64_t)
FIX: code style",unstable,True,False,5,redis_sortedint.h,h,3,3,6
cf0b63054692c927d6cdc1769dec60ba0a91954f,karelrooted@gmail.com,2019-09-03 14:13:25+08:00,karelrooted@gmail.com,2019-09-03 14:14:13+08:00,"MOD: sirange(sirevrange) syntax opti , add cursor keyword",unstable,True,False,3,support-commands.md,md,5,5,10
cf0b63054692c927d6cdc1769dec60ba0a91954f,karelrooted@gmail.com,2019-09-03 14:13:25+08:00,karelrooted@gmail.com,2019-09-03 14:14:13+08:00,"MOD: sirange(sirevrange) syntax opti , add cursor keyword",unstable,True,False,3,redis_cmd.cc,cc,5,2,7
cf0b63054692c927d6cdc1769dec60ba0a91954f,karelrooted@gmail.com,2019-09-03 14:13:25+08:00,karelrooted@gmail.com,2019-09-03 14:14:13+08:00,"MOD: sirange(sirevrange) syntax opti , add cursor keyword",unstable,True,False,3,sortedint_test.py,py,4,2,6
bb30b02e75120d7524a209f1a6c9758b96cf981b,karelrooted@gmail.com,2019-09-03 14:47:07+08:00,karelrooted@gmail.com,2019-09-03 14:47:07+08:00,TST: add sortedint unit testcase,unstable,True,False,2,CMakeLists.txt,txt,1,0,1
bb30b02e75120d7524a209f1a6c9758b96cf981b,karelrooted@gmail.com,2019-09-03 14:47:07+08:00,karelrooted@gmail.com,2019-09-03 14:47:07+08:00,TST: add sortedint unit testcase,unstable,True,False,2,t_sortedint_test.cc,cc,49,0,49
93c962196dbeb9d2c32e937db06eb39d86d30bf2,karelrooted@gmail.com,2019-09-04 17:06:38+08:00,karelrooted@gmail.com,2019-09-04 17:06:38+08:00,Bump v1.0.2,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
93c962196dbeb9d2c32e937db06eb39d86d30bf2,karelrooted@gmail.com,2019-09-04 17:06:38+08:00,karelrooted@gmail.com,2019-09-04 17:06:38+08:00,Bump v1.0.2,unstable,True,False,2,Changelog,None,6,0,6
b07c718577b0164c67cab771706f04b8d2418576,hulk.website@gmail.com,2019-09-05 13:49:27+08:00,hulk.website@gmail.com,2019-09-05 15:27:31+08:00,MOD: add makefile and update the glog to v0.4.0,unstable,True,False,13,.gitignore,gitignore,3,0,3
b07c718577b0164c67cab771706f04b8d2418576,hulk.website@gmail.com,2019-09-05 13:49:27+08:00,hulk.website@gmail.com,2019-09-05 15:27:31+08:00,MOD: add makefile and update the glog to v0.4.0,unstable,True,False,13,.travis.yml,yml,8,3,11
b07c718577b0164c67cab771706f04b8d2418576,hulk.website@gmail.com,2019-09-05 13:49:27+08:00,hulk.website@gmail.com,2019-09-05 15:27:31+08:00,MOD: add makefile and update the glog to v0.4.0,unstable,True,False,13,Changelog,None,8,8,16
b07c718577b0164c67cab771706f04b8d2418576,hulk.website@gmail.com,2019-09-05 13:49:27+08:00,hulk.website@gmail.com,2019-09-05 15:27:31+08:00,MOD: add makefile and update the glog to v0.4.0,unstable,True,False,13,Dockerfile,None,1,0,1
b07c718577b0164c67cab771706f04b8d2418576,hulk.website@gmail.com,2019-09-05 13:49:27+08:00,hulk.website@gmail.com,2019-09-05 15:27:31+08:00,MOD: add makefile and update the glog to v0.4.0,unstable,True,False,13,Makefile,None,7,27,34
b07c718577b0164c67cab771706f04b8d2418576,hulk.website@gmail.com,2019-09-05 13:49:27+08:00,hulk.website@gmail.com,2019-09-05 15:27:31+08:00,MOD: add makefile and update the glog to v0.4.0,unstable,True,False,13,build_detect_platform,None,143,0,143
2ae37f2d88f96358a8f3769555ca2d953e362879,hulk.website@gmail.com,2019-09-05 13:45:21+08:00,hulk.website@gmail.com,2019-09-05 15:27:31+08:00,MOD: update README,unstable,True,False,1,README.md,md,33,3,36
0c5a7ce1c7557dbe9a5b6c75fa4ee2203a477e02,hulk.website@gmail.com,2019-09-05 14:17:19+08:00,hulk.website@gmail.com,2019-09-05 15:57:05+08:00,MOD: fix compile warning in unittest,unstable,True,False,9,config_test.cc,cc,12,12,24
0c5a7ce1c7557dbe9a5b6c75fa4ee2203a477e02,hulk.website@gmail.com,2019-09-05 14:17:19+08:00,hulk.website@gmail.com,2019-09-05 15:57:05+08:00,MOD: fix compile warning in unittest,unstable,True,False,9,t_bitmap_test.cc,cc,1,1,2
0c5a7ce1c7557dbe9a5b6c75fa4ee2203a477e02,hulk.website@gmail.com,2019-09-05 14:17:19+08:00,hulk.website@gmail.com,2019-09-05 15:57:05+08:00,MOD: fix compile warning in unittest,unstable,True,False,9,t_hash_test.cc,cc,9,9,18
0c5a7ce1c7557dbe9a5b6c75fa4ee2203a477e02,hulk.website@gmail.com,2019-09-05 14:17:19+08:00,hulk.website@gmail.com,2019-09-05 15:57:05+08:00,MOD: fix compile warning in unittest,unstable,True,False,9,t_list_test.cc,cc,10,10,20
0c5a7ce1c7557dbe9a5b6c75fa4ee2203a477e02,hulk.website@gmail.com,2019-09-05 14:17:19+08:00,hulk.website@gmail.com,2019-09-05 15:57:05+08:00,MOD: fix compile warning in unittest,unstable,True,False,9,t_metadata_test.cc,cc,4,4,8
0c5a7ce1c7557dbe9a5b6c75fa4ee2203a477e02,hulk.website@gmail.com,2019-09-05 14:17:19+08:00,hulk.website@gmail.com,2019-09-05 15:57:05+08:00,MOD: fix compile warning in unittest,unstable,True,False,9,t_set_test.cc,cc,17,17,34
0c5a7ce1c7557dbe9a5b6c75fa4ee2203a477e02,hulk.website@gmail.com,2019-09-05 14:17:19+08:00,hulk.website@gmail.com,2019-09-05 15:57:05+08:00,MOD: fix compile warning in unittest,unstable,True,False,9,t_sortedint_test.cc,cc,6,6,12
0c5a7ce1c7557dbe9a5b6c75fa4ee2203a477e02,hulk.website@gmail.com,2019-09-05 14:17:19+08:00,hulk.website@gmail.com,2019-09-05 15:57:05+08:00,MOD: fix compile warning in unittest,unstable,True,False,9,t_string_test.cc,cc,10,10,20
0c5a7ce1c7557dbe9a5b6c75fa4ee2203a477e02,hulk.website@gmail.com,2019-09-05 14:17:19+08:00,hulk.website@gmail.com,2019-09-05 15:57:05+08:00,MOD: fix compile warning in unittest,unstable,True,False,9,t_zset_test.cc,cc,34,34,68
517d2b348fe8e97fd9dfbf340ad3835e78289078,hulk.website@gmail.com,2019-09-05 16:02:40+08:00,hulk.website@gmail.com,2019-09-05 16:02:40+08:00,MOD: remove unused test case and empty file,unstable,True,False,4,CMakeLists.txt,txt,0,1,1
517d2b348fe8e97fd9dfbf340ad3835e78289078,hulk.website@gmail.com,2019-09-05 16:02:40+08:00,hulk.website@gmail.com,2019-09-05 16:02:40+08:00,MOD: remove unused test case and empty file,unstable,True,False,4,Makefile,None,2,2,4
97c3135ed233de9701cb76ea982fa68e8f0b461c,hulk.website@gmail.com,2019-09-05 16:22:00+08:00,hulk.website@gmail.com,2019-09-05 18:04:19+08:00,MOD: remove submodule gflags and googletest,unstable,True,False,8,.gitignore,gitignore,1,0,1
97c3135ed233de9701cb76ea982fa68e8f0b461c,hulk.website@gmail.com,2019-09-05 16:22:00+08:00,hulk.website@gmail.com,2019-09-05 18:04:19+08:00,MOD: remove submodule gflags and googletest,unstable,True,False,8,.gitmodules,gitmodules,0,6,6
97c3135ed233de9701cb76ea982fa68e8f0b461c,hulk.website@gmail.com,2019-09-05 16:22:00+08:00,hulk.website@gmail.com,2019-09-05 18:04:19+08:00,MOD: remove submodule gflags and googletest,unstable,True,False,8,.travis.yml,yml,3,2,5
97c3135ed233de9701cb76ea982fa68e8f0b461c,hulk.website@gmail.com,2019-09-05 16:22:00+08:00,hulk.website@gmail.com,2019-09-05 18:04:19+08:00,MOD: remove submodule gflags and googletest,unstable,True,False,8,CMakeLists.txt,txt,4,11,15
97c3135ed233de9701cb76ea982fa68e8f0b461c,hulk.website@gmail.com,2019-09-05 16:22:00+08:00,hulk.website@gmail.com,2019-09-05 18:04:19+08:00,MOD: remove submodule gflags and googletest,unstable,True,False,8,glog.cmake,cmake,1,5,6
97c3135ed233de9701cb76ea982fa68e8f0b461c,hulk.website@gmail.com,2019-09-05 16:22:00+08:00,hulk.website@gmail.com,2019-09-05 18:04:19+08:00,MOD: remove submodule gflags and googletest,unstable,True,False,8,rocksdb.cmake,cmake,1,1,2
9038a1ea370752552a16c3aabd9aee4fbdf82482,hulk.website@gmail.com,2019-09-05 23:36:10+08:00,hulk.website@gmail.com,2019-09-05 23:36:10+08:00,MOD: remove the unnecessary flag O_EXCL from createPidFile while the listening port was detected,unstable,True,False,1,main.cc,cc,1,1,2
c208d1ca7dd2b64f6798596033ecad5d45781d70,hulk.website@gmail.com,2019-09-06 14:43:37+08:00,hulk.website@gmail.com,2019-09-06 14:43:37+08:00,FIX: CMakeList.txt depends order in rocksdb and snappy,unstable,True,False,5,CMakeLists.txt,txt,11,9,20
c208d1ca7dd2b64f6798596033ecad5d45781d70,hulk.website@gmail.com,2019-09-06 14:43:37+08:00,hulk.website@gmail.com,2019-09-06 14:43:37+08:00,FIX: CMakeList.txt depends order in rocksdb and snappy,unstable,True,False,5,glog.cmake,cmake,4,1,5
c208d1ca7dd2b64f6798596033ecad5d45781d70,hulk.website@gmail.com,2019-09-06 14:43:37+08:00,hulk.website@gmail.com,2019-09-06 14:43:37+08:00,FIX: CMakeList.txt depends order in rocksdb and snappy,unstable,True,False,5,jemalloc.cmake,cmake,1,0,1
c208d1ca7dd2b64f6798596033ecad5d45781d70,hulk.website@gmail.com,2019-09-06 14:43:37+08:00,hulk.website@gmail.com,2019-09-06 14:43:37+08:00,FIX: CMakeList.txt depends order in rocksdb and snappy,unstable,True,False,5,rocksdb.cmake,cmake,4,0,4
c208d1ca7dd2b64f6798596033ecad5d45781d70,hulk.website@gmail.com,2019-09-06 14:43:37+08:00,hulk.website@gmail.com,2019-09-06 14:43:37+08:00,FIX: CMakeList.txt depends order in rocksdb and snappy,unstable,True,False,5,snappy.cmake,cmake,2,0,2
085d209ef58221a33bc33af6f3202ed7720e60fa,hulk.website@gmail.com,2019-09-06 14:44:31+08:00,hulk.website@gmail.com,2019-09-06 14:44:31+08:00,MOD: update README,unstable,True,False,1,README.md,md,1,1,2
73f97f3809a446ec6baec0bfadbfde5a3d1c12c5,hulk.website@gmail.com,2019-09-06 16:46:07+08:00,hulk.website@gmail.com,2019-09-06 16:46:21+08:00,MOD: trigger travis ci when push tag,unstable,True,False,1,.travis.yml,yml,2,0,2
10bd811f93f95ff8483dd7feccc98622ba0dcf7a,karelrooted@gmail.com,2019-09-06 17:22:11+08:00,karelrooted@gmail.com,2019-09-06 17:28:14+08:00,DOC: add sortedint example,unstable,True,False,2,custom-api-sortedint.md,md,27,0,27
10bd811f93f95ff8483dd7feccc98622ba0dcf7a,karelrooted@gmail.com,2019-09-06 17:22:11+08:00,karelrooted@gmail.com,2019-09-06 17:28:14+08:00,DOC: add sortedint example,unstable,True,False,2,support-commands.md,md,1,1,2
7d47dced1313ee3a0c67b0d09b096959be3eed46,hulk.website@gmail.com,2019-09-06 18:03:46+08:00,hulk.website@gmail.com,2019-09-06 18:03:46+08:00,FIX: typo,unstable,True,False,1,README.md,md,1,1,2
381dc333cff0e0c3f8b596624898f1c31fbeae8f,hulk.website@gmail.com,2019-09-06 19:14:16+08:00,hulk.website@gmail.com,2019-09-06 22:57:22+08:00,MOD: docker update the apt before install snappy,unstable,True,False,1,Dockerfile,None,1,1,2
30b4af7597ce302d62fa7c02a3d322c6ad8ac68b,hulk.website@gmail.com,2019-09-06 19:16:01+08:00,hulk.website@gmail.com,2019-09-06 22:57:22+08:00,MOD: remove cmake from README,unstable,True,False,1,README.md,md,2,10,12
907df78264f49f8120205d1d9cbae1849add1403,karelrooted@gmail.com,2019-09-10 18:06:52+08:00,karelrooted@gmail.com,2019-09-10 18:06:52+08:00,MOD: use deleterange in flushdb,unstable,True,False,4,config.cc,cc,17,4,21
907df78264f49f8120205d1d9cbae1849add1403,karelrooted@gmail.com,2019-09-10 18:06:52+08:00,karelrooted@gmail.com,2019-09-10 18:06:52+08:00,MOD: use deleterange in flushdb,unstable,True,False,4,config.h,h,1,0,1
907df78264f49f8120205d1d9cbae1849add1403,karelrooted@gmail.com,2019-09-10 18:06:52+08:00,karelrooted@gmail.com,2019-09-10 18:06:52+08:00,MOD: use deleterange in flushdb,unstable,True,False,4,redis_db.cc,cc,38,8,46
907df78264f49f8120205d1d9cbae1849add1403,karelrooted@gmail.com,2019-09-10 18:06:52+08:00,karelrooted@gmail.com,2019-09-10 18:06:52+08:00,MOD: use deleterange in flushdb,unstable,True,False,4,redis_db.h,h,1,0,1
3ecd21d59f06ba02e51c80f7493904227c2acbbc,karelrooted@gmail.com,2019-09-11 11:13:05+08:00,karelrooted@gmail.com,2019-09-11 14:27:48+08:00,MOD: add findKeyRangeWithPrefix func,unstable,True,False,2,redis_db.cc,cc,39,35,74
3ecd21d59f06ba02e51c80f7493904227c2acbbc,karelrooted@gmail.com,2019-09-11 11:13:05+08:00,karelrooted@gmail.com,2019-09-11 14:27:48+08:00,MOD: add findKeyRangeWithPrefix func,unstable,True,False,2,redis_db.h,h,1,1,2
345d9ca5317ea9a79a99f6708557095a5edd97d0,hulk.website@gmail.com,2019-09-11 16:25:35+08:00,hulk.website@gmail.com,2019-09-11 16:51:19+08:00,MOD: update the rocksdb to the latest version(v6.2.2),unstable,True,False,3,jemalloc.cmake,cmake,2,1,3
ca96ab23d4fc9cee9652258745d09eff99dcc150,hulk.website@gmail.com,2019-09-18 15:45:45+08:00,hulk.website@gmail.com,2019-09-18 15:46:07+08:00,FIX: lint error,unstable,True,False,2,config.cc,cc,1,0,1
ca96ab23d4fc9cee9652258745d09eff99dcc150,hulk.website@gmail.com,2019-09-18 15:45:45+08:00,hulk.website@gmail.com,2019-09-18 15:46:07+08:00,FIX: lint error,unstable,True,False,2,redis_db.cc,cc,2,2,4
dcc3381739e9579cd973e12b1c4dc218022c6f73,hulk.website@gmail.com,2019-09-18 15:26:00+08:00,hulk.website@gmail.com,2019-09-18 15:46:07+08:00,Bump v1.0.3,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
dcc3381739e9579cd973e12b1c4dc218022c6f73,hulk.website@gmail.com,2019-09-18 15:26:00+08:00,hulk.website@gmail.com,2019-09-18 15:46:07+08:00,Bump v1.0.3,unstable,True,False,2,Changelog,None,4,0,4
30acf9ce8dec49775ca5e6b7ad5ee204fe4a6660,hulk.website@gmail.com,2019-09-25 17:36:05+08:00,hulk.website@gmail.com,2019-09-25 17:36:05+08:00,MOD: update REAMDE,unstable,True,False,1,README.md,md,5,5,10
dd3ee04a8bdd33c0f35b304958ef47aa89d04bb4,hulk.website@gmail.com,2019-09-25 17:38:12+08:00,hulk.website@gmail.com,2019-09-25 17:38:12+08:00,FIX: typo,unstable,True,False,1,README.md,md,1,1,2
ff6195419c4053df8853ab63bc1793a052556102,hulk.website@gmail.com,2019-09-26 10:20:10+08:00,hulk.website@gmail.com,2019-09-26 10:20:10+08:00,MOD: shrink the default value of write buffer size,unstable,True,False,1,kvrocks.conf,conf,2,2,4
c29cd12c92dac57c63eb3dfedf2a7a1a3fe4e91b,hulk.website@gmail.com,2019-10-08 16:12:25+08:00,hulk.website@gmail.com,2019-10-08 16:12:25+08:00,FIX: slowlog/perflog didn't catch the cast exception,unstable,True,False,1,redis_cmd.cc,cc,14,4,18
7b4426cd49a2d3f437c0e981a894b2dd06f0bbb0,hulk.website@gmail.com,2019-10-08 16:29:39+08:00,hulk.website@gmail.com,2019-10-08 16:29:39+08:00,MOD: use atoi instead of stoi to prevent exception and abort the program,unstable,True,False,2,config.cc,cc,26,26,52
7b4426cd49a2d3f437c0e981a894b2dd06f0bbb0,hulk.website@gmail.com,2019-10-08 16:29:39+08:00,hulk.website@gmail.com,2019-10-08 16:29:39+08:00,MOD: use atoi instead of stoi to prevent exception and abort the program,unstable,True,False,2,stats.cc,cc,1,1,2
85ff6369a42d731464da44f1de292a344825e809,karelrooted@gmail.com,2019-10-08 16:48:09+08:00,karelrooted@gmail.com,2019-10-08 16:48:09+08:00,Bump v1.0.4,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
85ff6369a42d731464da44f1de292a344825e809,karelrooted@gmail.com,2019-10-08 16:48:09+08:00,karelrooted@gmail.com,2019-10-08 16:48:09+08:00,Bump v1.0.4,unstable,True,False,2,Changelog,None,5,0,5
fb9e10fc9fe2ed7e92004d0b9ac8f1abc58ca6e9,hulk.website@gmail.com,2019-10-10 14:53:15+08:00,hulk.website@gmail.com,2019-10-10 16:51:59+08:00,MOD: supports upstart and systemd,unstable,True,False,6,kvrocks.conf,conf,12,1,13
fb9e10fc9fe2ed7e92004d0b9ac8f1abc58ca6e9,hulk.website@gmail.com,2019-10-10 14:53:15+08:00,hulk.website@gmail.com,2019-10-10 16:51:59+08:00,MOD: supports upstart and systemd,unstable,True,False,6,Makefile,None,1,1,2
fb9e10fc9fe2ed7e92004d0b9ac8f1abc58ca6e9,hulk.website@gmail.com,2019-10-10 14:53:15+08:00,hulk.website@gmail.com,2019-10-10 16:51:59+08:00,MOD: supports upstart and systemd,unstable,True,False,6,config.cc,cc,37,0,37
fb9e10fc9fe2ed7e92004d0b9ac8f1abc58ca6e9,hulk.website@gmail.com,2019-10-10 14:53:15+08:00,hulk.website@gmail.com,2019-10-10 16:51:59+08:00,MOD: supports upstart and systemd,unstable,True,False,6,config.h,h,6,0,6
fb9e10fc9fe2ed7e92004d0b9ac8f1abc58ca6e9,hulk.website@gmail.com,2019-10-10 14:53:15+08:00,hulk.website@gmail.com,2019-10-10 16:51:59+08:00,MOD: supports upstart and systemd,unstable,True,False,6,main.cc,cc,80,1,81
fb9e10fc9fe2ed7e92004d0b9ac8f1abc58ca6e9,hulk.website@gmail.com,2019-10-10 14:53:15+08:00,hulk.website@gmail.com,2019-10-10 16:51:59+08:00,MOD: supports upstart and systemd,unstable,True,False,6,kvrocks.service,service,16,0,16
64f4bedc5e3b8fe83f898af3fc41a69a6d80e57d,rongzeng54@gmail.com,2019-10-11 19:40:17+08:00,rongzeng54@gmail.com,2019-10-11 19:40:17+08:00,"changelogs:
- add default description
- fix some mistake of document",unstable,True,False,1,kvrocks.conf,conf,3,2,5
b0b4efd481f439c8aaefde336240c852ee539bbf,hulk.website@gmail.com,2019-10-16 10:27:33+08:00,hulk.website@gmail.com,2019-10-16 10:27:33+08:00,MOD: alias docker latest tag with latest image,unstable,True,False,2,.travis.yml,yml,1,0,1
b0b4efd481f439c8aaefde336240c852ee539bbf,hulk.website@gmail.com,2019-10-16 10:27:33+08:00,hulk.website@gmail.com,2019-10-16 10:27:33+08:00,MOD: alias docker latest tag with latest image,unstable,True,False,2,docker_push.sh,sh,1,1,2
690bbd38e4a58085d2b5314e770c9c3d10bc715e,hulk.website@gmail.com,2019-10-16 10:49:38+08:00,hulk.website@gmail.com,2019-10-16 10:49:38+08:00,MOD: update README,unstable,True,False,1,README.md,md,2,2,4
1ec16b3d7a0debf0a905574d884c6f6b068fc954,hulk.website@gmail.com,2019-10-17 00:11:27+08:00,hulk.website@gmail.com,2019-10-17 00:11:27+08:00,FIX: auth would incorrect when requirepass from empty to non empty,unstable,True,False,1,redis_request.cc,cc,4,2,6
80406752f1c44568dcc488ee2b3297dabbe03849,hulk.website@gmail.com,2019-10-17 00:12:57+08:00,hulk.website@gmail.com,2019-10-17 00:12:57+08:00,Bump v1.0.5,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
80406752f1c44568dcc488ee2b3297dabbe03849,hulk.website@gmail.com,2019-10-17 00:12:57+08:00,hulk.website@gmail.com,2019-10-17 00:12:57+08:00,Bump v1.0.5,unstable,True,False,2,Changelog,None,3,0,3
b1148f089c404fbbaa3c1ccf13fc5992a5ab7fbf,hulk.website@gmail.com,2019-10-17 00:31:42+08:00,hulk.website@gmail.com,2019-10-17 00:31:42+08:00,FIX: typo,unstable,True,False,1,.travis.yml,yml,1,1,2
eba5158c975a7d5d493fa1bcba2d58f9c32b1901,hulk.website@gmail.com,2019-10-17 09:58:06+08:00,hulk.website@gmail.com,2019-10-17 09:58:10+08:00,FIX: code style,unstable,True,False,2,config.cc,cc,2,2,4
eba5158c975a7d5d493fa1bcba2d58f9c32b1901,hulk.website@gmail.com,2019-10-17 09:58:06+08:00,hulk.website@gmail.com,2019-10-17 09:58:10+08:00,FIX: code style,unstable,True,False,2,main.cc,cc,1,1,2
dc2f3d195b1538a353a52bd6037fcec144d1e5e1,hulk.website@gmail.com,2019-10-18 18:15:25+08:00,hulk.website@gmail.com,2019-10-18 18:15:25+08:00,FIX: static cast error,unstable,True,False,1,main.cc,cc,5,1,6
839c8092e758c948c85337c81acb6915c492f415,hulk.website@gmail.com,2019-10-21 18:11:26+08:00,hulk.website@gmail.com,2019-10-21 18:11:34+08:00,MOD: add slave-serve-stale-data to disallow the slave continue to serve when master link was down,unstable,True,False,6,kvrocks.conf,conf,13,0,13
839c8092e758c948c85337c81acb6915c492f415,hulk.website@gmail.com,2019-10-21 18:11:26+08:00,hulk.website@gmail.com,2019-10-21 18:11:34+08:00,MOD: add slave-serve-stale-data to disallow the slave continue to serve when master link was down,unstable,True,False,6,config.cc,cc,16,0,16
839c8092e758c948c85337c81acb6915c492f415,hulk.website@gmail.com,2019-10-21 18:11:26+08:00,hulk.website@gmail.com,2019-10-21 18:11:34+08:00,MOD: add slave-serve-stale-data to disallow the slave continue to serve when master link was down,unstable,True,False,6,config.h,h,1,0,1
839c8092e758c948c85337c81acb6915c492f415,hulk.website@gmail.com,2019-10-21 18:11:26+08:00,hulk.website@gmail.com,2019-10-21 18:11:34+08:00,MOD: add slave-serve-stale-data to disallow the slave continue to serve when master link was down,unstable,True,False,6,redis_request.cc,cc,6,0,6
839c8092e758c948c85337c81acb6915c492f415,hulk.website@gmail.com,2019-10-21 18:11:26+08:00,hulk.website@gmail.com,2019-10-21 18:11:34+08:00,MOD: add slave-serve-stale-data to disallow the slave continue to serve when master link was down,unstable,True,False,6,server.cc,cc,7,0,7
839c8092e758c948c85337c81acb6915c492f415,hulk.website@gmail.com,2019-10-21 18:11:26+08:00,hulk.website@gmail.com,2019-10-21 18:11:34+08:00,MOD: add slave-serve-stale-data to disallow the slave continue to serve when master link was down,unstable,True,False,6,server.h,h,1,0,1
e64263f87516734e8d4db625c3ad1bc20afd634c,hulk.website@gmail.com,2019-10-21 18:33:19+08:00,hulk.website@gmail.com,2019-10-21 18:33:19+08:00,MOD: allow info/slaveof command when the slave-serve-stale-data was working,unstable,True,False,1,redis_request.cc,cc,8,6,14
842df684e202b0b2fba2599380faa7579462002e,hulk.website@gmail.com,2019-10-30 16:21:10+08:00,hulk.website@gmail.com,2019-10-30 16:21:10+08:00,MOD: cmake static link the libstdc++ and libgcc when compile is gun c++,unstable,True,False,1,CMakeLists.txt,txt,3,0,3
84e66597a2a1789b9030eb3e5940f64ee343ed49,hulk.website@gmail.com,2019-10-30 18:51:38+08:00,hulk.website@gmail.com,2019-10-30 18:51:46+08:00,MOD: turn the replication fetch files log level into INFO,unstable,True,False,1,replication.cc,cc,1,1,2
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,CMakeLists.txt,txt,2,0,2
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,kvrocks.conf,conf,3,0,3
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,Makefile,None,1,1,2
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,compact_filter.cc,cc,68,0,68
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,compact_filter.h,h,36,0,36
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,config.cc,cc,20,3,23
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,config.h,h,2,0,2
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,redis_bitmap.cc,cc,29,0,29
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,redis_bitmap.h,h,7,0,7
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,redis_cmd.cc,cc,345,0,345
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,redis_db.cc,cc,38,14,52
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,redis_db.h,h,20,1,21
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,redis_list.cc,cc,1,1,2
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,redis_request.cc,cc,2,1,3
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,redis_slot.cc,cc,672,0,672
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,redis_slot.h,h,124,0,124
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,storage.cc,cc,93,3,96
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,storage.h,h,5,4,9
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,util.cc,cc,70,6,76
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,util.h,h,2,1,3
21cb11b363978de1fc48cb9e3b039544470e4411,karelrooted@gmail.com,2019-09-20 19:10:39+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,ADD: support codis,unstable,True,False,21,parser.cc,cc,1,0,1
1aec7f069aa4e8383e14db68a261aa8fce0625cf,karelrooted@gmail.com,2019-09-27 19:12:55+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,TST: add codis testcase,unstable,True,False,5,codis_test.py,py,154,0,154
1aec7f069aa4e8383e14db68a261aa8fce0625cf,karelrooted@gmail.com,2019-09-27 19:12:55+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,TST: add codis testcase,unstable,True,False,5,conn.py,py,6,0,6
1aec7f069aa4e8383e14db68a261aa8fce0625cf,karelrooted@gmail.com,2019-09-27 19:12:55+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,TST: add codis testcase,unstable,True,False,5,setup-env.sh,sh,8,0,8
1aec7f069aa4e8383e14db68a261aa8fce0625cf,karelrooted@gmail.com,2019-09-27 19:12:55+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,TST: add codis testcase,unstable,True,False,5,test-codis-group1.conf,conf,262,0,262
1aec7f069aa4e8383e14db68a261aa8fce0625cf,karelrooted@gmail.com,2019-09-27 19:12:55+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,TST: add codis testcase,unstable,True,False,5,test-codis-group2.conf,conf,263,0,263
2262a31c0b9a345089b867c64887581824b880ee,karelrooted@gmail.com,2019-10-15 16:55:43+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,MOD: code style,unstable,True,False,6,config.cc,cc,1,1,2
2262a31c0b9a345089b867c64887581824b880ee,karelrooted@gmail.com,2019-10-15 16:55:43+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,MOD: code style,unstable,True,False,6,redis_db.cc,cc,2,2,4
2262a31c0b9a345089b867c64887581824b880ee,karelrooted@gmail.com,2019-10-15 16:55:43+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,MOD: code style,unstable,True,False,6,storage.cc,cc,3,1,4
2262a31c0b9a345089b867c64887581824b880ee,karelrooted@gmail.com,2019-10-15 16:55:43+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,MOD: code style,unstable,True,False,6,storage.h,h,1,1,2
2262a31c0b9a345089b867c64887581824b880ee,karelrooted@gmail.com,2019-10-15 16:55:43+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,MOD: code style,unstable,True,False,6,util.cc,cc,17,0,17
2262a31c0b9a345089b867c64887581824b880ee,karelrooted@gmail.com,2019-10-15 16:55:43+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,MOD: code style,unstable,True,False,6,util.h,h,2,1,3
8b561ebabdc65670e088b1b3c543ae63f0e1a06f,karelrooted@gmail.com,2019-10-16 18:51:48+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"ADD: add codis migrate-mehtod ""semiasync""",unstable,True,False,9,redis_cmd.cc,cc,135,10,145
8b561ebabdc65670e088b1b3c543ae63f0e1a06f,karelrooted@gmail.com,2019-10-16 18:51:48+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"ADD: add codis migrate-mehtod ""semiasync""",unstable,True,False,9,redis_db.cc,cc,14,4,18
8b561ebabdc65670e088b1b3c543ae63f0e1a06f,karelrooted@gmail.com,2019-10-16 18:51:48+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"ADD: add codis migrate-mehtod ""semiasync""",unstable,True,False,9,redis_db.h,h,2,0,2
8b561ebabdc65670e088b1b3c543ae63f0e1a06f,karelrooted@gmail.com,2019-10-16 18:51:48+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"ADD: add codis migrate-mehtod ""semiasync""",unstable,True,False,9,redis_slot.cc,cc,481,28,509
8b561ebabdc65670e088b1b3c543ae63f0e1a06f,karelrooted@gmail.com,2019-10-16 18:51:48+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"ADD: add codis migrate-mehtod ""semiasync""",unstable,True,False,9,redis_slot.h,h,112,3,115
8b561ebabdc65670e088b1b3c543ae63f0e1a06f,karelrooted@gmail.com,2019-10-16 18:51:48+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"ADD: add codis migrate-mehtod ""semiasync""",unstable,True,False,9,server.cc,cc,10,0,10
8b561ebabdc65670e088b1b3c543ae63f0e1a06f,karelrooted@gmail.com,2019-10-16 18:51:48+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"ADD: add codis migrate-mehtod ""semiasync""",unstable,True,False,9,server.h,h,2,0,2
8b561ebabdc65670e088b1b3c543ae63f0e1a06f,karelrooted@gmail.com,2019-10-16 18:51:48+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"ADD: add codis migrate-mehtod ""semiasync""",unstable,True,False,9,status.h,h,2,0,2
8b561ebabdc65670e088b1b3c543ae63f0e1a06f,karelrooted@gmail.com,2019-10-16 18:51:48+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"ADD: add codis migrate-mehtod ""semiasync""",unstable,True,False,9,storage.cc,cc,1,1,2
85cc4a167a8ab3f4e1386eb183fd6f4fb8fa30a7,karelrooted@gmail.com,2019-10-30 14:54:45+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"MOD: opti (ElectMigrateKeys only in the SlotsMgrtSenderThread, only delete key when migrate succ [cf_slot + cf_metadata])
MOD: code style",unstable,True,False,8,redis_cmd.cc,cc,14,9,23
85cc4a167a8ab3f4e1386eb183fd6f4fb8fa30a7,karelrooted@gmail.com,2019-10-30 14:54:45+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"MOD: opti (ElectMigrateKeys only in the SlotsMgrtSenderThread, only delete key when migrate succ [cf_slot + cf_metadata])
MOD: code style",unstable,True,False,8,redis_db.cc,cc,2,2,4
85cc4a167a8ab3f4e1386eb183fd6f4fb8fa30a7,karelrooted@gmail.com,2019-10-30 14:54:45+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"MOD: opti (ElectMigrateKeys only in the SlotsMgrtSenderThread, only delete key when migrate succ [cf_slot + cf_metadata])
MOD: code style",unstable,True,False,8,redis_db.h,h,2,2,4
85cc4a167a8ab3f4e1386eb183fd6f4fb8fa30a7,karelrooted@gmail.com,2019-10-30 14:54:45+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"MOD: opti (ElectMigrateKeys only in the SlotsMgrtSenderThread, only delete key when migrate succ [cf_slot + cf_metadata])
MOD: code style",unstable,True,False,8,redis_slot.cc,cc,90,146,236
85cc4a167a8ab3f4e1386eb183fd6f4fb8fa30a7,karelrooted@gmail.com,2019-10-30 14:54:45+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"MOD: opti (ElectMigrateKeys only in the SlotsMgrtSenderThread, only delete key when migrate succ [cf_slot + cf_metadata])
MOD: code style",unstable,True,False,8,redis_slot.h,h,29,31,60
85cc4a167a8ab3f4e1386eb183fd6f4fb8fa30a7,karelrooted@gmail.com,2019-10-30 14:54:45+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"MOD: opti (ElectMigrateKeys only in the SlotsMgrtSenderThread, only delete key when migrate succ [cf_slot + cf_metadata])
MOD: code style",unstable,True,False,8,server.cc,cc,4,1,5
85cc4a167a8ab3f4e1386eb183fd6f4fb8fa30a7,karelrooted@gmail.com,2019-10-30 14:54:45+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"MOD: opti (ElectMigrateKeys only in the SlotsMgrtSenderThread, only delete key when migrate succ [cf_slot + cf_metadata])
MOD: code style",unstable,True,False,8,server.h,h,1,1,2
85cc4a167a8ab3f4e1386eb183fd6f4fb8fa30a7,karelrooted@gmail.com,2019-10-30 14:54:45+08:00,karelrooted@gmail.com,2019-11-01 17:30:07+08:00,"MOD: opti (ElectMigrateKeys only in the SlotsMgrtSenderThread, only delete key when migrate succ [cf_slot + cf_metadata])
MOD: code style",unstable,True,False,8,util.cc,cc,22,21,43
fce22a294909ad281e96a736767bf256de1db4b7,karelrooted@gmail.com,2019-11-04 17:05:47+08:00,karelrooted@gmail.com,2019-11-04 17:06:54+08:00,"TST: add slotsmgrtslot-async, slotsmgrttagslot-async testcase",unstable,True,False,1,codis_test.py,py,45,0,45
ae5aed108128dc5d549540720ec4eff6c890af80,karelrooted@gmail.com,2019-11-07 11:29:24+08:00,karelrooted@gmail.com,2019-11-07 11:29:24+08:00,MOD: fix memory leak,unstable,True,False,1,redis_slot.cc,cc,2,1,3
b4bbd16e4bc4b6a846213180779950a338b0ebe3,hulk.website@gmail.com,2019-10-31 10:25:29+08:00,hulk.website@gmail.com,2019-11-08 13:58:01+08:00,fix/unittest,unstable,True,False,3,t_list_test.cc,cc,1,0,1
b4bbd16e4bc4b6a846213180779950a338b0ebe3,hulk.website@gmail.com,2019-10-31 10:25:29+08:00,hulk.website@gmail.com,2019-11-08 13:58:01+08:00,fix/unittest,unstable,True,False,3,t_string_test.cc,cc,1,1,2
b4bbd16e4bc4b6a846213180779950a338b0ebe3,hulk.website@gmail.com,2019-10-31 10:25:29+08:00,hulk.website@gmail.com,2019-11-08 13:58:01+08:00,fix/unittest,unstable,True,False,3,t_zset_test.cc,cc,1,1,2
a10c8cfa74aafc7bce8185156f1388b9161ba7bb,hulk.website@gmail.com,2019-11-08 13:57:19+08:00,hulk.website@gmail.com,2019-11-08 13:58:01+08:00,MOD: shrink the size of metadata and subkey block cache,unstable,True,False,2,kvrocks.conf,conf,40,9,49
a10c8cfa74aafc7bce8185156f1388b9161ba7bb,hulk.website@gmail.com,2019-11-08 13:57:19+08:00,hulk.website@gmail.com,2019-11-08 13:58:01+08:00,MOD: shrink the size of metadata and subkey block cache,unstable,True,False,2,config.h,h,4,4,8
7d925029c448919985d2d63b9c9c47db76dda445,hulk.website@gmail.com,2019-11-08 14:11:31+08:00,hulk.website@gmail.com,2019-11-08 14:11:31+08:00,MOD: make cache_index_and_filter_blocks configurable,unstable,True,False,3,config.cc,cc,4,0,4
7d925029c448919985d2d63b9c9c47db76dda445,hulk.website@gmail.com,2019-11-08 14:11:31+08:00,hulk.website@gmail.com,2019-11-08 14:11:31+08:00,MOD: make cache_index_and_filter_blocks configurable,unstable,True,False,3,config.h,h,1,0,1
7d925029c448919985d2d63b9c9c47db76dda445,hulk.website@gmail.com,2019-11-08 14:11:31+08:00,hulk.website@gmail.com,2019-11-08 14:11:31+08:00,MOD: make cache_index_and_filter_blocks configurable,unstable,True,False,3,storage.cc,cc,3,2,5
811e487ea7a1a945b7e0b7ae4ee5d1d74bfc1fdc,hulk.website@gmail.com,2019-11-08 14:30:53+08:00,hulk.website@gmail.com,2019-11-08 14:30:53+08:00,ADD: config block_size to rocksdb table option,unstable,True,False,4,kvrocks.conf,conf,13,0,13
811e487ea7a1a945b7e0b7ae4ee5d1d74bfc1fdc,hulk.website@gmail.com,2019-11-08 14:30:53+08:00,hulk.website@gmail.com,2019-11-08 14:30:53+08:00,ADD: config block_size to rocksdb table option,unstable,True,False,4,config.cc,cc,4,0,4
811e487ea7a1a945b7e0b7ae4ee5d1d74bfc1fdc,hulk.website@gmail.com,2019-11-08 14:30:53+08:00,hulk.website@gmail.com,2019-11-08 14:30:53+08:00,ADD: config block_size to rocksdb table option,unstable,True,False,4,config.h,h,1,0,1
811e487ea7a1a945b7e0b7ae4ee5d1d74bfc1fdc,hulk.website@gmail.com,2019-11-08 14:30:53+08:00,hulk.website@gmail.com,2019-11-08 14:30:53+08:00,ADD: config block_size to rocksdb table option,unstable,True,False,4,storage.cc,cc,4,0,4
2bc0e273ee593d6f77029e8efd9667d68bd1e853,karelrooted@gmail.com,2019-11-07 15:14:52+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,ADD: support migrate to specified db_index,unstable,True,False,5,kvrocks2redis.conf,conf,3,3,6
2bc0e273ee593d6f77029e8efd9667d68bd1e853,karelrooted@gmail.com,2019-11-07 15:14:52+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,ADD: support migrate to specified db_index,unstable,True,False,5,config.cc,cc,1,0,1
2bc0e273ee593d6f77029e8efd9667d68bd1e853,karelrooted@gmail.com,2019-11-07 15:14:52+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,ADD: support migrate to specified db_index,unstable,True,False,5,config.h,h,1,0,1
2bc0e273ee593d6f77029e8efd9667d68bd1e853,karelrooted@gmail.com,2019-11-07 15:14:52+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,ADD: support migrate to specified db_index,unstable,True,False,5,redis_writer.cc,cc,43,2,45
2bc0e273ee593d6f77029e8efd9667d68bd1e853,karelrooted@gmail.com,2019-11-07 15:14:52+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,ADD: support migrate to specified db_index,unstable,True,False,5,redis_writer.h,h,6,1,7
b51ea886b6d1f7fcaacf9aab634e38e27b724e09,karelrooted@gmail.com,2019-11-07 15:28:12+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,MOD: move pidfile conf to config file,unstable,True,False,3,config.cc,cc,3,0,3
b51ea886b6d1f7fcaacf9aab634e38e27b724e09,karelrooted@gmail.com,2019-11-07 15:28:12+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,MOD: move pidfile conf to config file,unstable,True,False,3,config.h,h,1,0,1
b51ea886b6d1f7fcaacf9aab634e38e27b724e09,karelrooted@gmail.com,2019-11-07 15:28:12+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,MOD: move pidfile conf to config file,unstable,True,False,3,main.cc,cc,3,8,11
96c82b27d3ab3701a3052776b9cf13c4bdec4009,karelrooted@gmail.com,2019-11-07 19:00:20+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,MOD:  stop using callbackstatemachine,unstable,True,False,6,kvrocks2redis.conf,conf,1,1,2
96c82b27d3ab3701a3052776b9cf13c4bdec4009,karelrooted@gmail.com,2019-11-07 19:00:20+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,MOD:  stop using callbackstatemachine,unstable,True,False,6,storage.cc,cc,3,1,4
96c82b27d3ab3701a3052776b9cf13c4bdec4009,karelrooted@gmail.com,2019-11-07 19:00:20+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,MOD:  stop using callbackstatemachine,unstable,True,False,6,main.cc,cc,3,8,11
96c82b27d3ab3701a3052776b9cf13c4bdec4009,karelrooted@gmail.com,2019-11-07 19:00:20+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,MOD:  stop using callbackstatemachine,unstable,True,False,6,redis_writer.cc,cc,2,2,4
96c82b27d3ab3701a3052776b9cf13c4bdec4009,karelrooted@gmail.com,2019-11-07 19:00:20+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,MOD:  stop using callbackstatemachine,unstable,True,False,6,sync.cc,cc,129,105,234
96c82b27d3ab3701a3052776b9cf13c4bdec4009,karelrooted@gmail.com,2019-11-07 19:00:20+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,MOD:  stop using callbackstatemachine,unstable,True,False,6,sync.h,h,7,14,21
162afe1fb3c727f93d3c39280570d3c34b20541f,karelrooted@gmail.com,2019-11-08 15:35:15+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,MOD: typo,unstable,True,False,2,redis_writer.cc,cc,1,1,2
162afe1fb3c727f93d3c39280570d3c34b20541f,karelrooted@gmail.com,2019-11-08 15:35:15+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,MOD: typo,unstable,True,False,2,redis_writer.h,h,1,1,2
9cda2d5919418444faa351b0ad08fa80547ceeaa,karelrooted@gmail.com,2019-11-08 16:15:48+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,"MOD: evbuffet_read on a block sock_fd will block till there is data available, so we don't need while(true) here",unstable,True,False,2,redis_writer.cc,cc,28,33,61
9cda2d5919418444faa351b0ad08fa80547ceeaa,karelrooted@gmail.com,2019-11-08 16:15:48+08:00,karelrooted@gmail.com,2019-11-08 16:16:16+08:00,"MOD: evbuffet_read on a block sock_fd will block till there is data available, so we don't need while(true) here",unstable,True,False,2,sync.cc,cc,39,40,79
8ffeb49f6e245d6ebfc60706b7afe64235ca1d8b,karelrooted@gmail.com,2019-11-08 17:23:50+08:00,karelrooted@gmail.com,2019-11-08 17:23:50+08:00,MOD: add Util::sockReadLine func,unstable,True,False,5,CMakeLists.txt,txt,2,0,2
8ffeb49f6e245d6ebfc60706b7afe64235ca1d8b,karelrooted@gmail.com,2019-11-08 17:23:50+08:00,karelrooted@gmail.com,2019-11-08 17:23:50+08:00,MOD: add Util::sockReadLine func,unstable,True,False,5,util.cc,cc,20,0,20
8ffeb49f6e245d6ebfc60706b7afe64235ca1d8b,karelrooted@gmail.com,2019-11-08 17:23:50+08:00,karelrooted@gmail.com,2019-11-08 17:23:50+08:00,MOD: add Util::sockReadLine func,unstable,True,False,5,util.h,h,1,0,1
8ffeb49f6e245d6ebfc60706b7afe64235ca1d8b,karelrooted@gmail.com,2019-11-08 17:23:50+08:00,karelrooted@gmail.com,2019-11-08 17:23:50+08:00,MOD: add Util::sockReadLine func,unstable,True,False,5,redis_writer.cc,cc,13,39,52
8ffeb49f6e245d6ebfc60706b7afe64235ca1d8b,karelrooted@gmail.com,2019-11-08 17:23:50+08:00,karelrooted@gmail.com,2019-11-08 17:23:50+08:00,MOD: add Util::sockReadLine func,unstable,True,False,5,sync.cc,cc,11,32,43
7d1acb17fef61c9a9c9df313b7dd2ce32e56f1cf,karelrooted@gmail.com,2019-11-08 18:05:27+08:00,karelrooted@gmail.com,2019-11-08 18:05:27+08:00,"MOD: check redis sync response , stop sync thread when error accour",unstable,True,False,1,redis_writer.cc,cc,14,7,21
4c6021a95a6bf9b6e7fdfe91b45a51e38ae2c44e,hulk.website@gmail.com,2019-11-10 00:15:44+08:00,hulk.website@gmail.com,2019-11-10 00:15:44+08:00,MOD: add more info for 'enabled-codis' option,unstable,True,False,1,kvrocks.conf,conf,3,1,4
2bbfe5aa9531f6e76bfd10a2cc450b9bfa0f15d9,karelrooted@gmail.com,2019-11-08 17:17:44+08:00,hulk.website@gmail.com,2019-11-10 01:00:27+08:00,"FIX: codis support related cf  eslot_metadata, slot , should only be added when codis-enabled=yes",unstable,True,False,5,redis_slot.cc,cc,0,23,23
2bbfe5aa9531f6e76bfd10a2cc450b9bfa0f15d9,karelrooted@gmail.com,2019-11-08 17:17:44+08:00,hulk.website@gmail.com,2019-11-10 01:00:27+08:00,"FIX: codis support related cf  eslot_metadata, slot , should only be added when codis-enabled=yes",unstable,True,False,5,redis_slot.h,h,0,2,2
2bbfe5aa9531f6e76bfd10a2cc450b9bfa0f15d9,karelrooted@gmail.com,2019-11-08 17:17:44+08:00,hulk.website@gmail.com,2019-11-10 01:00:27+08:00,"FIX: codis support related cf  eslot_metadata, slot , should only be added when codis-enabled=yes",unstable,True,False,5,storage.cc,cc,37,29,66
2bbfe5aa9531f6e76bfd10a2cc450b9bfa0f15d9,karelrooted@gmail.com,2019-11-08 17:17:44+08:00,hulk.website@gmail.com,2019-11-10 01:00:27+08:00,"FIX: codis support related cf  eslot_metadata, slot , should only be added when codis-enabled=yes",unstable,True,False,5,setup-env.sh,sh,2,0,2
2bbfe5aa9531f6e76bfd10a2cc450b9bfa0f15d9,karelrooted@gmail.com,2019-11-08 17:17:44+08:00,hulk.website@gmail.com,2019-11-10 01:00:27+08:00,"FIX: codis support related cf  eslot_metadata, slot , should only be added when codis-enabled=yes",unstable,True,False,5,test-codis-group1.conf,conf,1,1,2
f2e0cc458797a0fdcaabb165668bcd4056a3d973,hulk.website@gmail.com,2019-11-12 14:55:12+08:00,hulk.website@gmail.com,2019-11-12 14:55:12+08:00,FIX: wrong argument in substr,unstable,True,False,1,config.cc,cc,1,1,2
8ad297db263c555245dd998d16592540f9bab4fe,hulk.website@gmail.com,2019-11-12 14:55:24+08:00,hulk.website@gmail.com,2019-11-12 14:55:24+08:00,FIX: lint error,unstable,True,False,1,redis_slot.cc,cc,3,2,5
a5e74531c51324985428d74a7a719079c534edf9,hulk.website@gmail.com,2019-11-08 17:08:13+08:00,hulk.website@gmail.com,2019-11-14 01:43:13+08:00,MOD: refactor the config code base and make it clearly,unstable,True,False,13,CMakeLists.txt,txt,5,1,6
a5e74531c51324985428d74a7a719079c534edf9,hulk.website@gmail.com,2019-11-08 17:08:13+08:00,hulk.website@gmail.com,2019-11-14 01:43:13+08:00,MOD: refactor the config code base and make it clearly,unstable,True,False,13,kvrocks.conf,conf,58,16,74
a5e74531c51324985428d74a7a719079c534edf9,hulk.website@gmail.com,2019-11-08 17:08:13+08:00,hulk.website@gmail.com,2019-11-14 01:43:13+08:00,MOD: refactor the config code base and make it clearly,unstable,True,False,13,config.cc,cc,345,639,984
a5e74531c51324985428d74a7a719079c534edf9,hulk.website@gmail.com,2019-11-08 17:08:13+08:00,hulk.website@gmail.com,2019-11-14 01:43:13+08:00,MOD: refactor the config code base and make it clearly,unstable,True,False,13,config.h,h,70,64,134
a5e74531c51324985428d74a7a719079c534edf9,hulk.website@gmail.com,2019-11-08 17:08:13+08:00,hulk.website@gmail.com,2019-11-14 01:43:13+08:00,MOD: refactor the config code base and make it clearly,unstable,True,False,13,config_type.h,h,159,0,159
a5e74531c51324985428d74a7a719079c534edf9,hulk.website@gmail.com,2019-11-08 17:08:13+08:00,hulk.website@gmail.com,2019-11-14 01:43:13+08:00,MOD: refactor the config code base and make it clearly,unstable,True,False,13,redis_cmd.cc,cc,2,2,4
a5e74531c51324985428d74a7a719079c534edf9,hulk.website@gmail.com,2019-11-08 17:08:13+08:00,hulk.website@gmail.com,2019-11-14 01:43:13+08:00,MOD: refactor the config code base and make it clearly,unstable,True,False,13,redis_request.cc,cc,2,2,4
a5e74531c51324985428d74a7a719079c534edf9,hulk.website@gmail.com,2019-11-08 17:08:13+08:00,hulk.website@gmail.com,2019-11-14 01:43:13+08:00,MOD: refactor the config code base and make it clearly,unstable,True,False,13,server.cc,cc,2,4,6
a5e74531c51324985428d74a7a719079c534edf9,hulk.website@gmail.com,2019-11-08 17:08:13+08:00,hulk.website@gmail.com,2019-11-14 01:43:13+08:00,MOD: refactor the config code base and make it clearly,unstable,True,False,13,storage.cc,cc,38,26,64
a5e74531c51324985428d74a7a719079c534edf9,hulk.website@gmail.com,2019-11-08 17:08:13+08:00,hulk.website@gmail.com,2019-11-14 01:43:13+08:00,MOD: refactor the config code base and make it clearly,unstable,True,False,13,storage.h,h,2,0,2
a5e74531c51324985428d74a7a719079c534edf9,hulk.website@gmail.com,2019-11-08 17:08:13+08:00,hulk.website@gmail.com,2019-11-14 01:43:13+08:00,MOD: refactor the config code base and make it clearly,unstable,True,False,13,util.cc,cc,20,0,20
a5e74531c51324985428d74a7a719079c534edf9,hulk.website@gmail.com,2019-11-08 17:08:13+08:00,hulk.website@gmail.com,2019-11-14 01:43:13+08:00,MOD: refactor the config code base and make it clearly,unstable,True,False,13,util.h,h,2,0,2
a5e74531c51324985428d74a7a719079c534edf9,hulk.website@gmail.com,2019-11-08 17:08:13+08:00,hulk.website@gmail.com,2019-11-14 01:43:13+08:00,MOD: refactor the config code base and make it clearly,unstable,True,False,13,config_test.cc,cc,6,5,11
608ae774db3286440a43b26a061edfb86932d04b,hulk.website@gmail.com,2019-11-14 10:20:44+08:00,hulk.website@gmail.com,2019-11-14 10:20:44+08:00,MOD: make the error msg more clearly in config command,unstable,True,False,1,redis_cmd.cc,cc,13,6,19
a222214b5c930ce211dffd51c2819834f83575ef,hulk.website@gmail.com,2019-11-14 11:20:26+08:00,hulk.website@gmail.com,2019-11-14 11:20:26+08:00,TST: add config set and get test case,unstable,True,False,2,redis_cmd.cc,cc,1,1,2
a222214b5c930ce211dffd51c2819834f83575ef,hulk.website@gmail.com,2019-11-14 11:20:26+08:00,hulk.website@gmail.com,2019-11-14 11:20:26+08:00,TST: add config set and get test case,unstable,True,False,2,config_test.cc,cc,65,7,72
80078ece6947b4e5ec36eebd84caf5fc1b4ff9d6,hulk.website@gmail.com,2019-11-14 13:40:14+08:00,hulk.website@gmail.com,2019-11-14 13:40:14+08:00,Bump v1.1.0,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
80078ece6947b4e5ec36eebd84caf5fc1b4ff9d6,hulk.website@gmail.com,2019-11-14 13:40:14+08:00,hulk.website@gmail.com,2019-11-14 13:40:14+08:00,Bump v1.1.0,unstable,True,False,2,Changelog,None,6,0,6
3d134ac4983488d5b694bc9089dcc1f347ca7145,hulk.website@gmail.com,2019-11-14 13:53:08+08:00,hulk.website@gmail.com,2019-11-14 13:53:08+08:00,MOD: remove extra ;,unstable,True,False,1,config.cc,cc,1,1,2
1746e34c687718fc8c91b99e0184eb539b143b94,hulk.website@gmail.com,2019-11-14 16:13:16+08:00,hulk.website@gmail.com,2019-11-14 16:13:16+08:00,MOD: update README,unstable,True,False,1,README.md,md,1,0,1
96679c3e8c2aa3b886a717947497c4f4d02fac28,karelrooted@gmail.com,2019-11-19 15:09:32+08:00,karelrooted@gmail.com,2019-11-19 15:09:32+08:00,MOD: show used_db_space by namespace,unstable,True,False,3,server.cc,cc,1,1,2
96679c3e8c2aa3b886a717947497c4f4d02fac28,karelrooted@gmail.com,2019-11-19 15:09:32+08:00,karelrooted@gmail.com,2019-11-19 15:09:32+08:00,MOD: show used_db_space by namespace,unstable,True,False,3,storage.cc,cc,22,2,24
96679c3e8c2aa3b886a717947497c4f4d02fac28,karelrooted@gmail.com,2019-11-19 15:09:32+08:00,karelrooted@gmail.com,2019-11-19 15:09:32+08:00,MOD: show used_db_space by namespace,unstable,True,False,3,storage.h,h,1,1,2
28d2bb8a527189b47d2cd642bcc89b4b80bf2268,hulk.website@gmail.com,2019-11-20 16:20:22+08:00,hulk.website@gmail.com,2019-11-20 18:23:31+08:00,FIX: dbsize scan and keys should scan the entire DB when the token is requirepass,unstable,True,False,1,redis_db.cc,cc,4,2,6
e1e3498a276733afa27ef20a2fb6ecf808a35b38,karelrooted@gmail.com,2019-11-20 17:54:07+08:00,karelrooted@gmail.com,2019-11-21 10:40:54+08:00,MOD: allow user token to compact namespace,unstable,True,False,3,redis_cmd.cc,cc,15,4,19
e1e3498a276733afa27ef20a2fb6ecf808a35b38,karelrooted@gmail.com,2019-11-20 17:54:07+08:00,karelrooted@gmail.com,2019-11-21 10:40:54+08:00,MOD: allow user token to compact namespace,unstable,True,False,3,server.cc,cc,9,4,13
e1e3498a276733afa27ef20a2fb6ecf808a35b38,karelrooted@gmail.com,2019-11-20 17:54:07+08:00,karelrooted@gmail.com,2019-11-21 10:40:54+08:00,MOD: allow user token to compact namespace,unstable,True,False,3,server.h,h,1,1,2
1190d4b0e9516f42b18cefa14de47d916e4b88db,hulk.website@gmail.com,2019-11-21 11:06:07+08:00,hulk.website@gmail.com,2019-11-21 11:06:46+08:00,"FIX: max-repliction-mb multiple with const int would be cast into int, instead of int64",unstable,True,False,1,server.cc,cc,6,5,11
30fbb3788a215bd1ce5162ff5ba9864041df7748,hulk.website@gmail.com,2019-11-21 13:55:04+08:00,hulk.website@gmail.com,2019-11-21 14:05:06+08:00,FIX: code style check by cpplint and cppcheck,unstable,True,False,3,config.cc,cc,10,10,20
30fbb3788a215bd1ce5162ff5ba9864041df7748,hulk.website@gmail.com,2019-11-21 13:55:04+08:00,hulk.website@gmail.com,2019-11-21 14:05:06+08:00,FIX: code style check by cpplint and cppcheck,unstable,True,False,3,config.h,h,24,24,48
30fbb3788a215bd1ce5162ff5ba9864041df7748,hulk.website@gmail.com,2019-11-21 13:55:04+08:00,hulk.website@gmail.com,2019-11-21 14:05:06+08:00,FIX: code style check by cpplint and cppcheck,unstable,True,False,3,config_type.h,h,11,5,16
75afcecaad390629eee9f42cd7a8f4ecdba653bd,hulk.website@gmail.com,2019-11-21 13:44:03+08:00,hulk.website@gmail.com,2019-11-21 14:05:06+08:00,Bump v1.1.1,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
75afcecaad390629eee9f42cd7a8f4ecdba653bd,hulk.website@gmail.com,2019-11-21 13:44:03+08:00,hulk.website@gmail.com,2019-11-21 14:05:06+08:00,Bump v1.1.1,unstable,True,False,2,Changelog,None,4,0,4
1fa3efc9bc84f74f72a308460fd3249849609f56,karelrooted@gmail.com,2019-11-21 14:51:50+08:00,karelrooted@gmail.com,2019-11-21 14:51:50+08:00,"MOD: sscan,zscan  should not return error when key not found
MOD: if set if empty after srem, delete the metadata_key
MOD: GetMetadata return exact error",unstable,True,False,3,redis_cmd.cc,cc,3,3,6
1fa3efc9bc84f74f72a308460fd3249849609f56,karelrooted@gmail.com,2019-11-21 14:51:50+08:00,karelrooted@gmail.com,2019-11-21 14:51:50+08:00,"MOD: sscan,zscan  should not return error when key not found
MOD: if set if empty after srem, delete the metadata_key
MOD: GetMetadata return exact error",unstable,True,False,3,redis_db.cc,cc,1,3,4
1fa3efc9bc84f74f72a308460fd3249849609f56,karelrooted@gmail.com,2019-11-21 14:51:50+08:00,karelrooted@gmail.com,2019-11-21 14:51:50+08:00,"MOD: sscan,zscan  should not return error when key not found
MOD: if set if empty after srem, delete the metadata_key
MOD: GetMetadata return exact error",unstable,True,False,3,redis_set.cc,cc,8,4,12
e7cec916b584e9f384764dfb3e0517ce675d435d,git-hulk,2019-11-25 17:53:00+08:00,git-hulk,2019-11-25 17:53:00+08:00,MOD: auto fetch the submodules,unstable,True,False,1,Makefile,None,8,1,9
da83fa4bd25cdf8626a33158fbb89c465d2f39e7,hulk.website@gmail.com,2019-11-29 17:24:45+08:00,hulk.website@gmail.com,2019-11-29 17:24:57+08:00,MOD: disable the rocksdb pipelined write,unstable,True,False,2,kvrocks.conf,conf,2,2,4
da83fa4bd25cdf8626a33158fbb89c465d2f39e7,hulk.website@gmail.com,2019-11-29 17:24:45+08:00,hulk.website@gmail.com,2019-11-29 17:24:57+08:00,MOD: disable the rocksdb pipelined write,unstable,True,False,2,config.cc,cc,1,1,2
9225ccb113e9864056fa3870116d67c334427962,hulk.website@gmail.com,2019-12-03 17:10:27+08:00,hulk.website@gmail.com,2019-12-03 17:10:27+08:00,MOD: set the connection closed error to debug level,unstable,True,False,1,redis_connection.cc,cc,1,1,2
77f8411e79da34326d724ef1fce03b4425c247f5,hulk.website@gmail.com,2019-12-05 10:16:37+08:00,hulk.website@gmail.com,2019-12-05 10:16:37+08:00,FIX: keep retrying to restart the replication thread instead of give up,unstable,True,False,2,replication.cc,cc,5,9,14
77f8411e79da34326d724ef1fce03b4425c247f5,hulk.website@gmail.com,2019-12-05 10:16:37+08:00,hulk.website@gmail.com,2019-12-05 10:16:37+08:00,FIX: keep retrying to restart the replication thread instead of give up,unstable,True,False,2,server.cc,cc,1,8,9
d062ad5cfb4b207a1ec83010869ca7198f116791,hulk.website@gmail.com,2019-12-05 11:20:16+08:00,hulk.website@gmail.com,2019-12-05 11:20:29+08:00,"FIX: the replication auth should use the masterauth instead of
requirepass",unstable,True,False,3,redis_cmd.cc,cc,11,8,19
d062ad5cfb4b207a1ec83010869ca7198f116791,hulk.website@gmail.com,2019-12-05 11:20:16+08:00,hulk.website@gmail.com,2019-12-05 11:20:29+08:00,"FIX: the replication auth should use the masterauth instead of
requirepass",unstable,True,False,3,redis_request.cc,cc,4,3,7
d062ad5cfb4b207a1ec83010869ca7198f116791,hulk.website@gmail.com,2019-12-05 11:20:16+08:00,hulk.website@gmail.com,2019-12-05 11:20:29+08:00,"FIX: the replication auth should use the masterauth instead of
requirepass",unstable,True,False,3,replication.cc,cc,7,3,10
bb0708ea53e344686e17c73cf208751d920251e0,hulk.website@gmail.com,2019-12-05 18:58:50+08:00,hulk.website@gmail.com,2019-12-05 18:58:50+08:00,FIX: don't stop the replication thread when failed to write the increment batch,unstable,True,False,1,replication.cc,cc,0,1,1
e9f2453213abc84fc9eb2e1e5b2b006c32e1977e,hulk.website@gmail.com,2019-12-06 10:43:49+08:00,hulk.website@gmail.com,2019-12-06 10:43:59+08:00,Bump v1.1.2,unstable,True,False,3,CMakeLists.txt,txt,1,1,2
e9f2453213abc84fc9eb2e1e5b2b006c32e1977e,hulk.website@gmail.com,2019-12-06 10:43:49+08:00,hulk.website@gmail.com,2019-12-06 10:43:59+08:00,Bump v1.1.2,unstable,True,False,3,Changelog,None,5,0,5
e9f2453213abc84fc9eb2e1e5b2b006c32e1977e,hulk.website@gmail.com,2019-12-06 10:43:49+08:00,hulk.website@gmail.com,2019-12-06 10:43:59+08:00,Bump v1.1.2,unstable,True,False,3,kvrocks.conf,conf,1,1,2
53cd068fdaec42b3e22cc0259cc4376d8124cc27,karelrooted@gmail.com,2019-12-06 18:10:57+08:00,karelrooted@gmail.com,2019-12-06 18:10:57+08:00,FIX: warning,unstable,True,False,1,redis_set.cc,cc,1,1,2
a0588657974063492a48eeb76cfb5c948e851242,karelrooted@gmail.com,2019-12-09 19:00:16+08:00,karelrooted@gmail.com,2019-12-09 19:00:16+08:00,ADD: info add disk usage,unstable,True,False,1,server.cc,cc,10,0,10
27b392830029c88a7a6418c1160979e1cd759e2a,hulk.website@gmail.com,2019-12-16 11:29:28+08:00,hulk.website@gmail.com,2019-12-16 11:29:28+08:00,Bump v1.1.3,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
27b392830029c88a7a6418c1160979e1cd759e2a,hulk.website@gmail.com,2019-12-16 11:29:28+08:00,hulk.website@gmail.com,2019-12-16 11:29:28+08:00,Bump v1.1.3,unstable,True,False,2,Changelog,None,3,0,3
1caebac133e7806d66ab60159e7e3249c291ff5d,hulk.website@gmail.com,2019-12-20 16:43:34+08:00,hulk.website@gmail.com,2019-12-20 16:43:34+08:00,MOD: remove unused logs when failed to execute the command,unstable,True,False,1,redis_request.cc,cc,0,2,2
7775ae55d2305e9a250ef9435c423715453cd048,karelrooted@gmail.com,2020-01-10 15:20:38+08:00,karelrooted@gmail.com,2020-01-10 15:20:38+08:00,"FIX: when ttl is less than one second in SET PX or PEXPIRE, round up to 1 second",unstable,True,False,1,redis_cmd.cc,cc,14,4,18
9841da25f9d5b03c7ad502863859ec99011a2aad,karelrooted@gmail.com,2020-01-10 15:34:49+08:00,karelrooted@gmail.com,2020-01-10 16:54:35+08:00,TST: add milliseconds ttl testcase,unstable,True,False,2,key_test.py,py,10,1,11
9841da25f9d5b03c7ad502863859ec99011a2aad,karelrooted@gmail.com,2020-01-10 15:34:49+08:00,karelrooted@gmail.com,2020-01-10 16:54:35+08:00,TST: add milliseconds ttl testcase,unstable,True,False,2,string_test.py,py,11,3,14
70256e7ea75948163a0d4d11841f28aa1f24125a,hulk.website@gmail.com,2020-01-15 11:47:36+08:00,hulk.website@gmail.com,2020-01-15 11:47:36+08:00,MOD: minor change in ttl,unstable,True,False,1,redis_cmd.cc,cc,6,6,12
2b169959ed089dc0b257aec6e7f64a51b782782f,hulk.website@gmail.com,2020-01-15 13:41:21+08:00,hulk.website@gmail.com,2020-01-15 13:41:21+08:00,MOD: log error when the socket occur error,unstable,True,False,1,redis_connection.cc,cc,1,1,2
8943f29bcc28c740a753c466a3eea75375c1c9ec,hulk.website@gmail.com,2020-01-15 14:52:22+08:00,hulk.website@gmail.com,2020-01-15 14:52:22+08:00,FIX: disable the debug log,unstable,True,False,1,Makefile,None,1,1,2
bb8c5d4ca5eb5853f5d13968c405382030bc4fa5,hulk.website@gmail.com,2020-01-15 14:55:56+08:00,hulk.website@gmail.com,2020-01-15 14:55:56+08:00,Bump v1.1.4,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
bb8c5d4ca5eb5853f5d13968c405382030bc4fa5,hulk.website@gmail.com,2020-01-15 14:55:56+08:00,hulk.website@gmail.com,2020-01-15 14:55:56+08:00,Bump v1.1.4,unstable,True,False,2,Changelog,None,4,0,4
331b33e0e07ef4cc67e3a3d5359a840e5fd3c010,hulk.website@gmail.com,2020-01-15 15:41:08+08:00,hulk.website@gmail.com,2020-01-15 15:41:08+08:00,MOD: remove the limit of bulk number,unstable,True,False,2,redis_connection.cc,cc,1,0,1
331b33e0e07ef4cc67e3a3d5359a840e5fd3c010,hulk.website@gmail.com,2020-01-15 15:41:08+08:00,hulk.website@gmail.com,2020-01-15 15:41:08+08:00,MOD: remove the limit of bulk number,unstable,True,False,2,redis_request.cc,cc,1,6,7
51cc41f6dc73b3a02d693ee5bd51a90eb321ac2b,hulk.website@gmail.com,2020-01-15 15:55:22+08:00,hulk.website@gmail.com,2020-01-15 15:55:22+08:00,Bump v1.1.5,unstable,True,False,3,CMakeLists.txt,txt,1,1,2
51cc41f6dc73b3a02d693ee5bd51a90eb321ac2b,hulk.website@gmail.com,2020-01-15 15:55:22+08:00,hulk.website@gmail.com,2020-01-15 15:55:22+08:00,Bump v1.1.5,unstable,True,False,3,Changelog,None,3,0,3
51cc41f6dc73b3a02d693ee5bd51a90eb321ac2b,hulk.website@gmail.com,2020-01-15 15:55:22+08:00,hulk.website@gmail.com,2020-01-15 15:55:22+08:00,Bump v1.1.5,unstable,True,False,3,redis_request.cc,cc,0,1,1
4e1633704eef7546d73216341d27c0213d87a26a,hulk.website@gmail.com,2020-02-12 17:56:35+08:00,hulk.website@gmail.com,2020-02-12 17:56:35+08:00,FIX: create backup at the same time may cause crash while the CreateNewBackupWithMetadata wasn't thread-safe call,unstable,True,False,2,storage.cc,cc,2,0,2
4e1633704eef7546d73216341d27c0213d87a26a,hulk.website@gmail.com,2020-02-12 17:56:35+08:00,hulk.website@gmail.com,2020-02-12 17:56:35+08:00,FIX: create backup at the same time may cause crash while the CreateNewBackupWithMetadata wasn't thread-safe call,unstable,True,False,2,storage.h,h,1,0,1
7d9d1fda44eab3314eb86af1de2b5a7aba866bc5,hulk.website@gmail.com,2020-02-17 13:35:36+08:00,noreply@github.com,2020-02-17 13:35:36+08:00,Update issue templates,unstable,True,False,1,bug_report.md,md,24,0,24
5d13906aa9c0facb8216fe7a2d14798bec545703,karelrooted@gmail.com,2020-02-24 17:56:38+08:00,karelrooted@gmail.com,2020-02-24 17:56:38+08:00,FIX: typo,unstable,True,False,1,redis_hash.cc,cc,1,1,2
fbe4ae8ac26d32df01166da49d0b8f641af15bbf,karelrooted@gmail.com,2020-02-24 17:58:34+08:00,karelrooted@gmail.com,2020-02-24 17:58:34+08:00,TST: hsetnx testcase should use different value (the ret of same value will always be 0),unstable,True,False,1,hash_test.py,py,1,1,2
f6ea42b2c560d626676b53aaea0bb4c5c3cabc09,karelrooted@gmail.com,2020-02-26 19:50:57+08:00,karelrooted@gmail.com,2020-02-26 19:50:57+08:00,FIX: incrby and incrbyfloat exists should be in s.ok,unstable,True,False,1,redis_hash.cc,cc,2,2,4
e2999a54425aafad4e2bca2a8be20f4cb790d2e2,karelrooted@gmail.com,2020-02-26 19:55:56+08:00,karelrooted@gmail.com,2020-02-26 19:55:56+08:00,FIX: reset exist at each iterate,unstable,True,False,1,redis_hash.cc,cc,1,0,1
673a064b07e1c39068c3efcd4c09b13cf2876fe9,karelrooted@gmail.com,2020-02-26 19:57:41+08:00,karelrooted@gmail.com,2020-02-26 19:57:41+08:00,"MOD: if no field need to be delete, then we don't need to write db",unstable,True,False,1,redis_hash.cc,cc,6,6,12
3786da0ff383a16a33784e6b3701226c85e57cd0,karelrooted@gmail.com,2020-02-27 11:37:31+08:00,karelrooted@gmail.com,2020-02-27 11:37:31+08:00,FIX: hmset should return OK instead of added field count,unstable,True,False,1,redis_cmd.cc,cc,1,1,2
e899e0455541f2cef92f5ba4df3762b60f65e72e,hulk.website@gmail.com,2020-02-28 11:38:06+08:00,hulk.website@gmail.com,2020-02-28 11:38:06+08:00,Bump v1.1.6,unstable,True,False,1,Changelog,None,4,2,6
c51b3383db1e18c9391d906bf0b57b17f4f87b25,hulk.website@gmail.com,2020-03-02 22:56:55+08:00,hulk.website@gmail.com,2020-03-02 22:56:55+08:00,Bump 1.1.6,unstable,True,False,1,CMakeLists.txt,txt,1,1,2
fe2442ea540a3eb2aee081200ece967d5bb98cf9,hulk.website@gmail.com,2020-03-03 12:09:05+08:00,hulk.website@gmail.com,2020-03-03 12:09:05+08:00,FIX: don't cleanup the backup dir manually which may cause the failure of create new backup,unstable,True,False,3,replication.cc,cc,2,4,6
fe2442ea540a3eb2aee081200ece967d5bb98cf9,hulk.website@gmail.com,2020-03-03 12:09:05+08:00,hulk.website@gmail.com,2020-03-03 12:09:05+08:00,FIX: don't cleanup the backup dir manually which may cause the failure of create new backup,unstable,True,False,3,storage.cc,cc,1,56,57
fe2442ea540a3eb2aee081200ece967d5bb98cf9,hulk.website@gmail.com,2020-03-03 12:09:05+08:00,hulk.website@gmail.com,2020-03-03 12:09:05+08:00,FIX: don't cleanup the backup dir manually which may cause the failure of create new backup,unstable,True,False,3,storage.h,h,0,1,1
2038adb0272284a435801e2b0f14423a84ac964c,hulk.website@gmail.com,2020-03-03 13:38:52+08:00,hulk.website@gmail.com,2020-03-03 13:38:52+08:00,MOD: create the backup dir if missing,unstable,True,False,1,storage.cc,cc,1,0,1
2ff46ef91d47f37945354d3a9e77ad49f33c4ce0,hulk.website@gmail.com,2020-03-03 14:39:48+08:00,hulk.website@gmail.com,2020-03-03 14:39:48+08:00,Bump v1.1.7,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
2ff46ef91d47f37945354d3a9e77ad49f33c4ce0,hulk.website@gmail.com,2020-03-03 14:39:48+08:00,hulk.website@gmail.com,2020-03-03 14:39:48+08:00,Bump v1.1.7,unstable,True,False,2,Changelog,None,2,0,2
94ed92ef7f4b4981db8801ff038a223777b97c9f,hulk.website@gmail.com,2020-03-17 11:04:12+08:00,hulk.website@gmail.com,2020-03-17 11:04:12+08:00,ADD: rocksdb.disable_auto_compaction option,unstable,True,False,3,kvrocks.conf,conf,4,1,5
94ed92ef7f4b4981db8801ff038a223777b97c9f,hulk.website@gmail.com,2020-03-17 11:04:12+08:00,hulk.website@gmail.com,2020-03-17 11:04:12+08:00,ADD: rocksdb.disable_auto_compaction option,unstable,True,False,3,config.cc,cc,7,0,7
94ed92ef7f4b4981db8801ff038a223777b97c9f,hulk.website@gmail.com,2020-03-17 11:04:12+08:00,hulk.website@gmail.com,2020-03-17 11:04:12+08:00,ADD: rocksdb.disable_auto_compaction option,unstable,True,False,3,config.h,h,1,0,1
65c48069808a8249e2e358be6d62f90bebcc7e2b,hulk.website@gmail.com,2020-03-17 11:37:24+08:00,hulk.website@gmail.com,2020-03-17 11:37:24+08:00,Bump v1.1.8,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
65c48069808a8249e2e358be6d62f90bebcc7e2b,hulk.website@gmail.com,2020-03-17 11:37:24+08:00,hulk.website@gmail.com,2020-03-17 11:37:24+08:00,Bump v1.1.8,unstable,True,False,2,Changelog,None,3,0,3
5b060d13abf0119b140389902350d83a5b3112cc,karelrooted@gmail.com,2020-03-18 14:50:45+08:00,karelrooted@gmail.com,2020-03-19 15:13:49+08:00,MOD: only generate version when needed,unstable,True,False,13,compact_filter.cc,cc,3,3,6
5b060d13abf0119b140389902350d83a5b3112cc,karelrooted@gmail.com,2020-03-18 14:50:45+08:00,karelrooted@gmail.com,2020-03-19 15:13:49+08:00,MOD: only generate version when needed,unstable,True,False,13,redis_bitmap.cc,cc,3,3,6
5b060d13abf0119b140389902350d83a5b3112cc,karelrooted@gmail.com,2020-03-18 14:50:45+08:00,karelrooted@gmail.com,2020-03-19 15:13:49+08:00,MOD: only generate version when needed,unstable,True,False,13,redis_db.cc,cc,10,10,20
5b060d13abf0119b140389902350d83a5b3112cc,karelrooted@gmail.com,2020-03-18 14:50:45+08:00,karelrooted@gmail.com,2020-03-19 15:13:49+08:00,MOD: only generate version when needed,unstable,True,False,13,redis_hash.cc,cc,5,5,10
5b060d13abf0119b140389902350d83a5b3112cc,karelrooted@gmail.com,2020-03-18 14:50:45+08:00,karelrooted@gmail.com,2020-03-19 15:13:49+08:00,MOD: only generate version when needed,unstable,True,False,13,redis_list.cc,cc,8,8,16
5b060d13abf0119b140389902350d83a5b3112cc,karelrooted@gmail.com,2020-03-18 14:50:45+08:00,karelrooted@gmail.com,2020-03-19 15:13:49+08:00,MOD: only generate version when needed,unstable,True,False,13,redis_metadata.cc,cc,3,3,6
5b060d13abf0119b140389902350d83a5b3112cc,karelrooted@gmail.com,2020-03-18 14:50:45+08:00,karelrooted@gmail.com,2020-03-19 15:13:49+08:00,MOD: only generate version when needed,unstable,True,False,13,redis_metadata.h,h,7,7,14
5b060d13abf0119b140389902350d83a5b3112cc,karelrooted@gmail.com,2020-03-18 14:50:45+08:00,karelrooted@gmail.com,2020-03-19 15:13:49+08:00,MOD: only generate version when needed,unstable,True,False,13,redis_set.cc,cc,5,5,10
5b060d13abf0119b140389902350d83a5b3112cc,karelrooted@gmail.com,2020-03-18 14:50:45+08:00,karelrooted@gmail.com,2020-03-19 15:13:49+08:00,MOD: only generate version when needed,unstable,True,False,13,redis_slot.cc,cc,13,13,26
5b060d13abf0119b140389902350d83a5b3112cc,karelrooted@gmail.com,2020-03-18 14:50:45+08:00,karelrooted@gmail.com,2020-03-19 15:13:49+08:00,MOD: only generate version when needed,unstable,True,False,13,redis_slot.h,h,1,1,2
5b060d13abf0119b140389902350d83a5b3112cc,karelrooted@gmail.com,2020-03-18 14:50:45+08:00,karelrooted@gmail.com,2020-03-19 15:13:49+08:00,MOD: only generate version when needed,unstable,True,False,13,redis_sortedint.cc,cc,3,3,6
5b060d13abf0119b140389902350d83a5b3112cc,karelrooted@gmail.com,2020-03-18 14:50:45+08:00,karelrooted@gmail.com,2020-03-19 15:13:49+08:00,MOD: only generate version when needed,unstable,True,False,13,redis_string.cc,cc,6,6,12
5b060d13abf0119b140389902350d83a5b3112cc,karelrooted@gmail.com,2020-03-18 14:50:45+08:00,karelrooted@gmail.com,2020-03-19 15:13:49+08:00,MOD: only generate version when needed,unstable,True,False,13,redis_zset.cc,cc,8,8,16
ba362e319a401652d5140f1f521df9a001105fea,karelrooted@gmail.com,2020-03-19 16:17:40+08:00,karelrooted@gmail.com,2020-03-19 17:32:35+08:00,MOD: only init version_counter once,unstable,True,False,3,redis_metadata.cc,cc,9,4,13
ba362e319a401652d5140f1f521df9a001105fea,karelrooted@gmail.com,2020-03-19 16:17:40+08:00,karelrooted@gmail.com,2020-03-19 17:32:35+08:00,MOD: only init version_counter once,unstable,True,False,3,redis_metadata.h,h,3,0,3
ba362e319a401652d5140f1f521df9a001105fea,karelrooted@gmail.com,2020-03-19 16:17:40+08:00,karelrooted@gmail.com,2020-03-19 17:32:35+08:00,MOD: only init version_counter once,unstable,True,False,3,storage.cc,cc,1,0,1
3f72a1e889277f8ec860880b38f5e7d0d7014917,karelrooted@gmail.com,2020-03-19 16:46:55+08:00,karelrooted@gmail.com,2020-03-19 17:32:35+08:00,FIX: warning,unstable,True,False,1,config.cc,cc,1,1,2
9f1af447c63760d0ef9410942da9504110ce7c8b,karelrooted@gmail.com,2020-03-19 16:52:30+08:00,karelrooted@gmail.com,2020-03-19 18:50:07+08:00,MOD: GetCFHandles use pointer instead of copy,unstable,True,False,3,compact_filter.cc,cc,6,6,12
9f1af447c63760d0ef9410942da9504110ce7c8b,karelrooted@gmail.com,2020-03-19 16:52:30+08:00,karelrooted@gmail.com,2020-03-19 18:50:07+08:00,MOD: GetCFHandles use pointer instead of copy,unstable,True,False,3,server.cc,cc,1,1,2
9f1af447c63760d0ef9410942da9504110ce7c8b,karelrooted@gmail.com,2020-03-19 16:52:30+08:00,karelrooted@gmail.com,2020-03-19 18:50:07+08:00,MOD: GetCFHandles use pointer instead of copy,unstable,True,False,3,storage.h,h,1,1,2
300a058ab31ab51c0eb697a3f74c9a7b727b3a22,karelrooted@gmail.com,2020-03-19 17:15:47+08:00,karelrooted@gmail.com,2020-03-19 18:50:07+08:00,MOD: code style,unstable,True,False,13,compact_filter.cc,cc,3,3,6
300a058ab31ab51c0eb697a3f74c9a7b727b3a22,karelrooted@gmail.com,2020-03-19 17:15:47+08:00,karelrooted@gmail.com,2020-03-19 18:50:07+08:00,MOD: code style,unstable,True,False,13,redis_bitmap.cc,cc,3,3,6
300a058ab31ab51c0eb697a3f74c9a7b727b3a22,karelrooted@gmail.com,2020-03-19 17:15:47+08:00,karelrooted@gmail.com,2020-03-19 18:50:07+08:00,MOD: code style,unstable,True,False,13,redis_db.cc,cc,10,10,20
300a058ab31ab51c0eb697a3f74c9a7b727b3a22,karelrooted@gmail.com,2020-03-19 17:15:47+08:00,karelrooted@gmail.com,2020-03-19 18:50:07+08:00,MOD: code style,unstable,True,False,13,redis_hash.cc,cc,5,5,10
300a058ab31ab51c0eb697a3f74c9a7b727b3a22,karelrooted@gmail.com,2020-03-19 17:15:47+08:00,karelrooted@gmail.com,2020-03-19 18:50:07+08:00,MOD: code style,unstable,True,False,13,redis_list.cc,cc,8,8,16
300a058ab31ab51c0eb697a3f74c9a7b727b3a22,karelrooted@gmail.com,2020-03-19 17:15:47+08:00,karelrooted@gmail.com,2020-03-19 18:50:07+08:00,MOD: code style,unstable,True,False,13,redis_metadata.cc,cc,3,3,6
300a058ab31ab51c0eb697a3f74c9a7b727b3a22,karelrooted@gmail.com,2020-03-19 17:15:47+08:00,karelrooted@gmail.com,2020-03-19 18:50:07+08:00,MOD: code style,unstable,True,False,13,redis_metadata.h,h,7,7,14
300a058ab31ab51c0eb697a3f74c9a7b727b3a22,karelrooted@gmail.com,2020-03-19 17:15:47+08:00,karelrooted@gmail.com,2020-03-19 18:50:07+08:00,MOD: code style,unstable,True,False,13,redis_set.cc,cc,5,5,10
300a058ab31ab51c0eb697a3f74c9a7b727b3a22,karelrooted@gmail.com,2020-03-19 17:15:47+08:00,karelrooted@gmail.com,2020-03-19 18:50:07+08:00,MOD: code style,unstable,True,False,13,redis_slot.cc,cc,13,13,26
300a058ab31ab51c0eb697a3f74c9a7b727b3a22,karelrooted@gmail.com,2020-03-19 17:15:47+08:00,karelrooted@gmail.com,2020-03-19 18:50:07+08:00,MOD: code style,unstable,True,False,13,redis_slot.h,h,1,1,2
300a058ab31ab51c0eb697a3f74c9a7b727b3a22,karelrooted@gmail.com,2020-03-19 17:15:47+08:00,karelrooted@gmail.com,2020-03-19 18:50:07+08:00,MOD: code style,unstable,True,False,13,redis_sortedint.cc,cc,3,3,6
300a058ab31ab51c0eb697a3f74c9a7b727b3a22,karelrooted@gmail.com,2020-03-19 17:15:47+08:00,karelrooted@gmail.com,2020-03-19 18:50:07+08:00,MOD: code style,unstable,True,False,13,redis_string.cc,cc,6,6,12
300a058ab31ab51c0eb697a3f74c9a7b727b3a22,karelrooted@gmail.com,2020-03-19 17:15:47+08:00,karelrooted@gmail.com,2020-03-19 18:50:07+08:00,MOD: code style,unstable,True,False,13,redis_zset.cc,cc,8,8,16
448aaa6db55ed96d131f9514454b09c415e163ae,karelrooted@gmail.com,2020-03-20 11:15:45+08:00,karelrooted@gmail.com,2020-03-20 11:15:45+08:00,Bump v1.1.9,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
448aaa6db55ed96d131f9514454b09c415e163ae,karelrooted@gmail.com,2020-03-20 11:15:45+08:00,karelrooted@gmail.com,2020-03-20 11:15:45+08:00,Bump v1.1.9,unstable,True,False,2,Changelog,None,5,0,5
b3a3dac8c5d96a802f04ea4487025692f4e66aa0,hulk.website@gmail.com,2020-03-20 16:42:46+08:00,hulk.website@gmail.com,2020-03-20 16:42:57+08:00,MOD: change the default WAL expire time as 1 hour and max keep was 100 Gb,unstable,True,False,1,kvrocks.conf,conf,4,4,8
a11be53ba7b540130d11bb57c4f2d72a72b09983,hulk.website@gmail.com,2020-03-20 16:50:26+08:00,hulk.website@gmail.com,2020-03-20 16:50:26+08:00,MOD: improve the num of rocksdb backgroup threads,unstable,True,False,1,kvrocks.conf,conf,4,4,8
de6eef48886d38346001b00023451a71dae64b56,linty@meitu.com,2020-03-23 13:02:00+08:00,hulk.website@gmail.com,2020-03-23 14:12:25+08:00,Bump v1.1.10,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
de6eef48886d38346001b00023451a71dae64b56,linty@meitu.com,2020-03-23 13:02:00+08:00,hulk.website@gmail.com,2020-03-23 14:12:25+08:00,Bump v1.1.10,unstable,True,False,2,Changelog,None,10,5,15
7ff971936d3363c5946c7425be750a00f38f390f,karelrooted@gmail.com,2020-03-23 14:55:16+08:00,karelrooted@gmail.com,2020-03-23 14:55:16+08:00,FIX: Publish and FreeConnectionByID deadlock,unstable,True,False,1,server.cc,cc,11,9,20
445ead22a074e2016a4f7807690bc6c03b3ae1df,hulk.website@gmail.com,2020-04-08 19:11:04+08:00,hulk.website@gmail.com,2020-04-09 10:07:59+08:00,Refactor the string,unstable,True,False,4,redis_string.cc,cc,108,81,189
445ead22a074e2016a4f7807690bc6c03b3ae1df,hulk.website@gmail.com,2020-04-08 19:11:04+08:00,hulk.website@gmail.com,2020-04-09 10:07:59+08:00,Refactor the string,unstable,True,False,4,redis_string.h,h,13,12,25
445ead22a074e2016a4f7807690bc6c03b3ae1df,hulk.website@gmail.com,2020-04-08 19:11:04+08:00,hulk.website@gmail.com,2020-04-09 10:07:59+08:00,Refactor the string,unstable,True,False,4,t_string_test.cc,cc,5,6,11
445ead22a074e2016a4f7807690bc6c03b3ae1df,hulk.website@gmail.com,2020-04-08 19:11:04+08:00,hulk.website@gmail.com,2020-04-09 10:07:59+08:00,Refactor the string,unstable,True,False,4,test_base.h,h,1,1,2
273942d58c83e9a551ba5813798ff8efc21f0ce2,hulk.website@gmail.com,2020-04-09 10:36:37+08:00,hulk.website@gmail.com,2020-04-09 10:36:37+08:00,MOD: set the default expire to 0,unstable,True,False,1,redis_metadata.cc,cc,2,2,4
e206a1d1566edeed2a8cf70163248ed10340052a,hulk.website@gmail.com,2020-04-09 10:54:27+08:00,hulk.website@gmail.com,2020-04-09 11:31:10+08:00,ADD: incrbyfloat test case,unstable,True,False,2,key_test.py,py,12,12,24
e206a1d1566edeed2a8cf70163248ed10340052a,hulk.website@gmail.com,2020-04-09 10:54:27+08:00,hulk.website@gmail.com,2020-04-09 11:31:10+08:00,ADD: incrbyfloat test case,unstable,True,False,2,t_string_test.cc,cc,37,3,40
4cf93f8c2848eb1aff2fca3d202ec5a1ab69e208,hulk.website@gmail.com,2020-04-09 13:19:01+08:00,karelrooted@gmail.com,2020-04-09 14:06:08+08:00,FIX: config rocksdb.disable_auto_compactions didn't work in config file,unstable,True,False,1,storage.cc,cc,4,0,4
676b79a161f17b744acd83c6bce6b4f2705685f6,hulk.website@gmail.com,2020-04-09 14:08:18+08:00,hulk.website@gmail.com,2020-04-09 14:08:26+08:00,"MOD: turn the rocksdb.cache_index_and_filter_blocks default value to
'yes'",unstable,True,False,1,kvrocks.conf,conf,1,1,2
af9873f8a4cf585cbde26e6e09f1e9643593c576,karelrooted@gmail.com,2020-04-09 14:18:04+08:00,karelrooted@gmail.com,2020-04-09 14:18:04+08:00,Bump v1.1.11,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
af9873f8a4cf585cbde26e6e09f1e9643593c576,karelrooted@gmail.com,2020-04-09 14:18:04+08:00,karelrooted@gmail.com,2020-04-09 14:18:04+08:00,Bump v1.1.11,unstable,True,False,2,Changelog,None,8,0,8
a36c2f34590e7739b9e2bf4bb168abf07865bdc3,hulk.website@gmail.com,2020-04-10 13:15:02+08:00,hulk.website@gmail.com,2020-04-10 13:16:09+08:00,MOD: migrate kvrocks from meitu to bitleak group,unstable,True,False,1,README.md,md,8,8,16
4e71f2aef260e5b75ffbbb700f6ff34d6aaff447,karelrooted@gmail.com,2020-04-01 18:20:59+08:00,hulk.website@gmail.com,2020-04-10 19:22:40+08:00,ADD: geo command,unstable,True,False,9,CMakeLists.txt,txt,10,0,10
4e71f2aef260e5b75ffbbb700f6ff34d6aaff447,karelrooted@gmail.com,2020-04-01 18:20:59+08:00,hulk.website@gmail.com,2020-04-10 19:22:40+08:00,ADD: geo command,unstable,True,False,9,Makefile,None,2,2,4
4e71f2aef260e5b75ffbbb700f6ff34d6aaff447,karelrooted@gmail.com,2020-04-01 18:20:59+08:00,hulk.website@gmail.com,2020-04-10 19:22:40+08:00,ADD: geo command,unstable,True,False,9,geohash.cc,cc,504,0,504
4e71f2aef260e5b75ffbbb700f6ff34d6aaff447,karelrooted@gmail.com,2020-04-01 18:20:59+08:00,hulk.website@gmail.com,2020-04-10 19:22:40+08:00,ADD: geo command,unstable,True,False,9,geohash.h,h,150,0,150
4e71f2aef260e5b75ffbbb700f6ff34d6aaff447,karelrooted@gmail.com,2020-04-01 18:20:59+08:00,hulk.website@gmail.com,2020-04-10 19:22:40+08:00,ADD: geo command,unstable,True,False,9,redis_cmd.cc,cc,388,0,388
4e71f2aef260e5b75ffbbb700f6ff34d6aaff447,karelrooted@gmail.com,2020-04-01 18:20:59+08:00,hulk.website@gmail.com,2020-04-10 19:22:40+08:00,ADD: geo command,unstable,True,False,9,redis_geo.cc,cc,377,0,377
4e71f2aef260e5b75ffbbb700f6ff34d6aaff447,karelrooted@gmail.com,2020-04-01 18:20:59+08:00,hulk.website@gmail.com,2020-04-10 19:22:40+08:00,ADD: geo command,unstable,True,False,9,redis_geo.h,h,109,0,109
4e71f2aef260e5b75ffbbb700f6ff34d6aaff447,karelrooted@gmail.com,2020-04-01 18:20:59+08:00,hulk.website@gmail.com,2020-04-10 19:22:40+08:00,ADD: geo command,unstable,True,False,9,redis_zset.cc,cc,29,0,29
4e71f2aef260e5b75ffbbb700f6ff34d6aaff447,karelrooted@gmail.com,2020-04-01 18:20:59+08:00,hulk.website@gmail.com,2020-04-10 19:22:40+08:00,ADD: geo command,unstable,True,False,9,redis_zset.h,h,5,1,6
aaf38cbeb73db4dbc17cd63716d8af3028e8a987,karelrooted@gmail.com,2020-04-09 17:21:19+08:00,hulk.website@gmail.com,2020-04-10 19:22:40+08:00,"FIX: truncate max/min longitude,latitude related geo_point (ex:  {180, 85.05112878} )",unstable,True,False,1,geohash.cc,cc,4,0,4
4e479fd91ab31d6d6c8fce02296acd6e5f651b15,karelrooted@gmail.com,2020-04-07 18:46:00+08:00,hulk.website@gmail.com,2020-04-10 19:22:40+08:00,TST: add geo testcase,unstable,True,False,4,CMakeLists.txt,txt,1,0,1
4e479fd91ab31d6d6c8fce02296acd6e5f651b15,karelrooted@gmail.com,2020-04-07 18:46:00+08:00,hulk.website@gmail.com,2020-04-10 19:22:40+08:00,TST: add geo testcase,unstable,True,False,4,Makefile,None,2,1,3
4e479fd91ab31d6d6c8fce02296acd6e5f651b15,karelrooted@gmail.com,2020-04-07 18:46:00+08:00,hulk.website@gmail.com,2020-04-10 19:22:40+08:00,TST: add geo testcase,unstable,True,False,4,geo_test.py,py,107,0,107
4e479fd91ab31d6d6c8fce02296acd6e5f651b15,karelrooted@gmail.com,2020-04-07 18:46:00+08:00,hulk.website@gmail.com,2020-04-10 19:22:40+08:00,TST: add geo testcase,unstable,True,False,4,t_geo_test.cc,cc,140,0,140
58cc4d056af511dc2fa1e75e417b155e63c38d45,karelrooted@gmail.com,2020-04-08 14:48:12+08:00,hulk.website@gmail.com,2020-04-10 19:22:40+08:00,DOC: support geo command,unstable,True,False,1,support-commands.md,md,8,1,9
220a5fa61b22e4c4e3069811d784fda81b2e42a2,karelrooted@gmail.com,2020-04-09 18:08:43+08:00,hulk.website@gmail.com,2020-04-10 19:22:40+08:00,FIX: warning,unstable,True,False,1,redis_string.cc,cc,1,1,2
663100e34e0f56ff8511d823ff841c8e84c2925d,hulk.website@gmail.com,2020-04-10 19:48:24+08:00,hulk.website@gmail.com,2020-04-10 20:02:43+08:00,FIX: lint error,unstable,True,False,12,Makefile,None,6,6,12
663100e34e0f56ff8511d823ff841c8e84c2925d,hulk.website@gmail.com,2020-04-10 19:48:24+08:00,hulk.website@gmail.com,2020-04-10 20:02:43+08:00,FIX: lint error,unstable,True,False,12,geohash.cc,cc,12,12,24
663100e34e0f56ff8511d823ff841c8e84c2925d,hulk.website@gmail.com,2020-04-10 19:48:24+08:00,hulk.website@gmail.com,2020-04-10 20:02:43+08:00,FIX: lint error,unstable,True,False,12,geohash.h,h,6,12,18
663100e34e0f56ff8511d823ff841c8e84c2925d,hulk.website@gmail.com,2020-04-10 19:48:24+08:00,hulk.website@gmail.com,2020-04-10 20:02:43+08:00,FIX: lint error,unstable,True,False,12,redis_cmd.cc,cc,3,3,6
663100e34e0f56ff8511d823ff841c8e84c2925d,hulk.website@gmail.com,2020-04-10 19:48:24+08:00,hulk.website@gmail.com,2020-04-10 20:02:43+08:00,FIX: lint error,unstable,True,False,12,redis_geo.cc,cc,2,2,4
663100e34e0f56ff8511d823ff841c8e84c2925d,hulk.website@gmail.com,2020-04-10 19:48:24+08:00,hulk.website@gmail.com,2020-04-10 20:02:43+08:00,FIX: lint error,unstable,True,False,12,redis_geo.h,h,1,0,1
663100e34e0f56ff8511d823ff841c8e84c2925d,hulk.website@gmail.com,2020-04-10 19:48:24+08:00,hulk.website@gmail.com,2020-04-10 20:02:43+08:00,FIX: lint error,unstable,True,False,12,redis_metadata.h,h,7,7,14
663100e34e0f56ff8511d823ff841c8e84c2925d,hulk.website@gmail.com,2020-04-10 19:48:24+08:00,hulk.website@gmail.com,2020-04-10 20:02:43+08:00,FIX: lint error,unstable,True,False,12,redis_slot.h,h,1,1,2
663100e34e0f56ff8511d823ff841c8e84c2925d,hulk.website@gmail.com,2020-04-10 19:48:24+08:00,hulk.website@gmail.com,2020-04-10 20:02:43+08:00,FIX: lint error,unstable,True,False,12,redis_string.cc,cc,1,0,1
663100e34e0f56ff8511d823ff841c8e84c2925d,hulk.website@gmail.com,2020-04-10 19:48:24+08:00,hulk.website@gmail.com,2020-04-10 20:02:43+08:00,FIX: lint error,unstable,True,False,12,redis_zset.h,h,1,0,1
663100e34e0f56ff8511d823ff841c8e84c2925d,hulk.website@gmail.com,2020-04-10 19:48:24+08:00,hulk.website@gmail.com,2020-04-10 20:02:43+08:00,FIX: lint error,unstable,True,False,12,server.cc,cc,7,9,16
663100e34e0f56ff8511d823ff841c8e84c2925d,hulk.website@gmail.com,2020-04-10 19:48:24+08:00,hulk.website@gmail.com,2020-04-10 20:02:43+08:00,FIX: lint error,unstable,True,False,12,server.h,h,1,2,3
397107854cfe2f49edebaad77019b03b6d358287,hulk.website@gmail.com,2020-04-13 15:20:23+08:00,karelrooted@gmail.com,2020-04-13 17:37:15+08:00,MOD: refactor the parse of the set command,unstable,True,False,1,redis_cmd.cc,cc,18,16,34
d2f3f52470d28f82009051bfd1fcc94962744cf8,hulk.website@gmail.com,2020-04-13 15:32:39+08:00,karelrooted@gmail.com,2020-04-13 17:37:15+08:00,MOD: make the const literal error string to const variable,unstable,True,False,1,redis_cmd.cc,cc,78,75,153
6431f92607449f1732c22cf503ec3ea5cba8e1d0,hulk.website@gmail.com,2020-04-14 17:00:02+08:00,hulk.website@gmail.com,2020-04-14 17:00:13+08:00,ADD: who use kvrocks,unstable,True,False,1,README.md,md,10,0,10
945f84bb4a3c3c0aad66aa64718709e441ff598d,hulk.website@gmail.com,2020-04-14 17:12:57+08:00,hulk.website@gmail.com,2020-04-14 17:12:57+08:00,MOD: simplify the code,unstable,True,False,1,compact_filter.cc,cc,6,6,12
c36c75f6c4d75b6d89b81ad8ee446daf035aa097,hulk.website@gmail.com,2020-04-14 18:34:17+08:00,karelrooted@gmail.com,2020-04-15 10:22:20+08:00,MOD: refactor the command table with macro,unstable,True,False,1,redis_cmd.cc,cc,178,648,826
f1e9542143d9870aefd755b269e78e60fe6e13bb,karelrooted@gmail.com,2020-04-15 12:01:18+08:00,noreply@github.com,2020-04-15 12:01:18+08:00,"Fix/hscan and zscan should return field value (#75)

* FIX: zscan and hscan should return value too

* TST: zscan and hscan should return value too",unstable,True,False,7,redis_cmd.cc,cc,30,6,36
f1e9542143d9870aefd755b269e78e60fe6e13bb,karelrooted@gmail.com,2020-04-15 12:01:18+08:00,noreply@github.com,2020-04-15 12:01:18+08:00,"Fix/hscan and zscan should return field value (#75)

* FIX: zscan and hscan should return value too

* TST: zscan and hscan should return value too",unstable,True,False,7,redis_hash.cc,cc,6,5,11
f1e9542143d9870aefd755b269e78e60fe6e13bb,karelrooted@gmail.com,2020-04-15 12:01:18+08:00,noreply@github.com,2020-04-15 12:01:18+08:00,"Fix/hscan and zscan should return field value (#75)

* FIX: zscan and hscan should return value too

* TST: zscan and hscan should return value too",unstable,True,False,7,redis_hash.h,h,2,1,3
f1e9542143d9870aefd755b269e78e60fe6e13bb,karelrooted@gmail.com,2020-04-15 12:01:18+08:00,noreply@github.com,2020-04-15 12:01:18+08:00,"Fix/hscan and zscan should return field value (#75)

* FIX: zscan and hscan should return value too

* TST: zscan and hscan should return value too",unstable,True,False,7,redis_zset.cc,cc,16,4,20
f1e9542143d9870aefd755b269e78e60fe6e13bb,karelrooted@gmail.com,2020-04-15 12:01:18+08:00,noreply@github.com,2020-04-15 12:01:18+08:00,"Fix/hscan and zscan should return field value (#75)

* FIX: zscan and hscan should return value too

* TST: zscan and hscan should return value too",unstable,True,False,7,redis_zset.h,h,2,1,3
f1e9542143d9870aefd755b269e78e60fe6e13bb,karelrooted@gmail.com,2020-04-15 12:01:18+08:00,noreply@github.com,2020-04-15 12:01:18+08:00,"Fix/hscan and zscan should return field value (#75)

* FIX: zscan and hscan should return value too

* TST: zscan and hscan should return value too",unstable,True,False,7,hash_test.py,py,1,1,2
f1e9542143d9870aefd755b269e78e60fe6e13bb,karelrooted@gmail.com,2020-04-15 12:01:18+08:00,noreply@github.com,2020-04-15 12:01:18+08:00,"Fix/hscan and zscan should return field value (#75)

* FIX: zscan and hscan should return value too

* TST: zscan and hscan should return value too",unstable,True,False,7,zset_test.py,py,1,1,2
d72c632b101238743c1394b8c792cda24d597949,karelrooted@gmail.com,2020-04-15 14:15:15+08:00,karelrooted@gmail.com,2020-04-15 14:15:15+08:00,Bump v1.1.12,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
d72c632b101238743c1394b8c792cda24d597949,karelrooted@gmail.com,2020-04-15 14:15:15+08:00,karelrooted@gmail.com,2020-04-15 14:15:15+08:00,Bump v1.1.12,unstable,True,False,2,Changelog,None,7,0,7
f8132c71fe7bd3ad683fb0fedf9b22f7ffa3ea83,hulk.website@gmail.com,2020-04-15 15:23:42+08:00,hulk.website@gmail.com,2020-04-15 15:23:47+08:00,MOD: update trip.com icon,unstable,True,False,1,README.md,md,1,1,2
35f0f5ccbdde0c4b161f8ace185201571bc8b160,karelrooted@gmail.com,2020-04-15 15:33:48+08:00,hulk.website@gmail.com,2020-04-15 16:37:52+08:00,FIX: warning,unstable,True,False,1,redis_cmd.cc,cc,2,2,4
10cddf7d7553da21b37699ba634b3e9f8251c2b8,karelrooted@gmail.com,2020-04-15 15:33:56+08:00,hulk.website@gmail.com,2020-04-15 16:37:52+08:00,MOD: typo,unstable,True,False,1,redis_zset.cc,cc,1,1,2
2b9fa448b0068ad04498d2c0f24cd2660ac9c455,hulk.website@gmail.com,2020-04-16 18:27:42+08:00,karelrooted@gmail.com,2020-04-17 10:09:41+08:00,ADD: license icon,unstable,True,False,1,README.md,md,1,1,2
4d3b52a3ff5969bc377014a38bbf3a4f4ff74f63,hulk.website@gmail.com,2020-04-17 16:17:21+08:00,hulk.website@gmail.com,2020-04-17 16:32:49+08:00,ADD: kvrocks's logo,unstable,True,False,2,README.md,md,4,0,4
4d3b52a3ff5969bc377014a38bbf3a4f4ff74f63,hulk.website@gmail.com,2020-04-17 16:17:21+08:00,hulk.website@gmail.com,2020-04-17 16:32:49+08:00,ADD: kvrocks's logo,unstable,True,False,2,kvrocks_logo.png,png,0,0,0
db36ab150b8191776dd083901bc1426798275e69,karelrooted@gmail.com,2020-04-26 17:42:13+08:00,hulk.website@gmail.com,2020-04-26 18:30:18+08:00,FIX: check sequence continuity before feed data to slave,unstable,True,False,1,replication.cc,cc,5,5,10
ba3d9ad7cb0cba17bed89b4d50f32652dc4b1dbd,karelrooted@gmail.com,2020-04-27 11:17:53+08:00,karelrooted@gmail.com,2020-04-27 11:17:53+08:00,Bump v1.1.13,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
ba3d9ad7cb0cba17bed89b4d50f32652dc4b1dbd,karelrooted@gmail.com,2020-04-27 11:17:53+08:00,karelrooted@gmail.com,2020-04-27 11:17:53+08:00,Bump v1.1.13,unstable,True,False,2,Changelog,None,5,0,5
46994b2496fb439f5745f6b68d2d57d8beafdc59,karelrooted@gmail.com,2020-04-29 15:14:48+08:00,hulk.website@gmail.com,2020-04-30 14:09:37+08:00,"FIX: if fullsync and restorefrombackup failed, we should keep retry fullsync, stop any other action, any use of db or cf_handler pointer will cause core dump",unstable,True,False,5,replication.cc,cc,1,2,3
46994b2496fb439f5745f6b68d2d57d8beafdc59,karelrooted@gmail.com,2020-04-29 15:14:48+08:00,hulk.website@gmail.com,2020-04-30 14:09:37+08:00,"FIX: if fullsync and restorefrombackup failed, we should keep retry fullsync, stop any other action, any use of db or cf_handler pointer will cause core dump",unstable,True,False,5,server.cc,cc,6,3,9
46994b2496fb439f5745f6b68d2d57d8beafdc59,karelrooted@gmail.com,2020-04-29 15:14:48+08:00,hulk.website@gmail.com,2020-04-30 14:09:37+08:00,"FIX: if fullsync and restorefrombackup failed, we should keep retry fullsync, stop any other action, any use of db or cf_handler pointer will cause core dump",unstable,True,False,5,storage.cc,cc,1,1,2
46994b2496fb439f5745f6b68d2d57d8beafdc59,karelrooted@gmail.com,2020-04-29 15:14:48+08:00,hulk.website@gmail.com,2020-04-30 14:09:37+08:00,"FIX: if fullsync and restorefrombackup failed, we should keep retry fullsync, stop any other action, any use of db or cf_handler pointer will cause core dump",unstable,True,False,5,task_runner.cc,cc,1,2,3
46994b2496fb439f5745f6b68d2d57d8beafdc59,karelrooted@gmail.com,2020-04-29 15:14:48+08:00,hulk.website@gmail.com,2020-04-30 14:09:37+08:00,"FIX: if fullsync and restorefrombackup failed, we should keep retry fullsync, stop any other action, any use of db or cf_handler pointer will cause core dump",unstable,True,False,5,task_runner.h,h,1,1,2
e4ca869c5124e9af5da198cf6e1b921a6cb7fa99,karelrooted@gmail.com,2020-04-30 10:40:40+08:00,hulk.website@gmail.com,2020-04-30 14:09:37+08:00,MOD: code style,unstable,True,False,3,server.cc,cc,3,1,4
e4ca869c5124e9af5da198cf6e1b921a6cb7fa99,karelrooted@gmail.com,2020-04-30 10:40:40+08:00,hulk.website@gmail.com,2020-04-30 14:09:37+08:00,MOD: code style,unstable,True,False,3,task_runner.cc,cc,8,10,18
e4ca869c5124e9af5da198cf6e1b921a6cb7fa99,karelrooted@gmail.com,2020-04-30 10:40:40+08:00,hulk.website@gmail.com,2020-04-30 14:09:37+08:00,MOD: code style,unstable,True,False,3,task_runner.h,h,1,1,2
becddaa30087aae69b59b05ada3b27ddf9279dd2,karelrooted@gmail.com,2020-04-30 14:20:33+08:00,karelrooted@gmail.com,2020-04-30 14:20:33+08:00,Bump v1.1.14,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
becddaa30087aae69b59b05ada3b27ddf9279dd2,karelrooted@gmail.com,2020-04-30 14:20:33+08:00,karelrooted@gmail.com,2020-04-30 14:20:33+08:00,Bump v1.1.14,unstable,True,False,2,Changelog,None,3,0,3
1a9cf2dc2aec3a496a2edbc68b126fd0f81f444d,hulk.website@gmail.com,2020-05-04 17:02:01+08:00,noreply@github.com,2020-05-04 17:02:01+08:00,"Update README.md

DOC: add using kvrocks description",unstable,True,False,1,README.md,md,2,0,2
f2aff9ed59bff29d2a21d5b19150311fc3de9f16,karelrooted@gmail.com,2020-05-06 18:13:09+08:00,hulk.website@gmail.com,2020-05-06 20:07:28+08:00,ADD: kvrocksrestore tool (restore backup_dir to db_dir),unstable,True,False,3,CMakeLists.txt,txt,24,0,24
f2aff9ed59bff29d2a21d5b19150311fc3de9f16,karelrooted@gmail.com,2020-05-06 18:13:09+08:00,hulk.website@gmail.com,2020-05-06 20:07:28+08:00,ADD: kvrocksrestore tool (restore backup_dir to db_dir),unstable,True,False,3,Makefile,None,8,1,9
f2aff9ed59bff29d2a21d5b19150311fc3de9f16,karelrooted@gmail.com,2020-05-06 18:13:09+08:00,hulk.website@gmail.com,2020-05-06 20:07:28+08:00,ADD: kvrocksrestore tool (restore backup_dir to db_dir),unstable,True,False,3,main.cc,cc,187,0,187
ad92680d2fd357b3ae778ee6fae573025e451c3c,karelrooted@gmail.com,2020-05-07 10:39:25+08:00,karelrooted@gmail.com,2020-05-07 10:39:25+08:00,Bump v1.1.15,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
ad92680d2fd357b3ae778ee6fae573025e451c3c,karelrooted@gmail.com,2020-05-07 10:39:25+08:00,karelrooted@gmail.com,2020-05-07 10:39:25+08:00,Bump v1.1.15,unstable,True,False,2,Changelog,None,3,0,3
5775933a9fc8a3d2335e3de5fa60a4760456733d,karelrooted@gmail.com,2020-05-07 20:53:59+08:00,hulk.website@gmail.com,2020-05-07 23:03:50+08:00,FIX: create backup and purge old backups at the same time may cause crash (ex: when config.max-backup-to-keep is 0 ),unstable,True,False,3,server.cc,cc,12,1,13
5775933a9fc8a3d2335e3de5fa60a4760456733d,karelrooted@gmail.com,2020-05-07 20:53:59+08:00,hulk.website@gmail.com,2020-05-07 23:03:50+08:00,FIX: create backup and purge old backups at the same time may cause crash (ex: when config.max-backup-to-keep is 0 ),unstable,True,False,3,server.h,h,1,0,1
5775933a9fc8a3d2335e3de5fa60a4760456733d,karelrooted@gmail.com,2020-05-07 20:53:59+08:00,hulk.website@gmail.com,2020-05-07 23:03:50+08:00,FIX: create backup and purge old backups at the same time may cause crash (ex: when config.max-backup-to-keep is 0 ),unstable,True,False,3,storage.cc,cc,7,1,8
9b07cf3a74fbaffb7ddfef9377c688532ff2d59b,karelrooted@gmail.com,2020-05-08 11:37:34+08:00,karelrooted@gmail.com,2020-05-08 11:37:34+08:00,Bump v1.1.16,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
9b07cf3a74fbaffb7ddfef9377c688532ff2d59b,karelrooted@gmail.com,2020-05-08 11:37:34+08:00,karelrooted@gmail.com,2020-05-08 11:37:34+08:00,Bump v1.1.16,unstable,True,False,2,Changelog,None,3,0,3
55b6e24033cbbce43a6a70edacf1a4595eb0808c,karelrooted@gmail.com,2020-05-08 20:23:05+08:00,hulk.website@gmail.com,2020-05-09 09:59:30+08:00,MOD: use new cmake recommend way to add -pthread flag,unstable,True,False,1,CMakeLists.txt,txt,1,3,4
8c685b529ebb15727fcb51b1a13881b3bcd37591,karelrooted@gmail.com,2020-05-08 20:23:52+08:00,hulk.website@gmail.com,2020-05-09 09:59:30+08:00,MOD: add missing glog dependency,unstable,True,False,1,CMakeLists.txt,txt,1,1,2
26c2008676c2c7cd06c0071d5cb00efa76d46ff4,karelrooted@gmail.com,2020-05-18 15:54:53+08:00,hulk.website@gmail.com,2020-05-18 16:20:16+08:00,"FIX: when expired, should clear raw_value",unstable,True,False,1,redis_string.cc,cc,1,0,1
6fbcfd387e672ca02937f304ad01d5f279d9555f,karelrooted@gmail.com,2020-05-18 16:21:48+08:00,karelrooted@gmail.com,2020-05-18 16:21:48+08:00,Bump v1.1.17,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
6fbcfd387e672ca02937f304ad01d5f279d9555f,karelrooted@gmail.com,2020-05-18 16:21:48+08:00,karelrooted@gmail.com,2020-05-18 16:21:48+08:00,Bump v1.1.17,unstable,True,False,2,Changelog,None,3,0,3
f163d074bcfc5691fb2a959a7e7627a641867839,karelrooted@gmail.com,2020-05-19 15:18:20+08:00,hulk.website@gmail.com,2020-05-19 15:24:00+08:00,FIX: add missing bitmap and sortedint typeName,unstable,True,False,1,redis_metadata.h,h,1,1,2
11465e4295f736b378f28b4c98e4177dae8e0aa9,karelrooted@gmail.com,2020-05-20 11:44:45+08:00,hulk.website@gmail.com,2020-05-20 11:52:26+08:00,FIX: ignore case in namespace sub_command,unstable,True,False,1,redis_cmd.cc,cc,5,4,9
c61b9bec049c02c7a3f19f4d78b04d226806a9c3,karelrooted@gmail.com,2020-05-19 16:35:44+08:00,hulk.website@gmail.com,2020-05-20 11:52:26+08:00,"TST: add bitmap, sortedint type cmd testcase",unstable,True,False,1,key_test.py,py,11,1,12
f0c8d3077d0e5b65c420b05ff68476dcea7bd562,karelrooted@gmail.com,2020-05-20 17:52:34+08:00,karelrooted@gmail.com,2020-05-20 17:52:34+08:00,FIX: git submodule init should be at toplevel of the working tree,unstable,True,False,2,Makefile,None,1,0,1
f0c8d3077d0e5b65c420b05ff68476dcea7bd562,karelrooted@gmail.com,2020-05-20 17:52:34+08:00,karelrooted@gmail.com,2020-05-20 17:52:34+08:00,FIX: git submodule init should be at toplevel of the working tree,unstable,True,False,2,Makefile,None,1,9,10
d2447941c964dd395429c8b053063a4b8f92eab3,karelrooted@gmail.com,2020-05-27 18:35:42+08:00,hulk.website@gmail.com,2020-05-27 19:08:33+08:00,"MOD: should return empty list when hscan,zscan,sscan is empty
MOD: return cursor ""0"" when there is no more key left",unstable,True,False,1,redis_cmd.cc,cc,7,4,11
d7dda303080af23e4d8269a1d637f47ef9a4e333,karelrooted@gmail.com,2020-05-27 18:50:04+08:00,hulk.website@gmail.com,2020-05-27 19:08:33+08:00,"TST: add scan,hscan,zscan,sscan empty list testcase",unstable,True,False,4,hash_test.py,py,3,1,4
d7dda303080af23e4d8269a1d637f47ef9a4e333,karelrooted@gmail.com,2020-05-27 18:50:04+08:00,hulk.website@gmail.com,2020-05-27 19:08:33+08:00,"TST: add scan,hscan,zscan,sscan empty list testcase",unstable,True,False,4,key_test.py,py,5,2,7
d7dda303080af23e4d8269a1d637f47ef9a4e333,karelrooted@gmail.com,2020-05-27 18:50:04+08:00,hulk.website@gmail.com,2020-05-27 19:08:33+08:00,"TST: add scan,hscan,zscan,sscan empty list testcase",unstable,True,False,4,set_test.py,py,3,1,4
d7dda303080af23e4d8269a1d637f47ef9a4e333,karelrooted@gmail.com,2020-05-27 18:50:04+08:00,hulk.website@gmail.com,2020-05-27 19:08:33+08:00,"TST: add scan,hscan,zscan,sscan empty list testcase",unstable,True,False,4,zset_test.py,py,3,1,4
c475e58c90c885040ff1903e93b5d0a712a62a12,karelrooted@gmail.com,2020-05-27 18:58:32+08:00,hulk.website@gmail.com,2020-05-27 19:08:33+08:00,TST: code style,unstable,True,False,4,hash_test.py,py,4,2,6
c475e58c90c885040ff1903e93b5d0a712a62a12,karelrooted@gmail.com,2020-05-27 18:58:32+08:00,hulk.website@gmail.com,2020-05-27 19:08:33+08:00,TST: code style,unstable,True,False,4,key_test.py,py,6,3,9
c475e58c90c885040ff1903e93b5d0a712a62a12,karelrooted@gmail.com,2020-05-27 18:58:32+08:00,hulk.website@gmail.com,2020-05-27 19:08:33+08:00,TST: code style,unstable,True,False,4,set_test.py,py,4,2,6
c475e58c90c885040ff1903e93b5d0a712a62a12,karelrooted@gmail.com,2020-05-27 18:58:32+08:00,hulk.website@gmail.com,2020-05-27 19:08:33+08:00,TST: code style,unstable,True,False,4,zset_test.py,py,4,2,6
ca3ffec49ac6938310b6c50d9f155ff85cc53574,karelrooted@gmail.com,2020-05-27 22:33:53+08:00,noreply@github.com,2020-05-27 22:33:53+08:00,"Fix/testcase (#91)

* TST: fix codis slotsscan testcase (cursor is ""0"" when there has no key left)

* TST: add more scan,hscan,zscan,sscan testcase",unstable,True,False,5,codis_test.py,py,5,2,7
ca3ffec49ac6938310b6c50d9f155ff85cc53574,karelrooted@gmail.com,2020-05-27 22:33:53+08:00,noreply@github.com,2020-05-27 22:33:53+08:00,"Fix/testcase (#91)

* TST: fix codis slotsscan testcase (cursor is ""0"" when there has no key left)

* TST: add more scan,hscan,zscan,sscan testcase",unstable,True,False,5,hash_test.py,py,15,5,20
ca3ffec49ac6938310b6c50d9f155ff85cc53574,karelrooted@gmail.com,2020-05-27 22:33:53+08:00,noreply@github.com,2020-05-27 22:33:53+08:00,"Fix/testcase (#91)

* TST: fix codis slotsscan testcase (cursor is ""0"" when there has no key left)

* TST: add more scan,hscan,zscan,sscan testcase",unstable,True,False,5,key_test.py,py,18,8,26
ca3ffec49ac6938310b6c50d9f155ff85cc53574,karelrooted@gmail.com,2020-05-27 22:33:53+08:00,noreply@github.com,2020-05-27 22:33:53+08:00,"Fix/testcase (#91)

* TST: fix codis slotsscan testcase (cursor is ""0"" when there has no key left)

* TST: add more scan,hscan,zscan,sscan testcase",unstable,True,False,5,set_test.py,py,13,4,17
ca3ffec49ac6938310b6c50d9f155ff85cc53574,karelrooted@gmail.com,2020-05-27 22:33:53+08:00,noreply@github.com,2020-05-27 22:33:53+08:00,"Fix/testcase (#91)

* TST: fix codis slotsscan testcase (cursor is ""0"" when there has no key left)

* TST: add more scan,hscan,zscan,sscan testcase",unstable,True,False,5,zset_test.py,py,14,5,19
c0979b1b13839d425d6e9bd831a65ead79835866,karelrooted@gmail.com,2020-05-28 20:57:22+08:00,karelrooted@gmail.com,2020-05-28 20:57:22+08:00,Bump v1.1.18,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
c0979b1b13839d425d6e9bd831a65ead79835866,karelrooted@gmail.com,2020-05-28 20:57:22+08:00,karelrooted@gmail.com,2020-05-28 20:57:22+08:00,Bump v1.1.18,unstable,True,False,2,Changelog,None,7,0,7
62a4172d8779637dda9b115e7743114975e66032,hulk.website@gmail.com,2020-06-01 22:43:19+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: missing blocking key in response,unstable,True,False,2,redis_cmd.cc,cc,3,2,5
62a4172d8779637dda9b115e7743114975e66032,hulk.website@gmail.com,2020-06-01 22:43:19+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: missing blocking key in response,unstable,True,False,2,list_test.py,py,2,2,4
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,compact_filter.cc,cc,1,2,3
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,compact_filter.h,h,4,2,6
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,config.cc,cc,2,3,5
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,config.h,h,2,2,4
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,encoding.h,h,1,1,2
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,lock_manager.h,h,2,2,4
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,main.cc,cc,3,5,8
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,redis_cmd.cc,cc,1,1,2
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,redis_cmd.h,h,5,6,11
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,redis_connection.h,h,2,1,3
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,redis_db.cc,cc,1,4,5
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,redis_hash.cc,cc,1,1,2
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,redis_hash.h,h,2,1,3
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,redis_list.cc,cc,1,1,2
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,redis_metadata.cc,cc,1,1,2
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,redis_metadata.h,h,2,2,4
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,redis_reply.h,h,1,1,2
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,redis_request.cc,cc,2,3,5
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,redis_request.h,h,1,1,2
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,redis_slot.cc,cc,2,3,5
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,redis_slot.h,h,3,5,8
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,replication.cc,cc,4,4,8
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,replication.h,h,1,1,2
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,server.cc,cc,1,1,2
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,storage.cc,cc,2,2,4
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,storage.h,h,4,4,8
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,util.cc,cc,4,4,8
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,worker.cc,cc,1,1,2
4743ab3a226b0f45439c52ba1b8bd596e11ce173,hulk.website@gmail.com,2020-06-01 23:29:47+08:00,karelrooted@gmail.com,2020-06-02 10:09:56+08:00,FIX: cpplint include order warning,unstable,True,False,29,worker.h,h,4,4,8
42e0e8ae0c8264f39e72efc6a4eda226e2b9028a,karelrooted@gmail.com,2020-06-03 17:01:24+08:00,hulk.website@gmail.com,2020-06-06 20:08:01+08:00,ADD: bitmap support redis bitmap format(string),unstable,True,False,10,CMakeLists.txt,txt,6,0,6
42e0e8ae0c8264f39e72efc6a4eda226e2b9028a,karelrooted@gmail.com,2020-06-03 17:01:24+08:00,hulk.website@gmail.com,2020-06-06 20:08:01+08:00,ADD: bitmap support redis bitmap format(string),unstable,True,False,10,Makefile,None,1,1,2
42e0e8ae0c8264f39e72efc6a4eda226e2b9028a,karelrooted@gmail.com,2020-06-03 17:01:24+08:00,hulk.website@gmail.com,2020-06-06 20:08:01+08:00,ADD: bitmap support redis bitmap format(string),unstable,True,False,10,redis_bitmap.cc,cc,55,13,68
42e0e8ae0c8264f39e72efc6a4eda226e2b9028a,karelrooted@gmail.com,2020-06-03 17:01:24+08:00,hulk.website@gmail.com,2020-06-06 20:08:01+08:00,ADD: bitmap support redis bitmap format(string),unstable,True,False,10,redis_bitmap.h,h,2,2,4
42e0e8ae0c8264f39e72efc6a4eda226e2b9028a,karelrooted@gmail.com,2020-06-03 17:01:24+08:00,hulk.website@gmail.com,2020-06-06 20:08:01+08:00,ADD: bitmap support redis bitmap format(string),unstable,True,False,10,redis_bitmap_string.cc,cc,273,0,273
42e0e8ae0c8264f39e72efc6a4eda226e2b9028a,karelrooted@gmail.com,2020-06-03 17:01:24+08:00,hulk.website@gmail.com,2020-06-06 20:08:01+08:00,ADD: bitmap support redis bitmap format(string),unstable,True,False,10,redis_bitmap_string.h,h,23,0,23
42e0e8ae0c8264f39e72efc6a4eda226e2b9028a,karelrooted@gmail.com,2020-06-03 17:01:24+08:00,hulk.website@gmail.com,2020-06-06 20:08:01+08:00,ADD: bitmap support redis bitmap format(string),unstable,True,False,10,redis_cmd.cc,cc,6,3,9
42e0e8ae0c8264f39e72efc6a4eda226e2b9028a,karelrooted@gmail.com,2020-06-03 17:01:24+08:00,hulk.website@gmail.com,2020-06-06 20:08:01+08:00,ADD: bitmap support redis bitmap format(string),unstable,True,False,10,redis_string.cc,cc,0,2,2
42e0e8ae0c8264f39e72efc6a4eda226e2b9028a,karelrooted@gmail.com,2020-06-03 17:01:24+08:00,hulk.website@gmail.com,2020-06-06 20:08:01+08:00,ADD: bitmap support redis bitmap format(string),unstable,True,False,10,redis_string.h,h,2,0,2
42e0e8ae0c8264f39e72efc6a4eda226e2b9028a,karelrooted@gmail.com,2020-06-03 17:01:24+08:00,hulk.website@gmail.com,2020-06-06 20:08:01+08:00,ADD: bitmap support redis bitmap format(string),unstable,True,False,10,t_bitmap_test.cc,cc,2,2,4
1fcb046e21384702d382e518728bffbbfd38679c,karelrooted@gmail.com,2020-06-03 17:02:07+08:00,hulk.website@gmail.com,2020-06-06 20:08:01+08:00,FIX: typo,unstable,True,False,1,redis_cmd.cc,cc,1,1,2
0a791d98df9d9e2de0f7275dec1f3d7beae7e1ca,karelrooted@gmail.com,2020-06-04 14:59:50+08:00,hulk.website@gmail.com,2020-06-06 20:08:01+08:00,TST: add redis_bitmap_string testcase,unstable,True,False,1,bitmap_test.py,py,112,0,112
924747ac2e57c51f1136b70916130904041bb600,karelrooted@gmail.com,2020-06-05 18:59:33+08:00,hulk.website@gmail.com,2020-06-06 20:08:01+08:00,"FIX: use uint64_t instead of C type long (cpplint)
FIX: use reinterpret_cast instead of C-style cast (cpplint)",unstable,True,False,2,redis_bitmap_string.cc,cc,16,16,32
924747ac2e57c51f1136b70916130904041bb600,karelrooted@gmail.com,2020-06-05 18:59:33+08:00,hulk.website@gmail.com,2020-06-06 20:08:01+08:00,"FIX: use uint64_t instead of C type long (cpplint)
FIX: use reinterpret_cast instead of C-style cast (cpplint)",unstable,True,False,2,redis_bitmap_string.h,h,2,2,4
b355304577b1f546e03d4f44e2a9893f38b30e7b,karelrooted@gmail.com,2020-06-05 19:11:19+08:00,hulk.website@gmail.com,2020-06-06 20:08:01+08:00,FIX: use cpplint 1.5.0,unstable,True,False,1,.travis.yml,yml,1,1,2
a42611d2beef01d22c4af5e1bb1767fce8f78166,karelrooted@gmail.com,2020-06-08 14:13:18+08:00,hulk.website@gmail.com,2020-06-22 17:37:28+08:00,FIX: add BEV_OPT_THREADSAFE option (monitor cmd will coredump when evbuffer_add and evbuffer_drain concurrently in multi thread),unstable,True,False,1,worker.cc,cc,4,1,5
618bd5cd8a9472eea1e8f0986d2961c4b7212494,karelrooted@gmail.com,2020-06-22 17:48:45+08:00,karelrooted@gmail.com,2020-06-22 17:48:45+08:00,"MOD: code style
MOD: add -O0 compile option",unstable,True,False,2,CMakeLists.txt,txt,1,1,2
618bd5cd8a9472eea1e8f0986d2961c4b7212494,karelrooted@gmail.com,2020-06-22 17:48:45+08:00,karelrooted@gmail.com,2020-06-22 17:48:45+08:00,"MOD: code style
MOD: add -O0 compile option",unstable,True,False,2,worker.cc,cc,2,2,4
c96bd5f46acf82558b1127c075f3ddeabba0205d,karelrooted@gmail.com,2020-06-22 17:54:10+08:00,karelrooted@gmail.com,2020-06-22 17:54:10+08:00,Bump v1.1.19,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
c96bd5f46acf82558b1127c075f3ddeabba0205d,karelrooted@gmail.com,2020-06-22 17:54:10+08:00,karelrooted@gmail.com,2020-06-22 17:54:10+08:00,Bump v1.1.19,unstable,True,False,2,Changelog,None,6,0,6
18d285ac45ebcb907bf726920f63fd5707669e53,karelrooted@gmail.com,2020-06-30 15:05:04+08:00,hulk.website@gmail.com,2020-07-01 13:15:57+08:00,"ADD: zset, sortedint add mget command",unstable,True,False,3,redis_cmd.cc,cc,65,0,65
18d285ac45ebcb907bf726920f63fd5707669e53,karelrooted@gmail.com,2020-06-30 15:05:04+08:00,hulk.website@gmail.com,2020-07-01 13:15:57+08:00,"ADD: zset, sortedint add mget command",unstable,True,False,3,redis_sortedint.cc,cc,27,0,27
18d285ac45ebcb907bf726920f63fd5707669e53,karelrooted@gmail.com,2020-06-30 15:05:04+08:00,hulk.website@gmail.com,2020-07-01 13:15:57+08:00,"ADD: zset, sortedint add mget command",unstable,True,False,3,redis_sortedint.h,h,1,0,1
acfe1b742111f096709661c0ec19aed67599b4d3,karelrooted@gmail.com,2020-06-30 15:06:12+08:00,hulk.website@gmail.com,2020-07-01 13:15:57+08:00,"DOC: support zmscore, simexist command",unstable,True,False,2,custom-api-sortedint.md,md,11,0,11
acfe1b742111f096709661c0ec19aed67599b4d3,karelrooted@gmail.com,2020-06-30 15:06:12+08:00,hulk.website@gmail.com,2020-07-01 13:15:57+08:00,"DOC: support zmscore, simexist command",unstable,True,False,2,support-commands.md,md,30,28,58
200cd0a4594fadf8e88585d240de8f4d349cf533,karelrooted@gmail.com,2020-06-30 15:59:56+08:00,hulk.website@gmail.com,2020-07-01 13:15:57+08:00,"TST: add zmscore,simexist testcase",unstable,True,False,2,sortedint_test.py,py,30,3,33
200cd0a4594fadf8e88585d240de8f4d349cf533,karelrooted@gmail.com,2020-06-30 15:59:56+08:00,hulk.website@gmail.com,2020-07-01 13:15:57+08:00,"TST: add zmscore,simexist testcase",unstable,True,False,2,zset_test.py,py,15,0,15
6f04af2e8029eced52d3bd9e2f2747cef4836556,karelrooted@gmail.com,2020-07-01 11:47:29+08:00,hulk.website@gmail.com,2020-07-01 13:15:57+08:00,MOD: code style(simexist => siexists),unstable,True,False,4,custom-api-sortedint.md,md,2,2,4
6f04af2e8029eced52d3bd9e2f2747cef4836556,karelrooted@gmail.com,2020-07-01 11:47:29+08:00,hulk.website@gmail.com,2020-07-01 13:15:57+08:00,MOD: code style(simexist => siexists),unstable,True,False,4,support-commands.md,md,1,1,2
6f04af2e8029eced52d3bd9e2f2747cef4836556,karelrooted@gmail.com,2020-07-01 11:47:29+08:00,hulk.website@gmail.com,2020-07-01 13:15:57+08:00,MOD: code style(simexist => siexists),unstable,True,False,4,redis_cmd.cc,cc,3,3,6
6f04af2e8029eced52d3bd9e2f2747cef4836556,karelrooted@gmail.com,2020-07-01 11:47:29+08:00,hulk.website@gmail.com,2020-07-01 13:15:57+08:00,MOD: code style(simexist => siexists),unstable,True,False,4,sortedint_test.py,py,6,6,12
b2f1de21c46c9cff4538a20b5eba6e0ffd8736d3,karelrooted@gmail.com,2020-07-01 13:41:46+08:00,karelrooted@gmail.com,2020-07-01 13:41:46+08:00,Bump v1.1.20,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
b2f1de21c46c9cff4538a20b5eba6e0ffd8736d3,karelrooted@gmail.com,2020-07-01 13:41:46+08:00,karelrooted@gmail.com,2020-07-01 13:41:46+08:00,Bump v1.1.20,unstable,True,False,2,Changelog,None,3,0,3
0a71e4bb86a9c9d76273a864320ecb6cdc87a778,karelrooted@gmail.com,2020-07-08 16:11:52+08:00,hulk.website@gmail.com,2020-07-08 19:40:20+08:00,FIX: GetUpdatesSince should not get data that is older than seq (seems like a bug in rocksdb...),unstable,True,False,1,redis_cmd.cc,cc,1,1,2
fef30abe32fb7b7bd1c98a78da504ca3a5825ef6,karelrooted@gmail.com,2020-07-08 17:00:09+08:00,hulk.website@gmail.com,2020-07-08 19:40:20+08:00,ADD: log discrete WAL iterator,unstable,True,False,2,redis_cmd.cc,cc,2,0,2
fef30abe32fb7b7bd1c98a78da504ca3a5825ef6,karelrooted@gmail.com,2020-07-08 17:00:09+08:00,hulk.website@gmail.com,2020-07-08 19:40:20+08:00,ADD: log discrete WAL iterator,unstable,True,False,2,replication.cc,cc,2,1,3
e603d941f0b86d73b48c52db0da4a6fbf8340a57,karelrooted@gmail.com,2020-07-08 19:47:21+08:00,karelrooted@gmail.com,2020-07-08 19:47:21+08:00,Bump v1.1.21,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
e603d941f0b86d73b48c52db0da4a6fbf8340a57,karelrooted@gmail.com,2020-07-08 19:47:21+08:00,karelrooted@gmail.com,2020-07-08 19:47:21+08:00,Bump v1.1.21,unstable,True,False,2,Changelog,None,3,0,3
d25485ba116252611b7c4a3126d086ff27f75ee4,hulk.website@gmail.com,2020-07-02 22:48:40+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,"ADD: the main goal of the compaction checker was avoid unneccessary full compaction
every day. How it works:

* step 1: check the current hour whether in compaction checker range or not, if yes go to step 2
* step 2: fetch all table properties and then pick the file was created
moren then 1 week or which has highest delte ratio every minute
* step 3: compact keys in selected file",unstable,True,False,14,CMakeLists.txt,txt,13,1,14
d25485ba116252611b7c4a3126d086ff27f75ee4,hulk.website@gmail.com,2020-07-02 22:48:40+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,"ADD: the main goal of the compaction checker was avoid unneccessary full compaction
every day. How it works:

* step 1: check the current hour whether in compaction checker range or not, if yes go to step 2
* step 2: fetch all table properties and then pick the file was created
moren then 1 week or which has highest delte ratio every minute
* step 3: compact keys in selected file",unstable,True,False,14,kvrocks.conf,conf,6,1,7
d25485ba116252611b7c4a3126d086ff27f75ee4,hulk.website@gmail.com,2020-07-02 22:48:40+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,"ADD: the main goal of the compaction checker was avoid unneccessary full compaction
every day. How it works:

* step 1: check the current hour whether in compaction checker range or not, if yes go to step 2
* step 2: fetch all table properties and then pick the file was created
moren then 1 week or which has highest delte ratio every minute
* step 3: compact keys in selected file",unstable,True,False,14,Makefile,None,2,1,3
d25485ba116252611b7c4a3126d086ff27f75ee4,hulk.website@gmail.com,2020-07-02 22:48:40+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,"ADD: the main goal of the compaction checker was avoid unneccessary full compaction
every day. How it works:

* step 1: check the current hour whether in compaction checker range or not, if yes go to step 2
* step 2: fetch all table properties and then pick the file was created
moren then 1 week or which has highest delte ratio every minute
* step 3: compact keys in selected file",unstable,True,False,14,compaction_checker.cc,cc,90,0,90
d25485ba116252611b7c4a3126d086ff27f75ee4,hulk.website@gmail.com,2020-07-02 22:48:40+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,"ADD: the main goal of the compaction checker was avoid unneccessary full compaction
every day. How it works:

* step 1: check the current hour whether in compaction checker range or not, if yes go to step 2
* step 2: fetch all table properties and then pick the file was created
moren then 1 week or which has highest delte ratio every minute
* step 3: compact keys in selected file",unstable,True,False,14,compaction_checker.h,h,16,0,16
d25485ba116252611b7c4a3126d086ff27f75ee4,hulk.website@gmail.com,2020-07-02 22:48:40+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,"ADD: the main goal of the compaction checker was avoid unneccessary full compaction
every day. How it works:

* step 1: check the current hour whether in compaction checker range or not, if yes go to step 2
* step 2: fetch all table properties and then pick the file was created
moren then 1 week or which has highest delte ratio every minute
* step 3: compact keys in selected file",unstable,True,False,14,config.cc,cc,17,0,17
d25485ba116252611b7c4a3126d086ff27f75ee4,hulk.website@gmail.com,2020-07-02 22:48:40+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,"ADD: the main goal of the compaction checker was avoid unneccessary full compaction
every day. How it works:

* step 1: check the current hour whether in compaction checker range or not, if yes go to step 2
* step 2: fetch all table properties and then pick the file was created
moren then 1 week or which has highest delte ratio every minute
* step 3: compact keys in selected file",unstable,True,False,14,config.h,h,12,0,12
d25485ba116252611b7c4a3126d086ff27f75ee4,hulk.website@gmail.com,2020-07-02 22:48:40+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,"ADD: the main goal of the compaction checker was avoid unneccessary full compaction
every day. How it works:

* step 1: check the current hour whether in compaction checker range or not, if yes go to step 2
* step 2: fetch all table properties and then pick the file was created
moren then 1 week or which has highest delte ratio every minute
* step 3: compact keys in selected file",unstable,True,False,14,server.cc,cc,53,1,54
d25485ba116252611b7c4a3126d086ff27f75ee4,hulk.website@gmail.com,2020-07-02 22:48:40+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,"ADD: the main goal of the compaction checker was avoid unneccessary full compaction
every day. How it works:

* step 1: check the current hour whether in compaction checker range or not, if yes go to step 2
* step 2: fetch all table properties and then pick the file was created
moren then 1 week or which has highest delte ratio every minute
* step 3: compact keys in selected file",unstable,True,False,14,server.h,h,4,0,4
d25485ba116252611b7c4a3126d086ff27f75ee4,hulk.website@gmail.com,2020-07-02 22:48:40+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,"ADD: the main goal of the compaction checker was avoid unneccessary full compaction
every day. How it works:

* step 1: check the current hour whether in compaction checker range or not, if yes go to step 2
* step 2: fetch all table properties and then pick the file was created
moren then 1 week or which has highest delte ratio every minute
* step 3: compact keys in selected file",unstable,True,False,14,storage.cc,cc,12,7,19
d25485ba116252611b7c4a3126d086ff27f75ee4,hulk.website@gmail.com,2020-07-02 22:48:40+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,"ADD: the main goal of the compaction checker was avoid unneccessary full compaction
every day. How it works:

* step 1: check the current hour whether in compaction checker range or not, if yes go to step 2
* step 2: fetch all table properties and then pick the file was created
moren then 1 week or which has highest delte ratio every minute
* step 3: compact keys in selected file",unstable,True,False,14,storage.h,h,8,1,9
d25485ba116252611b7c4a3126d086ff27f75ee4,hulk.website@gmail.com,2020-07-02 22:48:40+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,"ADD: the main goal of the compaction checker was avoid unneccessary full compaction
every day. How it works:

* step 1: check the current hour whether in compaction checker range or not, if yes go to step 2
* step 2: fetch all table properties and then pick the file was created
moren then 1 week or which has highest delte ratio every minute
* step 3: compact keys in selected file",unstable,True,False,14,table_properties_collector.cc,cc,82,0,82
d25485ba116252611b7c4a3126d086ff27f75ee4,hulk.website@gmail.com,2020-07-02 22:48:40+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,"ADD: the main goal of the compaction checker was avoid unneccessary full compaction
every day. How it works:

* step 1: check the current hour whether in compaction checker range or not, if yes go to step 2
* step 2: fetch all table properties and then pick the file was created
moren then 1 week or which has highest delte ratio every minute
* step 3: compact keys in selected file",unstable,True,False,14,table_properties_collector.h,h,51,0,51
d25485ba116252611b7c4a3126d086ff27f75ee4,hulk.website@gmail.com,2020-07-02 22:48:40+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,"ADD: the main goal of the compaction checker was avoid unneccessary full compaction
every day. How it works:

* step 1: check the current hour whether in compaction checker range or not, if yes go to step 2
* step 2: fetch all table properties and then pick the file was created
moren then 1 week or which has highest delte ratio every minute
* step 3: compact keys in selected file",unstable,True,False,14,task_runner.h,h,1,1,2
82d5c5feece2b9037f81280423f360f6ed844ecb,hulk.website@gmail.com,2020-07-14 14:03:36+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,MOD: update the default compaction checker range to 0-7am,unstable,True,False,1,kvrocks.conf,conf,3,3,6
9d04caa6bf54ad296c783a358529baa7353afa93,hulk.website@gmail.com,2020-07-15 13:37:15+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,MOD: remove empty log,unstable,True,False,1,compaction_checker.cc,cc,0,1,1
cd26435f0c49b7534158f2836bae5d9cdfbf5e72,hulk.website@gmail.com,2020-07-16 12:45:58+08:00,karelrooted@gmail.com,2020-07-16 13:36:40+08:00,FIX: add table property collector to subkey opts,unstable,True,False,1,storage.cc,cc,1,1,2
f2895348c808050e793d7b387163e7680ba0f2c5,karelrooted@gmail.com,2020-07-16 13:46:49+08:00,karelrooted@gmail.com,2020-07-16 13:46:49+08:00,Bump v1.1.22,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
f2895348c808050e793d7b387163e7680ba0f2c5,karelrooted@gmail.com,2020-07-16 13:46:49+08:00,karelrooted@gmail.com,2020-07-16 13:46:49+08:00,Bump v1.1.22,unstable,True,False,2,Changelog,None,3,0,3
3c3533214120cb3c06861b4f60448a6b0ed1de8b,hulk.website@gmail.com,2020-07-17 14:15:30+08:00,karelrooted@gmail.com,2020-07-17 14:28:03+08:00,FIX: compact pub/sub once per day,unstable,True,False,1,server.cc,cc,7,7,14
dab1ef091cd4fbbbef4263e4c471fefe9186f356,karelrooted@gmail.com,2020-07-23 13:50:05+08:00,hulk.website@gmail.com,2020-07-23 14:25:38+08:00,FIX: FindKeyRangeWithPrefix will stuck in while loop(prev) when there is more than one namespace and current namespace is empty,unstable,True,False,1,redis_db.cc,cc,5,3,8
9bf9da5ead78aba9f7e5afb93f218b9af4bb34fc,karelrooted@gmail.com,2020-07-23 13:52:31+08:00,hulk.website@gmail.com,2020-07-23 14:25:38+08:00,FIX: typo,unstable,True,False,1,redis_cmd.cc,cc,5,3,8
d664c23e32c1e460c2a93ef32c9e137199e73c65,karelrooted@gmail.com,2020-07-23 13:59:38+08:00,hulk.website@gmail.com,2020-07-23 14:25:38+08:00,ADD: log version,unstable,True,False,1,main.cc,cc,1,0,1
9d4b1932f748baa4500ed70a9987a2fbf9531a5e,karelrooted@gmail.com,2020-07-23 14:31:55+08:00,karelrooted@gmail.com,2020-07-23 14:31:55+08:00,Bump v1.1.23,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
9d4b1932f748baa4500ed70a9987a2fbf9531a5e,karelrooted@gmail.com,2020-07-23 14:31:55+08:00,karelrooted@gmail.com,2020-07-23 14:31:55+08:00,Bump v1.1.23,unstable,True,False,2,Changelog,None,4,0,4
5749e9debb162fe642586588fa4022dc2f4de2ef,hulk.website@gmail.com,2020-07-26 13:40:23+08:00,karelrooted@gmail.com,2020-07-27 10:34:25+08:00,FIX: typo and compression type output,unstable,True,False,1,event_listener.cc,cc,23,3,26
49365f7771e8e7077e3ef7900cdedb7f904baff9,hulk.website@gmail.com,2020-07-26 14:51:12+08:00,karelrooted@gmail.com,2020-07-27 10:34:25+08:00,ADD: table create file event listener,unstable,True,False,2,event_listener.cc,cc,28,4,32
49365f7771e8e7077e3ef7900cdedb7f904baff9,hulk.website@gmail.com,2020-07-26 14:51:12+08:00,karelrooted@gmail.com,2020-07-27 10:34:25+08:00,ADD: table create file event listener,unstable,True,False,2,event_listener.h,h,1,0,1
f13561a416bd24f70cd7620bfc3244fb20718270,hulk.website@gmail.com,2020-07-26 15:01:57+08:00,karelrooted@gmail.com,2020-07-27 10:34:25+08:00,FIX: cpplint,unstable,True,False,1,event_listener.cc,cc,2,0,2
3d78535acccb5dd17838a0f31f72ed1a0d54fc16,karelrooted@gmail.com,2020-07-28 15:28:37+08:00,hulk.website@gmail.com,2020-07-28 16:29:00+08:00,ADD: large pipeline log,unstable,True,False,1,redis_request.cc,cc,8,1,9
988dedad036314efa3883a001dd9bbb4b7698bde,karelrooted@gmail.com,2020-07-28 15:34:18+08:00,hulk.website@gmail.com,2020-07-28 16:29:00+08:00,FIX: warning,unstable,True,False,1,compaction_checker.cc,cc,1,1,2
0ee662925d2a822590b0cb9f3a693a0784470152,karelrooted@gmail.com,2020-07-29 10:23:58+08:00,karelrooted@gmail.com,2020-07-29 10:23:58+08:00,Bump v1.1.24,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
0ee662925d2a822590b0cb9f3a693a0784470152,karelrooted@gmail.com,2020-07-29 10:23:58+08:00,karelrooted@gmail.com,2020-07-29 10:23:58+08:00,Bump v1.1.24,unstable,True,False,2,Changelog,None,5,0,5
c0886bb0063074266db6405b7f78fee2bf4f84d5,karelrooted@gmail.com,2020-07-29 17:45:55+08:00,hulk.website@gmail.com,2020-07-29 18:38:54+08:00,ADD: add wal data in replication write batch error log,unstable,True,False,3,replication.cc,cc,4,2,6
c0886bb0063074266db6405b7f78fee2bf4f84d5,karelrooted@gmail.com,2020-07-29 17:45:55+08:00,hulk.website@gmail.com,2020-07-29 18:38:54+08:00,ADD: add wal data in replication write batch error log,unstable,True,False,3,util.cc,cc,11,0,11
c0886bb0063074266db6405b7f78fee2bf4f84d5,karelrooted@gmail.com,2020-07-29 17:45:55+08:00,hulk.website@gmail.com,2020-07-29 18:38:54+08:00,ADD: add wal data in replication write batch error log,unstable,True,False,3,util.h,h,1,0,1
bb3f0c59b69150eefca2910e8efe57195a36160d,hulk.website@gmail.com,2020-08-04 13:40:19+08:00,karelrooted@gmail.com,2020-08-04 16:34:39+08:00,FIX: get command would return nil string when the value was empty,unstable,True,False,2,redis_reply.cc,cc,1,4,5
bb3f0c59b69150eefca2910e8efe57195a36160d,hulk.website@gmail.com,2020-08-04 13:40:19+08:00,karelrooted@gmail.com,2020-08-04 16:34:39+08:00,FIX: get command would return nil string when the value was empty,unstable,True,False,2,t_string_test.cc,cc,9,0,9
ae1fac287bb2e773c85a63f5620adeb73892fa9b,hulk.website@gmail.com,2020-08-04 14:24:28+08:00,karelrooted@gmail.com,2020-08-04 16:34:39+08:00,FIX: return nil when not found,unstable,True,False,4,config.cc,cc,7,2,9
ae1fac287bb2e773c85a63f5620adeb73892fa9b,hulk.website@gmail.com,2020-08-04 14:24:28+08:00,karelrooted@gmail.com,2020-08-04 16:34:39+08:00,FIX: return nil when not found,unstable,True,False,4,config.h,h,1,1,2
ae1fac287bb2e773c85a63f5620adeb73892fa9b,hulk.website@gmail.com,2020-08-04 14:24:28+08:00,karelrooted@gmail.com,2020-08-04 16:34:39+08:00,FIX: return nil when not found,unstable,True,False,4,redis_cmd.cc,cc,16,4,20
ae1fac287bb2e773c85a63f5620adeb73892fa9b,hulk.website@gmail.com,2020-08-04 14:24:28+08:00,karelrooted@gmail.com,2020-08-04 16:34:39+08:00,FIX: return nil when not found,unstable,True,False,4,unittest,None,0,0,0
ef5bcc9c543fae79b1db2098452d95fedd2f47ee,hulk.website@gmail.com,2020-08-04 15:09:04+08:00,karelrooted@gmail.com,2020-08-04 16:34:39+08:00,FIX: return nil when not found in lindex and mget,unstable,True,False,5,redis_cmd.cc,cc,3,2,5
ef5bcc9c543fae79b1db2098452d95fedd2f47ee,hulk.website@gmail.com,2020-08-04 15:09:04+08:00,karelrooted@gmail.com,2020-08-04 16:34:39+08:00,FIX: return nil when not found in lindex and mget,unstable,True,False,5,redis_list.cc,cc,1,1,2
ef5bcc9c543fae79b1db2098452d95fedd2f47ee,hulk.website@gmail.com,2020-08-04 15:09:04+08:00,karelrooted@gmail.com,2020-08-04 16:34:39+08:00,FIX: return nil when not found in lindex and mget,unstable,True,False,5,redis_reply.cc,cc,17,6,23
ef5bcc9c543fae79b1db2098452d95fedd2f47ee,hulk.website@gmail.com,2020-08-04 15:09:04+08:00,karelrooted@gmail.com,2020-08-04 16:34:39+08:00,FIX: return nil when not found in lindex and mget,unstable,True,False,5,redis_reply.h,h,3,2,5
ef5bcc9c543fae79b1db2098452d95fedd2f47ee,hulk.website@gmail.com,2020-08-04 15:09:04+08:00,karelrooted@gmail.com,2020-08-04 16:34:39+08:00,FIX: return nil when not found in lindex and mget,unstable,True,False,5,redis_string.cc,cc,3,1,4
474128c0685560468bd4cfdcdab52c83863a76c9,hulk.website@gmail.com,2020-08-04 16:14:40+08:00,karelrooted@gmail.com,2020-08-04 16:34:39+08:00,FIX: remove unused var,unstable,True,False,1,redis_cmd.cc,cc,0,1,1
b937a225651bcc1a1fac1f330c9a54cfe5a632e9,karelrooted@gmail.com,2020-08-04 17:42:03+08:00,hulk.website@gmail.com,2020-08-05 00:07:35+08:00,FIX:  should not output nil when member or value is empty,unstable,True,False,6,redis_cmd.cc,cc,14,13,27
b937a225651bcc1a1fac1f330c9a54cfe5a632e9,karelrooted@gmail.com,2020-08-04 17:42:03+08:00,hulk.website@gmail.com,2020-08-05 00:07:35+08:00,FIX:  should not output nil when member or value is empty,unstable,True,False,6,redis_hash.cc,cc,5,2,7
b937a225651bcc1a1fac1f330c9a54cfe5a632e9,karelrooted@gmail.com,2020-08-04 17:42:03+08:00,hulk.website@gmail.com,2020-08-05 00:07:35+08:00,FIX:  should not output nil when member or value is empty,unstable,True,False,6,redis_hash.h,h,4,1,5
b937a225651bcc1a1fac1f330c9a54cfe5a632e9,karelrooted@gmail.com,2020-08-04 17:42:03+08:00,hulk.website@gmail.com,2020-08-05 00:07:35+08:00,FIX:  should not output nil when member or value is empty,unstable,True,False,6,redis_reply.cc,cc,2,2,4
b937a225651bcc1a1fac1f330c9a54cfe5a632e9,karelrooted@gmail.com,2020-08-04 17:42:03+08:00,hulk.website@gmail.com,2020-08-05 00:07:35+08:00,FIX:  should not output nil when member or value is empty,unstable,True,False,6,redis_reply.h,h,1,1,2
b937a225651bcc1a1fac1f330c9a54cfe5a632e9,karelrooted@gmail.com,2020-08-04 17:42:03+08:00,hulk.website@gmail.com,2020-08-05 00:07:35+08:00,FIX:  should not output nil when member or value is empty,unstable,True,False,6,t_hash_test.cc,cc,2,1,3
b39cde3178514ec1d454de4011d0ee4ab8e428f4,karelrooted@gmail.com,2020-08-04 17:50:46+08:00,hulk.website@gmail.com,2020-08-05 00:07:35+08:00,FIX: cpplint,unstable,True,False,1,redis_hash.h,h,1,0,1
4cdecee1bc3a5d8206258b370dce296c7b9d0910,hulk.website@gmail.com,2020-08-05 18:38:58+08:00,karelrooted@gmail.com,2020-08-05 18:52:09+08:00,MOD: make code more clearly,unstable,True,False,1,compaction_checker.cc,cc,3,4,7
cdb08c46100fcf69449048061b475a7fae95e600,karelrooted@gmail.com,2020-08-06 18:47:10+08:00,hulk.website@gmail.com,2020-08-06 23:03:24+08:00,"FIX: shutdown asap (cancel backgroud compaction, etc...)",unstable,True,False,1,server.cc,cc,2,0,2
76f270b7b6291a444416a2edfce55c383af76afb,hulk.website@gmail.com,2020-08-06 23:17:59+08:00,hulk.website@gmail.com,2020-08-06 23:17:59+08:00,MOD: rename the function,unstable,True,False,2,redis_request.cc,cc,2,2,4
76f270b7b6291a444416a2edfce55c383af76afb,hulk.website@gmail.com,2020-08-06 23:17:59+08:00,hulk.website@gmail.com,2020-08-06 23:17:59+08:00,MOD: rename the function,unstable,True,False,2,redis_request.h,h,1,1,2
7ce46a79cc3ed152e1ca30a974426f0684e60a1a,karelrooted@gmail.com,2020-08-07 10:23:14+08:00,karelrooted@gmail.com,2020-08-07 10:23:14+08:00,Bump v1.1.25,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
7ce46a79cc3ed152e1ca30a974426f0684e60a1a,karelrooted@gmail.com,2020-08-07 10:23:14+08:00,karelrooted@gmail.com,2020-08-07 10:23:14+08:00,Bump v1.1.25,unstable,True,False,2,Changelog,None,5,0,5
194f273aa915f84944837944782f27da049d48d4,karelrooted@gmail.com,2020-08-10 16:43:51+08:00,hulk.website@gmail.com,2020-08-11 22:36:24+08:00,FIX: refetch and override  existing backup sst file if crc mismatch,unstable,True,False,3,replication.cc,cc,1,1,2
194f273aa915f84944837944782f27da049d48d4,karelrooted@gmail.com,2020-08-10 16:43:51+08:00,hulk.website@gmail.com,2020-08-11 22:36:24+08:00,FIX: refetch and override  existing backup sst file if crc mismatch,unstable,True,False,3,storage.cc,cc,30,3,33
194f273aa915f84944837944782f27da049d48d4,karelrooted@gmail.com,2020-08-10 16:43:51+08:00,hulk.website@gmail.com,2020-08-11 22:36:24+08:00,FIX: refetch and override  existing backup sst file if crc mismatch,unstable,True,False,3,storage.h,h,1,1,2
13b7ca5c9a9c705bdedc1c8527611ccd48c94301,hulk.website@gmail.com,2020-08-11 22:35:40+08:00,hulk.website@gmail.com,2020-08-11 22:36:24+08:00,FIX: missing include header,unstable,True,False,1,storage.cc,cc,1,0,1
a995c7b304bb313e05bcff4f23d3ad52ed09a693,karelrooted@gmail.com,2020-08-12 10:24:23+08:00,karelrooted@gmail.com,2020-08-12 10:24:23+08:00,Bump v1.1.26,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
a995c7b304bb313e05bcff4f23d3ad52ed09a693,karelrooted@gmail.com,2020-08-12 10:24:23+08:00,karelrooted@gmail.com,2020-08-12 10:24:23+08:00,Bump v1.1.26,unstable,True,False,2,Changelog,None,3,0,3
f0f12065b7f4dc0c52884c736ad949990108fbe9,byronhe@tencent.com,2020-08-19 05:27:46+08:00,hulk.website@gmail.com,2020-08-19 10:32:54+08:00,"MOD: add -O2 , clean code",unstable,True,False,2,Makefile,None,1,1,2
f0f12065b7f4dc0c52884c736ad949990108fbe9,byronhe@tencent.com,2020-08-19 05:27:46+08:00,hulk.website@gmail.com,2020-08-19 10:32:54+08:00,"MOD: add -O2 , clean code",unstable,True,False,2,main.cc,cc,3,6,9
a6ed1ab1883b4450d3cd67d0af23c3003ac21680,karelrooted@gmail.com,2020-08-19 16:08:01+08:00,hulk.website@gmail.com,2020-08-19 16:22:14+08:00,FIX: typo,unstable,True,False,1,redis_bitmap.cc,cc,1,1,2
9613ff00bdb93baa16809b8dd489792c50b7d070,karelrooted@gmail.com,2020-08-19 16:38:08+08:00,karelrooted@gmail.com,2020-08-19 16:38:08+08:00,Bump v1.1.27,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
9613ff00bdb93baa16809b8dd489792c50b7d070,karelrooted@gmail.com,2020-08-19 16:38:08+08:00,karelrooted@gmail.com,2020-08-19 16:38:08+08:00,Bump v1.1.27,unstable,True,False,2,Changelog,None,3,0,3
45def3475567cdbb34f93a945cfc7655f68240c4,hulk.website@gmail.com,2020-08-20 12:55:06+08:00,hulk.website@gmail.com,2020-08-20 13:14:23+08:00,FIX: missing header,unstable,True,False,1,worker.cc,cc,2,0,2
984b9cf59be1c4e140f29a1e8945d6b7478c6011,hulk.website@gmail.com,2020-08-22 19:46:38+08:00,karelrooted@gmail.com,2020-08-24 10:41:07+08:00,FIX: keep the double to string format consistent with Redis,unstable,True,False,5,redis_cmd.cc,cc,16,16,32
984b9cf59be1c4e140f29a1e8945d6b7478c6011,hulk.website@gmail.com,2020-08-22 19:46:38+08:00,karelrooted@gmail.com,2020-08-24 10:41:07+08:00,FIX: keep the double to string format consistent with Redis,unstable,True,False,5,redis_geo.cc,cc,1,0,1
984b9cf59be1c4e140f29a1e8945d6b7478c6011,hulk.website@gmail.com,2020-08-22 19:46:38+08:00,karelrooted@gmail.com,2020-08-24 10:41:07+08:00,FIX: keep the double to string format consistent with Redis,unstable,True,False,5,redis_slot.cc,cc,1,1,2
984b9cf59be1c4e140f29a1e8945d6b7478c6011,hulk.website@gmail.com,2020-08-22 19:46:38+08:00,karelrooted@gmail.com,2020-08-24 10:41:07+08:00,FIX: keep the double to string format consistent with Redis,unstable,True,False,5,util.cc,cc,11,0,11
984b9cf59be1c4e140f29a1e8945d6b7478c6011,hulk.website@gmail.com,2020-08-22 19:46:38+08:00,karelrooted@gmail.com,2020-08-24 10:41:07+08:00,FIX: keep the double to string format consistent with Redis,unstable,True,False,5,util.h,h,26,0,26
7b1bbdc5886a33b61eb0770c7875bbb2c1980774,hulk.website@gmail.com,2020-08-22 22:31:30+08:00,karelrooted@gmail.com,2020-08-24 10:41:07+08:00,FIX: functional test cases,unstable,True,False,5,assert_helper.py,py,6,0,6
7b1bbdc5886a33b61eb0770c7875bbb2c1980774,hulk.website@gmail.com,2020-08-22 22:31:30+08:00,karelrooted@gmail.com,2020-08-24 10:41:07+08:00,FIX: functional test cases,unstable,True,False,5,geo_test.py,py,9,5,14
7b1bbdc5886a33b61eb0770c7875bbb2c1980774,hulk.website@gmail.com,2020-08-22 22:31:30+08:00,karelrooted@gmail.com,2020-08-24 10:41:07+08:00,FIX: functional test cases,unstable,True,False,5,hash_test.py,py,1,1,2
7b1bbdc5886a33b61eb0770c7875bbb2c1980774,hulk.website@gmail.com,2020-08-22 22:31:30+08:00,karelrooted@gmail.com,2020-08-24 10:41:07+08:00,FIX: functional test cases,unstable,True,False,5,string_test.py,py,1,1,2
7b1bbdc5886a33b61eb0770c7875bbb2c1980774,hulk.website@gmail.com,2020-08-22 22:31:30+08:00,karelrooted@gmail.com,2020-08-24 10:41:07+08:00,FIX: functional test cases,unstable,True,False,5,zset_test.py,py,6,7,13
59855a90b97aa2f14d6e3e5be7987da66394d734,hulk.website@gmail.com,2020-08-27 21:38:03+08:00,hulk.website@gmail.com,2020-08-27 21:38:03+08:00,DOC: add gcc gcc-c++ make which to README,unstable,True,False,1,README.md,md,2,2,4
bd31ae2d690b4d8a15d30dd36fc1c9f0b03c0e2a,karelrooted@gmail.com,2020-09-02 17:19:37+08:00,karelrooted@gmail.com,2020-09-02 17:33:45+08:00,FIX: typo,unstable,True,False,1,redis_cmd.cc,cc,1,1,2
f35960e81ce0a1c0f0ec9fe22c7b6c1a93994a5b,karelrooted@gmail.com,2020-09-02 17:38:00+08:00,karelrooted@gmail.com,2020-09-02 17:38:00+08:00,Bump v1.1.28,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
f35960e81ce0a1c0f0ec9fe22c7b6c1a93994a5b,karelrooted@gmail.com,2020-09-02 17:38:00+08:00,karelrooted@gmail.com,2020-09-02 17:38:00+08:00,Bump v1.1.28,unstable,True,False,2,Changelog,None,4,0,4
5f8b0c35c904b9adcae1e71bb369449f531ecc97,karelrooted@gmail.com,2020-08-24 18:55:16+08:00,hulk.website@gmail.com,2020-09-03 16:03:23+08:00,ADD: dynamic resize block and sst,unstable,True,False,4,server.cc,cc,51,0,51
5f8b0c35c904b9adcae1e71bb369449f531ecc97,karelrooted@gmail.com,2020-08-24 18:55:16+08:00,hulk.website@gmail.com,2020-09-03 16:03:23+08:00,ADD: dynamic resize block and sst,unstable,True,False,4,server.h,h,1,0,1
5f8b0c35c904b9adcae1e71bb369449f531ecc97,karelrooted@gmail.com,2020-08-24 18:55:16+08:00,hulk.website@gmail.com,2020-09-03 16:03:23+08:00,ADD: dynamic resize block and sst,unstable,True,False,4,storage.cc,cc,6,0,6
5f8b0c35c904b9adcae1e71bb369449f531ecc97,karelrooted@gmail.com,2020-08-24 18:55:16+08:00,hulk.website@gmail.com,2020-09-03 16:03:23+08:00,ADD: dynamic resize block and sst,unstable,True,False,4,storage.h,h,1,0,1
8e8fa5ca382e3fa649ae36c3de41e6d9105ee492,karelrooted@gmail.com,2020-09-03 15:50:08+08:00,hulk.website@gmail.com,2020-09-03 16:03:23+08:00,MOD: rocksdb.target_file_size_base default to 128,unstable,True,False,2,kvrocks.conf,conf,2,2,4
8e8fa5ca382e3fa649ae36c3de41e6d9105ee492,karelrooted@gmail.com,2020-09-03 15:50:08+08:00,hulk.website@gmail.com,2020-09-03 16:03:23+08:00,MOD: rocksdb.target_file_size_base default to 128,unstable,True,False,2,config.cc,cc,1,1,2
9c75e903c3484c020d4cc83b60fc2f77b4bece3f,karelrooted@gmail.com,2020-09-11 16:17:54+08:00,karelrooted@gmail.com,2020-09-11 16:17:54+08:00,Bump v1.1.29,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
9c75e903c3484c020d4cc83b60fc2f77b4bece3f,karelrooted@gmail.com,2020-09-11 16:17:54+08:00,karelrooted@gmail.com,2020-09-11 16:17:54+08:00,Bump v1.1.29,unstable,True,False,2,Changelog,None,3,0,3
127f2d8ac6da96c0a047da8d04581270b3a8a8fe,karelrooted@gmail.com,2020-09-16 16:08:39+08:00,hulk.website@gmail.com,2020-09-16 17:00:09+08:00,ADD: command role,unstable,True,False,3,redis_cmd.cc,cc,10,0,10
127f2d8ac6da96c0a047da8d04581270b3a8a8fe,karelrooted@gmail.com,2020-09-16 16:08:39+08:00,hulk.website@gmail.com,2020-09-16 17:00:09+08:00,ADD: command role,unstable,True,False,3,server.cc,cc,41,0,41
127f2d8ac6da96c0a047da8d04581270b3a8a8fe,karelrooted@gmail.com,2020-09-16 16:08:39+08:00,hulk.website@gmail.com,2020-09-16 17:00:09+08:00,ADD: command role,unstable,True,False,3,server.h,h,1,0,1
76fe5610cce41ac6c6a147859938ebe7b83aa37a,karelrooted@gmail.com,2020-09-16 16:08:52+08:00,hulk.website@gmail.com,2020-09-16 17:00:09+08:00,DOC: add support command role,unstable,True,False,1,support-commands.md,md,1,0,1
34c5e47da9d1da7f899178705bb0cf5924e27aa0,karelrooted@gmail.com,2020-09-16 17:07:12+08:00,karelrooted@gmail.com,2020-09-16 17:07:12+08:00,Bump v1.1.30,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
34c5e47da9d1da7f899178705bb0cf5924e27aa0,karelrooted@gmail.com,2020-09-16 17:07:12+08:00,karelrooted@gmail.com,2020-09-16 17:07:12+08:00,Bump v1.1.30,unstable,True,False,2,Changelog,None,3,0,3
91a86d4f853fb731120460d74c9a86017d678a16,pluy_yu@hotmail.com,2020-09-24 05:20:40-07:00,hulk.website@gmail.com,2020-09-25 14:39:04+08:00,FIX: impove the multi-bulk string function performance,unstable,True,False,5,CMakeLists.txt,txt,1,0,1
91a86d4f853fb731120460d74c9a86017d678a16,pluy_yu@hotmail.com,2020-09-24 05:20:40-07:00,hulk.website@gmail.com,2020-09-25 14:39:04+08:00,FIX: impove the multi-bulk string function performance,unstable,True,False,5,Makefile,None,1,1,2
91a86d4f853fb731120460d74c9a86017d678a16,pluy_yu@hotmail.com,2020-09-24 05:20:40-07:00,hulk.website@gmail.com,2020-09-25 14:39:04+08:00,FIX: impove the multi-bulk string function performance,unstable,True,False,5,redis_cmd.cc,cc,3,3,6
91a86d4f853fb731120460d74c9a86017d678a16,pluy_yu@hotmail.com,2020-09-24 05:20:40-07:00,hulk.website@gmail.com,2020-09-25 14:39:04+08:00,FIX: impove the multi-bulk string function performance,unstable,True,False,5,redis_reply.cc,cc,8,1,9
91a86d4f853fb731120460d74c9a86017d678a16,pluy_yu@hotmail.com,2020-09-24 05:20:40-07:00,hulk.website@gmail.com,2020-09-25 14:39:04+08:00,FIX: impove the multi-bulk string function performance,unstable,True,False,5,string_reply_test.cc,cc,39,0,39
e687e8d20717e5236f9777c4c6395c2a95e42490,pluy_yu@hotmail.com,2020-09-24 23:10:41-07:00,hulk.website@gmail.com,2020-09-25 14:39:04+08:00,fix the code style,unstable,True,False,3,redis_cmd.cc,cc,0,1,1
e687e8d20717e5236f9777c4c6395c2a95e42490,pluy_yu@hotmail.com,2020-09-24 23:10:41-07:00,hulk.website@gmail.com,2020-09-25 14:39:04+08:00,fix the code style,unstable,True,False,3,redis_reply.cc,cc,4,5,9
e687e8d20717e5236f9777c4c6395c2a95e42490,pluy_yu@hotmail.com,2020-09-24 23:10:41-07:00,hulk.website@gmail.com,2020-09-25 14:39:04+08:00,fix the code style,unstable,True,False,3,string_reply_test.cc,cc,3,8,11
4c75480ec7fa695aa0e6bce1071a42cb96c33079,wangyuan21@baidu.com,2020-09-28 16:05:57+08:00,hulk.website@gmail.com,2020-09-28 16:47:23+08:00,Fix hash tag calculation error,unstable,True,False,1,redis_slot.cc,cc,5,2,7
d2e9d200d4e85116a2b4e660245b5890be44bae4,karelrooted@gmail.com,2020-10-13 14:12:50+08:00,hulk.website@gmail.com,2020-10-13 00:25:33-07:00,"ADD: support sirangebyvalue, sirevrangebyvalue cmd",unstable,True,False,3,redis_cmd.cc,cc,62,6,68
d2e9d200d4e85116a2b4e660245b5890be44bae4,karelrooted@gmail.com,2020-10-13 14:12:50+08:00,hulk.website@gmail.com,2020-10-13 00:25:33-07:00,"ADD: support sirangebyvalue, sirevrangebyvalue cmd",unstable,True,False,3,redis_sortedint.cc,cc,99,0,99
d2e9d200d4e85116a2b4e660245b5890be44bae4,karelrooted@gmail.com,2020-10-13 14:12:50+08:00,hulk.website@gmail.com,2020-10-13 00:25:33-07:00,"ADD: support sirangebyvalue, sirevrangebyvalue cmd",unstable,True,False,3,redis_sortedint.h,h,21,0,21
3943ee19891b86b57cbbaef6b30cce454527d987,karelrooted@gmail.com,2020-10-13 14:24:34+08:00,hulk.website@gmail.com,2020-10-13 00:25:33-07:00,"DOC: support sirangebyvalue, sirevrangebyvalue",unstable,True,False,2,custom-api-sortedint.md,md,20,0,20
3943ee19891b86b57cbbaef6b30cce454527d987,karelrooted@gmail.com,2020-10-13 14:24:34+08:00,hulk.website@gmail.com,2020-10-13 00:25:33-07:00,"DOC: support sirangebyvalue, sirevrangebyvalue",unstable,True,False,2,support-commands.md,md,10,8,18
52412bde0b0054f7a2b35ff99363e04adacac7a2,karelrooted@gmail.com,2020-10-13 14:43:57+08:00,hulk.website@gmail.com,2020-10-13 00:25:33-07:00,"TST: add sirangebyvalue, sirevrangebyvalue testcase",unstable,True,False,1,sortedint_test.py,py,38,0,38
1c9189e9a09d0165c51b218587086e3b31aa12f3,karelrooted@gmail.com,2020-10-21 14:55:41+08:00,hulk.website@gmail.com,2020-10-21 00:21:09-07:00,MOD: typo,unstable,True,False,1,redis_cmd.cc,cc,1,1,2
a2bc7ecec060a58a7942dfd5b76326daf8b1f287,karelrooted@gmail.com,2020-10-21 15:30:18+08:00,karelrooted@gmail.com,2020-10-21 15:30:18+08:00,Bump v1.1.31,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
a2bc7ecec060a58a7942dfd5b76326daf8b1f287,karelrooted@gmail.com,2020-10-21 15:30:18+08:00,karelrooted@gmail.com,2020-10-21 15:30:18+08:00,Bump v1.1.31,unstable,True,False,2,Changelog,None,5,0,5
7e215faff87cdebe3e6b91a92dce9e926d913bc2,karelrooted@gmail.com,2020-10-22 10:51:13+08:00,hulk.website@gmail.com,2020-10-21 20:23:07-07:00,FIX: hmget should not output empty string when hash key doesn't exist,unstable,True,False,1,redis_cmd.cc,cc,3,1,4
69ea8634f5647ce385f479780ed791602c442fe5,karelrooted@gmail.com,2020-10-28 11:00:02+08:00,hulk.website@gmail.com,2020-10-27 22:35:24-07:00,FIX: disable compaction_checker_range when value is empty string,unstable,True,False,1,config.cc,cc,5,0,5
a35738cf98ff795afd4997dc001aadcd20b2daae,karelrooted@gmail.com,2020-10-28 14:37:14+08:00,karelrooted@gmail.com,2020-10-28 14:37:14+08:00,Bump v1.1.32,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
a35738cf98ff795afd4997dc001aadcd20b2daae,karelrooted@gmail.com,2020-10-28 14:37:14+08:00,karelrooted@gmail.com,2020-10-28 14:37:14+08:00,Bump v1.1.32,unstable,True,False,2,Changelog,None,4,0,4
345ec210e19d060cb4c420cbd262c2b3b7db5395,karelrooted@gmail.com,2020-11-10 14:20:27+08:00,hulk.website@gmail.com,2020-11-10 16:03:33+08:00,ADD: dynamic resize rocksdb.write_buffer_size,unstable,True,False,1,server.cc,cc,29,13,42
f5f1fb0fb1dacabf43ec5a7dd614d3ab3251cd03,karelrooted@gmail.com,2020-11-10 17:51:12+08:00,karelrooted@gmail.com,2020-11-10 17:51:12+08:00,Bump v1.1.33,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
f5f1fb0fb1dacabf43ec5a7dd614d3ab3251cd03,karelrooted@gmail.com,2020-11-10 17:51:12+08:00,karelrooted@gmail.com,2020-11-10 17:51:12+08:00,Bump v1.1.33,unstable,True,False,2,Changelog,None,3,0,3
3e9cc2d5e4daf28ca6329b22bb3cceff41b8f931,karelrooted@gmail.com,2020-11-12 18:11:32+08:00,hulk.website@gmail.com,2020-11-12 18:36:03+08:00,FIX: segmentation fault,unstable,True,False,2,server.cc,cc,13,0,13
3e9cc2d5e4daf28ca6329b22bb3cceff41b8f931,karelrooted@gmail.com,2020-11-12 18:11:32+08:00,hulk.website@gmail.com,2020-11-12 18:36:03+08:00,FIX: segmentation fault,unstable,True,False,2,server.h,h,3,2,5
91fc068d1bcc30b86f0a280fe0e8bc8928969529,karelrooted@gmail.com,2020-11-12 18:50:25+08:00,karelrooted@gmail.com,2020-11-12 18:50:25+08:00,Bump v1.1.34,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
91fc068d1bcc30b86f0a280fe0e8bc8928969529,karelrooted@gmail.com,2020-11-12 18:50:25+08:00,karelrooted@gmail.com,2020-11-12 18:50:25+08:00,Bump v1.1.34,unstable,True,False,2,Changelog,None,3,0,3
474c178cf94ffa8f8897aa342330fb05c9422f40,karelrooted@gmail.com,2020-11-17 11:56:46+08:00,hulk.website@gmail.com,2020-11-17 13:37:52+08:00,FIX: core (compact may use closed db and cf ),unstable,True,False,2,compaction_checker.cc,cc,12,1,13
474c178cf94ffa8f8897aa342330fb05c9422f40,karelrooted@gmail.com,2020-11-17 11:56:46+08:00,hulk.website@gmail.com,2020-11-17 13:37:52+08:00,FIX: core (compact may use closed db and cf ),unstable,True,False,2,server.cc,cc,4,1,5
cb4ac1d610034108cc4d6ab0ea293cf365c9f91b,karelrooted@gmail.com,2020-11-17 13:55:59+08:00,karelrooted@gmail.com,2020-11-17 13:55:59+08:00,Bump v1.1.35,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
cb4ac1d610034108cc4d6ab0ea293cf365c9f91b,karelrooted@gmail.com,2020-11-17 13:55:59+08:00,karelrooted@gmail.com,2020-11-17 13:55:59+08:00,Bump v1.1.35,unstable,True,False,2,Changelog,None,3,0,3
e13038a99534792e80d8bebd282dff4336b0d9fe,karelrooted@gmail.com,2020-11-17 18:45:43+08:00,hulk.website@gmail.com,2020-11-17 19:01:07+08:00,FIX: core (dynamicResizeBlockAndSST may use closed db and cf ),unstable,True,False,1,server.cc,cc,9,3,12
2c3b283f629815fc4dcef551eca39b07d3be9e81,karelrooted@gmail.com,2020-11-17 19:02:28+08:00,karelrooted@gmail.com,2020-11-17 19:02:28+08:00,Bump v1.1.36,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
2c3b283f629815fc4dcef551eca39b07d3be9e81,karelrooted@gmail.com,2020-11-17 19:02:28+08:00,karelrooted@gmail.com,2020-11-17 19:02:28+08:00,Bump v1.1.36,unstable,True,False,2,Changelog,None,3,0,3
4f6e96236c67bd94e9710ba9853d2908bff8df93,karelrooted@gmail.com,2020-11-18 11:55:54+08:00,hulk.website@gmail.com,2020-11-18 12:35:43+08:00,FIX: old pipeline cmd response should be cleared,unstable,True,False,1,redis_request.cc,cc,1,0,1
a5582bf56280ae04c03ac634e3dd5690ebf39b40,karelrooted@gmail.com,2020-11-18 13:55:36+08:00,karelrooted@gmail.com,2020-11-18 13:55:36+08:00,Bump v1.1.37,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
a5582bf56280ae04c03ac634e3dd5690ebf39b40,karelrooted@gmail.com,2020-11-18 13:55:36+08:00,karelrooted@gmail.com,2020-11-18 13:55:36+08:00,Bump v1.1.37,unstable,True,False,2,Changelog,None,3,0,3
51c735aeba2adde5ce81c0d32c74596b2d657525,karelrooted@gmail.com,2020-11-20 12:12:36+08:00,hulk.website@gmail.com,2020-11-20 12:51:55+08:00,"FIX:  replication dead loop  (some seq might be lost  in the middle of wal , seems like a bug in rocksdb)",unstable,True,False,1,replication.cc,cc,6,1,7
09ba6de80f5ec00a6dee1569d2b9b89420c2f058,karelrooted@gmail.com,2020-11-20 13:36:10+08:00,karelrooted@gmail.com,2020-11-20 13:36:10+08:00,Bump v1.1.38,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
09ba6de80f5ec00a6dee1569d2b9b89420c2f058,karelrooted@gmail.com,2020-11-20 13:36:10+08:00,karelrooted@gmail.com,2020-11-20 13:36:10+08:00,Bump v1.1.38,unstable,True,False,2,Changelog,None,3,0,3
21c20493f945dbb8f941a825a4e8bab661fc7334,clyang@clyang.net,2020-12-10 12:40:35+08:00,hulk.website@gmail.com,2020-12-10 12:45:18+08:00,"Add gTest related pkg to README

make test will be failed if gTest is not installed.",unstable,True,False,1,README.md,md,3,3,6
eaa6bb0282a881596d26e29a63259f23809f9c87,karelrooted@gmail.com,2020-12-10 16:17:02+08:00,hulk.website@gmail.com,2020-12-10 18:21:35+08:00,FIX: core (replication sst file crc check may use closed db ),unstable,True,False,2,storage.cc,cc,6,5,11
eaa6bb0282a881596d26e29a63259f23809f9c87,karelrooted@gmail.com,2020-12-10 16:17:02+08:00,hulk.website@gmail.com,2020-12-10 18:21:35+08:00,FIX: core (replication sst file crc check may use closed db ),unstable,True,False,2,storage.h,h,1,1,2
e7a9d35cc595517def5369752979351a01c71b5d,karelrooted@gmail.com,2020-12-15 11:29:34+08:00,hulk.website@gmail.com,2020-12-15 12:51:28+08:00,FIX: rocksdb cmake error,unstable,True,False,1,rocksdb.cmake,cmake,1,0,1
4128e92856f66d3c52c917400d1262e8fc967c85,karelrooted@gmail.com,2020-12-15 11:49:15+08:00,hulk.website@gmail.com,2020-12-15 12:51:28+08:00,FIX: centos need gtest library to compile unitest,unstable,True,False,1,README.md,md,1,1,2
ea3346809ce2483aee9bb7def073cdf50a2389ae,karelrooted@gmail.com,2020-12-15 14:24:40+08:00,hulk.website@gmail.com,2020-12-15 15:36:12+08:00,FIX: gtest & gtest-devel was in epel-release,unstable,True,False,1,README.md,md,1,1,2
28f50a655775b4ee3284da9f31bc67742cac5b2e,karelrooted@gmail.com,2020-12-18 14:15:06+08:00,hulk.website@gmail.com,2020-12-18 15:53:28+08:00,FIX: ltrim right index (typo),unstable,True,False,1,redis_list.cc,cc,4,2,6
7bb32b7b6aef8a37ebe6397a661fa9531c341025,karelrooted@gmail.com,2020-12-18 15:17:54+08:00,hulk.website@gmail.com,2020-12-18 15:53:28+08:00,TST: add more ltrim testcase,unstable,True,False,1,list_test.py,py,19,7,26
39b2f0940c10b515f33502a44eb5f77e3d0959e1,karelrooted@gmail.com,2020-12-18 16:10:52+08:00,karelrooted@gmail.com,2020-12-18 16:10:52+08:00,Bump v1.1.40,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
39b2f0940c10b515f33502a44eb5f77e3d0959e1,karelrooted@gmail.com,2020-12-18 16:10:52+08:00,karelrooted@gmail.com,2020-12-18 16:10:52+08:00,Bump v1.1.40,unstable,True,False,2,Changelog,None,6,0,6
40ea918310005cf05ec57b66a3f6f79b35e38487,karelrooted@gmail.com,2020-12-21 18:11:23+08:00,hulk.website@gmail.com,2020-12-21 18:14:37+08:00,FIX: typo,unstable,True,False,1,config.cc,cc,1,1,2
68912bb917e7ecc44ee6fe34a1b7340a37d19add,karelrooted@gmail.com,2020-12-23 19:50:57+08:00,hulk.website@gmail.com,2020-12-23 21:32:28+08:00,FIX: lrem parse error (will add wrong rpush command),unstable,True,False,1,parser.cc,cc,3,0,3
89b37d6d6610ffb516dff4f03f3f558d23d7d006,karelrooted@gmail.com,2021-01-08 14:21:55+08:00,karelrooted@gmail.com,2021-01-08 14:21:55+08:00,Bump v1.2.0,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
89b37d6d6610ffb516dff4f03f3f558d23d7d006,karelrooted@gmail.com,2021-01-08 14:21:55+08:00,karelrooted@gmail.com,2021-01-08 14:21:55+08:00,Bump v1.2.0,unstable,True,False,2,Changelog,None,4,0,4
08b36ab88287857385669c46d38da09bb06716f4,hulk.website@gmail.com,2021-01-24 12:43:55+08:00,karelrooted@gmail.com,2021-01-25 10:52:22+08:00,MOD: push the docker image to the bitleak org instead of hulkdev,unstable,True,False,3,.travis.yml,yml,2,2,4
08b36ab88287857385669c46d38da09bb06716f4,hulk.website@gmail.com,2021-01-24 12:43:55+08:00,karelrooted@gmail.com,2021-01-25 10:52:22+08:00,MOD: push the docker image to the bitleak org instead of hulkdev,unstable,True,False,3,README.md,md,1,1,2
08b36ab88287857385669c46d38da09bb06716f4,hulk.website@gmail.com,2021-01-24 12:43:55+08:00,karelrooted@gmail.com,2021-01-25 10:52:22+08:00,MOD: push the docker image to the bitleak org instead of hulkdev,unstable,True,False,3,docker_push.sh,sh,1,1,2
36d7508509a9bb445e47d915e4836f33544dd905,hulk.website@gmail.com,2021-01-25 15:43:26+08:00,karelrooted@gmail.com,2021-01-25 16:44:52+08:00,FIX: typo in compaction checker,unstable,True,False,1,compaction_checker.cc,cc,6,6,12
53774927e2e2e1c336b21adecdfc5a893f7536a2,hulk.website@gmail.com,2021-01-26 09:50:39+08:00,karelrooted@gmail.com,2021-01-26 13:37:07+08:00,FIX: compaction checker condition error which cause SSTs were skipped,unstable,True,False,1,compaction_checker.cc,cc,2,3,5
07ccbb2b2d9b1629378b760eeb6adf02e06d130c,hulk.website@gmail.com,2021-01-28 20:24:57+08:00,hulk.website@gmail.com,2021-01-28 20:35:51+08:00,MOD: change the license from MIT to BSD,unstable,True,False,2,LICENSE,None,7,19,26
07ccbb2b2d9b1629378b760eeb6adf02e06d130c,hulk.website@gmail.com,2021-01-28 20:24:57+08:00,hulk.website@gmail.com,2021-01-28 20:35:51+08:00,MOD: change the license from MIT to BSD,unstable,True,False,2,README.md,md,1,1,2
e980bef51860b32665d3d948943b7700701ba2c3,hulk.website@gmail.com,2021-01-28 20:25:24+08:00,hulk.website@gmail.com,2021-01-28 20:35:51+08:00,MOD: remove the company info,unstable,True,False,1,package.sh,sh,2,2,4
90341fd361ac4359695c8e0d7daa8ba440822c77,wangyuan21@baidu.com,2021-01-29 11:40:18+08:00,noreply@github.com,2021-01-29 11:40:18+08:00,Fix list rewrites other types data (#157),unstable,True,False,1,redis_list.cc,cc,1,1,2
02603560288432e14c2dcf8e280a8a2f037495e2,wangyuan21@baidu.com,2021-01-29 13:56:28+08:00,noreply@github.com,2021-01-29 13:56:28+08:00,"Implement psetex command and handle negative expire time when set (#156)

* Implement psetex command and handle negative expire time when set",unstable,True,False,2,redis_cmd.cc,cc,34,0,34
02603560288432e14c2dcf8e280a8a2f037495e2,wangyuan21@baidu.com,2021-01-29 13:56:28+08:00,noreply@github.com,2021-01-29 13:56:28+08:00,"Implement psetex command and handle negative expire time when set (#156)

* Implement psetex command and handle negative expire time when set",unstable,True,False,2,string_test.py,py,11,0,11
2877ca5424b25270d68dbb1cd9f7cb422a9d895f,hulk.website@gmail.com,2021-01-29 14:25:05+08:00,noreply@github.com,2021-01-29 14:25:05+08:00,MOD: migrate the CI from travis to github actions (#158),unstable,True,False,3,kvrocks.yaml,yaml,54,0,54
2877ca5424b25270d68dbb1cd9f7cb422a9d895f,hulk.website@gmail.com,2021-01-29 14:25:05+08:00,noreply@github.com,2021-01-29 14:25:05+08:00,MOD: migrate the CI from travis to github actions (#158),unstable,True,False,3,Makefile,None,1,1,2
19aaf04edc2452f9be7b8d34b33385ec9ea52218,wangyuan21@baidu.com,2021-01-29 16:29:18+08:00,noreply@github.com,2021-01-29 16:29:18+08:00,Support to set separate log directory (#155),unstable,True,False,4,kvrocks.conf,conf,5,0,5
19aaf04edc2452f9be7b8d34b33385ec9ea52218,wangyuan21@baidu.com,2021-01-29 16:29:18+08:00,noreply@github.com,2021-01-29 16:29:18+08:00,Support to set separate log directory (#155),unstable,True,False,4,config.cc,cc,3,0,3
19aaf04edc2452f9be7b8d34b33385ec9ea52218,wangyuan21@baidu.com,2021-01-29 16:29:18+08:00,noreply@github.com,2021-01-29 16:29:18+08:00,Support to set separate log directory (#155),unstable,True,False,4,config.h,h,1,0,1
19aaf04edc2452f9be7b8d34b33385ec9ea52218,wangyuan21@baidu.com,2021-01-29 16:29:18+08:00,noreply@github.com,2021-01-29 16:29:18+08:00,Support to set separate log directory (#155),unstable,True,False,4,main.cc,cc,1,1,2
f22671068f0ecb7193721c9cbb5bde6d8db7c913,karelrooted@gmail.com,2021-01-29 16:34:30+08:00,noreply@github.com,2021-01-29 16:34:30+08:00,FIX: setex did not allow 0 timeout (#160),unstable,True,False,1,redis_slot.cc,cc,9,4,13
89e67c56f7752d439ef6c4bb9e9687dc39541ee0,karelrooted@gmail.com,2021-01-29 17:59:40+08:00,noreply@github.com,2021-01-29 17:59:40+08:00,"FIX: enable cppcheck (remove performance check_type) (#159)

* FIX: enable cppcheck (remove performance check_type)

* FIX: use --force to  check all configurations (#ifdef)",unstable,True,False,2,cppcheck.sh,sh,2,2,4
89e67c56f7752d439ef6c4bb9e9687dc39541ee0,karelrooted@gmail.com,2021-01-29 17:59:40+08:00,noreply@github.com,2021-01-29 17:59:40+08:00,"FIX: enable cppcheck (remove performance check_type) (#159)

* FIX: enable cppcheck (remove performance check_type)

* FIX: use --force to  check all configurations (#ifdef)",unstable,True,False,2,Makefile,None,1,1,2
f8dcb7a64aa8d9319da420e7ba8b89ad5c695d24,hulk.website@gmail.com,2021-02-02 11:27:06+08:00,hulk.website@gmail.com,2021-02-02 11:27:17+08:00,FIX: the README workflow badge icon link,unstable,True,False,1,README.md,md,1,1,2
670e9f0a696075b1b8116bc763b4e038ffc15930,wangyuan21@baidu.com,2021-02-02 13:18:03+08:00,noreply@github.com,2021-02-02 13:18:03+08:00,Don't store an empty key for setrange command (#161),unstable,True,False,1,redis_string.cc,cc,6,0,6
5b76d1810c44319c98a04a5b8cae670b07b96f78,wangyuan21@baidu.com,2021-02-02 16:39:21+08:00,noreply@github.com,2021-02-02 16:39:21+08:00,"Compatible with redis protocol error handlers (#162)

- Make some errors compatible with redis
- Add max multibulk size limit",unstable,True,False,1,redis_request.cc,cc,10,5,15
ae9b6af49a2f197b75216b1f885f0b3b6b17da8a,wangyuan21@baidu.com,2021-02-02 16:40:48+08:00,noreply@github.com,2021-02-02 16:40:48+08:00,Fix client setname command with special characters (#163),unstable,True,False,1,redis_cmd.cc,cc,9,0,9
5c60658472a022ee888cb6d1355768570ff1c3b5,wangyuan21@baidu.com,2021-02-02 17:11:18+08:00,noreply@github.com,2021-02-02 17:11:18+08:00,"Fix setbit/getbit bit offset out of range (#164)

* Fix setbit/getbit bit offset out of range

* Fix cpplint error",unstable,True,False,1,redis_cmd.cc,cc,24,18,42
2e65f7c298fd095bfbc0f8764fbf90438bb609a5,wangyuan21@baidu.com,2021-02-02 17:17:56+08:00,noreply@github.com,2021-02-02 17:17:56+08:00,"Support msetnx command (#165)

For msetnex, we should try best effort to guarantee atomicity of command,
so we should check if all keys exist, return 0 directly if one of them
already existed.",unstable,True,False,2,redis_cmd.cc,cc,26,0,26
2e65f7c298fd095bfbc0f8764fbf90438bb609a5,wangyuan21@baidu.com,2021-02-02 17:17:56+08:00,noreply@github.com,2021-02-02 17:17:56+08:00,"Support msetnx command (#165)

For msetnex, we should try best effort to guarantee atomicity of command,
so we should check if all keys exist, return 0 directly if one of them
already existed.",unstable,True,False,2,redis_string.cc,cc,8,3,11
4f06774180ae267b46f5c177059a47728652a90e,hulk.website@gmail.com,2021-02-03 10:55:51+08:00,noreply@github.com,2021-02-03 10:55:51+08:00,MOD: improve the precision of the incrbyfloat/hincrbyfloat command to double (#169),unstable,True,False,7,redis_cmd.cc,cc,6,6,12
4f06774180ae267b46f5c177059a47728652a90e,hulk.website@gmail.com,2021-02-03 10:55:51+08:00,noreply@github.com,2021-02-03 10:55:51+08:00,MOD: improve the precision of the incrbyfloat/hincrbyfloat command to double (#169),unstable,True,False,7,redis_hash.cc,cc,4,4,8
4f06774180ae267b46f5c177059a47728652a90e,hulk.website@gmail.com,2021-02-03 10:55:51+08:00,noreply@github.com,2021-02-03 10:55:51+08:00,MOD: improve the precision of the incrbyfloat/hincrbyfloat command to double (#169),unstable,True,False,7,redis_hash.h,h,1,1,2
4f06774180ae267b46f5c177059a47728652a90e,hulk.website@gmail.com,2021-02-03 10:55:51+08:00,noreply@github.com,2021-02-03 10:55:51+08:00,MOD: improve the precision of the incrbyfloat/hincrbyfloat command to double (#169),unstable,True,False,7,redis_string.cc,cc,7,7,14
4f06774180ae267b46f5c177059a47728652a90e,hulk.website@gmail.com,2021-02-03 10:55:51+08:00,noreply@github.com,2021-02-03 10:55:51+08:00,MOD: improve the precision of the incrbyfloat/hincrbyfloat command to double (#169),unstable,True,False,7,redis_string.h,h,1,1,2
4f06774180ae267b46f5c177059a47728652a90e,hulk.website@gmail.com,2021-02-03 10:55:51+08:00,noreply@github.com,2021-02-03 10:55:51+08:00,MOD: improve the precision of the incrbyfloat/hincrbyfloat command to double (#169),unstable,True,False,7,t_hash_test.cc,cc,1,1,2
4f06774180ae267b46f5c177059a47728652a90e,hulk.website@gmail.com,2021-02-03 10:55:51+08:00,noreply@github.com,2021-02-03 10:55:51+08:00,MOD: improve the precision of the incrbyfloat/hincrbyfloat command to double (#169),unstable,True,False,7,t_string_test.cc,cc,2,2,4
493c1785cb40b4725d3dd5510e932ffeaaf8c736,wangyuancode@163.com,2021-02-03 11:50:58+08:00,noreply@github.com,2021-02-03 11:50:58+08:00,"Fix incrby/incrbyfloat on wrong value and float precision check (#167)

* Fix incr-like command on wrong value

* Apply suggestions from code review

Change float to double",unstable,True,False,1,redis_string.cc,cc,16,9,25
3c844ecc0c9a4cc686664674f93830b24685215c,wangyuan21@baidu.com,2021-02-03 13:53:30+08:00,noreply@github.com,2021-02-03 13:53:30+08:00,Fix hincrby/hincrbyfloat on wrong value and float precision check (#168),unstable,True,False,2,redis_hash.cc,cc,15,6,21
3c844ecc0c9a4cc686664674f93830b24685215c,wangyuan21@baidu.com,2021-02-03 13:53:30+08:00,noreply@github.com,2021-02-03 13:53:30+08:00,Fix hincrby/hincrbyfloat on wrong value and float precision check (#168),unstable,True,False,2,hash_test.py,py,6,0,6
c114961c4b12d4243f18aad08190e749af5617d7,wangyuan21@baidu.com,2021-02-03 16:02:01+08:00,noreply@github.com,2021-02-03 16:02:01+08:00,"Fix some list bug (#170)

* Fix some list bug

- For rpoplpush command, don't pop keys if dst key is not list
- For linsert command, return -1 if don't find index
- Fix ltrim command range calculation

* Handle rockdb get error",unstable,True,False,1,redis_list.cc,cc,10,2,12
7cb1f2f708d7294bd839ac01c478529f13afb0b7,wangyuan21@baidu.com,2021-02-03 16:02:52+08:00,noreply@github.com,2021-02-03 16:02:52+08:00,Fix smove command on non-set type key (#171),unstable,True,False,1,redis_set.cc,cc,8,1,9
dd0fc29d40a0269c63a638095150bba5a59390e8,wangyuan21@baidu.com,2021-02-03 20:39:17+08:00,noreply@github.com,2021-02-03 20:39:17+08:00,"Fix some bugs of zset (#172)

Fix some bugs of zset

* Support +inf/-inf for the score of the member
* Fix zremrangebyrank command corrupts size of zset
* Fix the wrong end of zrange
* Handle some Nan errors
* Fix typo: zunionscore -> zunionstore",unstable,True,False,4,support-commands.md,md,1,1,2
dd0fc29d40a0269c63a638095150bba5a59390e8,wangyuan21@baidu.com,2021-02-03 20:39:17+08:00,noreply@github.com,2021-02-03 20:39:17+08:00,"Fix some bugs of zset (#172)

Fix some bugs of zset

* Support +inf/-inf for the score of the member
* Fix zremrangebyrank command corrupts size of zset
* Fix the wrong end of zrange
* Handle some Nan errors
* Fix typo: zunionscore -> zunionstore",unstable,True,False,4,redis_cmd.cc,cc,8,1,9
dd0fc29d40a0269c63a638095150bba5a59390e8,wangyuan21@baidu.com,2021-02-03 20:39:17+08:00,noreply@github.com,2021-02-03 20:39:17+08:00,"Fix some bugs of zset (#172)

Fix some bugs of zset

* Support +inf/-inf for the score of the member
* Fix zremrangebyrank command corrupts size of zset
* Fix the wrong end of zrange
* Handle some Nan errors
* Fix typo: zunionscore -> zunionstore",unstable,True,False,4,redis_zset.cc,cc,27,10,37
dd0fc29d40a0269c63a638095150bba5a59390e8,wangyuan21@baidu.com,2021-02-03 20:39:17+08:00,noreply@github.com,2021-02-03 20:39:17+08:00,"Fix some bugs of zset (#172)

Fix some bugs of zset

* Support +inf/-inf for the score of the member
* Fix zremrangebyrank command corrupts size of zset
* Fix the wrong end of zrange
* Handle some Nan errors
* Fix typo: zunionscore -> zunionstore",unstable,True,False,4,redis_zset.h,h,7,2,9
f0891b1d4a01cc4e275c9c570695228ec1ef61c7,wangyuan21@baidu.com,2021-02-04 16:44:25+08:00,noreply@github.com,2021-02-04 16:44:25+08:00,Update License (#173),unstable,True,False,1,LICENSE,None,26,6,32
dd07178130bece8de34e9afe568472e0f2b4844a,wangyuan21@baidu.com,2021-02-05 09:47:32+08:00,noreply@github.com,2021-02-05 09:47:32+08:00,Update license in README (#176),unstable,True,False,1,README.md,md,1,1,2
e657d58dbe5524cc7c09546a82f03573de7c054f,wangyuan21@baidu.com,2021-02-05 14:24:56+08:00,noreply@github.com,2021-02-05 14:24:56+08:00,"Fix subscribe and unsubscribe command and pattern mode (#174)

* Fix subscribe and psubscribe command reply, the return number is the sum of subscription and psubscription
* Fix unpsubscribe command operates on subscription data instead of psubscription
* The unsubscribe and punsubscribe commands can operates on more than one channel and pattern
* The unsubscribe and punsubscribe commands should have reply
* Fix punsubscribe/unsubscribe command reply",unstable,True,False,3,redis_cmd.cc,cc,31,18,49
e657d58dbe5524cc7c09546a82f03573de7c054f,wangyuan21@baidu.com,2021-02-05 14:24:56+08:00,noreply@github.com,2021-02-05 14:24:56+08:00,"Fix subscribe and unsubscribe command and pattern mode (#174)

* Fix subscribe and psubscribe command reply, the return number is the sum of subscription and psubscription
* Fix unpsubscribe command operates on subscription data instead of psubscription
* The unsubscribe and punsubscribe commands can operates on more than one channel and pattern
* The unsubscribe and punsubscribe commands should have reply
* Fix punsubscribe/unsubscribe command reply",unstable,True,False,3,redis_connection.cc,cc,26,7,33
e657d58dbe5524cc7c09546a82f03573de7c054f,wangyuan21@baidu.com,2021-02-05 14:24:56+08:00,noreply@github.com,2021-02-05 14:24:56+08:00,"Fix subscribe and unsubscribe command and pattern mode (#174)

* Fix subscribe and psubscribe command reply, the return number is the sum of subscription and psubscription
* Fix unpsubscribe command operates on subscription data instead of psubscription
* The unsubscribe and punsubscribe commands can operates on more than one channel and pattern
* The unsubscribe and punsubscribe commands should have reply
* Fix punsubscribe/unsubscribe command reply",unstable,True,False,3,redis_connection.h,h,3,2,5
0fe764a525cdfebf7bf44492bd34ac7416d31d3d,wangyuan21@baidu.com,2021-02-05 14:32:50+08:00,noreply@github.com,2021-02-05 14:32:50+08:00,Add kvrocks google group and slack channel (#177),unstable,True,False,1,README.md,md,3,0,3
1ef6ed673a75870c959b81d6cf87eec9889696ea,wangyuan21@baidu.com,2021-02-05 15:00:08+08:00,noreply@github.com,2021-02-05 15:00:08+08:00,"Fix reply content for pattern subscribers when publish message (#175)

* Fix reply content for pattern subscribers when publish message

* Fix psubscribe test",unstable,True,False,2,server.cc,cc,28,7,35
1ef6ed673a75870c959b81d6cf87eec9889696ea,wangyuan21@baidu.com,2021-02-05 15:00:08+08:00,noreply@github.com,2021-02-05 15:00:08+08:00,"Fix reply content for pattern subscribers when publish message (#175)

* Fix reply content for pattern subscribers when publish message

* Fix psubscribe test",unstable,True,False,2,pub_sub_test.py,py,1,1,2
3ff5afec97bc5321e0ab846d99ef3ec7dc859c8b,simple.continue@gmail.com,2021-02-07 12:15:08+08:00,noreply@github.com,2021-02-07 12:15:08+08:00,Fix: allow slowlog-log-slower-than using -1 value to disable the slowlog(#178),unstable,True,False,2,kvrocks.conf,conf,1,1,2
3ff5afec97bc5321e0ab846d99ef3ec7dc859c8b,simple.continue@gmail.com,2021-02-07 12:15:08+08:00,noreply@github.com,2021-02-07 12:15:08+08:00,Fix: allow slowlog-log-slower-than using -1 value to disable the slowlog(#178),unstable,True,False,2,config.cc,cc,1,1,2
b2251394442b16ce99888c9b9299c70978dc4b9b,wangyuan21@baidu.com,2021-02-07 19:53:01+08:00,noreply@github.com,2021-02-07 19:53:01+08:00,"Run unit tests in CI (#180)

Also fix incrbyfloat command",unstable,True,False,2,kvrocks.yaml,yaml,2,3,5
b2251394442b16ce99888c9b9299c70978dc4b9b,wangyuan21@baidu.com,2021-02-07 19:53:01+08:00,noreply@github.com,2021-02-07 19:53:01+08:00,"Run unit tests in CI (#180)

Also fix incrbyfloat command",unstable,True,False,2,t_string_test.cc,cc,5,5,10
633c6f0c39136bfab99536b6f29d766874563a6f,wangyuan21@baidu.com,2021-02-07 20:04:58+08:00,noreply@github.com,2021-02-07 20:04:58+08:00,"Implement DEBUG command (#179)

Currently, debug command only supports sleep subcommand.
You can use 'debug sleep <second>' to let current work thread sleep a few seconds,
kvrocks wii be blocked and can't accept other connections if it has only one work thread.",unstable,True,False,1,redis_cmd.cc,cc,32,0,32
2b72394a2c3d14ed206523a884515e1527bccc5e,wangyuan21@baidu.com,2021-02-08 09:31:18+08:00,noreply@github.com,2021-02-08 09:31:18+08:00,Update kvrocks.service (#182),unstable,True,False,1,kvrocks.service,service,1,1,2
c3eaceff7fe071af294108e63ca16a4ce4f0f1e7,wangyuan21@baidu.com,2021-02-08 17:53:34+08:00,noreply@github.com,2021-02-08 17:53:34+08:00,"Version 1.3.0 (#184)

* Version 1.3.0

* Apply suggestions from code review

* Apply suggestions from code review",unstable,True,False,1,Changelog,None,38,0,38
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,kvrocks.yaml,yaml,7,1,8
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,runtest,None,16,0,16
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,default.conf,conf,14,0,14
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,bg_block_op.tcl,tcl,54,0,54
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,bg_complex_data.tcl,tcl,12,0,12
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,gen_write_load.tcl,tcl,17,0,17
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,instances.tcl,tcl,655,0,655
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,benchmark.tcl,tcl,19,0,19
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,cli.tcl,tcl,19,0,19
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,cluster.tcl,tcl,328,0,328
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,redis.tcl,tcl,338,0,338
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,server.tcl,tcl,602,0,602
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,test.tcl,tcl,208,0,208
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,tmpfile.tcl,tcl,15,0,15
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,util.tcl,tcl,679,0,679
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,test_helper.tcl,tcl,774,0,774
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,.gitignore,gitignore,1,0,1
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,acl.tcl,tcl,453,0,453
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,auth.tcl,tcl,27,0,27
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,bitfield.tcl,tcl,232,0,232
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,bitops.tcl,tcl,351,0,351
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,expire.tcl,tcl,183,0,183
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,geo.tcl,tcl,459,0,459
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,hyperloglog.tcl,tcl,213,0,213
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,introspection.tcl,tcl,51,0,51
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,keyspace.tcl,tcl,110,0,110
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,limits.tcl,tcl,21,0,21
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,protocol.tcl,tcl,71,0,71
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,pubsub.tcl,tcl,225,0,225
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,quit.tcl,tcl,40,0,40
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,scan.tcl,tcl,210,0,210
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,slowlog.tcl,tcl,114,0,114
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,tls.tcl,tcl,118,0,118
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,hash.tcl,tcl,494,0,494
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,incr.tcl,tcl,132,0,132
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,list-2.tcl,tcl,47,0,47
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,list-3.tcl,tcl,122,0,122
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,list-common.tcl,tcl,5,0,5
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,list.tcl,tcl,697,0,697
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,set.tcl,tcl,468,0,468
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,string.tcl,tcl,577,0,577
03b0faa6a7ec46d413498230e8281c5f1c4496d5,wangyuan21@baidu.com,2021-02-08 18:01:53+08:00,noreply@github.com,2021-02-08 18:01:53+08:00,Plant redis tcl tests into kvrocks (#181),unstable,True,False,42,zset.tcl,tcl,1007,0,1007
232845de2e7b899450ed6e6ae05393214b8e0e68,wangyuan21@baidu.com,2021-02-08 19:02:31+08:00,noreply@github.com,2021-02-08 19:02:31+08:00,Update version (#185),unstable,True,False,1,CMakeLists.txt,txt,1,1,2
844fd50860fa11dd77d91286413953f797d9c1c2,wangyuan21@baidu.com,2021-02-18 20:46:04+08:00,noreply@github.com,2021-02-18 20:46:04+08:00,"Upgrade python setuptools (#187)

 Fix cpplint dependency install error with the old version setuptools",unstable,True,False,1,kvrocks.yaml,yaml,3,1,4
5118739e87d028c6967596185b757245b71ffcf4,wangyuan21@baidu.com,2021-02-18 20:46:34+08:00,noreply@github.com,2021-02-18 20:46:34+08:00,Create feature_request.md (#186),unstable,True,False,1,feature_request.md,md,24,0,24
c9421161616efcedb12ab1e8f2568048d7c736c3,wangyuan21@baidu.com,2021-02-19 18:30:50+08:00,noreply@github.com,2021-02-19 18:30:50+08:00,"Handle the query starting with \r\n (#188)

* Handle the query starting with \r\n
* Fix memory leak",unstable,True,False,1,redis_request.cc,cc,4,0,4
46c948372ba98ff1f56ec0d641d3c1537d226c16,hulk.website@gmail.com,2021-02-20 14:39:52+08:00,noreply@github.com,2021-02-20 14:39:52+08:00,Enable the socket option tcp keepalive and no delay by default (#189),unstable,True,False,3,util.cc,cc,16,2,18
46c948372ba98ff1f56ec0d641d3c1537d226c16,hulk.website@gmail.com,2021-02-20 14:39:52+08:00,noreply@github.com,2021-02-20 14:39:52+08:00,Enable the socket option tcp keepalive and no delay by default (#189),unstable,True,False,3,util.h,h,2,0,2
46c948372ba98ff1f56ec0d641d3c1537d226c16,hulk.website@gmail.com,2021-02-20 14:39:52+08:00,noreply@github.com,2021-02-20 14:39:52+08:00,Enable the socket option tcp keepalive and no delay by default (#189),unstable,True,False,3,worker.cc,cc,9,3,12
b7cf86ee994dcbf34756a36a2ed744a06719c55e,1394332+byronhe@users.noreply.github.com,2021-02-20 19:14:07+08:00,noreply@github.com,2021-02-20 19:14:07+08:00,"Update redis_geo.cc (#115)

Marked the literal string as the const variable

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,1,redis_geo.cc,cc,1,1,2
7c32c37b3cb156b35bfdf41902d0bd0c7817843d,wangyuan21@baidu.com,2021-02-20 20:14:50+08:00,noreply@github.com,2021-02-20 20:14:50+08:00,Support to set max total wal size for rocksdb (#191),unstable,True,False,4,kvrocks.conf,conf,21,0,21
7c32c37b3cb156b35bfdf41902d0bd0c7817843d,wangyuan21@baidu.com,2021-02-20 20:14:50+08:00,noreply@github.com,2021-02-20 20:14:50+08:00,Support to set max total wal size for rocksdb (#191),unstable,True,False,4,config.cc,cc,6,0,6
7c32c37b3cb156b35bfdf41902d0bd0c7817843d,wangyuan21@baidu.com,2021-02-20 20:14:50+08:00,noreply@github.com,2021-02-20 20:14:50+08:00,Support to set max total wal size for rocksdb (#191),unstable,True,False,4,config.h,h,1,0,1
7c32c37b3cb156b35bfdf41902d0bd0c7817843d,wangyuan21@baidu.com,2021-02-20 20:14:50+08:00,noreply@github.com,2021-02-20 20:14:50+08:00,Support to set max total wal size for rocksdb (#191),unstable,True,False,4,storage.cc,cc,1,0,1
f9f9e7648894de663e7b185dea65d3f9e3033c18,karelrooted@gmail.com,2021-02-23 14:38:12+08:00,noreply@github.com,2021-02-23 14:38:12+08:00,"FIX: check whether replication port is in use (#192)

kvrocks enabled the reuse port and address to support
the multi works were listening on the same port. So we
need to detect the listening ports before starting to prevent
multi different kvrocks instances were listening on the same port.

Co-authored-by: liumiuyong <lmy@meitu.com>",unstable,True,False,1,main.cc,cc,5,0,5
a546f813e9054a5ceb09f1b4082d4bab7660a7dc,hulk.website@gmail.com,2021-02-24 12:53:12+08:00,noreply@github.com,2021-02-24 12:53:12+08:00,Fix using the line as error msg which has freed (#193),unstable,True,False,1,replication.cc,cc,8,5,13
c19ea89c905f5b4c4a07c71636363609076fd661,karelrooted@gmail.com,2021-02-24 14:44:37+08:00,noreply@github.com,2021-02-24 14:44:37+08:00,"Feature/add flushbackup command (#194)

* ADD: command flushbackup (flush all backup in the backgroud)
* MOD: the backup should not be purged if it's not yet expired, while multi slaves may create more replications than the `num_backups_to_keep`",unstable,True,False,5,kvrocks.conf,conf,1,0,1
c19ea89c905f5b4c4a07c71636363609076fd661,karelrooted@gmail.com,2021-02-24 14:44:37+08:00,noreply@github.com,2021-02-24 14:44:37+08:00,"Feature/add flushbackup command (#194)

* ADD: command flushbackup (flush all backup in the backgroud)
* MOD: the backup should not be purged if it's not yet expired, while multi slaves may create more replications than the `num_backups_to_keep`",unstable,True,False,5,redis_cmd.cc,cc,17,0,17
c19ea89c905f5b4c4a07c71636363609076fd661,karelrooted@gmail.com,2021-02-24 14:44:37+08:00,noreply@github.com,2021-02-24 14:44:37+08:00,"Feature/add flushbackup command (#194)

* ADD: command flushbackup (flush all backup in the backgroud)
* MOD: the backup should not be purged if it's not yet expired, while multi slaves may create more replications than the `num_backups_to_keep`",unstable,True,False,5,server.cc,cc,4,4,8
c19ea89c905f5b4c4a07c71636363609076fd661,karelrooted@gmail.com,2021-02-24 14:44:37+08:00,noreply@github.com,2021-02-24 14:44:37+08:00,"Feature/add flushbackup command (#194)

* ADD: command flushbackup (flush all backup in the backgroud)
* MOD: the backup should not be purged if it's not yet expired, while multi slaves may create more replications than the `num_backups_to_keep`",unstable,True,False,5,server.h,h,1,1,2
c19ea89c905f5b4c4a07c71636363609076fd661,karelrooted@gmail.com,2021-02-24 14:44:37+08:00,noreply@github.com,2021-02-24 14:44:37+08:00,"Feature/add flushbackup command (#194)

* ADD: command flushbackup (flush all backup in the backgroud)
* MOD: the backup should not be purged if it's not yet expired, while multi slaves may create more replications than the `num_backups_to_keep`",unstable,True,False,5,storage.cc,cc,12,5,17
7ca3377585dd25465bbcc94f79cf48a14c4c9db9,karelrooted@gmail.com,2021-02-24 15:01:51+08:00,karelrooted@gmail.com,2021-02-24 15:01:51+08:00,Bump v1.3.1,unstable,True,False,2,CMakeLists.txt,txt,1,1,2
7ca3377585dd25465bbcc94f79cf48a14c4c9db9,karelrooted@gmail.com,2021-02-24 15:01:51+08:00,karelrooted@gmail.com,2021-02-24 15:01:51+08:00,Bump v1.3.1,unstable,True,False,2,Changelog,None,14,0,14
5c20f128b5288dd10e30e99a9132589c8163234b,wangyuan21@baidu.com,2021-02-25 17:20:07+08:00,noreply@github.com,2021-02-25 17:20:07+08:00,Add question template (#195),unstable,True,False,2,bug_report.md,md,1,1,2
5c20f128b5288dd10e30e99a9132589c8163234b,wangyuan21@baidu.com,2021-02-25 17:20:07+08:00,noreply@github.com,2021-02-25 17:20:07+08:00,Add question template (#195),unstable,True,False,2,question.md,md,16,0,16
ce07a7e1530d483734d8b782d2f87cdb5e044e9b,hulk.website@gmail.com,2021-03-04 11:15:36+08:00,noreply@github.com,2021-03-04 11:15:36+08:00,Fix typo (#197),unstable,True,False,1,README.md,md,10,8,18
33bdbcc7a363228008429970221f0e208431cf31,hulk.website@gmail.com,2021-03-08 11:10:19+08:00,noreply@github.com,2021-03-08 11:10:19+08:00,"Remove the python functional test cases (#199)

Summary:

Redis tcl tests module has planted into the kvrocks and it's more
thorough than the python version, so we remove the python version
here.",unstable,True,False,23,kvrocks.yaml,yaml,0,7,7
a9e21dbd5fd485d7172c53d865820bb3c89c0001,wangyuan21@baidu.com,2021-03-10 11:29:13+08:00,noreply@github.com,2021-03-10 11:29:13+08:00,"Optimize TCP keepalive detection time (#201)

On linux, the tcp keeaplive detection time is too long by default,
it is not useful to find some problems actually. Now, we set first
probe interval 120s, three probes before detecting an error, 40s per
probe interval on linux by default.",unstable,True,False,3,util.cc,cc,33,1,34
a9e21dbd5fd485d7172c53d865820bb3c89c0001,wangyuan21@baidu.com,2021-03-10 11:29:13+08:00,noreply@github.com,2021-03-10 11:29:13+08:00,"Optimize TCP keepalive detection time (#201)

On linux, the tcp keeaplive detection time is too long by default,
it is not useful to find some problems actually. Now, we set first
probe interval 120s, three probes before detecting an error, 40s per
probe interval on linux by default.",unstable,True,False,3,util.h,h,1,1,2
a9e21dbd5fd485d7172c53d865820bb3c89c0001,wangyuan21@baidu.com,2021-03-10 11:29:13+08:00,noreply@github.com,2021-03-10 11:29:13+08:00,"Optimize TCP keepalive detection time (#201)

On linux, the tcp keeaplive detection time is too long by default,
it is not useful to find some problems actually. Now, we set first
probe interval 120s, three probes before detecting an error, 40s per
probe interval on linux by default.",unstable,True,False,3,worker.cc,cc,1,1,2
2f6836d142fc0ebf4ff586bc1378f49f29e857ea,wangyuan21@baidu.com,2021-03-10 14:31:46+08:00,noreply@github.com,2021-03-10 14:31:46+08:00,Change master branch into unstable development branch (#202),unstable,True,False,2,CMakeLists.txt,txt,1,1,2
2f6836d142fc0ebf4ff586bc1378f49f29e857ea,wangyuan21@baidu.com,2021-03-10 14:31:46+08:00,noreply@github.com,2021-03-10 14:31:46+08:00,Change master branch into unstable development branch (#202),unstable,True,False,2,Changelog,None,4,2,6
19cfb12d5e92ae9e5c29074a9167a310fdf0d09c,hulk.website@gmail.com,2021-03-11 11:22:08+08:00,noreply@github.com,2021-03-11 11:22:08+08:00,Change the CI target branch name from master to unstable (#203),unstable,True,False,1,kvrocks.yaml,yaml,2,2,4
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,kvrocks.conf,conf,10,3,13
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,config.cc,cc,1,16,17
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,config.h,h,1,3,4
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,main.cc,cc,0,5,5
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,redis_cmd.cc,cc,100,44,144
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,redis_cmd.h,h,1,1,2
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,redis_connection.cc,cc,8,1,9
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,redis_connection.h,h,6,0,6
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,redis_request.cc,cc,1,1,2
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,replication.cc,cc,71,36,107
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,replication.h,h,5,1,6
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,server.cc,cc,6,12,18
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,server.h,h,4,0,4
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,util.cc,cc,70,0,70
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,util.h,h,2,0,2
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,worker.cc,cc,6,12,18
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,default.conf,conf,1,0,1
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,replication.tcl,tcl,96,0,96
62df7667aca37722a3648b36e7cdd34fed522db2,wangyuan21@baidu.com,2021-03-12 11:14:06+08:00,noreply@github.com,2021-03-12 11:14:06+08:00,"Don't use extra port for replication (#200)

As we know, kvrocks has specified replication threads that use 'port + 1' as
listening port and process replication requests, that may make somethings easy,
but it is not convenient to deploy and maintain. In this commit, kvrocks doesn't use
extra port for replication but process replication requests in general work threads.

In order to be compatible with the old version, we provide a configuration item
'master-use-repl-port' to make new version be able to replicate old version master.
If the masters are old version, you should set 'master-use-repl-port' to yes,
otherwise you should set it to no.",unstable,True,False,19,test_helper.tcl,tcl,1,0,1
7d73a9a8fdaeeece0951e7de5899d1e99d8a3222,karelrooted@gmail.com,2021-03-16 18:46:57+08:00,noreply@github.com,2021-03-16 18:46:57+08:00,"Fix incorrect used_db_size value which always uses the same cf to find the key range (#204)

GetApproximateSizes needs the start/end key of the corresponding column family.
But we always use the metadata column family to find the start/end key range.",unstable,True,False,3,redis_db.cc,cc,8,2,10
7d73a9a8fdaeeece0951e7de5899d1e99d8a3222,karelrooted@gmail.com,2021-03-16 18:46:57+08:00,noreply@github.com,2021-03-16 18:46:57+08:00,"Fix incorrect used_db_size value which always uses the same cf to find the key range (#204)

GetApproximateSizes needs the start/end key of the corresponding column family.
But we always use the metadata column family to find the start/end key range.",unstable,True,False,3,redis_db.h,h,4,1,5
7d73a9a8fdaeeece0951e7de5899d1e99d8a3222,karelrooted@gmail.com,2021-03-16 18:46:57+08:00,noreply@github.com,2021-03-16 18:46:57+08:00,"Fix incorrect used_db_size value which always uses the same cf to find the key range (#204)

GetApproximateSizes needs the start/end key of the corresponding column family.
But we always use the metadata column family to find the start/end key range.",unstable,True,False,3,storage.cc,cc,4,5,9
cda4e37990e31a6ea9cf1c3c5bbbab27399926b9,wangyuan21@baidu.com,2021-03-19 19:55:09+08:00,noreply@github.com,2021-03-19 19:55:09+08:00,Fix bgsave-cron typo in kvrocks.conf (#206),unstable,True,False,1,kvrocks.conf,conf,1,1,2
2a915d2312a3daf7a96e9063a83ffee763f8e85b,wangyuan21@baidu.com,2021-03-22 15:52:30+08:00,noreply@github.com,2021-03-22 15:52:30+08:00,"Use checkpoint to implement data snapshot when full replication (#208)

Currently, master creates a new snapshot by backup function of rocksdb when replicas ask for full replication.
Although, rocksdb backup function can support incremental backup, it still cost much time, disk bandwidth, and disk
space if there is no based backup or current backup exists for long time, and backup function really needs copy real
files. If kvrocks holds a huge amount of data, copying data files would influence the writing or reading of rocksdb that
results in latency of user request. As we know, the function checkpoint of rocksdb would hard link data files instead of
copying files, that has minor resource consumption, so we wish using checkpoint to implement data snapshot when
full replication to avoid influencing user requests. The followings are some the details of solution.

* Master
- As similar with full replication by using backup, master will try to create a new checkpoint if there is no checkpoint
when replicas ask full replication, and tell replicas all files name list of checkpoint.
- We can create a new checkpoint for every replica, but there will be many checkpoints that may occupy disk space
because hard link could make deleted files existing during copying file period. So we hope to use one shared
checkpoint, but replicas still wait for next checkpoint if current checkpoint is too old to satisfy feeding new coming
replicas.
- How to clean checkpoint, it is much difficult because replicas fetch data info and data files by different connections
and threads. So i use current fetching files threads number as checkpoint reference count, master will delete
checkpoint if there no thread to fetch files during several seconds. To avoid that a slow replica always keep the
checkpoint alive too long time, master still delete the checkpoint if it is very long time (1 day) from creating
checkpoint.

* Replica
- Replicas still fetch checkpoint files like before, after fetching all files, replicas will destroy old db, rename synced
checkpoint dir to db dir and reload this checkpoint. To avoid loading wrong checkpoint causes db broken, we rename
old db dir, and restore it if the synced checkpoint is corrupt to fail to open.
- How to resume broken transfer based files. We store synced files into a specified dir (synced_checkpoint). Firstly,
because we don't get file CRC by checkpoint to identify unique files, so we must clean the synced_checkpoint dir
when changing master. Secondly, we need to clean up invalid files of master old checkpoint when we check existing
files of master new checkpoint for skipping some transferred files.

For backward compatibility, as #200, kvrocks still support to replicate data from old version master if you set
'master-use-repl-port' to yes.",unstable,True,False,9,config.cc,cc,2,0,2
2a915d2312a3daf7a96e9063a83ffee763f8e85b,wangyuan21@baidu.com,2021-03-22 15:52:30+08:00,noreply@github.com,2021-03-22 15:52:30+08:00,"Use checkpoint to implement data snapshot when full replication (#208)

Currently, master creates a new snapshot by backup function of rocksdb when replicas ask for full replication.
Although, rocksdb backup function can support incremental backup, it still cost much time, disk bandwidth, and disk
space if there is no based backup or current backup exists for long time, and backup function really needs copy real
files. If kvrocks holds a huge amount of data, copying data files would influence the writing or reading of rocksdb that
results in latency of user request. As we know, the function checkpoint of rocksdb would hard link data files instead of
copying files, that has minor resource consumption, so we wish using checkpoint to implement data snapshot when
full replication to avoid influencing user requests. The followings are some the details of solution.

* Master
- As similar with full replication by using backup, master will try to create a new checkpoint if there is no checkpoint
when replicas ask full replication, and tell replicas all files name list of checkpoint.
- We can create a new checkpoint for every replica, but there will be many checkpoints that may occupy disk space
because hard link could make deleted files existing during copying file period. So we hope to use one shared
checkpoint, but replicas still wait for next checkpoint if current checkpoint is too old to satisfy feeding new coming
replicas.
- How to clean checkpoint, it is much difficult because replicas fetch data info and data files by different connections
and threads. So i use current fetching files threads number as checkpoint reference count, master will delete
checkpoint if there no thread to fetch files during several seconds. To avoid that a slow replica always keep the
checkpoint alive too long time, master still delete the checkpoint if it is very long time (1 day) from creating
checkpoint.

* Replica
- Replicas still fetch checkpoint files like before, after fetching all files, replicas will destroy old db, rename synced
checkpoint dir to db dir and reload this checkpoint. To avoid loading wrong checkpoint causes db broken, we rename
old db dir, and restore it if the synced checkpoint is corrupt to fail to open.
- How to resume broken transfer based files. We store synced files into a specified dir (synced_checkpoint). Firstly,
because we don't get file CRC by checkpoint to identify unique files, so we must clean the synced_checkpoint dir
when changing master. Secondly, we need to clean up invalid files of master old checkpoint when we check existing
files of master new checkpoint for skipping some transferred files.

For backward compatibility, as #200, kvrocks still support to replicate data from old version master if you set
'master-use-repl-port' to yes.",unstable,True,False,9,config.h,h,2,0,2
2a915d2312a3daf7a96e9063a83ffee763f8e85b,wangyuan21@baidu.com,2021-03-22 15:52:30+08:00,noreply@github.com,2021-03-22 15:52:30+08:00,"Use checkpoint to implement data snapshot when full replication (#208)

Currently, master creates a new snapshot by backup function of rocksdb when replicas ask for full replication.
Although, rocksdb backup function can support incremental backup, it still cost much time, disk bandwidth, and disk
space if there is no based backup or current backup exists for long time, and backup function really needs copy real
files. If kvrocks holds a huge amount of data, copying data files would influence the writing or reading of rocksdb that
results in latency of user request. As we know, the function checkpoint of rocksdb would hard link data files instead of
copying files, that has minor resource consumption, so we wish using checkpoint to implement data snapshot when
full replication to avoid influencing user requests. The followings are some the details of solution.

* Master
- As similar with full replication by using backup, master will try to create a new checkpoint if there is no checkpoint
when replicas ask full replication, and tell replicas all files name list of checkpoint.
- We can create a new checkpoint for every replica, but there will be many checkpoints that may occupy disk space
because hard link could make deleted files existing during copying file period. So we hope to use one shared
checkpoint, but replicas still wait for next checkpoint if current checkpoint is too old to satisfy feeding new coming
replicas.
- How to clean checkpoint, it is much difficult because replicas fetch data info and data files by different connections
and threads. So i use current fetching files threads number as checkpoint reference count, master will delete
checkpoint if there no thread to fetch files during several seconds. To avoid that a slow replica always keep the
checkpoint alive too long time, master still delete the checkpoint if it is very long time (1 day) from creating
checkpoint.

* Replica
- Replicas still fetch checkpoint files like before, after fetching all files, replicas will destroy old db, rename synced
checkpoint dir to db dir and reload this checkpoint. To avoid loading wrong checkpoint causes db broken, we rename
old db dir, and restore it if the synced checkpoint is corrupt to fail to open.
- How to resume broken transfer based files. We store synced files into a specified dir (synced_checkpoint). Firstly,
because we don't get file CRC by checkpoint to identify unique files, so we must clean the synced_checkpoint dir
when changing master. Secondly, we need to clean up invalid files of master old checkpoint when we check existing
files of master new checkpoint for skipping some transferred files.

For backward compatibility, as #200, kvrocks still support to replicate data from old version master if you set
'master-use-repl-port' to yes.",unstable,True,False,9,redis_cmd.cc,cc,14,18,32
2a915d2312a3daf7a96e9063a83ffee763f8e85b,wangyuan21@baidu.com,2021-03-22 15:52:30+08:00,noreply@github.com,2021-03-22 15:52:30+08:00,"Use checkpoint to implement data snapshot when full replication (#208)

Currently, master creates a new snapshot by backup function of rocksdb when replicas ask for full replication.
Although, rocksdb backup function can support incremental backup, it still cost much time, disk bandwidth, and disk
space if there is no based backup or current backup exists for long time, and backup function really needs copy real
files. If kvrocks holds a huge amount of data, copying data files would influence the writing or reading of rocksdb that
results in latency of user request. As we know, the function checkpoint of rocksdb would hard link data files instead of
copying files, that has minor resource consumption, so we wish using checkpoint to implement data snapshot when
full replication to avoid influencing user requests. The followings are some the details of solution.

* Master
- As similar with full replication by using backup, master will try to create a new checkpoint if there is no checkpoint
when replicas ask full replication, and tell replicas all files name list of checkpoint.
- We can create a new checkpoint for every replica, but there will be many checkpoints that may occupy disk space
because hard link could make deleted files existing during copying file period. So we hope to use one shared
checkpoint, but replicas still wait for next checkpoint if current checkpoint is too old to satisfy feeding new coming
replicas.
- How to clean checkpoint, it is much difficult because replicas fetch data info and data files by different connections
and threads. So i use current fetching files threads number as checkpoint reference count, master will delete
checkpoint if there no thread to fetch files during several seconds. To avoid that a slow replica always keep the
checkpoint alive too long time, master still delete the checkpoint if it is very long time (1 day) from creating
checkpoint.

* Replica
- Replicas still fetch checkpoint files like before, after fetching all files, replicas will destroy old db, rename synced
checkpoint dir to db dir and reload this checkpoint. To avoid loading wrong checkpoint causes db broken, we rename
old db dir, and restore it if the synced checkpoint is corrupt to fail to open.
- How to resume broken transfer based files. We store synced files into a specified dir (synced_checkpoint). Firstly,
because we don't get file CRC by checkpoint to identify unique files, so we must clean the synced_checkpoint dir
when changing master. Secondly, we need to clean up invalid files of master old checkpoint when we check existing
files of master new checkpoint for skipping some transferred files.

For backward compatibility, as #200, kvrocks still support to replicate data from old version master if you set
'master-use-repl-port' to yes.",unstable,True,False,9,replication.cc,cc,76,20,96
2a915d2312a3daf7a96e9063a83ffee763f8e85b,wangyuan21@baidu.com,2021-03-22 15:52:30+08:00,noreply@github.com,2021-03-22 15:52:30+08:00,"Use checkpoint to implement data snapshot when full replication (#208)

Currently, master creates a new snapshot by backup function of rocksdb when replicas ask for full replication.
Although, rocksdb backup function can support incremental backup, it still cost much time, disk bandwidth, and disk
space if there is no based backup or current backup exists for long time, and backup function really needs copy real
files. If kvrocks holds a huge amount of data, copying data files would influence the writing or reading of rocksdb that
results in latency of user request. As we know, the function checkpoint of rocksdb would hard link data files instead of
copying files, that has minor resource consumption, so we wish using checkpoint to implement data snapshot when
full replication to avoid influencing user requests. The followings are some the details of solution.

* Master
- As similar with full replication by using backup, master will try to create a new checkpoint if there is no checkpoint
when replicas ask full replication, and tell replicas all files name list of checkpoint.
- We can create a new checkpoint for every replica, but there will be many checkpoints that may occupy disk space
because hard link could make deleted files existing during copying file period. So we hope to use one shared
checkpoint, but replicas still wait for next checkpoint if current checkpoint is too old to satisfy feeding new coming
replicas.
- How to clean checkpoint, it is much difficult because replicas fetch data info and data files by different connections
and threads. So i use current fetching files threads number as checkpoint reference count, master will delete
checkpoint if there no thread to fetch files during several seconds. To avoid that a slow replica always keep the
checkpoint alive too long time, master still delete the checkpoint if it is very long time (1 day) from creating
checkpoint.

* Replica
- Replicas still fetch checkpoint files like before, after fetching all files, replicas will destroy old db, rename synced
checkpoint dir to db dir and reload this checkpoint. To avoid loading wrong checkpoint causes db broken, we rename
old db dir, and restore it if the synced checkpoint is corrupt to fail to open.
- How to resume broken transfer based files. We store synced files into a specified dir (synced_checkpoint). Firstly,
because we don't get file CRC by checkpoint to identify unique files, so we must clean the synced_checkpoint dir
when changing master. Secondly, we need to clean up invalid files of master old checkpoint when we check existing
files of master new checkpoint for skipping some transferred files.

For backward compatibility, as #200, kvrocks still support to replicate data from old version master if you set
'master-use-repl-port' to yes.",unstable,True,False,9,replication.h,h,8,5,13
2a915d2312a3daf7a96e9063a83ffee763f8e85b,wangyuan21@baidu.com,2021-03-22 15:52:30+08:00,noreply@github.com,2021-03-22 15:52:30+08:00,"Use checkpoint to implement data snapshot when full replication (#208)

Currently, master creates a new snapshot by backup function of rocksdb when replicas ask for full replication.
Although, rocksdb backup function can support incremental backup, it still cost much time, disk bandwidth, and disk
space if there is no based backup or current backup exists for long time, and backup function really needs copy real
files. If kvrocks holds a huge amount of data, copying data files would influence the writing or reading of rocksdb that
results in latency of user request. As we know, the function checkpoint of rocksdb would hard link data files instead of
copying files, that has minor resource consumption, so we wish using checkpoint to implement data snapshot when
full replication to avoid influencing user requests. The followings are some the details of solution.

* Master
- As similar with full replication by using backup, master will try to create a new checkpoint if there is no checkpoint
when replicas ask full replication, and tell replicas all files name list of checkpoint.
- We can create a new checkpoint for every replica, but there will be many checkpoints that may occupy disk space
because hard link could make deleted files existing during copying file period. So we hope to use one shared
checkpoint, but replicas still wait for next checkpoint if current checkpoint is too old to satisfy feeding new coming
replicas.
- How to clean checkpoint, it is much difficult because replicas fetch data info and data files by different connections
and threads. So i use current fetching files threads number as checkpoint reference count, master will delete
checkpoint if there no thread to fetch files during several seconds. To avoid that a slow replica always keep the
checkpoint alive too long time, master still delete the checkpoint if it is very long time (1 day) from creating
checkpoint.

* Replica
- Replicas still fetch checkpoint files like before, after fetching all files, replicas will destroy old db, rename synced
checkpoint dir to db dir and reload this checkpoint. To avoid loading wrong checkpoint causes db broken, we rename
old db dir, and restore it if the synced checkpoint is corrupt to fail to open.
- How to resume broken transfer based files. We store synced files into a specified dir (synced_checkpoint). Firstly,
because we don't get file CRC by checkpoint to identify unique files, so we must clean the synced_checkpoint dir
when changing master. Secondly, we need to clean up invalid files of master old checkpoint when we check existing
files of master new checkpoint for skipping some transferred files.

For backward compatibility, as #200, kvrocks still support to replicate data from old version master if you set
'master-use-repl-port' to yes.",unstable,True,False,9,server.cc,cc,20,0,20
2a915d2312a3daf7a96e9063a83ffee763f8e85b,wangyuan21@baidu.com,2021-03-22 15:52:30+08:00,noreply@github.com,2021-03-22 15:52:30+08:00,"Use checkpoint to implement data snapshot when full replication (#208)

Currently, master creates a new snapshot by backup function of rocksdb when replicas ask for full replication.
Although, rocksdb backup function can support incremental backup, it still cost much time, disk bandwidth, and disk
space if there is no based backup or current backup exists for long time, and backup function really needs copy real
files. If kvrocks holds a huge amount of data, copying data files would influence the writing or reading of rocksdb that
results in latency of user request. As we know, the function checkpoint of rocksdb would hard link data files instead of
copying files, that has minor resource consumption, so we wish using checkpoint to implement data snapshot when
full replication to avoid influencing user requests. The followings are some the details of solution.

* Master
- As similar with full replication by using backup, master will try to create a new checkpoint if there is no checkpoint
when replicas ask full replication, and tell replicas all files name list of checkpoint.
- We can create a new checkpoint for every replica, but there will be many checkpoints that may occupy disk space
because hard link could make deleted files existing during copying file period. So we hope to use one shared
checkpoint, but replicas still wait for next checkpoint if current checkpoint is too old to satisfy feeding new coming
replicas.
- How to clean checkpoint, it is much difficult because replicas fetch data info and data files by different connections
and threads. So i use current fetching files threads number as checkpoint reference count, master will delete
checkpoint if there no thread to fetch files during several seconds. To avoid that a slow replica always keep the
checkpoint alive too long time, master still delete the checkpoint if it is very long time (1 day) from creating
checkpoint.

* Replica
- Replicas still fetch checkpoint files like before, after fetching all files, replicas will destroy old db, rename synced
checkpoint dir to db dir and reload this checkpoint. To avoid loading wrong checkpoint causes db broken, we rename
old db dir, and restore it if the synced checkpoint is corrupt to fail to open.
- How to resume broken transfer based files. We store synced files into a specified dir (synced_checkpoint). Firstly,
because we don't get file CRC by checkpoint to identify unique files, so we must clean the synced_checkpoint dir
when changing master. Secondly, we need to clean up invalid files of master old checkpoint when we check existing
files of master new checkpoint for skipping some transferred files.

For backward compatibility, as #200, kvrocks still support to replicate data from old version master if you set
'master-use-repl-port' to yes.",unstable,True,False,9,storage.cc,cc,159,45,204
2a915d2312a3daf7a96e9063a83ffee763f8e85b,wangyuan21@baidu.com,2021-03-22 15:52:30+08:00,noreply@github.com,2021-03-22 15:52:30+08:00,"Use checkpoint to implement data snapshot when full replication (#208)

Currently, master creates a new snapshot by backup function of rocksdb when replicas ask for full replication.
Although, rocksdb backup function can support incremental backup, it still cost much time, disk bandwidth, and disk
space if there is no based backup or current backup exists for long time, and backup function really needs copy real
files. If kvrocks holds a huge amount of data, copying data files would influence the writing or reading of rocksdb that
results in latency of user request. As we know, the function checkpoint of rocksdb would hard link data files instead of
copying files, that has minor resource consumption, so we wish using checkpoint to implement data snapshot when
full replication to avoid influencing user requests. The followings are some the details of solution.

* Master
- As similar with full replication by using backup, master will try to create a new checkpoint if there is no checkpoint
when replicas ask full replication, and tell replicas all files name list of checkpoint.
- We can create a new checkpoint for every replica, but there will be many checkpoints that may occupy disk space
because hard link could make deleted files existing during copying file period. So we hope to use one shared
checkpoint, but replicas still wait for next checkpoint if current checkpoint is too old to satisfy feeding new coming
replicas.
- How to clean checkpoint, it is much difficult because replicas fetch data info and data files by different connections
and threads. So i use current fetching files threads number as checkpoint reference count, master will delete
checkpoint if there no thread to fetch files during several seconds. To avoid that a slow replica always keep the
checkpoint alive too long time, master still delete the checkpoint if it is very long time (1 day) from creating
checkpoint.

* Replica
- Replicas still fetch checkpoint files like before, after fetching all files, replicas will destroy old db, rename synced
checkpoint dir to db dir and reload this checkpoint. To avoid loading wrong checkpoint causes db broken, we rename
old db dir, and restore it if the synced checkpoint is corrupt to fail to open.
- How to resume broken transfer based files. We store synced files into a specified dir (synced_checkpoint). Firstly,
because we don't get file CRC by checkpoint to identify unique files, so we must clean the synced_checkpoint dir
when changing master. Secondly, we need to clean up invalid files of master old checkpoint when we check existing
files of master new checkpoint for skipping some transferred files.

For backward compatibility, as #200, kvrocks still support to replicate data from old version master if you set
'master-use-repl-port' to yes.",unstable,True,False,9,storage.h,h,27,9,36
2a915d2312a3daf7a96e9063a83ffee763f8e85b,wangyuan21@baidu.com,2021-03-22 15:52:30+08:00,noreply@github.com,2021-03-22 15:52:30+08:00,"Use checkpoint to implement data snapshot when full replication (#208)

Currently, master creates a new snapshot by backup function of rocksdb when replicas ask for full replication.
Although, rocksdb backup function can support incremental backup, it still cost much time, disk bandwidth, and disk
space if there is no based backup or current backup exists for long time, and backup function really needs copy real
files. If kvrocks holds a huge amount of data, copying data files would influence the writing or reading of rocksdb that
results in latency of user request. As we know, the function checkpoint of rocksdb would hard link data files instead of
copying files, that has minor resource consumption, so we wish using checkpoint to implement data snapshot when
full replication to avoid influencing user requests. The followings are some the details of solution.

* Master
- As similar with full replication by using backup, master will try to create a new checkpoint if there is no checkpoint
when replicas ask full replication, and tell replicas all files name list of checkpoint.
- We can create a new checkpoint for every replica, but there will be many checkpoints that may occupy disk space
because hard link could make deleted files existing during copying file period. So we hope to use one shared
checkpoint, but replicas still wait for next checkpoint if current checkpoint is too old to satisfy feeding new coming
replicas.
- How to clean checkpoint, it is much difficult because replicas fetch data info and data files by different connections
and threads. So i use current fetching files threads number as checkpoint reference count, master will delete
checkpoint if there no thread to fetch files during several seconds. To avoid that a slow replica always keep the
checkpoint alive too long time, master still delete the checkpoint if it is very long time (1 day) from creating
checkpoint.

* Replica
- Replicas still fetch checkpoint files like before, after fetching all files, replicas will destroy old db, rename synced
checkpoint dir to db dir and reload this checkpoint. To avoid loading wrong checkpoint causes db broken, we rename
old db dir, and restore it if the synced checkpoint is corrupt to fail to open.
- How to resume broken transfer based files. We store synced files into a specified dir (synced_checkpoint). Firstly,
because we don't get file CRC by checkpoint to identify unique files, so we must clean the synced_checkpoint dir
when changing master. Secondly, we need to clean up invalid files of master old checkpoint when we check existing
files of master new checkpoint for skipping some transferred files.

For backward compatibility, as #200, kvrocks still support to replicate data from old version master if you set
'master-use-repl-port' to yes.",unstable,True,False,9,replication.tcl,tcl,33,3,36
f58bc977338444a0c2158afcaa43f6f0c3866894,wangyuan21@baidu.com,2021-03-22 16:54:23+08:00,noreply@github.com,2021-03-22 16:54:23+08:00,Fix compression algorithm typo (#207),unstable,True,False,1,event_listener.cc,cc,1,1,2
1d077fbf12f6a668817964189382197912d76a38,wangyuan21@baidu.com,2021-03-25 11:35:15+08:00,noreply@github.com,2021-03-25 11:35:15+08:00,"Set log_size_for_flush for checkpoint (#210)

Also enlarge some time dependence for replication test",unstable,True,False,2,storage.cc,cc,2,1,3
1d077fbf12f6a668817964189382197912d76a38,wangyuan21@baidu.com,2021-03-25 11:35:15+08:00,noreply@github.com,2021-03-25 11:35:15+08:00,"Set log_size_for_flush for checkpoint (#210)

Also enlarge some time dependence for replication test",unstable,True,False,2,replication.tcl,tcl,3,0,3
fc4886453a449533e148ace8429047d78159f7e1,hulk.website@gmail.com,2021-03-26 15:22:54+08:00,noreply@github.com,2021-03-26 15:22:54+08:00,"Fix the SST file creation time maybe 0 in some unknown conditions (#211)

we use the file creation time to force compact the SST file which
created over 2 days, so fallback to file modification time here to
prevent repeatedly compacting the same SST file if the file creation
time was zero in some unknown conditions.",unstable,True,False,1,compaction_checker.cc,cc,15,2,17
c0bf6dbc280c814c86f2623b4c17392d7fdb4d97,hulk.website@gmail.com,2021-03-29 12:48:48+08:00,noreply@github.com,2021-03-29 12:48:48+08:00,"Decrease the default value of the max total wal size to 16GiB (#212)

Currently, the default max total WAL size 100GiB which may keep too many
WAL files for most scenes, so reduce it to 16GiB to make the disk space
happy. Also increase the WAL TTL from 1 hour to 3 hours to keep those
WAL files longer for making the psync possible.",unstable,True,False,2,kvrocks.conf,conf,4,4,8
c0bf6dbc280c814c86f2623b4c17392d7fdb4d97,hulk.website@gmail.com,2021-03-29 12:48:48+08:00,noreply@github.com,2021-03-29 12:48:48+08:00,"Decrease the default value of the max total wal size to 16GiB (#212)

Currently, the default max total WAL size 100GiB which may keep too many
WAL files for most scenes, so reduce it to 16GiB to make the disk space
happy. Also increase the WAL TTL from 1 hour to 3 hours to keep those
WAL files longer for making the psync possible.",unstable,True,False,2,config.cc,cc,2,2,4
fba57e5b3c22a4dfea75ce17f8e633448fe6c061,ChrisZMF@163.com,2021-03-29 13:11:24+08:00,noreply@github.com,2021-03-29 13:11:24+08:00,Add some instantaneous metric into the info command (#213),unstable,True,False,3,server.cc,cc,9,0,9
fba57e5b3c22a4dfea75ce17f8e633448fe6c061,ChrisZMF@163.com,2021-03-29 13:11:24+08:00,noreply@github.com,2021-03-29 13:11:24+08:00,Add some instantaneous metric into the info command (#213),unstable,True,False,3,stats.cc,cc,39,1,40
fba57e5b3c22a4dfea75ce17f8e633448fe6c061,ChrisZMF@163.com,2021-03-29 13:11:24+08:00,noreply@github.com,2021-03-29 13:11:24+08:00,Add some instantaneous metric into the info command (#213),unstable,True,False,3,stats.h,h,21,0,21
1a981a962c1022b16c1d316447a504ddbc3185ab,wangyuan21@baidu.com,2021-04-01 10:48:26+08:00,noreply@github.com,2021-04-01 10:48:26+08:00,Add log when cleaning checkpoint successfully (#214),unstable,True,False,1,server.cc,cc,3,1,4
613969d9eadc3b61e5fd292506bf7adda833e672,wangyuan21@baidu.com,2021-04-09 16:22:45+08:00,noreply@github.com,2021-04-09 16:22:45+08:00,Slowlog omits args or argument string if too many or big (#215),unstable,True,False,3,server.cc,cc,14,1,15
613969d9eadc3b61e5fd292506bf7adda833e672,wangyuan21@baidu.com,2021-04-09 16:22:45+08:00,noreply@github.com,2021-04-09 16:22:45+08:00,Slowlog omits args or argument string if too many or big (#215),unstable,True,False,3,server.h,h,5,0,5
613969d9eadc3b61e5fd292506bf7adda833e672,wangyuan21@baidu.com,2021-04-09 16:22:45+08:00,noreply@github.com,2021-04-09 16:22:45+08:00,Slowlog omits args or argument string if too many or big (#215),unstable,True,False,3,slowlog.tcl,tcl,2,2,4
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,CMakeLists.txt,txt,0,6,6
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,README.md,md,0,1,1
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,kvrocks.conf,conf,0,5,5
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,Makefile,None,1,1,2
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,compact_filter.cc,cc,0,68,68
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,compact_filter.h,h,0,36,36
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,compaction_checker.cc,cc,1,5,6
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,compaction_checker.h,h,1,1,2
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,config.cc,cc,0,7,7
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,config.h,h,0,1,1
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,redis_bitmap.cc,cc,0,29,29
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,redis_bitmap.h,h,0,6,6
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,redis_cmd.cc,cc,0,425,425
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,redis_db.cc,cc,0,26,26
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,redis_db.h,h,0,18,18
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,server.cc,cc,1,12,13
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,server.h,h,0,2,2
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,storage.cc,cc,0,67,67
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,storage.h,h,0,3,3
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,config_test.cc,cc,0,1,1
9b89c741135334dea32304a55dee568223928ca7,karelrooted@gmail.com,2021-04-12 18:49:49+08:00,noreply@github.com,2021-04-12 18:49:49+08:00,"Remove codis support (#217)

Remove codis support (well no one use codis anymore, will add a redis cluster like feature in next major version.
Msetbit cmd was also removed because is no longer needed (previous added for codis support)",unstable,True,False,23,parser.cc,cc,0,1,1
6da75c0d77fe4a8967eb1da29e8c6e77ffcdd1da,wangyuan21@baidu.com,2021-04-12 21:01:52+08:00,noreply@github.com,2021-04-12 21:01:52+08:00,New logo (#216),unstable,True,False,2,README.md,md,6,6,12
6da75c0d77fe4a8967eb1da29e8c6e77ffcdd1da,wangyuan21@baidu.com,2021-04-12 21:01:52+08:00,noreply@github.com,2021-04-12 21:01:52+08:00,New logo (#216),unstable,True,False,2,kvrocks_logo.png,png,0,0,0
b13a4fbf038e67c0b78a240f6ed445b0fab48e8c,wangyuan21@baidu.com,2021-04-12 22:09:53+08:00,noreply@github.com,2021-04-12 22:09:53+08:00,Fix topo in README.md (#218),unstable,True,False,1,README.md,md,3,3,6
d3930ac424e393bb2cd933fdf17bb728cc90a7d2,karelrooted@gmail.com,2021-04-15 19:59:36+08:00,noreply@github.com,2021-04-15 19:59:36+08:00,"Fix get corruption writebatch data after psync restart

Fix get corruption writebatch data (wrongly include writebatch size at the header of the writebatch data) after a restart cause by a failed storage->writebatch() , should always set incr_state_ to Incr_batch_size whether storage_->writebatch success or not , so the next incrementBatchLoopCB will start from the right step (#221)",unstable,True,False,1,replication.cc,cc,1,0,1
287c387f4728a531939f266fb7ba318df22edb1d,hulk.website@gmail.com,2021-04-19 18:25:15+08:00,noreply@github.com,2021-04-19 18:25:15+08:00,Build and push docker image when pushing a new tag (#222),unstable,True,False,3,docker_image.yaml,yaml,42,0,42
287c387f4728a531939f266fb7ba318df22edb1d,hulk.website@gmail.com,2021-04-19 18:25:15+08:00,noreply@github.com,2021-04-19 18:25:15+08:00,Build and push docker image when pushing a new tag (#222),unstable,True,False,3,README.md,md,3,3,6
e505c74b15c7e82953d5d051f1a42018536d067c,hulk.website@gmail.com,2021-04-22 13:15:38+08:00,noreply@github.com,2021-04-22 13:15:38+08:00,Use never expires share link to allow users to join the kvrocks community (#228),unstable,True,False,1,README.md,md,1,1,2
55c1753d8d9dc4bbc96e67b54140cd7617f665b3,karelrooted@gmail.com,2021-04-23 10:11:47+08:00,noreply@github.com,2021-04-23 10:11:47+08:00,"Fix can't auto resume after no space error  (#229)

Fix can't auto resume after no space error when the no space error is only trigger by db_->Write without any other background action (compact/flush)",unstable,True,False,3,event_listener.cc,cc,3,0,3
55c1753d8d9dc4bbc96e67b54140cd7617f665b3,karelrooted@gmail.com,2021-04-23 10:11:47+08:00,noreply@github.com,2021-04-23 10:11:47+08:00,"Fix can't auto resume after no space error  (#229)

Fix can't auto resume after no space error when the no space error is only trigger by db_->Write without any other background action (compact/flush)",unstable,True,False,3,server.cc,cc,9,0,9
55c1753d8d9dc4bbc96e67b54140cd7617f665b3,karelrooted@gmail.com,2021-04-23 10:11:47+08:00,noreply@github.com,2021-04-23 10:11:47+08:00,"Fix can't auto resume after no space error  (#229)

Fix can't auto resume after no space error when the no space error is only trigger by db_->Write without any other background action (compact/flush)",unstable,True,False,3,storage.h,h,3,0,3
fab7db799d74317e73e74ee3d950bd26cfde5b31,wangyuan21@baidu.com,2021-04-23 10:44:33+08:00,noreply@github.com,2021-04-23 10:44:33+08:00,Apply CI on all branch (#231),unstable,True,False,1,kvrocks.yaml,yaml,1,7,8
b242ebe57a1fb9c72f6a155af9038531eef3ca09,wangyuan21@baidu.com,2021-04-23 16:53:06+08:00,noreply@github.com,2021-04-23 16:53:06+08:00,"Use checkpoint to implement kvrocks backup (#232)

Before this commit, kvrocks uses backup of rocksdb to implement backup,
as we know, rocksdb backup costs much bandwidth and space of disk,
even it supports incremental backup, compared with its drawback, we still
decide use checkpoint to implement backup. Please see #220",unstable,True,False,7,kvrocks.conf,conf,3,4,7
b242ebe57a1fb9c72f6a155af9038531eef3ca09,wangyuan21@baidu.com,2021-04-23 16:53:06+08:00,noreply@github.com,2021-04-23 16:53:06+08:00,"Use checkpoint to implement kvrocks backup (#232)

Before this commit, kvrocks uses backup of rocksdb to implement backup,
as we know, rocksdb backup costs much bandwidth and space of disk,
even it supports incremental backup, compared with its drawback, we still
decide use checkpoint to implement backup. Please see #220",unstable,True,False,7,config.cc,cc,3,2,5
b242ebe57a1fb9c72f6a155af9038531eef3ca09,wangyuan21@baidu.com,2021-04-23 16:53:06+08:00,noreply@github.com,2021-04-23 16:53:06+08:00,"Use checkpoint to implement kvrocks backup (#232)

Before this commit, kvrocks uses backup of rocksdb to implement backup,
as we know, rocksdb backup costs much bandwidth and space of disk,
even it supports incremental backup, compared with its drawback, we still
decide use checkpoint to implement backup. Please see #220",unstable,True,False,7,config.h,h,2,1,3
b242ebe57a1fb9c72f6a155af9038531eef3ca09,wangyuan21@baidu.com,2021-04-23 16:53:06+08:00,noreply@github.com,2021-04-23 16:53:06+08:00,"Use checkpoint to implement kvrocks backup (#232)

Before this commit, kvrocks uses backup of rocksdb to implement backup,
as we know, rocksdb backup costs much bandwidth and space of disk,
even it supports incremental backup, compared with its drawback, we still
decide use checkpoint to implement backup. Please see #220",unstable,True,False,7,replication.cc,cc,1,2,3
b242ebe57a1fb9c72f6a155af9038531eef3ca09,wangyuan21@baidu.com,2021-04-23 16:53:06+08:00,noreply@github.com,2021-04-23 16:53:06+08:00,"Use checkpoint to implement kvrocks backup (#232)

Before this commit, kvrocks uses backup of rocksdb to implement backup,
as we know, rocksdb backup costs much bandwidth and space of disk,
even it supports incremental backup, compared with its drawback, we still
decide use checkpoint to implement backup. Please see #220",unstable,True,False,7,server.cc,cc,0,1,1
b242ebe57a1fb9c72f6a155af9038531eef3ca09,wangyuan21@baidu.com,2021-04-23 16:53:06+08:00,noreply@github.com,2021-04-23 16:53:06+08:00,"Use checkpoint to implement kvrocks backup (#232)

Before this commit, kvrocks uses backup of rocksdb to implement backup,
as we know, rocksdb backup costs much bandwidth and space of disk,
even it supports incremental backup, compared with its drawback, we still
decide use checkpoint to implement backup. Please see #220",unstable,True,False,7,storage.cc,cc,62,67,129
b242ebe57a1fb9c72f6a155af9038531eef3ca09,wangyuan21@baidu.com,2021-04-23 16:53:06+08:00,noreply@github.com,2021-04-23 16:53:06+08:00,"Use checkpoint to implement kvrocks backup (#232)

Before this commit, kvrocks uses backup of rocksdb to implement backup,
as we know, rocksdb backup costs much bandwidth and space of disk,
even it supports incremental backup, compared with its drawback, we still
decide use checkpoint to implement backup. Please see #220",unstable,True,False,7,storage.h,h,1,1,2
1da78776d8cecc0275b3e096fa714abf15c4c789,wangyuan21@baidu.com,2021-04-23 18:52:00+08:00,noreply@github.com,2021-04-23 18:52:00+08:00,"Replicas can empty db before fullsync (#233)

To guarantee slave's data safe and serve when it is in full synchronization
state, slave still keep itself data. But this way needs to occupy much disk
space, so we provide a way to reduce disk occupation, slave will delete itself
entire database before fetching files from master during full synchronization.
If you want to enable this way, you can set 'slave-delete-db-before-fullsync'
to yes, but you must know that database will be lost if master is down during
full synchronization, unless you have a backup of database.

This option is similar redis replicas RDB diskless load option:
repl-diskless-load on-empty-db",unstable,True,False,8,kvrocks.conf,conf,14,0,14
1da78776d8cecc0275b3e096fa714abf15c4c789,wangyuan21@baidu.com,2021-04-23 18:52:00+08:00,noreply@github.com,2021-04-23 18:52:00+08:00,"Replicas can empty db before fullsync (#233)

To guarantee slave's data safe and serve when it is in full synchronization
state, slave still keep itself data. But this way needs to occupy much disk
space, so we provide a way to reduce disk occupation, slave will delete itself
entire database before fetching files from master during full synchronization.
If you want to enable this way, you can set 'slave-delete-db-before-fullsync'
to yes, but you must know that database will be lost if master is down during
full synchronization, unless you have a backup of database.

This option is similar redis replicas RDB diskless load option:
repl-diskless-load on-empty-db",unstable,True,False,8,config.cc,cc,1,0,1
1da78776d8cecc0275b3e096fa714abf15c4c789,wangyuan21@baidu.com,2021-04-23 18:52:00+08:00,noreply@github.com,2021-04-23 18:52:00+08:00,"Replicas can empty db before fullsync (#233)

To guarantee slave's data safe and serve when it is in full synchronization
state, slave still keep itself data. But this way needs to occupy much disk
space, so we provide a way to reduce disk occupation, slave will delete itself
entire database before fetching files from master during full synchronization.
If you want to enable this way, you can set 'slave-delete-db-before-fullsync'
to yes, but you must know that database will be lost if master is down during
full synchronization, unless you have a backup of database.

This option is similar redis replicas RDB diskless load option:
repl-diskless-load on-empty-db",unstable,True,False,8,config.h,h,1,0,1
1da78776d8cecc0275b3e096fa714abf15c4c789,wangyuan21@baidu.com,2021-04-23 18:52:00+08:00,noreply@github.com,2021-04-23 18:52:00+08:00,"Replicas can empty db before fullsync (#233)

To guarantee slave's data safe and serve when it is in full synchronization
state, slave still keep itself data. But this way needs to occupy much disk
space, so we provide a way to reduce disk occupation, slave will delete itself
entire database before fetching files from master during full synchronization.
If you want to enable this way, you can set 'slave-delete-db-before-fullsync'
to yes, but you must know that database will be lost if master is down during
full synchronization, unless you have a backup of database.

This option is similar redis replicas RDB diskless load option:
repl-diskless-load on-empty-db",unstable,True,False,8,replication.cc,cc,11,2,13
1da78776d8cecc0275b3e096fa714abf15c4c789,wangyuan21@baidu.com,2021-04-23 18:52:00+08:00,noreply@github.com,2021-04-23 18:52:00+08:00,"Replicas can empty db before fullsync (#233)

To guarantee slave's data safe and serve when it is in full synchronization
state, slave still keep itself data. But this way needs to occupy much disk
space, so we provide a way to reduce disk occupation, slave will delete itself
entire database before fetching files from master during full synchronization.
If you want to enable this way, you can set 'slave-delete-db-before-fullsync'
to yes, but you must know that database will be lost if master is down during
full synchronization, unless you have a backup of database.

This option is similar redis replicas RDB diskless load option:
repl-diskless-load on-empty-db",unstable,True,False,8,server.cc,cc,3,1,4
1da78776d8cecc0275b3e096fa714abf15c4c789,wangyuan21@baidu.com,2021-04-23 18:52:00+08:00,noreply@github.com,2021-04-23 18:52:00+08:00,"Replicas can empty db before fullsync (#233)

To guarantee slave's data safe and serve when it is in full synchronization
state, slave still keep itself data. But this way needs to occupy much disk
space, so we provide a way to reduce disk occupation, slave will delete itself
entire database before fetching files from master during full synchronization.
If you want to enable this way, you can set 'slave-delete-db-before-fullsync'
to yes, but you must know that database will be lost if master is down during
full synchronization, unless you have a backup of database.

This option is similar redis replicas RDB diskless load option:
repl-diskless-load on-empty-db",unstable,True,False,8,server.h,h,2,2,4
1da78776d8cecc0275b3e096fa714abf15c4c789,wangyuan21@baidu.com,2021-04-23 18:52:00+08:00,noreply@github.com,2021-04-23 18:52:00+08:00,"Replicas can empty db before fullsync (#233)

To guarantee slave's data safe and serve when it is in full synchronization
state, slave still keep itself data. But this way needs to occupy much disk
space, so we provide a way to reduce disk occupation, slave will delete itself
entire database before fetching files from master during full synchronization.
If you want to enable this way, you can set 'slave-delete-db-before-fullsync'
to yes, but you must know that database will be lost if master is down during
full synchronization, unless you have a backup of database.

This option is similar redis replicas RDB diskless load option:
repl-diskless-load on-empty-db",unstable,True,False,8,storage.cc,cc,27,0,27
1da78776d8cecc0275b3e096fa714abf15c4c789,wangyuan21@baidu.com,2021-04-23 18:52:00+08:00,noreply@github.com,2021-04-23 18:52:00+08:00,"Replicas can empty db before fullsync (#233)

To guarantee slave's data safe and serve when it is in full synchronization
state, slave still keep itself data. But this way needs to occupy much disk
space, so we provide a way to reduce disk occupation, slave will delete itself
entire database before fetching files from master during full synchronization.
If you want to enable this way, you can set 'slave-delete-db-before-fullsync'
to yes, but you must know that database will be lost if master is down during
full synchronization, unless you have a backup of database.

This option is similar redis replicas RDB diskless load option:
repl-diskless-load on-empty-db",unstable,True,False,8,storage.h,h,1,0,1
a0dbde4f3eab4982074b56cb7c3ab3c44f675dcb,wangyuan21@baidu.com,2021-04-23 20:45:34+08:00,noreply@github.com,2021-04-23 20:45:34+08:00,Add pubsub_patterns into INFO command (#234),unstable,True,False,1,server.cc,cc,5,1,6
8fea0fd7b3e1ba10771fefddb678eb9eae1287df,wangyuan21@baidu.com,2021-04-28 17:31:10+08:00,noreply@github.com,2021-04-28 17:31:10+08:00,"Fix uninitialized Rocksdb.level0_stop_writes_trigger (#236)

Also support to config level0_stop_writes_trigger",unstable,True,False,4,kvrocks.conf,conf,5,0,5
8fea0fd7b3e1ba10771fefddb678eb9eae1287df,wangyuan21@baidu.com,2021-04-28 17:31:10+08:00,noreply@github.com,2021-04-28 17:31:10+08:00,"Fix uninitialized Rocksdb.level0_stop_writes_trigger (#236)

Also support to config level0_stop_writes_trigger",unstable,True,False,4,Makefile,None,1,1,2
8fea0fd7b3e1ba10771fefddb678eb9eae1287df,wangyuan21@baidu.com,2021-04-28 17:31:10+08:00,noreply@github.com,2021-04-28 17:31:10+08:00,"Fix uninitialized Rocksdb.level0_stop_writes_trigger (#236)

Also support to config level0_stop_writes_trigger",unstable,True,False,4,config.cc,cc,10,12,22
8fea0fd7b3e1ba10771fefddb678eb9eae1287df,wangyuan21@baidu.com,2021-04-28 17:31:10+08:00,noreply@github.com,2021-04-28 17:31:10+08:00,"Fix uninitialized Rocksdb.level0_stop_writes_trigger (#236)

Also support to config level0_stop_writes_trigger",unstable,True,False,4,config_test.cc,cc,2,1,3
7e092843fabd0df0fdd98557504b5e15742a1ae6,karelrooted@gmail.com,2021-04-30 22:00:15+08:00,noreply@github.com,2021-04-30 22:00:15+08:00,Fix slave can't execute publish command (#238),unstable,True,False,1,redis_cmd.cc,cc,11,6,17
ebbcd21dfc0fe29af4ff06da771b7871f63bfd4f,wangyuan21@baidu.com,2021-04-30 23:11:16+08:00,noreply@github.com,2021-04-30 23:11:16+08:00,Avoid copy constructor for request commands (#239),unstable,True,False,1,redis_request.cc,cc,2,2,4
e28d7ba89e6aa3d2e67d156c9ca3ba53981024e1,hulk.website@gmail.com,2021-05-03 22:13:11+08:00,noreply@github.com,2021-05-03 22:13:11+08:00,Fix illegal instruction error in ubuntu docker image (#244),unstable,True,False,1,Makefile,None,1,1,2
e9b740a2347f252ffcda21351e597a3ec53ff43d,wangyuan21@baidu.com,2021-05-03 22:22:35+08:00,noreply@github.com,2021-05-03 22:22:35+08:00,Refactor master handling psync requests (#243),unstable,True,False,3,redis_cmd.cc,cc,17,7,24
e9b740a2347f252ffcda21351e597a3ec53ff43d,wangyuan21@baidu.com,2021-05-03 22:22:35+08:00,noreply@github.com,2021-05-03 22:22:35+08:00,Refactor master handling psync requests (#243),unstable,True,False,3,replication.cc,cc,3,4,7
e9b740a2347f252ffcda21351e597a3ec53ff43d,wangyuan21@baidu.com,2021-05-03 22:22:35+08:00,noreply@github.com,2021-05-03 22:22:35+08:00,Refactor master handling psync requests (#243),unstable,True,False,3,server.cc,cc,1,10,11
6a0dca754d13f7f7bf69cf44b7e1f55b3f25eecc,wangyuan21@baidu.com,2021-05-06 11:37:35+08:00,noreply@github.com,2021-05-06 11:37:35+08:00,"Add config purge-backup-on-fullsync (#245)

If replicas need full synchronization with master, master need to create
checkpoint for feeding replicas, and replicas also stage a checkpoint of
the master. If we also keep the backup, it maybe occupy extra disk space.
You can enable 'purge-backup-on-fullsync' if disk is not sufficient, but
that may cause remote backup copy failing. This config is no by default.

Other changes
  - Simply how to check checkpoint exists or not
  - Adjust cron for purging backup and checkpoint",unstable,True,False,6,kvrocks.conf,conf,9,0,9
6a0dca754d13f7f7bf69cf44b7e1f55b3f25eecc,wangyuan21@baidu.com,2021-05-06 11:37:35+08:00,noreply@github.com,2021-05-06 11:37:35+08:00,"Add config purge-backup-on-fullsync (#245)

If replicas need full synchronization with master, master need to create
checkpoint for feeding replicas, and replicas also stage a checkpoint of
the master. If we also keep the backup, it maybe occupy extra disk space.
You can enable 'purge-backup-on-fullsync' if disk is not sufficient, but
that may cause remote backup copy failing. This config is no by default.

Other changes
  - Simply how to check checkpoint exists or not
  - Adjust cron for purging backup and checkpoint",unstable,True,False,6,config.cc,cc,1,0,1
6a0dca754d13f7f7bf69cf44b7e1f55b3f25eecc,wangyuan21@baidu.com,2021-05-06 11:37:35+08:00,noreply@github.com,2021-05-06 11:37:35+08:00,"Add config purge-backup-on-fullsync (#245)

If replicas need full synchronization with master, master need to create
checkpoint for feeding replicas, and replicas also stage a checkpoint of
the master. If we also keep the backup, it maybe occupy extra disk space.
You can enable 'purge-backup-on-fullsync' if disk is not sufficient, but
that may cause remote backup copy failing. This config is no by default.

Other changes
  - Simply how to check checkpoint exists or not
  - Adjust cron for purging backup and checkpoint",unstable,True,False,6,config.h,h,1,0,1
6a0dca754d13f7f7bf69cf44b7e1f55b3f25eecc,wangyuan21@baidu.com,2021-05-06 11:37:35+08:00,noreply@github.com,2021-05-06 11:37:35+08:00,"Add config purge-backup-on-fullsync (#245)

If replicas need full synchronization with master, master need to create
checkpoint for feeding replicas, and replicas also stage a checkpoint of
the master. If we also keep the backup, it maybe occupy extra disk space.
You can enable 'purge-backup-on-fullsync' if disk is not sufficient, but
that may cause remote backup copy failing. This config is no by default.

Other changes
  - Simply how to check checkpoint exists or not
  - Adjust cron for purging backup and checkpoint",unstable,True,False,6,server.cc,cc,12,7,19
6a0dca754d13f7f7bf69cf44b7e1f55b3f25eecc,wangyuan21@baidu.com,2021-05-06 11:37:35+08:00,noreply@github.com,2021-05-06 11:37:35+08:00,"Add config purge-backup-on-fullsync (#245)

If replicas need full synchronization with master, master need to create
checkpoint for feeding replicas, and replicas also stage a checkpoint of
the master. If we also keep the backup, it maybe occupy extra disk space.
You can enable 'purge-backup-on-fullsync' if disk is not sufficient, but
that may cause remote backup copy failing. This config is no by default.

Other changes
  - Simply how to check checkpoint exists or not
  - Adjust cron for purging backup and checkpoint",unstable,True,False,6,storage.cc,cc,9,3,12
6a0dca754d13f7f7bf69cf44b7e1f55b3f25eecc,wangyuan21@baidu.com,2021-05-06 11:37:35+08:00,noreply@github.com,2021-05-06 11:37:35+08:00,"Add config purge-backup-on-fullsync (#245)

If replicas need full synchronization with master, master need to create
checkpoint for feeding replicas, and replicas also stage a checkpoint of
the master. If we also keep the backup, it maybe occupy extra disk space.
You can enable 'purge-backup-on-fullsync' if disk is not sufficient, but
that may cause remote backup copy failing. This config is no by default.

Other changes
  - Simply how to check checkpoint exists or not
  - Adjust cron for purging backup and checkpoint",unstable,True,False,6,storage.h,h,2,3,5
e495bd6cbf9f95068e82d645973bfe1cf249ea34,hulk.website@gmail.com,2021-05-06 19:50:02+08:00,noreply@github.com,2021-05-06 19:50:02+08:00,Use reference to avoid creating a copy in for loop (#247),unstable,True,False,3,redis_cmd.cc,cc,8,8,16
e495bd6cbf9f95068e82d645973bfe1cf249ea34,hulk.website@gmail.com,2021-05-06 19:50:02+08:00,noreply@github.com,2021-05-06 19:50:02+08:00,Use reference to avoid creating a copy in for loop (#247),unstable,True,False,3,redis_set.cc,cc,1,1,2
e495bd6cbf9f95068e82d645973bfe1cf249ea34,hulk.website@gmail.com,2021-05-06 19:50:02+08:00,noreply@github.com,2021-05-06 19:50:02+08:00,Use reference to avoid creating a copy in for loop (#247),unstable,True,False,3,worker.cc,cc,3,3,6
8684f96d03964ac6d980179c1b04169874038d6d,hulk.website@gmail.com,2021-05-06 21:20:26+08:00,noreply@github.com,2021-05-06 21:20:26+08:00,Refactor the redis command table to support attributes (#248),unstable,True,False,3,main.cc,cc,1,0,1
8684f96d03964ac6d980179c1b04169874038d6d,hulk.website@gmail.com,2021-05-06 21:20:26+08:00,noreply@github.com,2021-05-06 21:20:26+08:00,Refactor the redis command table to support attributes (#248),unstable,True,False,3,redis_cmd.cc,cc,182,163,345
8684f96d03964ac6d980179c1b04169874038d6d,hulk.website@gmail.com,2021-05-06 21:20:26+08:00,noreply@github.com,2021-05-06 21:20:26+08:00,Refactor the redis command table to support attributes (#248),unstable,True,False,3,redis_cmd.h,h,1,0,1
9781e939ed111b7a43fe7f329ea488aa0162e8e4,wangyuan21@baidu.com,2021-05-07 17:15:46+08:00,noreply@github.com,2021-05-07 17:15:46+08:00,Fix condition race for ReclaimOldDBPtr (#246),unstable,True,False,2,redis_request.cc,cc,8,0,8
9781e939ed111b7a43fe7f329ea488aa0162e8e4,wangyuan21@baidu.com,2021-05-07 17:15:46+08:00,noreply@github.com,2021-05-07 17:15:46+08:00,Fix condition race for ReclaimOldDBPtr (#246),unstable,True,False,2,server.cc,cc,2,2,4
cae2665e9659622e004ac5f16007f46b75041ce2,hulk.website@gmail.com,2021-05-08 18:55:00+08:00,noreply@github.com,2021-05-08 18:55:00+08:00,Move redis command attributes together (#252),unstable,True,False,9,docker_image.yaml,yaml,1,1,2
cae2665e9659622e004ac5f16007f46b75041ce2,hulk.website@gmail.com,2021-05-08 18:55:00+08:00,noreply@github.com,2021-05-08 18:55:00+08:00,Move redis command attributes together (#252),unstable,True,False,9,kvrocks.yaml,yaml,3,1,4
cae2665e9659622e004ac5f16007f46b75041ce2,hulk.website@gmail.com,2021-05-08 18:55:00+08:00,noreply@github.com,2021-05-08 18:55:00+08:00,Move redis command attributes together (#252),unstable,True,False,9,config.cc,cc,3,1,4
cae2665e9659622e004ac5f16007f46b75041ce2,hulk.website@gmail.com,2021-05-08 18:55:00+08:00,noreply@github.com,2021-05-08 18:55:00+08:00,Move redis command attributes together (#252),unstable,True,False,9,main.cc,cc,0,1,1
cae2665e9659622e004ac5f16007f46b75041ce2,hulk.website@gmail.com,2021-05-08 18:55:00+08:00,noreply@github.com,2021-05-08 18:55:00+08:00,Move redis command attributes together (#252),unstable,True,False,9,redis_cmd.cc,cc,214,408,622
cae2665e9659622e004ac5f16007f46b75041ce2,hulk.website@gmail.com,2021-05-08 18:55:00+08:00,noreply@github.com,2021-05-08 18:55:00+08:00,Move redis command attributes together (#252),unstable,True,False,9,redis_cmd.h,h,18,16,34
cae2665e9659622e004ac5f16007f46b75041ce2,hulk.website@gmail.com,2021-05-08 18:55:00+08:00,noreply@github.com,2021-05-08 18:55:00+08:00,Move redis command attributes together (#252),unstable,True,False,9,redis_request.cc,cc,10,6,16
cae2665e9659622e004ac5f16007f46b75041ce2,hulk.website@gmail.com,2021-05-08 18:55:00+08:00,noreply@github.com,2021-05-08 18:55:00+08:00,Move redis command attributes together (#252),unstable,True,False,9,server.cc,cc,33,5,38
cae2665e9659622e004ac5f16007f46b75041ce2,hulk.website@gmail.com,2021-05-08 18:55:00+08:00,noreply@github.com,2021-05-08 18:55:00+08:00,Move redis command attributes together (#252),unstable,True,False,9,server.h,h,4,0,4
fbc41f03473c126a51c446a9216fef596dd47adc,karelrooted@gmail.com,2021-05-08 18:58:14+08:00,noreply@github.com,2021-05-08 18:58:14+08:00,"Fix typo in getrange (substr func's second argu is length) (#254)

* Fix typo in getrange (substr func's second argu is length)
* Add getrange testcase where start>0 && stop!=size-1",unstable,True,False,2,redis_cmd.cc,cc,1,1,2
fbc41f03473c126a51c446a9216fef596dd47adc,karelrooted@gmail.com,2021-05-08 18:58:14+08:00,noreply@github.com,2021-05-08 18:58:14+08:00,"Fix typo in getrange (substr func's second argu is length) (#254)

* Fix typo in getrange (substr func's second argu is length)
* Add getrange testcase where start>0 && stop!=size-1",unstable,True,False,2,string.tcl,tcl,1,0,1
1ac04ca2a6a519c01e29460ef360ea4814ff6fe2,calvin325@gmail.com,2021-05-10 12:26:03+08:00,noreply@github.com,2021-05-10 12:26:03+08:00,"Fix data race for accessing database in some commands (#253)

Before this commit, in spop, zremrangebylex, zremrangebyscore commands, the  lock guard for accessing database may not work actually.

Other changes
- Use 'localtime_r' instead of 'localtime'
- Use 'std::this_thread::get_id()' to get thread id",unstable,True,False,4,redis_set.cc,cc,4,1,5
1ac04ca2a6a519c01e29460ef360ea4814ff6fe2,calvin325@gmail.com,2021-05-10 12:26:03+08:00,noreply@github.com,2021-05-10 12:26:03+08:00,"Fix data race for accessing database in some commands (#253)

Before this commit, in spop, zremrangebylex, zremrangebyscore commands, the  lock guard for accessing database may not work actually.

Other changes
- Use 'localtime_r' instead of 'localtime'
- Use 'std::this_thread::get_id()' to get thread id",unstable,True,False,4,redis_zset.cc,cc,6,2,8
1ac04ca2a6a519c01e29460ef360ea4814ff6fe2,calvin325@gmail.com,2021-05-10 12:26:03+08:00,noreply@github.com,2021-05-10 12:26:03+08:00,"Fix data race for accessing database in some commands (#253)

Before this commit, in spop, zremrangebylex, zremrangebyscore commands, the  lock guard for accessing database may not work actually.

Other changes
- Use 'localtime_r' instead of 'localtime'
- Use 'std::this_thread::get_id()' to get thread id",unstable,True,False,4,server.cc,cc,4,2,6
1ac04ca2a6a519c01e29460ef360ea4814ff6fe2,calvin325@gmail.com,2021-05-10 12:26:03+08:00,noreply@github.com,2021-05-10 12:26:03+08:00,"Fix data race for accessing database in some commands (#253)

Before this commit, in spop, zremrangebylex, zremrangebyscore commands, the  lock guard for accessing database may not work actually.

Other changes
- Use 'localtime_r' instead of 'localtime'
- Use 'std::this_thread::get_id()' to get thread id",unstable,True,False,4,worker.cc,cc,1,1,2
e0dbdcdf06859fdfc6e4b96b197dbb3b35100c6a,karelrooted@gmail.com,2021-05-10 17:20:10+08:00,noreply@github.com,2021-05-10 17:20:10+08:00,"Support COMMAND command (#251)

* Support command cmd
* Add testcase for COMMAND command
* FIX runtest return rm command's status instead of tcl test script's status",unstable,True,False,6,redis_cmd.cc,cc,39,0,39
e0dbdcdf06859fdfc6e4b96b197dbb3b35100c6a,karelrooted@gmail.com,2021-05-10 17:20:10+08:00,noreply@github.com,2021-05-10 17:20:10+08:00,"Support COMMAND command (#251)

* Support command cmd
* Add testcase for COMMAND command
* FIX runtest return rm command's status instead of tcl test script's status",unstable,True,False,6,server.cc,cc,59,0,59
e0dbdcdf06859fdfc6e4b96b197dbb3b35100c6a,karelrooted@gmail.com,2021-05-10 17:20:10+08:00,noreply@github.com,2021-05-10 17:20:10+08:00,"Support COMMAND command (#251)

* Support command cmd
* Add testcase for COMMAND command
* FIX runtest return rm command's status instead of tcl test script's status",unstable,True,False,6,server.h,h,4,0,4
e0dbdcdf06859fdfc6e4b96b197dbb3b35100c6a,karelrooted@gmail.com,2021-05-10 17:20:10+08:00,noreply@github.com,2021-05-10 17:20:10+08:00,"Support COMMAND command (#251)

* Support command cmd
* Add testcase for COMMAND command
* FIX runtest return rm command's status instead of tcl test script's status",unstable,True,False,6,runtest,None,4,2,6
e0dbdcdf06859fdfc6e4b96b197dbb3b35100c6a,karelrooted@gmail.com,2021-05-10 17:20:10+08:00,noreply@github.com,2021-05-10 17:20:10+08:00,"Support COMMAND command (#251)

* Support command cmd
* Add testcase for COMMAND command
* FIX runtest return rm command's status instead of tcl test script's status",unstable,True,False,6,test_helper.tcl,tcl,1,0,1
e0dbdcdf06859fdfc6e4b96b197dbb3b35100c6a,karelrooted@gmail.com,2021-05-10 17:20:10+08:00,noreply@github.com,2021-05-10 17:20:10+08:00,"Support COMMAND command (#251)

* Support command cmd
* Add testcase for COMMAND command
* FIX runtest return rm command's status instead of tcl test script's status",unstable,True,False,6,command.tcl,tcl,27,0,27
2595732b1eea779b356828493db4ff10d1d85df2,wangyuan21@baidu.com,2021-05-12 20:57:13+08:00,noreply@github.com,2021-05-12 20:57:13+08:00,"Fix skipping wrong CURRENT file when full synchronization (#260)

Currently, resuming broken transfer based files when full synchronization
may skip CURRENT file of RocksDB, but CURRENT doesn't have number,
so we don't distinguish CURRENT is valid or not. If we keep old CURRENT
file, slave will fail to restore checkpoint and full sync again, i.e. resuming
broken transfer based files is not available in this case. In this commit,
we never skip CURRENT file.

New test cases
- resume broken transfer based files
- share one checkpoint when two slaves full sync with master at the same time",unstable,True,False,5,replication.cc,cc,8,1,9
2595732b1eea779b356828493db4ff10d1d85df2,wangyuan21@baidu.com,2021-05-12 20:57:13+08:00,noreply@github.com,2021-05-12 20:57:13+08:00,"Fix skipping wrong CURRENT file when full synchronization (#260)

Currently, resuming broken transfer based files when full synchronization
may skip CURRENT file of RocksDB, but CURRENT doesn't have number,
so we don't distinguish CURRENT is valid or not. If we keep old CURRENT
file, slave will fail to restore checkpoint and full sync again, i.e. resuming
broken transfer based files is not available in this case. In this commit,
we never skip CURRENT file.

New test cases
- resume broken transfer based files
- share one checkpoint when two slaves full sync with master at the same time",unstable,True,False,5,server.cc,cc,1,1,2
2595732b1eea779b356828493db4ff10d1d85df2,wangyuan21@baidu.com,2021-05-12 20:57:13+08:00,noreply@github.com,2021-05-12 20:57:13+08:00,"Fix skipping wrong CURRENT file when full synchronization (#260)

Currently, resuming broken transfer based files when full synchronization
may skip CURRENT file of RocksDB, but CURRENT doesn't have number,
so we don't distinguish CURRENT is valid or not. If we keep old CURRENT
file, slave will fail to restore checkpoint and full sync again, i.e. resuming
broken transfer based files is not available in this case. In this commit,
we never skip CURRENT file.

New test cases
- resume broken transfer based files
- share one checkpoint when two slaves full sync with master at the same time",unstable,True,False,5,replication.tcl,tcl,71,0,71
2595732b1eea779b356828493db4ff10d1d85df2,wangyuan21@baidu.com,2021-05-12 20:57:13+08:00,noreply@github.com,2021-05-12 20:57:13+08:00,"Fix skipping wrong CURRENT file when full synchronization (#260)

Currently, resuming broken transfer based files when full synchronization
may skip CURRENT file of RocksDB, but CURRENT doesn't have number,
so we don't distinguish CURRENT is valid or not. If we keep old CURRENT
file, slave will fail to restore checkpoint and full sync again, i.e. resuming
broken transfer based files is not available in this case. In this commit,
we never skip CURRENT file.

New test cases
- resume broken transfer based files
- share one checkpoint when two slaves full sync with master at the same time",unstable,True,False,5,server.tcl,tcl,13,10,23
2595732b1eea779b356828493db4ff10d1d85df2,wangyuan21@baidu.com,2021-05-12 20:57:13+08:00,noreply@github.com,2021-05-12 20:57:13+08:00,"Fix skipping wrong CURRENT file when full synchronization (#260)

Currently, resuming broken transfer based files when full synchronization
may skip CURRENT file of RocksDB, but CURRENT doesn't have number,
so we don't distinguish CURRENT is valid or not. If we keep old CURRENT
file, slave will fail to restore checkpoint and full sync again, i.e. resuming
broken transfer based files is not available in this case. In this commit,
we never skip CURRENT file.

New test cases
- resume broken transfer based files
- share one checkpoint when two slaves full sync with master at the same time",unstable,True,False,5,util.tcl,tcl,7,0,7
01d8cf76d038645a0d247bc8ac65b51904bf64a3,hulk.website@gmail.com,2021-05-14 18:46:05+08:00,noreply@github.com,2021-05-14 18:46:05+08:00,Fix  some uninitialized compiling warnings (#261),unstable,True,False,3,redis_metadata.cc,cc,4,2,6
01d8cf76d038645a0d247bc8ac65b51904bf64a3,hulk.website@gmail.com,2021-05-14 18:46:05+08:00,noreply@github.com,2021-05-14 18:46:05+08:00,Fix  some uninitialized compiling warnings (#261),unstable,True,False,3,redis_metadata.h,h,0,4,4
01d8cf76d038645a0d247bc8ac65b51904bf64a3,hulk.website@gmail.com,2021-05-14 18:46:05+08:00,noreply@github.com,2021-05-14 18:46:05+08:00,Fix  some uninitialized compiling warnings (#261),unstable,True,False,3,server.cc,cc,8,8,16
4a0244514b06e6b9fbbe7888866c53ee77c53b60,karelrooted@gmail.com,2021-05-17 11:20:15+08:00,noreply@github.com,2021-05-17 11:20:15+08:00,Build multiple operation system artifacts when releasing the new tag (#262),unstable,True,False,3,release.yaml,yaml,125,0,125
4a0244514b06e6b9fbbe7888866c53ee77c53b60,karelrooted@gmail.com,2021-05-17 11:20:15+08:00,noreply@github.com,2021-05-17 11:20:15+08:00,Build multiple operation system artifacts when releasing the new tag (#262),unstable,True,False,3,Dockerfile,None,2,2,4
fd3f7a8f9b804d21e79ff407161983d58e5f5621,hulk.website@gmail.com,2021-05-18 10:50:43+08:00,noreply@github.com,2021-05-18 10:50:43+08:00,Allow to run the kvrocks without assigning the config file (#264),unstable,True,False,3,config.cc,cc,33,17,50
fd3f7a8f9b804d21e79ff407161983d58e5f5621,hulk.website@gmail.com,2021-05-18 10:50:43+08:00,noreply@github.com,2021-05-18 10:50:43+08:00,Allow to run the kvrocks without assigning the config file (#264),unstable,True,False,3,config.h,h,1,1,2
fd3f7a8f9b804d21e79ff407161983d58e5f5621,hulk.website@gmail.com,2021-05-18 10:50:43+08:00,noreply@github.com,2021-05-18 10:50:43+08:00,Allow to run the kvrocks without assigning the config file (#264),unstable,True,False,3,main.cc,cc,1,1,2
991d9fa647e5f19fe1cc3aa335715c555e44dca0,wangyuan21@baidu.com,2021-05-18 12:59:54+08:00,noreply@github.com,2021-05-18 12:59:54+08:00,Support macOS CI (#263),unstable,True,False,1,kvrocks.yaml,yaml,26,3,29
18d71d0d1ba4f9c37bdfc773f00ac66d021f03f6,karelrooted@gmail.com,2021-05-19 17:21:28+08:00,noreply@github.com,2021-05-19 17:21:28+08:00,"Fix release Linux packages didn't auto-upload to the release log (#269)

* Fix release Linux packages didn't auto-upload to the release log (directly release instead of rely on upload-artifact and then download-artifact)",unstable,True,False,1,release.yaml,yaml,10,23,33
a7c49bf139d5a18312d8af8ec17bb3d9ba31b759,wangyuan21@baidu.com,2021-05-25 11:35:16+08:00,noreply@github.com,2021-05-25 11:35:16+08:00,HSET supports to set multiple fields (#274),unstable,True,False,2,redis_cmd.cc,cc,6,16,22
a7c49bf139d5a18312d8af8ec17bb3d9ba31b759,wangyuan21@baidu.com,2021-05-25 11:35:16+08:00,noreply@github.com,2021-05-25 11:35:16+08:00,HSET supports to set multiple fields (#274),unstable,True,False,2,hash.tcl,tcl,11,0,11
bc6446e930c7ce78dd874e14487bd54dfa994864,wangyuan21@baidu.com,2021-05-26 16:23:56+08:00,noreply@github.com,2021-05-26 16:23:56+08:00,Optimize server.db_mu_ (#276),unstable,True,False,2,server.cc,cc,6,15,21
bc6446e930c7ce78dd874e14487bd54dfa994864,wangyuan21@baidu.com,2021-05-26 16:23:56+08:00,noreply@github.com,2021-05-26 16:23:56+08:00,Optimize server.db_mu_ (#276),unstable,True,False,2,server.h,h,2,1,3
fbd73723963d4b987525a182eda9bf0eaa409410,karelrooted@gmail.com,2021-05-26 16:39:09+08:00,noreply@github.com,2021-05-26 16:39:09+08:00,"Add rename-command config (#272)

* Add rename-command config
* Add rename-command config directive testcase",unstable,True,False,10,kvrocks.conf,conf,16,0,16
fbd73723963d4b987525a182eda9bf0eaa409410,karelrooted@gmail.com,2021-05-26 16:39:09+08:00,noreply@github.com,2021-05-26 16:39:09+08:00,"Add rename-command config (#272)

* Add rename-command config
* Add rename-command config directive testcase",unstable,True,False,10,config.cc,cc,24,3,27
fbd73723963d4b987525a182eda9bf0eaa409410,karelrooted@gmail.com,2021-05-26 16:39:09+08:00,noreply@github.com,2021-05-26 16:39:09+08:00,"Add rename-command config (#272)

* Add rename-command config
* Add rename-command config directive testcase",unstable,True,False,10,config.h,h,1,0,1
fbd73723963d4b987525a182eda9bf0eaa409410,karelrooted@gmail.com,2021-05-26 16:39:09+08:00,noreply@github.com,2021-05-26 16:39:09+08:00,"Add rename-command config (#272)

* Add rename-command config
* Add rename-command config directive testcase",unstable,True,False,10,main.cc,cc,2,0,2
fbd73723963d4b987525a182eda9bf0eaa409410,karelrooted@gmail.com,2021-05-26 16:39:09+08:00,noreply@github.com,2021-05-26 16:39:09+08:00,"Add rename-command config (#272)

* Add rename-command config
* Add rename-command config directive testcase",unstable,True,False,10,redis_cmd.cc,cc,85,7,92
fbd73723963d4b987525a182eda9bf0eaa409410,karelrooted@gmail.com,2021-05-26 16:39:09+08:00,noreply@github.com,2021-05-26 16:39:09+08:00,"Add rename-command config (#272)

* Add rename-command config
* Add rename-command config directive testcase",unstable,True,False,10,redis_cmd.h,h,8,1,9
fbd73723963d4b987525a182eda9bf0eaa409410,karelrooted@gmail.com,2021-05-26 16:39:09+08:00,noreply@github.com,2021-05-26 16:39:09+08:00,"Add rename-command config (#272)

* Add rename-command config
* Add rename-command config directive testcase",unstable,True,False,10,server.cc,cc,6,79,85
fbd73723963d4b987525a182eda9bf0eaa409410,karelrooted@gmail.com,2021-05-26 16:39:09+08:00,noreply@github.com,2021-05-26 16:39:09+08:00,"Add rename-command config (#272)

* Add rename-command config
* Add rename-command config directive testcase",unstable,True,False,10,server.h,h,1,7,8
fbd73723963d4b987525a182eda9bf0eaa409410,karelrooted@gmail.com,2021-05-26 16:39:09+08:00,noreply@github.com,2021-05-26 16:39:09+08:00,"Add rename-command config (#272)

* Add rename-command config
* Add rename-command config directive testcase",unstable,True,False,10,test_helper.tcl,tcl,1,0,1
fbd73723963d4b987525a182eda9bf0eaa409410,karelrooted@gmail.com,2021-05-26 16:39:09+08:00,noreply@github.com,2021-05-26 16:39:09+08:00,"Add rename-command config (#272)

* Add rename-command config
* Add rename-command config directive testcase",unstable,True,False,10,config.tcl,tcl,9,0,9
63b6acfd988ff08ada8e979f607b12d90266c318,wangyuan21@baidu.com,2021-05-26 18:33:30+08:00,noreply@github.com,2021-05-26 18:33:30+08:00,"Rename backup_env_ to env_ (#277)

- Rename backup_env_
- Use storage.env to avoid accessing DB",unstable,True,False,2,storage.cc,cc,24,24,48
63b6acfd988ff08ada8e979f607b12d90266c318,wangyuan21@baidu.com,2021-05-26 18:33:30+08:00,noreply@github.com,2021-05-26 18:33:30+08:00,"Rename backup_env_ to env_ (#277)

- Rename backup_env_
- Use storage.env to avoid accessing DB",unstable,True,False,2,storage.h,h,1,1,2
0daf3b5ea878c081ba9e3e6e690c32efb0ceb7f4,wangyuan21@baidu.com,2021-05-27 20:05:49+08:00,noreply@github.com,2021-05-27 20:05:49+08:00,Refactor command write attribute (#279),unstable,True,False,5,main.cc,cc,1,0,1
0daf3b5ea878c081ba9e3e6e690c32efb0ceb7f4,wangyuan21@baidu.com,2021-05-27 20:05:49+08:00,noreply@github.com,2021-05-27 20:05:49+08:00,Refactor command write attribute (#279),unstable,True,False,5,redis_cmd.cc,cc,188,171,359
0daf3b5ea878c081ba9e3e6e690c32efb0ceb7f4,wangyuan21@baidu.com,2021-05-27 20:05:49+08:00,noreply@github.com,2021-05-27 20:05:49+08:00,Refactor command write attribute (#279),unstable,True,False,5,redis_cmd.h,h,18,1,19
0daf3b5ea878c081ba9e3e6e690c32efb0ceb7f4,wangyuan21@baidu.com,2021-05-27 20:05:49+08:00,noreply@github.com,2021-05-27 20:05:49+08:00,Refactor command write attribute (#279),unstable,True,False,5,redis_request.cc,cc,3,11,14
0daf3b5ea878c081ba9e3e6e690c32efb0ceb7f4,wangyuan21@baidu.com,2021-05-27 20:05:49+08:00,noreply@github.com,2021-05-27 20:05:49+08:00,Refactor command write attribute (#279),unstable,True,False,5,redis_request.h,h,0,1,1
cdb0ccedd36f21432977b8a9d0bac7f4a2a1e84e,wangyuan21@baidu.com,2021-05-28 15:01:23+08:00,noreply@github.com,2021-05-28 15:01:23+08:00,"Refactor db mutex using rwlock (#278)

- Refactor db mutex using rwlock
- A implementation of RAII write-first read-write lock using C++11
- Add some tests for rwlock",unstable,True,False,8,compact_filter.cc,cc,0,4,4
cdb0ccedd36f21432977b8a9d0bac7f4a2a1e84e,wangyuan21@baidu.com,2021-05-28 15:01:23+08:00,noreply@github.com,2021-05-28 15:01:23+08:00,"Refactor db mutex using rwlock (#278)

- Refactor db mutex using rwlock
- A implementation of RAII write-first read-write lock using C++11
- Add some tests for rwlock",unstable,True,False,8,compaction_checker.cc,cc,0,12,12
cdb0ccedd36f21432977b8a9d0bac7f4a2a1e84e,wangyuan21@baidu.com,2021-05-28 15:01:23+08:00,noreply@github.com,2021-05-28 15:01:23+08:00,"Refactor db mutex using rwlock (#278)

- Refactor db mutex using rwlock
- A implementation of RAII write-first read-write lock using C++11
- Add some tests for rwlock",unstable,True,False,8,rw_lock.h,h,89,0,89
cdb0ccedd36f21432977b8a9d0bac7f4a2a1e84e,wangyuan21@baidu.com,2021-05-28 15:01:23+08:00,noreply@github.com,2021-05-28 15:01:23+08:00,"Refactor db mutex using rwlock (#278)

- Refactor db mutex using rwlock
- A implementation of RAII write-first read-write lock using C++11
- Add some tests for rwlock",unstable,True,False,8,server.cc,cc,45,19,64
cdb0ccedd36f21432977b8a9d0bac7f4a2a1e84e,wangyuan21@baidu.com,2021-05-28 15:01:23+08:00,noreply@github.com,2021-05-28 15:01:23+08:00,"Refactor db mutex using rwlock (#278)

- Refactor db mutex using rwlock
- A implementation of RAII write-first read-write lock using C++11
- Add some tests for rwlock",unstable,True,False,8,server.h,h,1,1,2
cdb0ccedd36f21432977b8a9d0bac7f4a2a1e84e,wangyuan21@baidu.com,2021-05-28 15:01:23+08:00,noreply@github.com,2021-05-28 15:01:23+08:00,"Refactor db mutex using rwlock (#278)

- Refactor db mutex using rwlock
- A implementation of RAII write-first read-write lock using C++11
- Add some tests for rwlock",unstable,True,False,8,storage.cc,cc,12,36,48
cdb0ccedd36f21432977b8a9d0bac7f4a2a1e84e,wangyuan21@baidu.com,2021-05-28 15:01:23+08:00,noreply@github.com,2021-05-28 15:01:23+08:00,"Refactor db mutex using rwlock (#278)

- Refactor db mutex using rwlock
- A implementation of RAII write-first read-write lock using C++11
- Add some tests for rwlock",unstable,True,False,8,storage.h,h,7,5,12
cdb0ccedd36f21432977b8a9d0bac7f4a2a1e84e,wangyuan21@baidu.com,2021-05-28 15:01:23+08:00,noreply@github.com,2021-05-28 15:01:23+08:00,"Refactor db mutex using rwlock (#278)

- Refactor db mutex using rwlock
- A implementation of RAII write-first read-write lock using C++11
- Add some tests for rwlock",unstable,True,False,8,rwlock_test.cc,cc,126,1,127
973d693f9f444f89f2847a07b414989154122de2,karelrooted@gmail.com,2021-05-28 17:46:59+08:00,karelrooted@gmail.com,2021-05-28 17:54:54+08:00,Remove kvrocksrestore tool (#280),unstable,True,False,3,CMakeLists.txt,txt,0,22,22
973d693f9f444f89f2847a07b414989154122de2,karelrooted@gmail.com,2021-05-28 17:46:59+08:00,karelrooted@gmail.com,2021-05-28 17:54:54+08:00,Remove kvrocksrestore tool (#280),unstable,True,False,3,Makefile,None,1,7,8
25abf7f5b459e2e1a59852cb9dff16853e3e40e9,wangyuan21@baidu.com,2021-05-29 12:00:24+08:00,noreply@github.com,2021-05-29 12:00:24+08:00,"Improve robustness for replication tests (#282)

- If last compaction was not finished, the new checkpoint may be
   different with old checkpoint, all tranferred files are not invalid,
   so there is no skipped file, the test is failed.
- Fix error on executing 'r config get dir' when replica is restoring.",unstable,True,False,1,replication.tcl,tcl,11,4,15
816f3a8fef94ffe10135abe409bc8ed5bb6f4eb3,wangyuan21@baidu.com,2021-06-01 13:59:55+08:00,noreply@github.com,2021-06-01 13:59:55+08:00,"Refactor workers concurrency (#281)

If the command need to process exclusively, we need to get WriteLock
that can guarantee other threads can't come into critical zone, such as
DEBUG, MULTI, LUA (in the immediate future). Otherwise, we just use
ReadLock to allow all workers to execute commands at the same time.

This commit may influence performance a little bit.",unstable,True,False,5,redis_request.cc,cc,14,10,24
816f3a8fef94ffe10135abe409bc8ed5bb6f4eb3,wangyuan21@baidu.com,2021-06-01 13:59:55+08:00,noreply@github.com,2021-06-01 13:59:55+08:00,"Refactor workers concurrency (#281)

If the command need to process exclusively, we need to get WriteLock
that can guarantee other threads can't come into critical zone, such as
DEBUG, MULTI, LUA (in the immediate future). Otherwise, we just use
ReadLock to allow all workers to execute commands at the same time.

This commit may influence performance a little bit.",unstable,True,False,5,server.cc,cc,12,9,21
816f3a8fef94ffe10135abe409bc8ed5bb6f4eb3,wangyuan21@baidu.com,2021-06-01 13:59:55+08:00,noreply@github.com,2021-06-01 13:59:55+08:00,"Refactor workers concurrency (#281)

If the command need to process exclusively, we need to get WriteLock
that can guarantee other threads can't come into critical zone, such as
DEBUG, MULTI, LUA (in the immediate future). Otherwise, we just use
ReadLock to allow all workers to execute commands at the same time.

This commit may influence performance a little bit.",unstable,True,False,5,server.h,h,5,2,7
816f3a8fef94ffe10135abe409bc8ed5bb6f4eb3,wangyuan21@baidu.com,2021-06-01 13:59:55+08:00,noreply@github.com,2021-06-01 13:59:55+08:00,"Refactor workers concurrency (#281)

If the command need to process exclusively, we need to get WriteLock
that can guarantee other threads can't come into critical zone, such as
DEBUG, MULTI, LUA (in the immediate future). Otherwise, we just use
ReadLock to allow all workers to execute commands at the same time.

This commit may influence performance a little bit.",unstable,True,False,5,default.conf,conf,1,1,2
816f3a8fef94ffe10135abe409bc8ed5bb6f4eb3,wangyuan21@baidu.com,2021-06-01 13:59:55+08:00,noreply@github.com,2021-06-01 13:59:55+08:00,"Refactor workers concurrency (#281)

If the command need to process exclusively, we need to get WriteLock
that can guarantee other threads can't come into critical zone, such as
DEBUG, MULTI, LUA (in the immediate future). Otherwise, we just use
ReadLock to allow all workers to execute commands at the same time.

This commit may influence performance a little bit.",unstable,True,False,5,introspection.tcl,tcl,12,0,12
368e561f41eb52800e876b2557f117f4c033bb5d,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-01 18:15:13+08:00,noreply@github.com,2021-06-01 18:15:13+08:00,"Set TCP_KEEPALIVE for the replication connection (#284)

Before this commit, socket packet loss caused by network failure may result in
unrecoverable replication interrupt. When the master failed to send data to replicas,
the master would close repl-fd and terminate FeedSlaveThread. If the network loses
packets, replicas could not sense the replication interruption anymore.
Now, repl-fd is set TCP_KEEPALIVE in replica-side, the bad case above mentioned
can be handled.",unstable,True,False,1,replication.cc,cc,6,0,6
70afbd2a1e91a56b8c4c1a7c20bd9e73dec32f72,hulk.website@gmail.com,2021-06-02 20:06:58+08:00,noreply@github.com,2021-06-02 20:06:58+08:00,Add the Baidu logo the the user list (#288),unstable,True,False,2,README.md,md,3,0,3
70afbd2a1e91a56b8c4c1a7c20bd9e73dec32f72,hulk.website@gmail.com,2021-06-02 20:06:58+08:00,noreply@github.com,2021-06-02 20:06:58+08:00,Add the Baidu logo the the user list (#288),unstable,True,False,2,baidu_logo.png,png,0,0,0
0790616f3e418f40788c55d6b26ab6fd47dec908,karelrooted@gmail.com,2021-06-02 22:25:25+08:00,noreply@github.com,2021-06-02 22:25:25+08:00,"Support the auto-resize-block-and-sst config directive (#289)

Also fix log wrong old write_buffer_size in dynamic resize rocksdb.write_buffer_size",unstable,True,False,5,kvrocks.conf,conf,15,0,15
0790616f3e418f40788c55d6b26ab6fd47dec908,karelrooted@gmail.com,2021-06-02 22:25:25+08:00,noreply@github.com,2021-06-02 22:25:25+08:00,"Support the auto-resize-block-and-sst config directive (#289)

Also fix log wrong old write_buffer_size in dynamic resize rocksdb.write_buffer_size",unstable,True,False,5,config.cc,cc,1,0,1
0790616f3e418f40788c55d6b26ab6fd47dec908,karelrooted@gmail.com,2021-06-02 22:25:25+08:00,noreply@github.com,2021-06-02 22:25:25+08:00,"Support the auto-resize-block-and-sst config directive (#289)

Also fix log wrong old write_buffer_size in dynamic resize rocksdb.write_buffer_size",unstable,True,False,5,config.h,h,1,0,1
0790616f3e418f40788c55d6b26ab6fd47dec908,karelrooted@gmail.com,2021-06-02 22:25:25+08:00,noreply@github.com,2021-06-02 22:25:25+08:00,"Support the auto-resize-block-and-sst config directive (#289)

Also fix log wrong old write_buffer_size in dynamic resize rocksdb.write_buffer_size",unstable,True,False,5,server.cc,cc,6,5,11
0790616f3e418f40788c55d6b26ab6fd47dec908,karelrooted@gmail.com,2021-06-02 22:25:25+08:00,noreply@github.com,2021-06-02 22:25:25+08:00,"Support the auto-resize-block-and-sst config directive (#289)

Also fix log wrong old write_buffer_size in dynamic resize rocksdb.write_buffer_size",unstable,True,False,5,server.h,h,1,1,2
143f353dce409839980d925fe97ca8e7358be5ee,karelrooted@gmail.com,2021-06-02 22:38:30+08:00,noreply@github.com,2021-06-02 22:38:30+08:00,Add the COMMAND command in support-commands list (#290),unstable,True,False,1,support-commands.md,md,2,1,3
f8159c6749a83461866b0b0ef4389aa8476b2186,karelrooted@gmail.com,2021-06-03 14:36:05+08:00,noreply@github.com,2021-06-03 14:36:05+08:00,Auto resize rocksdb block_size in autoResizeBlockAndSST (#294),unstable,True,False,2,kvrocks.conf,conf,0,2,2
f8159c6749a83461866b0b0ef4389aa8476b2186,karelrooted@gmail.com,2021-06-03 14:36:05+08:00,noreply@github.com,2021-06-03 14:36:05+08:00,Auto resize rocksdb block_size in autoResizeBlockAndSST (#294),unstable,True,False,2,server.cc,cc,23,1,24
33034637a1d3c7a91c7bb882396e4fb5be77bf31,karelrooted@gmail.com,2021-06-03 18:23:03+08:00,noreply@github.com,2021-06-03 18:23:03+08:00,"Fix testcases ""PUBLISH/SUBSCRIBE after PUNSUBSCRIBE/UNSUBSCRIBE without arguments"" (#296)

* Fix testcase ""PUBLISH/SUBSCRIBE after PUNSUBSCRIBE/UNSUBSCRIBE without arguments"", read PUNSUBSCRIBE/UNSUBSCRIBE all's response before publish (publish may exec before PUNSUBSCRIBE/UNSUBSCRIBE all in multi worker thread envoriment when PUNSUBSCRIBE/UNSUBSCRIBE all command's response is not being readed)",unstable,True,False,1,pubsub.tcl,tcl,6,0,6
8d78a6df954423bfbb2b9b305b5effef3cd9940a,wangyuan21@baidu.com,2021-06-03 21:52:41+08:00,noreply@github.com,2021-06-03 21:52:41+08:00,"Support transaction (#285)

Kvrocks supports transaction, very simmer with Redis, we support MULTI,
EXEC, DISCARD commands.
But now, we don't support WATCH and UNWATCH commands.",unstable,True,False,10,support-commands.md,md,10,0,10
8d78a6df954423bfbb2b9b305b5effef3cd9940a,wangyuan21@baidu.com,2021-06-03 21:52:41+08:00,noreply@github.com,2021-06-03 21:52:41+08:00,"Support transaction (#285)

Kvrocks supports transaction, very simmer with Redis, we support MULTI,
EXEC, DISCARD commands.
But now, we don't support WATCH and UNWATCH commands.",unstable,True,False,10,redis_cmd.cc,cc,74,9,83
8d78a6df954423bfbb2b9b305b5effef3cd9940a,wangyuan21@baidu.com,2021-06-03 21:52:41+08:00,noreply@github.com,2021-06-03 21:52:41+08:00,"Support transaction (#285)

Kvrocks supports transaction, very simmer with Redis, we support MULTI,
EXEC, DISCARD commands.
But now, we don't support WATCH and UNWATCH commands.",unstable,True,False,10,redis_cmd.h,h,4,1,5
8d78a6df954423bfbb2b9b305b5effef3cd9940a,wangyuan21@baidu.com,2021-06-03 21:52:41+08:00,noreply@github.com,2021-06-03 21:52:41+08:00,"Support transaction (#285)

Kvrocks supports transaction, very simmer with Redis, we support MULTI,
EXEC, DISCARD commands.
But now, we don't support WATCH and UNWATCH commands.",unstable,True,False,10,redis_connection.cc,cc,167,4,171
8d78a6df954423bfbb2b9b305b5effef3cd9940a,wangyuan21@baidu.com,2021-06-03 21:52:41+08:00,noreply@github.com,2021-06-03 21:52:41+08:00,"Support transaction (#285)

Kvrocks supports transaction, very simmer with Redis, we support MULTI,
EXEC, DISCARD commands.
But now, we don't support WATCH and UNWATCH commands.",unstable,True,False,10,redis_connection.h,h,17,0,17
8d78a6df954423bfbb2b9b305b5effef3cd9940a,wangyuan21@baidu.com,2021-06-03 21:52:41+08:00,noreply@github.com,2021-06-03 21:52:41+08:00,"Support transaction (#285)

Kvrocks supports transaction, very simmer with Redis, we support MULTI,
EXEC, DISCARD commands.
But now, we don't support WATCH and UNWATCH commands.",unstable,True,False,10,redis_request.cc,cc,0,126,126
8d78a6df954423bfbb2b9b305b5effef3cd9940a,wangyuan21@baidu.com,2021-06-03 21:52:41+08:00,noreply@github.com,2021-06-03 21:52:41+08:00,"Support transaction (#285)

Kvrocks supports transaction, very simmer with Redis, we support MULTI,
EXEC, DISCARD commands.
But now, we don't support WATCH and UNWATCH commands.",unstable,True,False,10,redis_request.h,h,5,5,10
8d78a6df954423bfbb2b9b305b5effef3cd9940a,wangyuan21@baidu.com,2021-06-03 21:52:41+08:00,noreply@github.com,2021-06-03 21:52:41+08:00,"Support transaction (#285)

Kvrocks supports transaction, very simmer with Redis, we support MULTI,
EXEC, DISCARD commands.
But now, we don't support WATCH and UNWATCH commands.",unstable,True,False,10,test_helper.tcl,tcl,1,0,1
8d78a6df954423bfbb2b9b305b5effef3cd9940a,wangyuan21@baidu.com,2021-06-03 21:52:41+08:00,noreply@github.com,2021-06-03 21:52:41+08:00,"Support transaction (#285)

Kvrocks supports transaction, very simmer with Redis, we support MULTI,
EXEC, DISCARD commands.
But now, we don't support WATCH and UNWATCH commands.",unstable,True,False,10,command.tcl,tcl,2,2,4
8d78a6df954423bfbb2b9b305b5effef3cd9940a,wangyuan21@baidu.com,2021-06-03 21:52:41+08:00,noreply@github.com,2021-06-03 21:52:41+08:00,"Support transaction (#285)

Kvrocks supports transaction, very simmer with Redis, we support MULTI,
EXEC, DISCARD commands.
But now, we don't support WATCH and UNWATCH commands.",unstable,True,False,10,multi.tcl,tcl,81,0,81
91290984a902d96957d2f4eff8d44aefd2e27e39,hulk.website@gmail.com,2021-06-07 19:45:24+08:00,noreply@github.com,2021-06-07 19:45:24+08:00,"Fix zset add the same member with different scores (#298)

Fix the corner case that adds the same member which may add the score
column family many times and cause problems in the ZRANGE command.

For example, we add members with `ZADD mykey 1 a 2 a` and `ZRANGE mykey 0 1`
return only one member(`a`) was expected but got the member `a` twice now.

The root cause of this issue was the score key was composed by member and score,
so the last one can't overwrite the previous one when the score was different.
A simple workaround was to add those members with reversed orders and skip the member if has added.",unstable,True,False,2,redis_zset.cc,cc,18,1,19
91290984a902d96957d2f4eff8d44aefd2e27e39,hulk.website@gmail.com,2021-06-07 19:45:24+08:00,noreply@github.com,2021-06-07 19:45:24+08:00,"Fix zset add the same member with different scores (#298)

Fix the corner case that adds the same member which may add the score
column family many times and cause problems in the ZRANGE command.

For example, we add members with `ZADD mykey 1 a 2 a` and `ZRANGE mykey 0 1`
return only one member(`a`) was expected but got the member `a` twice now.

The root cause of this issue was the score key was composed by member and score,
so the last one can't overwrite the previous one when the score was different.
A simple workaround was to add those members with reversed orders and skip the member if has added.",unstable,True,False,2,zset.tcl,tcl,11,0,11
0018876bad6eb247037be6eaf9184e2864baa8c4,hulk.website@gmail.com,2021-06-08 13:54:45+08:00,noreply@github.com,2021-06-08 13:54:45+08:00,Allow to use host in the master-slave replication (#301),unstable,True,False,3,replication.cc,cc,10,12,22
0018876bad6eb247037be6eaf9184e2864baa8c4,hulk.website@gmail.com,2021-06-08 13:54:45+08:00,noreply@github.com,2021-06-08 13:54:45+08:00,Allow to use host in the master-slave replication (#301),unstable,True,False,3,util.cc,cc,36,21,57
0018876bad6eb247037be6eaf9184e2864baa8c4,hulk.website@gmail.com,2021-06-08 13:54:45+08:00,noreply@github.com,2021-06-08 13:54:45+08:00,Allow to use host in the master-slave replication (#301),unstable,True,False,3,replication.tcl,tcl,1,1,2
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,CMakeLists.txt,txt,6,0,6
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,kvrocks.conf,conf,15,0,15
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,Makefile,None,1,1,2
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,compact_filter.cc,cc,4,2,6
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,config.cc,cc,1,0,1
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,config.h,h,1,0,1
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,encoding.cc,cc,35,0,35
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,encoding.h,h,4,0,4
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,redis_bitmap.cc,cc,6,4,10
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,redis_cmd.cc,cc,48,2,50
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,redis_db.cc,cc,123,45,168
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,redis_db.h,h,2,1,3
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,redis_hash.cc,cc,9,9,18
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,redis_list.cc,cc,20,20,40
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,redis_metadata.cc,cc,34,4,38
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,redis_metadata.h,h,6,4,10
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,redis_set.cc,cc,8,8,16
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,redis_slot.cc,cc,75,0,75
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,redis_slot.h,h,11,0,11
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,redis_sortedint.cc,cc,9,9,18
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,redis_zset.cc,cc,31,30,61
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,storage.cc,cc,0,1,1
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,storage.h,h,1,0,1
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,compact_test.cc,cc,3,3,6
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,config_test.cc,cc,4,0,4
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,default.conf,conf,1,1,2
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,crc16_slottable.tcl,tcl,827,0,827
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,test_helper.tcl,tcl,2,0,2
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,cluster.tcl,tcl,14,0,14
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,command.tcl,tcl,2,2,4
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,keyspace.tcl,tcl,35,0,35
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,scan.tcl,tcl,59,0,59
34e44307747366f573af3836a677caccf98db369,52746580+shangxiaoxiong@users.noreply.github.com,2021-06-08 14:13:22+08:00,noreply@github.com,2021-06-08 14:13:22+08:00,"Encode key with slot id (#291)

Encode key with its slot id calculated by CRC16 and modulo 16384, if you enabled
at first time, this option must not be disabled after restarted, and vice versa.
Encoding key with its slot id make it efficient to migrate keys based on slot.

PLEASE NOTE
If you just start to use kvrocks firstly, please don't change it optionally,
because cluster mode is dependent with enabling that.
If you want to upgrade your old kvrocks version(without encoding slot it into key)
whatever by master-replicas replication or restarting using new binary, you must
disable this option, otherwise, kvrocks will make data corrupt.

Other changes
- Add CLUSTER KEYSLOT command
- Add some tcl tests for sorted-int type
- Add KEYS, SCAN command tcl tests

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,33,sint.tcl,tcl,17,0,17
968240a98e0620b4385fc048946758ac4c181ad3,caipengbo@outlook.com,2021-06-08 22:51:03+08:00,noreply@github.com,2021-06-08 22:51:03+08:00,Add source code overview doc (#300),unstable,True,False,1,source-code-overview.CN.md,md,220,0,220
11ea1f6b4862d6ab05bce9abfda2576900ea1b5d,hulk.website@gmail.com,2021-06-11 16:37:21+08:00,noreply@github.com,2021-06-11 16:37:21+08:00,"Remove the default value of is_slotid_encoded (#304)

It's error-prone to use the default value when refactoring the function,
we should use those parameters with explicitly value assigned.",unstable,True,False,10,compact_filter.cc,cc,1,2,3
11ea1f6b4862d6ab05bce9abfda2576900ea1b5d,hulk.website@gmail.com,2021-06-11 16:37:21+08:00,noreply@github.com,2021-06-11 16:37:21+08:00,"Remove the default value of is_slotid_encoded (#304)

It's error-prone to use the default value when refactoring the function,
we should use those parameters with explicitly value assigned.",unstable,True,False,10,compact_filter.h,h,10,2,12
11ea1f6b4862d6ab05bce9abfda2576900ea1b5d,hulk.website@gmail.com,2021-06-11 16:37:21+08:00,noreply@github.com,2021-06-11 16:37:21+08:00,"Remove the default value of is_slotid_encoded (#304)

It's error-prone to use the default value when refactoring the function,
we should use those parameters with explicitly value assigned.",unstable,True,False,10,redis_cmd.cc,cc,1,1,2
11ea1f6b4862d6ab05bce9abfda2576900ea1b5d,hulk.website@gmail.com,2021-06-11 16:37:21+08:00,noreply@github.com,2021-06-11 16:37:21+08:00,"Remove the default value of is_slotid_encoded (#304)

It's error-prone to use the default value when refactoring the function,
we should use those parameters with explicitly value assigned.",unstable,True,False,10,redis_db.cc,cc,5,5,10
11ea1f6b4862d6ab05bce9abfda2576900ea1b5d,hulk.website@gmail.com,2021-06-11 16:37:21+08:00,noreply@github.com,2021-06-11 16:37:21+08:00,"Remove the default value of is_slotid_encoded (#304)

It's error-prone to use the default value when refactoring the function,
we should use those parameters with explicitly value assigned.",unstable,True,False,10,redis_metadata.h,h,4,4,8
11ea1f6b4862d6ab05bce9abfda2576900ea1b5d,hulk.website@gmail.com,2021-06-11 16:37:21+08:00,noreply@github.com,2021-06-11 16:37:21+08:00,"Remove the default value of is_slotid_encoded (#304)

It's error-prone to use the default value when refactoring the function,
we should use those parameters with explicitly value assigned.",unstable,True,False,10,storage.cc,cc,2,2,4
11ea1f6b4862d6ab05bce9abfda2576900ea1b5d,hulk.website@gmail.com,2021-06-11 16:37:21+08:00,noreply@github.com,2021-06-11 16:37:21+08:00,"Remove the default value of is_slotid_encoded (#304)

It's error-prone to use the default value when refactoring the function,
we should use those parameters with explicitly value assigned.",unstable,True,False,10,compact_test.cc,cc,1,0,1
11ea1f6b4862d6ab05bce9abfda2576900ea1b5d,hulk.website@gmail.com,2021-06-11 16:37:21+08:00,noreply@github.com,2021-06-11 16:37:21+08:00,"Remove the default value of is_slotid_encoded (#304)

It's error-prone to use the default value when refactoring the function,
we should use those parameters with explicitly value assigned.",unstable,True,False,10,t_metadata_test.cc,cc,3,3,6
11ea1f6b4862d6ab05bce9abfda2576900ea1b5d,hulk.website@gmail.com,2021-06-11 16:37:21+08:00,noreply@github.com,2021-06-11 16:37:21+08:00,"Remove the default value of is_slotid_encoded (#304)

It's error-prone to use the default value when refactoring the function,
we should use those parameters with explicitly value assigned.",unstable,True,False,10,parser.cc,cc,9,9,18
11ea1f6b4862d6ab05bce9abfda2576900ea1b5d,hulk.website@gmail.com,2021-06-11 16:37:21+08:00,noreply@github.com,2021-06-11 16:37:21+08:00,"Remove the default value of is_slotid_encoded (#304)

It's error-prone to use the default value when refactoring the function,
we should use those parameters with explicitly value assigned.",unstable,True,False,10,parser.h,h,2,0,2
2e2393cbc87491ae02f6d4411bb036b3af8fca6a,hulk.website@gmail.com,2021-06-15 19:13:51+08:00,noreply@github.com,2021-06-15 19:13:51+08:00,Transfer the kvrocks to the new group 'KvrocksLabs' (#306),unstable,True,False,1,release.yaml,yaml,6,6,12
e37fce7debd0589972b84754439cd188398b52a9,wangyuan21@baidu.com,2021-06-16 11:15:58+08:00,noreply@github.com,2021-06-16 11:15:58+08:00,Transfer kvrocks from bitleak to kvrockslabs (#308),unstable,True,False,5,LICENSE,None,1,1,2
e37fce7debd0589972b84754439cd188398b52a9,wangyuan21@baidu.com,2021-06-16 11:15:58+08:00,noreply@github.com,2021-06-16 11:15:58+08:00,Transfer kvrocks from bitleak to kvrockslabs (#308),unstable,True,False,5,README.md,md,9,9,18
e37fce7debd0589972b84754439cd188398b52a9,wangyuan21@baidu.com,2021-06-16 11:15:58+08:00,noreply@github.com,2021-06-16 11:15:58+08:00,Transfer kvrocks from bitleak to kvrockslabs (#308),unstable,True,False,5,kvrocks.conf,conf,1,1,2
e37fce7debd0589972b84754439cd188398b52a9,wangyuan21@baidu.com,2021-06-16 11:15:58+08:00,noreply@github.com,2021-06-16 11:15:58+08:00,Transfer kvrocks from bitleak to kvrockslabs (#308),unstable,True,False,5,package.sh,sh,2,2,4
e37fce7debd0589972b84754439cd188398b52a9,wangyuan21@baidu.com,2021-06-16 11:15:58+08:00,noreply@github.com,2021-06-16 11:15:58+08:00,Transfer kvrocks from bitleak to kvrockslabs (#308),unstable,True,False,5,kvrocks.service,service,1,1,2
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,.gitignore,gitignore,1,0,1
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,CMakeLists.txt,txt,7,0,7
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,kvrocks.conf,conf,9,0,9
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,Makefile,None,2,2,4
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,cluster.cc,cc,396,0,396
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,cluster.h,h,78,0,78
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,config.cc,cc,1,0,1
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,config.h,h,1,0,1
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,redis_cmd.cc,cc,107,27,134
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,redis_connection.cc,cc,27,16,43
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,server.cc,cc,3,0,3
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,server.h,h,2,0,2
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,status.h,h,4,0,4
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,cluster_test.cc,cc,140,0,140
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,default.conf,conf,3,2,5
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,cluster.tcl,tcl,236,0,236
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,test_helper.tcl,tcl,1,1,2
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,.gitignore,gitignore,1,0,1
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,default.conf,conf,16,0,16
d0ada3ba9e5e1768bfee6f0309222d468a301cb4,wangyuan21@baidu.com,2021-06-16 21:00:39+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Support cluster mode (#302)

One cluster mode is similar with redis cluster, please see #219",unstable,True,False,21,try_cluster.sh,sh,89,0,89
47d4f617c31b33ca654c42f261bc77d085a7cd8d,wangyuan21@baidu.com,2021-06-16 22:46:57+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,"Use ExclusivityGuard for CONFIG SET command (#310)

There may be more than one thread to change config, especially, complex config
(such as std::set profiling_sample_commands), it is not thread safe, and other
threads also may read wrong config, to make it easy, just use ExclusivityGuard
for CONFIG SET command to avoid changing config concurrently.",unstable,True,False,1,redis_connection.cc,cc,2,1,3
b3f233086f63e2da7efea9e588b1a276052096d6,wangyuan21@baidu.com,2021-06-16 22:47:27+08:00,wangyuan21@baidu.com,2021-06-16 23:45:06+08:00,Add supported cluster subcommands (#311),unstable,True,False,1,support-commands.md,md,9,0,9
3af1802d2e0b95ea4abcca986953d36e888b54b9,wangyuan21@baidu.com,2021-06-18 21:50:14+08:00,noreply@github.com,2021-06-18 21:50:14+08:00,Add wechat official account picture (#313),unstable,True,False,2,README.md,md,4,0,4
3af1802d2e0b95ea4abcca986953d36e888b54b9,wangyuan21@baidu.com,2021-06-18 21:50:14+08:00,noreply@github.com,2021-06-18 21:50:14+08:00,Add wechat official account picture (#313),unstable,True,False,2,wechat_account.jpg,jpg,0,0,0
7aa9ee9ae5ba86595706df26f70c65aa69455aa6,wangyuan21@baidu.com,2021-06-23 12:09:27+08:00,noreply@github.com,2021-06-23 12:09:27+08:00,"Adapt redis sentinel ping check (#316)

In redis sentinel, it sends ping command to the instance and check response,
kvrocks in replica role will return an error that is not LOADING when restoring
dataset from backup, so sentinel doesn't update the replica instance available
time and set the instance subjectively down. But for master, there is no problem.",unstable,True,False,1,redis_connection.cc,cc,1,1,2
d2bbad4d0d1a5f238d2a097b8be37db34d0dcb29,52450794+xujianhai666@users.noreply.github.com,2021-06-29 18:02:46+08:00,noreply@github.com,2021-06-29 18:02:46+08:00,Fix unable to link the libunwind in old version debian(<4.9) (#321),unstable,True,False,1,CMakeLists.txt,txt,3,2,5
82e05815ed5f5503ef2580df613a56f278ce9962,ChrisZMF@163.com,2021-07-01 20:25:50+08:00,noreply@github.com,2021-07-01 20:25:50+08:00,"Fix LTRIM only delete first item, LREM cannot correctly remove repeated items (#314)

There're three bugs fixed:
1.  LTRIM command only delete the first element in the subkey column family, coz it doesn't clear the buffer
2. LREM command cannot correctly remove repeated items with wrong overlay count
3. Wrong attribute in some commands

Co-authored-by: zoumingfo <zoumingfo@baidu.com>",unstable,True,False,4,redis_cmd.cc,cc,8,8,16
82e05815ed5f5503ef2580df613a56f278ce9962,ChrisZMF@163.com,2021-07-01 20:25:50+08:00,noreply@github.com,2021-07-01 20:25:50+08:00,"Fix LTRIM only delete first item, LREM cannot correctly remove repeated items (#314)

There're three bugs fixed:
1.  LTRIM command only delete the first element in the subkey column family, coz it doesn't clear the buffer
2. LREM command cannot correctly remove repeated items with wrong overlay count
3. Wrong attribute in some commands

Co-authored-by: zoumingfo <zoumingfo@baidu.com>",unstable,True,False,4,redis_list.cc,cc,6,2,8
82e05815ed5f5503ef2580df613a56f278ce9962,ChrisZMF@163.com,2021-07-01 20:25:50+08:00,noreply@github.com,2021-07-01 20:25:50+08:00,"Fix LTRIM only delete first item, LREM cannot correctly remove repeated items (#314)

There're three bugs fixed:
1.  LTRIM command only delete the first element in the subkey column family, coz it doesn't clear the buffer
2. LREM command cannot correctly remove repeated items with wrong overlay count
3. Wrong attribute in some commands

Co-authored-by: zoumingfo <zoumingfo@baidu.com>",unstable,True,False,4,t_list_test.cc,cc,149,1,150
82e05815ed5f5503ef2580df613a56f278ce9962,ChrisZMF@163.com,2021-07-01 20:25:50+08:00,noreply@github.com,2021-07-01 20:25:50+08:00,"Fix LTRIM only delete first item, LREM cannot correctly remove repeated items (#314)

There're three bugs fixed:
1.  LTRIM command only delete the first element in the subkey column family, coz it doesn't clear the buffer
2. LREM command cannot correctly remove repeated items with wrong overlay count
3. Wrong attribute in some commands

Co-authored-by: zoumingfo <zoumingfo@baidu.com>",unstable,True,False,4,list.tcl,tcl,24,0,24
b9aaf14fa17e6e3f67d8aa919b3104e6528d1647,wangyuan21@baidu.com,2021-07-09 18:07:55+08:00,noreply@github.com,2021-07-09 18:07:55+08:00,Disable slot-id-encoded by default for compatibility (#323),unstable,True,False,3,kvrocks.conf,conf,5,4,9
b9aaf14fa17e6e3f67d8aa919b3104e6528d1647,wangyuan21@baidu.com,2021-07-09 18:07:55+08:00,noreply@github.com,2021-07-09 18:07:55+08:00,Disable slot-id-encoded by default for compatibility (#323),unstable,True,False,3,config.cc,cc,1,1,2
b9aaf14fa17e6e3f67d8aa919b3104e6528d1647,wangyuan21@baidu.com,2021-07-09 18:07:55+08:00,noreply@github.com,2021-07-09 18:07:55+08:00,Disable slot-id-encoded by default for compatibility (#323),unstable,True,False,3,default.conf,conf,1,0,1
ad382f7d26688eb9834760f4747701148779ac14,wangyuan21@baidu.com,2021-07-14 21:00:07+08:00,noreply@github.com,2021-07-14 21:00:07+08:00,"Use CLUSTERX command to set cluster topology (#324)

Currently, we use cluster command to set cluster topology, as we know,
we must allow users use cluster command to get nodes and slots, and we
only can rename command name instead of subcommand, that is to say, users
have a chance to change cluster topology, it is dangerous.

Now, we use CLUSTERX command to set cluster topology, you can rename it
if you don't want to expose this command to users.",unstable,True,False,5,redis_cmd.cc,cc,55,23,78
ad382f7d26688eb9834760f4747701148779ac14,wangyuan21@baidu.com,2021-07-14 21:00:07+08:00,noreply@github.com,2021-07-14 21:00:07+08:00,"Use CLUSTERX command to set cluster topology (#324)

Currently, we use cluster command to set cluster topology, as we know,
we must allow users use cluster command to get nodes and slots, and we
only can rename command name instead of subcommand, that is to say, users
have a chance to change cluster topology, it is dangerous.

Now, we use CLUSTERX command to set cluster topology, you can rename it
if you don't want to expose this command to users.",unstable,True,False,5,redis_connection.cc,cc,1,1,2
ad382f7d26688eb9834760f4747701148779ac14,wangyuan21@baidu.com,2021-07-14 21:00:07+08:00,noreply@github.com,2021-07-14 21:00:07+08:00,"Use CLUSTERX command to set cluster topology (#324)

Currently, we use cluster command to set cluster topology, as we know,
we must allow users use cluster command to get nodes and slots, and we
only can rename command name instead of subcommand, that is to say, users
have a chance to change cluster topology, it is dangerous.

Now, we use CLUSTERX command to set cluster topology, you can rename it
if you don't want to expose this command to users.",unstable,True,False,5,cluster.tcl,tcl,15,15,30
ad382f7d26688eb9834760f4747701148779ac14,wangyuan21@baidu.com,2021-07-14 21:00:07+08:00,noreply@github.com,2021-07-14 21:00:07+08:00,"Use CLUSTERX command to set cluster topology (#324)

Currently, we use cluster command to set cluster topology, as we know,
we must allow users use cluster command to get nodes and slots, and we
only can rename command name instead of subcommand, that is to say, users
have a chance to change cluster topology, it is dangerous.

Now, we use CLUSTERX command to set cluster topology, you can rename it
if you don't want to expose this command to users.",unstable,True,False,5,command.tcl,tcl,2,2,4
ad382f7d26688eb9834760f4747701148779ac14,wangyuan21@baidu.com,2021-07-14 21:00:07+08:00,noreply@github.com,2021-07-14 21:00:07+08:00,"Use CLUSTERX command to set cluster topology (#324)

Currently, we use cluster command to set cluster topology, as we know,
we must allow users use cluster command to get nodes and slots, and we
only can rename command name instead of subcommand, that is to say, users
have a chance to change cluster topology, it is dangerous.

Now, we use CLUSTERX command to set cluster topology, you can rename it
if you don't want to expose this command to users.",unstable,True,False,5,try_cluster.sh,sh,2,2,4
dc9d04036e5b7784047bd21911cafa5c5f038735,wangyuan21@baidu.com,2021-07-16 10:27:49+08:00,noreply@github.com,2021-07-16 10:27:49+08:00,"Remove exposing slot-id-encoded config (#330)

Before, we expose slot-id-encoded in config file, that is useful to migrate
keys based on slot when cluster is enabled, actually, we should only enable
slot-id-encoded when we want to use cluster mode. So exposing this config may
make users confused, and wrong config also make data corrupt. Now we remove
this config, and set it automatically.",unstable,True,False,8,kvrocks.conf,conf,9,17,26
dc9d04036e5b7784047bd21911cafa5c5f038735,wangyuan21@baidu.com,2021-07-16 10:27:49+08:00,noreply@github.com,2021-07-16 10:27:49+08:00,"Remove exposing slot-id-encoded config (#330)

Before, we expose slot-id-encoded in config file, that is useful to migrate
keys based on slot when cluster is enabled, actually, we should only enable
slot-id-encoded when we want to use cluster mode. So exposing this config may
make users confused, and wrong config also make data corrupt. Now we remove
this config, and set it automatically.",unstable,True,False,8,config.cc,cc,5,2,7
dc9d04036e5b7784047bd21911cafa5c5f038735,wangyuan21@baidu.com,2021-07-16 10:27:49+08:00,noreply@github.com,2021-07-16 10:27:49+08:00,"Remove exposing slot-id-encoded config (#330)

Before, we expose slot-id-encoded in config file, that is useful to migrate
keys based on slot when cluster is enabled, actually, we should only enable
slot-id-encoded when we want to use cluster mode. So exposing this config may
make users confused, and wrong config also make data corrupt. Now we remove
this config, and set it automatically.",unstable,True,False,8,config.h,h,3,2,5
dc9d04036e5b7784047bd21911cafa5c5f038735,wangyuan21@baidu.com,2021-07-16 10:27:49+08:00,noreply@github.com,2021-07-16 10:27:49+08:00,"Remove exposing slot-id-encoded config (#330)

Before, we expose slot-id-encoded in config file, that is useful to migrate
keys based on slot when cluster is enabled, actually, we should only enable
slot-id-encoded when we want to use cluster mode. So exposing this config may
make users confused, and wrong config also make data corrupt. Now we remove
this config, and set it automatically.",unstable,True,False,8,redis_cmd.cc,cc,2,2,4
dc9d04036e5b7784047bd21911cafa5c5f038735,wangyuan21@baidu.com,2021-07-16 10:27:49+08:00,noreply@github.com,2021-07-16 10:27:49+08:00,"Remove exposing slot-id-encoded config (#330)

Before, we expose slot-id-encoded in config file, that is useful to migrate
keys based on slot when cluster is enabled, actually, we should only enable
slot-id-encoded when we want to use cluster mode. So exposing this config may
make users confused, and wrong config also make data corrupt. Now we remove
this config, and set it automatically.",unstable,True,False,8,redis_connection.cc,cc,2,2,4
dc9d04036e5b7784047bd21911cafa5c5f038735,wangyuan21@baidu.com,2021-07-16 10:27:49+08:00,noreply@github.com,2021-07-16 10:27:49+08:00,"Remove exposing slot-id-encoded config (#330)

Before, we expose slot-id-encoded in config file, that is useful to migrate
keys based on slot when cluster is enabled, actually, we should only enable
slot-id-encoded when we want to use cluster mode. So exposing this config may
make users confused, and wrong config also make data corrupt. Now we remove
this config, and set it automatically.",unstable,True,False,8,default.conf,conf,0,2,2
dc9d04036e5b7784047bd21911cafa5c5f038735,wangyuan21@baidu.com,2021-07-16 10:27:49+08:00,noreply@github.com,2021-07-16 10:27:49+08:00,"Remove exposing slot-id-encoded config (#330)

Before, we expose slot-id-encoded in config file, that is useful to migrate
keys based on slot when cluster is enabled, actually, we should only enable
slot-id-encoded when we want to use cluster mode. So exposing this config may
make users confused, and wrong config also make data corrupt. Now we remove
this config, and set it automatically.",unstable,True,False,8,cluster.tcl,tcl,7,7,14
dc9d04036e5b7784047bd21911cafa5c5f038735,wangyuan21@baidu.com,2021-07-16 10:27:49+08:00,noreply@github.com,2021-07-16 10:27:49+08:00,"Remove exposing slot-id-encoded config (#330)

Before, we expose slot-id-encoded in config file, that is useful to migrate
keys based on slot when cluster is enabled, actually, we should only enable
slot-id-encoded when we want to use cluster mode. So exposing this config may
make users confused, and wrong config also make data corrupt. Now we remove
this config, and set it automatically.",unstable,True,False,8,default.conf,conf,1,1,2
848548cb7f53b48e217517530ee0a434c0fcedb1,hulk.website@gmail.com,2021-07-18 15:48:01+08:00,noreply@github.com,2021-07-18 15:48:01+08:00,Only link the library when it's existed (#333),unstable,True,False,1,CMakeLists.txt,txt,14,3,17
52af2b9a9984e9c5b7cb8b03bcff3d5a3319109a,hulk.website@gmail.com,2021-07-18 21:34:41+08:00,noreply@github.com,2021-07-18 21:34:41+08:00,Use the rocksdb MultiGet in the MGet command (#331),unstable,True,False,8,redis_bitmap.cc,cc,2,2,4
52af2b9a9984e9c5b7cb8b03bcff3d5a3319109a,hulk.website@gmail.com,2021-07-18 21:34:41+08:00,noreply@github.com,2021-07-18 21:34:41+08:00,Use the rocksdb MultiGet in the MGet command (#331),unstable,True,False,8,redis_db.cc,cc,4,4,8
52af2b9a9984e9c5b7cb8b03bcff3d5a3319109a,hulk.website@gmail.com,2021-07-18 21:34:41+08:00,noreply@github.com,2021-07-18 21:34:41+08:00,Use the rocksdb MultiGet in the MGet command (#331),unstable,True,False,8,redis_list.cc,cc,1,1,2
52af2b9a9984e9c5b7cb8b03bcff3d5a3319109a,hulk.website@gmail.com,2021-07-18 21:34:41+08:00,noreply@github.com,2021-07-18 21:34:41+08:00,Use the rocksdb MultiGet in the MGet command (#331),unstable,True,False,8,redis_metadata.h,h,3,0,3
52af2b9a9984e9c5b7cb8b03bcff3d5a3319109a,hulk.website@gmail.com,2021-07-18 21:34:41+08:00,noreply@github.com,2021-07-18 21:34:41+08:00,Use the rocksdb MultiGet in the MGet command (#331),unstable,True,False,8,redis_reply.cc,cc,1,1,2
52af2b9a9984e9c5b7cb8b03bcff3d5a3319109a,hulk.website@gmail.com,2021-07-18 21:34:41+08:00,noreply@github.com,2021-07-18 21:34:41+08:00,Use the rocksdb MultiGet in the MGet command (#331),unstable,True,False,8,redis_set.cc,cc,1,1,2
52af2b9a9984e9c5b7cb8b03bcff3d5a3319109a,hulk.website@gmail.com,2021-07-18 21:34:41+08:00,noreply@github.com,2021-07-18 21:34:41+08:00,Use the rocksdb MultiGet in the MGet command (#331),unstable,True,False,8,redis_string.cc,cc,55,10,65
52af2b9a9984e9c5b7cb8b03bcff3d5a3319109a,hulk.website@gmail.com,2021-07-18 21:34:41+08:00,noreply@github.com,2021-07-18 21:34:41+08:00,Use the rocksdb MultiGet in the MGet command (#331),unstable,True,False,8,redis_string.h,h,2,0,2
cfc1e07a25c78c2d5d80e0bb7a2a024b3b28e6de,nkcs_lykx@hotmail.com,2021-07-20 11:37:36+08:00,noreply@github.com,2021-07-20 11:37:36+08:00,Supplements of guideline of compilation on macOS with make and clean up some code (#334),unstable,True,False,5,README.md,md,1,1,2
cfc1e07a25c78c2d5d80e0bb7a2a024b3b28e6de,nkcs_lykx@hotmail.com,2021-07-20 11:37:36+08:00,noreply@github.com,2021-07-20 11:37:36+08:00,Supplements of guideline of compilation on macOS with make and clean up some code (#334),unstable,True,False,5,redis_cmd.cc,cc,1,1,2
cfc1e07a25c78c2d5d80e0bb7a2a024b3b28e6de,nkcs_lykx@hotmail.com,2021-07-20 11:37:36+08:00,noreply@github.com,2021-07-20 11:37:36+08:00,Supplements of guideline of compilation on macOS with make and clean up some code (#334),unstable,True,False,5,redis_db.cc,cc,6,5,11
cfc1e07a25c78c2d5d80e0bb7a2a024b3b28e6de,nkcs_lykx@hotmail.com,2021-07-20 11:37:36+08:00,noreply@github.com,2021-07-20 11:37:36+08:00,Supplements of guideline of compilation on macOS with make and clean up some code (#334),unstable,True,False,5,redis_hash.cc,cc,3,2,5
cfc1e07a25c78c2d5d80e0bb7a2a024b3b28e6de,nkcs_lykx@hotmail.com,2021-07-20 11:37:36+08:00,noreply@github.com,2021-07-20 11:37:36+08:00,Supplements of guideline of compilation on macOS with make and clean up some code (#334),unstable,True,False,5,util.cc,cc,0,1,1
9a0bc144e86a681fef137d94ac6d3aaa030a58bc,entropylee@gmail.com,2021-07-20 18:16:26+08:00,noreply@github.com,2021-07-20 18:16:26+08:00,"Fix the SUBSCRIBE command can't the update last interaction time (#335)

Act like Redis, SUBSCRIBE must update the last interaction time while a publish message received, otherwise, this channel may be closed for timeout reasons by default.",unstable,True,False,1,worker.cc,cc,1,0,1
02b18c584f9b728941914802f398aaa6e2102866,wangyuan21@baidu.com,2021-07-21 17:32:08+08:00,noreply@github.com,2021-07-21 17:32:08+08:00,Fix SETNX and MSETNX commands can't guarantee atomicity (#337),unstable,True,False,2,redis_cmd.cc,cc,1,1,2
02b18c584f9b728941914802f398aaa6e2102866,wangyuan21@baidu.com,2021-07-21 17:32:08+08:00,noreply@github.com,2021-07-21 17:32:08+08:00,Fix SETNX and MSETNX commands can't guarantee atomicity (#337),unstable,True,False,2,redis_string.cc,cc,3,0,3
35736715b0cfa1ab79c403c4a1f2a16d5cfa485f,entropylee@gmail.com,2021-07-23 13:19:13+08:00,noreply@github.com,2021-07-23 13:19:13+08:00,Fix avoid useless space allocation in SetBit (#338),unstable,True,False,1,redis_bitmap.cc,cc,2,0,2
b4110204e339f2a0fa449096428d0909342be588,hulk.website@gmail.com,2021-07-25 22:18:53+08:00,noreply@github.com,2021-07-25 22:18:53+08:00,Fix the slave won't reconnect when failing to connect with master (#344),unstable,True,False,1,replication.cc,cc,17,7,24
72e6d42f427caadaccec76e4557ba129c5bdb7db,wangyuan21@baidu.com,2021-07-31 17:05:53+08:00,noreply@github.com,2021-07-31 17:05:53+08:00,"Fix master pauses synchronizing with replicas (#347)

Before this commit, master will pause synchronizing with replicas
if there only is one command which has more than 20 updates in
RocksDB, of course, master will continue to synchronize with
replicas if arriving more write traffic. This commit fixes the bad
case, please see #346.",unstable,True,False,4,redis_list.cc,cc,3,3,6
72e6d42f427caadaccec76e4557ba129c5bdb7db,wangyuan21@baidu.com,2021-07-31 17:05:53+08:00,noreply@github.com,2021-07-31 17:05:53+08:00,"Fix master pauses synchronizing with replicas (#347)

Before this commit, master will pause synchronizing with replicas
if there only is one command which has more than 20 updates in
RocksDB, of course, master will continue to synchronize with
replicas if arriving more write traffic. This commit fixes the bad
case, please see #346.",unstable,True,False,4,replication.cc,cc,30,18,48
72e6d42f427caadaccec76e4557ba129c5bdb7db,wangyuan21@baidu.com,2021-07-31 17:05:53+08:00,noreply@github.com,2021-07-31 17:05:53+08:00,"Fix master pauses synchronizing with replicas (#347)

Before this commit, master will pause synchronizing with replicas
if there only is one command which has more than 20 updates in
RocksDB, of course, master will continue to synchronize with
replicas if arriving more write traffic. This commit fixes the bad
case, please see #346.",unstable,True,False,4,replication.h,h,2,0,2
72e6d42f427caadaccec76e4557ba129c5bdb7db,wangyuan21@baidu.com,2021-07-31 17:05:53+08:00,noreply@github.com,2021-07-31 17:05:53+08:00,"Fix master pauses synchronizing with replicas (#347)

Before this commit, master will pause synchronizing with replicas
if there only is one command which has more than 20 updates in
RocksDB, of course, master will continue to synchronize with
replicas if arriving more write traffic. This commit fixes the bad
case, please see #346.",unstable,True,False,4,replication.tcl,tcl,24,0,24
5182bd27f691a7a9ee932381b38f7939fa841c32,wangyuan21@baidu.com,2021-07-31 18:19:00+08:00,noreply@github.com,2021-07-31 18:19:00+08:00,Update LICENSE (#351),unstable,True,False,1,LICENSE,None,1,1,2
0a185b5d25f99f147bec70087a12d1fdbcea27eb,wangyuan21@baidu.com,2021-08-11 14:22:32+08:00,noreply@github.com,2021-08-11 14:22:32+08:00,"Support client kill type subcommands (#352)

From 2.0.2, we support MULTI-EXEC, but don't support client kill type $type,
so total MULTI-EXEC will be rollbacked when failing to parse unknown kill type
in client command, and cause redis-sentinel fails to failover. To make it
available, we should support client kill type subcommands",unstable,True,False,9,redis_cmd.cc,cc,16,3,19
0a185b5d25f99f147bec70087a12d1fdbcea27eb,wangyuan21@baidu.com,2021-08-11 14:22:32+08:00,noreply@github.com,2021-08-11 14:22:32+08:00,"Support client kill type subcommands (#352)

From 2.0.2, we support MULTI-EXEC, but don't support client kill type $type,
so total MULTI-EXEC will be rollbacked when failing to parse unknown kill type
in client command, and cause redis-sentinel fails to failover. To make it
available, we should support client kill type subcommands",unstable,True,False,9,redis_connection.cc,cc,16,2,18
0a185b5d25f99f147bec70087a12d1fdbcea27eb,wangyuan21@baidu.com,2021-08-11 14:22:32+08:00,noreply@github.com,2021-08-11 14:22:32+08:00,"Support client kill type subcommands (#352)

From 2.0.2, we support MULTI-EXEC, but don't support client kill type $type,
so total MULTI-EXEC will be rollbacked when failing to parse unknown kill type
in client command, and cause redis-sentinel fails to failover. To make it
available, we should support client kill type subcommands",unstable,True,False,9,redis_connection.h,h,1,0,1
0a185b5d25f99f147bec70087a12d1fdbcea27eb,wangyuan21@baidu.com,2021-08-11 14:22:32+08:00,noreply@github.com,2021-08-11 14:22:32+08:00,"Support client kill type subcommands (#352)

From 2.0.2, we support MULTI-EXEC, but don't support client kill type $type,
so total MULTI-EXEC will be rollbacked when failing to parse unknown kill type
in client command, and cause redis-sentinel fails to failover. To make it
available, we should support client kill type subcommands",unstable,True,False,9,server.cc,cc,27,7,34
0a185b5d25f99f147bec70087a12d1fdbcea27eb,wangyuan21@baidu.com,2021-08-11 14:22:32+08:00,noreply@github.com,2021-08-11 14:22:32+08:00,"Support client kill type subcommands (#352)

From 2.0.2, we support MULTI-EXEC, but don't support client kill type $type,
so total MULTI-EXEC will be rollbacked when failing to parse unknown kill type
in client command, and cause redis-sentinel fails to failover. To make it
available, we should support client kill type subcommands",unstable,True,False,9,server.h,h,10,2,12
0a185b5d25f99f147bec70087a12d1fdbcea27eb,wangyuan21@baidu.com,2021-08-11 14:22:32+08:00,noreply@github.com,2021-08-11 14:22:32+08:00,"Support client kill type subcommands (#352)

From 2.0.2, we support MULTI-EXEC, but don't support client kill type $type,
so total MULTI-EXEC will be rollbacked when failing to parse unknown kill type
in client command, and cause redis-sentinel fails to failover. To make it
available, we should support client kill type subcommands",unstable,True,False,9,worker.cc,cc,5,2,7
0a185b5d25f99f147bec70087a12d1fdbcea27eb,wangyuan21@baidu.com,2021-08-11 14:22:32+08:00,noreply@github.com,2021-08-11 14:22:32+08:00,"Support client kill type subcommands (#352)

From 2.0.2, we support MULTI-EXEC, but don't support client kill type $type,
so total MULTI-EXEC will be rollbacked when failing to parse unknown kill type
in client command, and cause redis-sentinel fails to failover. To make it
available, we should support client kill type subcommands",unstable,True,False,9,worker.h,h,2,1,3
0a185b5d25f99f147bec70087a12d1fdbcea27eb,wangyuan21@baidu.com,2021-08-11 14:22:32+08:00,noreply@github.com,2021-08-11 14:22:32+08:00,"Support client kill type subcommands (#352)

From 2.0.2, we support MULTI-EXEC, but don't support client kill type $type,
so total MULTI-EXEC will be rollbacked when failing to parse unknown kill type
in client command, and cause redis-sentinel fails to failover. To make it
available, we should support client kill type subcommands",unstable,True,False,9,introspection.tcl,tcl,93,0,93
0a185b5d25f99f147bec70087a12d1fdbcea27eb,wangyuan21@baidu.com,2021-08-11 14:22:32+08:00,noreply@github.com,2021-08-11 14:22:32+08:00,"Support client kill type subcommands (#352)

From 2.0.2, we support MULTI-EXEC, but don't support client kill type $type,
so total MULTI-EXEC will be rollbacked when failing to parse unknown kill type
in client command, and cause redis-sentinel fails to failover. To make it
available, we should support client kill type subcommands",unstable,True,False,9,multi.tcl,tcl,22,0,22
7fcce4913020711c6ff19899a1e35891a4ed0689,wangyuan21@baidu.com,2021-08-27 15:11:49+08:00,noreply@github.com,2021-08-27 15:11:49+08:00,"Auto set master/slave replication by cluster topology (#356)

Before we set cluster topology by CLUSTERX SETNODES commands, but replication
relationship still need to set manually, actually, we could learn node role from
cluster topology, so we will remove its master for master node, and set its master
for replica node, users don't need to extra set replication relationship.",unstable,True,False,5,cluster.cc,cc,35,2,37
7fcce4913020711c6ff19899a1e35891a4ed0689,wangyuan21@baidu.com,2021-08-27 15:11:49+08:00,noreply@github.com,2021-08-27 15:11:49+08:00,"Auto set master/slave replication by cluster topology (#356)

Before we set cluster topology by CLUSTERX SETNODES commands, but replication
relationship still need to set manually, actually, we could learn node role from
cluster topology, so we will remove its master for master node, and set its master
for replica node, users don't need to extra set replication relationship.",unstable,True,False,5,cluster.h,h,5,1,6
7fcce4913020711c6ff19899a1e35891a4ed0689,wangyuan21@baidu.com,2021-08-27 15:11:49+08:00,noreply@github.com,2021-08-27 15:11:49+08:00,"Auto set master/slave replication by cluster topology (#356)

Before we set cluster topology by CLUSTERX SETNODES commands, but replication
relationship still need to set manually, actually, we could learn node role from
cluster topology, so we will remove its master for master node, and set its master
for replica node, users don't need to extra set replication relationship.",unstable,True,False,5,server.cc,cc,1,1,2
7fcce4913020711c6ff19899a1e35891a4ed0689,wangyuan21@baidu.com,2021-08-27 15:11:49+08:00,noreply@github.com,2021-08-27 15:11:49+08:00,"Auto set master/slave replication by cluster topology (#356)

Before we set cluster topology by CLUSTERX SETNODES commands, but replication
relationship still need to set manually, actually, we could learn node role from
cluster topology, so we will remove its master for master node, and set its master
for replica node, users don't need to extra set replication relationship.",unstable,True,False,5,cluster_test.cc,cc,3,3,6
7fcce4913020711c6ff19899a1e35891a4ed0689,wangyuan21@baidu.com,2021-08-27 15:11:49+08:00,noreply@github.com,2021-08-27 15:11:49+08:00,"Auto set master/slave replication by cluster topology (#356)

Before we set cluster topology by CLUSTERX SETNODES commands, but replication
relationship still need to set manually, actually, we could learn node role from
cluster topology, so we will remove its master for master node, and set its master
for replica node, users don't need to extra set replication relationship.",unstable,True,False,5,try_cluster.sh,sh,1,5,6
41550959ae9ab4dd0fb158ed76658cbcb00c5cdc,wangyuan21@baidu.com,2021-09-03 17:48:43+08:00,noreply@github.com,2021-09-03 17:48:43+08:00,Update kvrocks.conf (#357),unstable,True,False,1,kvrocks.conf,conf,8,8,16
54f3b3455360e9eb582fbd860fc62902f0018a44,wangyuan21@baidu.com,2021-09-10 17:10:57+08:00,noreply@github.com,2021-09-10 17:10:57+08:00,"Fix wrong mater port if enabling master-use-repl-port (#360)

If enabling master-use-repl-port, in replica, its master port is wrong,
it should be master listen port instead of listen port + 1.",unstable,True,False,1,server.cc,cc,3,2,5
ec3e8b8ea94cfc023c6ab66bb744f5454b1cf8da,wangyuan21@baidu.com,2021-09-10 17:32:36+08:00,noreply@github.com,2021-09-10 17:32:36+08:00,"Make client subcommands not case sensitive (#361)

Before, client subcommands must be lower cases, otherwise kvrocks will fail to execute,
so sentinel still can't failover, related to #352",unstable,True,False,2,redis_cmd.cc,cc,11,10,21
ec3e8b8ea94cfc023c6ab66bb744f5454b1cf8da,wangyuan21@baidu.com,2021-09-10 17:32:36+08:00,noreply@github.com,2021-09-10 17:32:36+08:00,"Make client subcommands not case sensitive (#361)

Before, client subcommands must be lower cases, otherwise kvrocks will fail to execute,
so sentinel still can't failover, related to #352",unstable,True,False,2,multi.tcl,tcl,12,12,24
3bb4747f0a0878a72921b44e6ca4281b57ac5a6c,caipengbo@outlook.com,2021-09-25 11:44:21+08:00,noreply@github.com,2021-09-25 11:44:21+08:00,Metadata and subkey column family share a singleblock cache (#365),unstable,True,False,4,kvrocks.conf,conf,7,0,7
3bb4747f0a0878a72921b44e6ca4281b57ac5a6c,caipengbo@outlook.com,2021-09-25 11:44:21+08:00,noreply@github.com,2021-09-25 11:44:21+08:00,Metadata and subkey column family share a singleblock cache (#365),unstable,True,False,4,config.cc,cc,2,0,2
3bb4747f0a0878a72921b44e6ca4281b57ac5a6c,caipengbo@outlook.com,2021-09-25 11:44:21+08:00,noreply@github.com,2021-09-25 11:44:21+08:00,Metadata and subkey column family share a singleblock cache (#365),unstable,True,False,4,config.h,h,1,0,1
3bb4747f0a0878a72921b44e6ca4281b57ac5a6c,caipengbo@outlook.com,2021-09-25 11:44:21+08:00,noreply@github.com,2021-09-25 11:44:21+08:00,Metadata and subkey column family share a singleblock cache (#365),unstable,True,False,4,storage.cc,cc,13,2,15
d5df507cb727a7cee6712d2d71d24313a7d51ec1,caipengbo@outlook.com,2021-10-09 11:55:55+08:00,noreply@github.com,2021-10-09 11:55:55+08:00,Fixed dynamic resize target_file_size_base bug (#368),unstable,True,False,3,config.cc,cc,6,1,7
d5df507cb727a7cee6712d2d71d24313a7d51ec1,caipengbo@outlook.com,2021-10-09 11:55:55+08:00,noreply@github.com,2021-10-09 11:55:55+08:00,Fixed dynamic resize target_file_size_base bug (#368),unstable,True,False,3,server.cc,cc,3,3,6
d5df507cb727a7cee6712d2d71d24313a7d51ec1,caipengbo@outlook.com,2021-10-09 11:55:55+08:00,noreply@github.com,2021-10-09 11:55:55+08:00,Fixed dynamic resize target_file_size_base bug (#368),unstable,True,False,3,config_test.cc,cc,1,1,2
5af6c7080022e6befa5f6efed6d4ce7c4b8ec6e4,hulk.website@gmail.com,2021-10-09 12:07:39+08:00,noreply@github.com,2021-10-09 12:07:39+08:00,"Support the eval command on kvrocks(#363)



Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,23,.gitmodules,gitmodules,3,0,3
5af6c7080022e6befa5f6efed6d4ce7c4b8ec6e4,hulk.website@gmail.com,2021-10-09 12:07:39+08:00,noreply@github.com,2021-10-09 12:07:39+08:00,"Support the eval command on kvrocks(#363)



Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,23,CMakeLists.txt,txt,20,5,25
5af6c7080022e6befa5f6efed6d4ce7c4b8ec6e4,hulk.website@gmail.com,2021-10-09 12:07:39+08:00,noreply@github.com,2021-10-09 12:07:39+08:00,"Support the eval command on kvrocks(#363)



Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,23,lua.cmake,cmake,30,0,30
823b76ce55e9e735f01dec3f8fe9b54fbbd290a1,hulk.website@gmail.com,2021-10-15 23:57:23+08:00,noreply@github.com,2021-10-15 23:57:23+08:00,Fix the lua reply string should be the bulk string (#371),unstable,True,False,3,scripting.cc,cc,1,1,2
823b76ce55e9e735f01dec3f8fe9b54fbbd290a1,hulk.website@gmail.com,2021-10-15 23:57:23+08:00,noreply@github.com,2021-10-15 23:57:23+08:00,Fix the lua reply string should be the bulk string (#371),unstable,True,False,3,redis.tcl,tcl,12,1,13
823b76ce55e9e735f01dec3f8fe9b54fbbd290a1,hulk.website@gmail.com,2021-10-15 23:57:23+08:00,noreply@github.com,2021-10-15 23:57:23+08:00,Fix the lua reply string should be the bulk string (#371),unstable,True,False,3,scripting.tcl,tcl,9,0,9
0e244fa53ed276a14130a10171437ac35fb871af,caipengbo@outlook.com,2021-10-17 23:29:42+08:00,noreply@github.com,2021-10-17 23:29:42+08:00,Set rocksdb.share_metadata_and_subkey_block_cache to yes by default (#373),unstable,True,False,2,kvrocks.conf,conf,2,2,4
0e244fa53ed276a14130a10171437ac35fb871af,caipengbo@outlook.com,2021-10-17 23:29:42+08:00,noreply@github.com,2021-10-17 23:29:42+08:00,Set rocksdb.share_metadata_and_subkey_block_cache to yes by default (#373),unstable,True,False,2,config.cc,cc,1,1,2
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,CMakeLists.txt,txt,7,2,9
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,support-commands.md,md,7,0,7
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,Makefile,None,1,1,2
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,compact_filter.h,h,21,0,21
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,compaction_checker.cc,cc,2,2,4
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,compaction_checker.h,h,1,1,2
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,rand.cc,cc,95,0,95
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,rand.h,h,36,0,36
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,redis_cmd.cc,cc,59,6,65
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,redis_connection.cc,cc,1,1,2
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,replication.cc,cc,20,8,28
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,replication.h,h,10,5,15
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,scripting.cc,cc,138,22,160
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,scripting.h,h,6,1,7
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,server.cc,cc,74,1,75
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,server.h,h,13,0,13
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,storage.cc,cc,30,2,32
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,storage.h,h,7,0,7
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,util.cc,cc,57,0,57
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,util.h,h,1,0,1
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,string_util_test.cc,cc,7,0,7
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,util.tcl,tcl,1,1,2
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,.gitignore,gitignore,1,1,2
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,command.tcl,tcl,2,2,4
5d42725c28067949761a1b0c7294b8b64b1b2603,hulk.website@gmail.com,2021-10-19 11:22:01+08:00,noreply@github.com,2021-10-19 11:22:01+08:00,"Implement the evalsha and script command (#369)

Redis regards the Lua scripts as memory cache which would
lost after restarting, but we prefer persisting into the disk 
which also can save some memory usage. The only side effect was 
all history scripts would be stored, but we think
it's ok since scripts shouldn't be too many.

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,25,scripting.tcl,tcl,131,16,147
5cfb021d2c20d842d35977edbe67069b6d42dc19,wangyuan21@baidu.com,2021-10-20 10:39:49+08:00,noreply@github.com,2021-10-20 10:39:49+08:00,Add master_repl_offset in INFO command output (#374),unstable,True,False,2,server.cc,cc,1,0,1
5cfb021d2c20d842d35977edbe67069b6d42dc19,wangyuan21@baidu.com,2021-10-20 10:39:49+08:00,noreply@github.com,2021-10-20 10:39:49+08:00,Add master_repl_offset in INFO command output (#374),unstable,True,False,2,util.tcl,tcl,1,1,2
068178c4ea9d932ad150d70076159dda75266cb3,hulk.website@gmail.com,2021-10-21 12:17:20+08:00,noreply@github.com,2021-10-21 12:17:20+08:00,Remove unused configuration item `repl-workers` (#377),unstable,True,False,11,CMakeLists.txt,txt,2,0,2
068178c4ea9d932ad150d70076159dda75266cb3,hulk.website@gmail.com,2021-10-21 12:17:20+08:00,noreply@github.com,2021-10-21 12:17:20+08:00,Remove unused configuration item `repl-workers` (#377),unstable,True,False,11,kvrocks.conf,conf,0,4,4
068178c4ea9d932ad150d70076159dda75266cb3,hulk.website@gmail.com,2021-10-21 12:17:20+08:00,noreply@github.com,2021-10-21 12:17:20+08:00,Remove unused configuration item `repl-workers` (#377),unstable,True,False,11,config.cc,cc,1,2,3
068178c4ea9d932ad150d70076159dda75266cb3,hulk.website@gmail.com,2021-10-21 12:17:20+08:00,noreply@github.com,2021-10-21 12:17:20+08:00,Remove unused configuration item `repl-workers` (#377),unstable,True,False,11,config.h,h,0,1,1
068178c4ea9d932ad150d70076159dda75266cb3,hulk.website@gmail.com,2021-10-21 12:17:20+08:00,noreply@github.com,2021-10-21 12:17:20+08:00,Remove unused configuration item `repl-workers` (#377),unstable,True,False,11,redis_cmd.cc,cc,7,9,16
068178c4ea9d932ad150d70076159dda75266cb3,hulk.website@gmail.com,2021-10-21 12:17:20+08:00,noreply@github.com,2021-10-21 12:17:20+08:00,Remove unused configuration item `repl-workers` (#377),unstable,True,False,11,redis_connection.cc,cc,1,7,8
068178c4ea9d932ad150d70076159dda75266cb3,hulk.website@gmail.com,2021-10-21 12:17:20+08:00,noreply@github.com,2021-10-21 12:17:20+08:00,Remove unused configuration item `repl-workers` (#377),unstable,True,False,11,redis_connection.h,h,0,1,1
068178c4ea9d932ad150d70076159dda75266cb3,hulk.website@gmail.com,2021-10-21 12:17:20+08:00,noreply@github.com,2021-10-21 12:17:20+08:00,Remove unused configuration item `repl-workers` (#377),unstable,True,False,11,server.cc,cc,0,12,12
068178c4ea9d932ad150d70076159dda75266cb3,hulk.website@gmail.com,2021-10-21 12:17:20+08:00,noreply@github.com,2021-10-21 12:17:20+08:00,Remove unused configuration item `repl-workers` (#377),unstable,True,False,11,server.h,h,0,1,1
068178c4ea9d932ad150d70076159dda75266cb3,hulk.website@gmail.com,2021-10-21 12:17:20+08:00,noreply@github.com,2021-10-21 12:17:20+08:00,Remove unused configuration item `repl-workers` (#377),unstable,True,False,11,worker.cc,cc,2,36,38
068178c4ea9d932ad150d70076159dda75266cb3,hulk.website@gmail.com,2021-10-21 12:17:20+08:00,noreply@github.com,2021-10-21 12:17:20+08:00,Remove unused configuration item `repl-workers` (#377),unstable,True,False,11,worker.h,h,0,3,3
d2c0afb3b52d4b0a8d263502764610fcae00220c,caipengbo@outlook.com,2021-10-22 17:54:00+08:00,noreply@github.com,2021-10-22 17:54:00+08:00,Improve the description of Perflog in default config file (#378),unstable,True,False,4,kvrocks.conf,conf,41,18,59
d2c0afb3b52d4b0a8d263502764610fcae00220c,caipengbo@outlook.com,2021-10-22 17:54:00+08:00,noreply@github.com,2021-10-22 17:54:00+08:00,Improve the description of Perflog in default config file (#378),unstable,True,False,4,config.cc,cc,6,3,9
d2c0afb3b52d4b0a8d263502764610fcae00220c,caipengbo@outlook.com,2021-10-22 17:54:00+08:00,noreply@github.com,2021-10-22 17:54:00+08:00,Improve the description of Perflog in default config file (#378),unstable,True,False,4,storage.cc,cc,1,1,2
d2c0afb3b52d4b0a8d263502764610fcae00220c,caipengbo@outlook.com,2021-10-22 17:54:00+08:00,noreply@github.com,2021-10-22 17:54:00+08:00,Improve the description of Perflog in default config file (#378),unstable,True,False,4,config_test.cc,cc,4,0,4
e16f5054febe8f363e62b924d86523704f420546,hulk.website@gmail.com,2021-11-01 19:59:33+08:00,noreply@github.com,2021-11-01 19:59:33+08:00,"Add the redis.log function in Lua script (#379)

We implement the builtin function `redis.log()` for the Lua script,
but the log level was different between Redis and Kvrocks, so we
choose to keep consistency with Redis's log level to avoid compatible
problem with below mappings(which would make the legacy script happy):

LOG_DEBUG   => NULL
LOG_VERBOSE => INFO
LOG_NOTICE  => INFO
LOG_WARNING => WARNING

LOG_DEBUG would never work since the debug level make no sense in kvrocks",unstable,True,False,3,scripting.cc,cc,76,0,76
e16f5054febe8f363e62b924d86523704f420546,hulk.website@gmail.com,2021-11-01 19:59:33+08:00,noreply@github.com,2021-11-01 19:59:33+08:00,"Add the redis.log function in Lua script (#379)

We implement the builtin function `redis.log()` for the Lua script,
but the log level was different between Redis and Kvrocks, so we
choose to keep consistency with Redis's log level to avoid compatible
problem with below mappings(which would make the legacy script happy):

LOG_DEBUG   => NULL
LOG_VERBOSE => INFO
LOG_NOTICE  => INFO
LOG_WARNING => WARNING

LOG_DEBUG would never work since the debug level make no sense in kvrocks",unstable,True,False,3,scripting.h,h,2,0,2
e16f5054febe8f363e62b924d86523704f420546,hulk.website@gmail.com,2021-11-01 19:59:33+08:00,noreply@github.com,2021-11-01 19:59:33+08:00,"Add the redis.log function in Lua script (#379)

We implement the builtin function `redis.log()` for the Lua script,
but the log level was different between Redis and Kvrocks, so we
choose to keep consistency with Redis's log level to avoid compatible
problem with below mappings(which would make the legacy script happy):

LOG_DEBUG   => NULL
LOG_VERBOSE => INFO
LOG_NOTICE  => INFO
LOG_WARNING => WARNING

LOG_DEBUG would never work since the debug level make no sense in kvrocks",unstable,True,False,3,scripting.tcl,tcl,11,0,11
2e43741ddedc06f0376d71dc385e9d53a24b3204,34185590+QQxiaoyuyu@users.noreply.github.com,2021-11-03 17:35:44+08:00,noreply@github.com,2021-11-03 17:35:44+08:00,Add the 佳投互联网集团 company logo to who uses kvrocks (#383),unstable,True,False,2,README.md,md,1,0,1
2e43741ddedc06f0376d71dc385e9d53a24b3204,34185590+QQxiaoyuyu@users.noreply.github.com,2021-11-03 17:35:44+08:00,noreply@github.com,2021-11-03 17:35:44+08:00,Add the 佳投互联网集团 company logo to who uses kvrocks (#383),unstable,True,False,2,jiatou_logo.png,png,0,0,0
65756d411dc1aeee1bf8a704b5f705056dfdd503,nioshield@gmail.com,2021-11-03 22:32:18+08:00,noreply@github.com,2021-11-03 22:32:18+08:00,Implement zrevrangebylex command (#381),unstable,True,False,6,redis_cmd.cc,cc,16,1,17
65756d411dc1aeee1bf8a704b5f705056dfdd503,nioshield@gmail.com,2021-11-03 22:32:18+08:00,noreply@github.com,2021-11-03 22:32:18+08:00,Implement zrevrangebylex command (#381),unstable,True,False,6,redis_zset.cc,cc,25,5,30
65756d411dc1aeee1bf8a704b5f705056dfdd503,nioshield@gmail.com,2021-11-03 22:32:18+08:00,noreply@github.com,2021-11-03 22:32:18+08:00,Implement zrevrangebylex command (#381),unstable,True,False,6,redis_zset.h,h,2,1,3
65756d411dc1aeee1bf8a704b5f705056dfdd503,nioshield@gmail.com,2021-11-03 22:32:18+08:00,noreply@github.com,2021-11-03 22:32:18+08:00,Implement zrevrangebylex command (#381),unstable,True,False,6,t_zset_test.cc,cc,57,1,58
65756d411dc1aeee1bf8a704b5f705056dfdd503,nioshield@gmail.com,2021-11-03 22:32:18+08:00,noreply@github.com,2021-11-03 22:32:18+08:00,Implement zrevrangebylex command (#381),unstable,True,False,6,command.tcl,tcl,2,2,4
65756d411dc1aeee1bf8a704b5f705056dfdd503,nioshield@gmail.com,2021-11-03 22:32:18+08:00,noreply@github.com,2021-11-03 22:32:18+08:00,Implement zrevrangebylex command (#381),unstable,True,False,6,zset.tcl,tcl,39,39,78
4f1917f552a2665d528a06ec8d67f1c6ea528fe0,gaoyuanzong@126.com,2021-11-03 23:31:25+08:00,noreply@github.com,2021-11-03 23:31:25+08:00,Add the 北京软告科技股份有限公司 logo to who uses kvrocks (#386),unstable,True,False,2,README.md,md,1,0,1
4f1917f552a2665d528a06ec8d67f1c6ea528fe0,gaoyuanzong@126.com,2021-11-03 23:31:25+08:00,noreply@github.com,2021-11-03 23:31:25+08:00,Add the 北京软告科技股份有限公司 logo to who uses kvrocks (#386),unstable,True,False,2,rgyun_logo.png,png,0,0,0
7ac540922cee45b2196a9ac716add48cc3baf0a9,caipengbo@outlook.com,2021-11-11 18:26:23+08:00,noreply@github.com,2021-11-11 18:26:23+08:00,Add rocksdb ops statistics into the info cmd (#387),unstable,True,False,4,server.cc,cc,26,3,29
7ac540922cee45b2196a9ac716add48cc3baf0a9,caipengbo@outlook.com,2021-11-11 18:26:23+08:00,noreply@github.com,2021-11-11 18:26:23+08:00,Add rocksdb ops statistics into the info cmd (#387),unstable,True,False,4,server.h,h,1,0,1
7ac540922cee45b2196a9ac716add48cc3baf0a9,caipengbo@outlook.com,2021-11-11 18:26:23+08:00,noreply@github.com,2021-11-11 18:26:23+08:00,Add rocksdb ops statistics into the info cmd (#387),unstable,True,False,4,stats.h,h,12,5,17
7ac540922cee45b2196a9ac716add48cc3baf0a9,caipengbo@outlook.com,2021-11-11 18:26:23+08:00,noreply@github.com,2021-11-11 18:26:23+08:00,Add rocksdb ops statistics into the info cmd (#387),unstable,True,False,4,command.tcl,tcl,23,0,23
09ab597dc6d106ddac7498eb65dba5d6fa4f4da3,hulk.website@gmail.com,2021-11-14 10:44:32+08:00,noreply@github.com,2021-11-14 10:44:32+08:00,Add the maxclients to the info command output (#391),unstable,True,False,1,server.cc,cc,1,0,1
20b6d8a94c3b859324f16d82a90609c1e8593123,hulk.website@gmail.com,2021-11-14 11:05:13+08:00,noreply@github.com,2021-11-14 11:05:13+08:00,Move some docs to wiki and update the links (#390),unstable,True,False,3,README.md,md,6,4,10
6ad800ae260501260863d1de28c2132fd0610ca5,hulk.website@gmail.com,2021-11-14 11:05:50+08:00,noreply@github.com,2021-11-14 11:05:50+08:00,"Allow to volume the local data dir into the docker instance (#392)

As the user may want to run the Kvrocks in docker, but we didn't
support to volume the data dir now, so the data in docker would
be lost after restarting.",unstable,True,False,1,Dockerfile,None,2,0,2
782c106d4513eb79a94431f0750a626c26b1fdd2,hekuangsheng@163.com,2021-11-17 18:25:11+08:00,noreply@github.com,2021-11-17 18:25:11+08:00,增加雪球（北京）信息技术有限公司logo (#393),unstable,True,False,2,README.md,md,3,0,3
782c106d4513eb79a94431f0750a626c26b1fdd2,hekuangsheng@163.com,2021-11-17 18:25:11+08:00,noreply@github.com,2021-11-17 18:25:11+08:00,增加雪球（北京）信息技术有限公司logo (#393),unstable,True,False,2,xueqiu_logo.png,png,0,0,0
7b62daf97eb7b70b6ba4e3799aeb41f66f63b663,caipengbo@outlook.com,2021-11-19 17:33:30+08:00,noreply@github.com,2021-11-19 17:33:30+08:00,"Add write stall stats to info command output (#396)

Co-authored-by: Wang Yuan <wangyuancode@163.com>",unstable,True,False,1,server.cc,cc,14,0,14
fe7efb5ba1e17b4d13abb5416ac5caf643d2ceef,caipengbo@outlook.com,2021-11-21 10:32:56+08:00,noreply@github.com,2021-11-21 10:32:56+08:00,"Use some rocksdb new feature (#395)

- Support blob db (key-value separation) which requires RocksDB version greater than 6.18
- Enable partitioned index/filter for SST and hash index for data block
- Enable whole key filter for memtable
- Remove dynamic resize block and SST
- Only apply compression to SST which level is more than 2",unstable,True,False,7,kvrocks.conf,conf,46,1,47
fe7efb5ba1e17b4d13abb5416ac5caf643d2ceef,caipengbo@outlook.com,2021-11-21 10:32:56+08:00,noreply@github.com,2021-11-21 10:32:56+08:00,"Use some rocksdb new feature (#395)

- Support blob db (key-value separation) which requires RocksDB version greater than 6.18
- Enable partitioned index/filter for SST and hash index for data block
- Enable whole key filter for memtable
- Remove dynamic resize block and SST
- Only apply compression to SST which level is more than 2",unstable,True,False,7,config.cc,cc,57,0,57
fe7efb5ba1e17b4d13abb5416ac5caf643d2ceef,caipengbo@outlook.com,2021-11-21 10:32:56+08:00,noreply@github.com,2021-11-21 10:32:56+08:00,"Use some rocksdb new feature (#395)

- Support blob db (key-value separation) which requires RocksDB version greater than 6.18
- Enable partitioned index/filter for SST and hash index for data block
- Enable whole key filter for memtable
- Remove dynamic resize block and SST
- Only apply compression to SST which level is more than 2",unstable,True,False,7,config.h,h,5,0,5
fe7efb5ba1e17b4d13abb5416ac5caf643d2ceef,caipengbo@outlook.com,2021-11-21 10:32:56+08:00,noreply@github.com,2021-11-21 10:32:56+08:00,"Use some rocksdb new feature (#395)

- Support blob db (key-value separation) which requires RocksDB version greater than 6.18
- Enable partitioned index/filter for SST and hash index for data block
- Enable whole key filter for memtable
- Remove dynamic resize block and SST
- Only apply compression to SST which level is more than 2",unstable,True,False,7,server.cc,cc,0,6,6
fe7efb5ba1e17b4d13abb5416ac5caf643d2ceef,caipengbo@outlook.com,2021-11-21 10:32:56+08:00,noreply@github.com,2021-11-21 10:32:56+08:00,"Use some rocksdb new feature (#395)

- Support blob db (key-value separation) which requires RocksDB version greater than 6.18
- Enable partitioned index/filter for SST and hash index for data block
- Enable whole key filter for memtable
- Remove dynamic resize block and SST
- Only apply compression to SST which level is more than 2",unstable,True,False,7,storage.cc,cc,47,12,59
fe7efb5ba1e17b4d13abb5416ac5caf643d2ceef,caipengbo@outlook.com,2021-11-21 10:32:56+08:00,noreply@github.com,2021-11-21 10:32:56+08:00,"Use some rocksdb new feature (#395)

- Support blob db (key-value separation) which requires RocksDB version greater than 6.18
- Enable partitioned index/filter for SST and hash index for data block
- Enable whole key filter for memtable
- Remove dynamic resize block and SST
- Only apply compression to SST which level is more than 2",unstable,True,False,7,storage.h,h,3,0,3
fe7efb5ba1e17b4d13abb5416ac5caf643d2ceef,caipengbo@outlook.com,2021-11-21 10:32:56+08:00,noreply@github.com,2021-11-21 10:32:56+08:00,"Use some rocksdb new feature (#395)

- Support blob db (key-value separation) which requires RocksDB version greater than 6.18
- Enable partitioned index/filter for SST and hash index for data block
- Enable whole key filter for memtable
- Remove dynamic resize block and SST
- Only apply compression to SST which level is more than 2",unstable,True,False,7,config_test.cc,cc,5,0,5
3f22bcb77abbbc05c5cc9463d7177fec650d3df6,hulk.website@gmail.com,2021-11-22 08:44:30+08:00,noreply@github.com,2021-11-22 08:44:30+08:00,"Fix info command extra colon in info RocksDB section (#401)

- Fix extra colon in the info RocksDB section
- Add the Kvrocks exporter link in README",unstable,True,False,2,README.md,md,4,4,8
3f22bcb77abbbc05c5cc9463d7177fec650d3df6,hulk.website@gmail.com,2021-11-22 08:44:30+08:00,noreply@github.com,2021-11-22 08:44:30+08:00,"Fix info command extra colon in info RocksDB section (#401)

- Fix extra colon in the info RocksDB section
- Add the Kvrocks exporter link in README",unstable,True,False,2,server.cc,cc,7,7,14
f395386a9ee9a94b5251603fe30895e527e77e9a,ope-system@unext.jp,2021-12-01 15:32:13+09:00,noreply@github.com,2021-12-01 14:32:13+08:00,Add the U-NEXT logo to who uses kvrocks (#411),unstable,True,False,2,README.md,md,1,0,1
f395386a9ee9a94b5251603fe30895e527e77e9a,ope-system@unext.jp,2021-12-01 15:32:13+09:00,noreply@github.com,2021-12-01 14:32:13+08:00,Add the U-NEXT logo to who uses kvrocks (#411),unstable,True,False,2,U-NEXT_logo.png,png,0,0,0
1c021ae4e0cfb3fe04d28c59848ae0b36d4a4225,caipengbo@outlook.com,2021-12-03 20:35:44+08:00,noreply@github.com,2021-12-03 20:35:44+08:00,"Implement CAS and CAD commands for string type (#415)

CAS, set its value to new value when the current value of the string corresponding to key is equal to old value.
- syntax: CAS key old_value new_value [EX seconds | PX milliseconds]
- return value: returns 1 if the value is successfully updated, -1 if the key does not exist, and 0 if the value fails to be updated

CAD, delete the key when the value is equal to the value in the db.
- syntax: CAD key value
- return value: returns 1 if the value is successfully updated, -1 if the key does not exist, and 0 if the value fails to be updated

More details, please see #415",unstable,True,False,6,redis_cmd.cc,cc,64,0,64
1c021ae4e0cfb3fe04d28c59848ae0b36d4a4225,caipengbo@outlook.com,2021-12-03 20:35:44+08:00,noreply@github.com,2021-12-03 20:35:44+08:00,"Implement CAS and CAD commands for string type (#415)

CAS, set its value to new value when the current value of the string corresponding to key is equal to old value.
- syntax: CAS key old_value new_value [EX seconds | PX milliseconds]
- return value: returns 1 if the value is successfully updated, -1 if the key does not exist, and 0 if the value fails to be updated

CAD, delete the key when the value is equal to the value in the db.
- syntax: CAD key value
- return value: returns 1 if the value is successfully updated, -1 if the key does not exist, and 0 if the value fails to be updated

More details, please see #415",unstable,True,False,6,redis_string.cc,cc,80,0,80
1c021ae4e0cfb3fe04d28c59848ae0b36d4a4225,caipengbo@outlook.com,2021-12-03 20:35:44+08:00,noreply@github.com,2021-12-03 20:35:44+08:00,"Implement CAS and CAD commands for string type (#415)

CAS, set its value to new value when the current value of the string corresponding to key is equal to old value.
- syntax: CAS key old_value new_value [EX seconds | PX milliseconds]
- return value: returns 1 if the value is successfully updated, -1 if the key does not exist, and 0 if the value fails to be updated

CAD, delete the key when the value is equal to the value in the db.
- syntax: CAD key value
- return value: returns 1 if the value is successfully updated, -1 if the key does not exist, and 0 if the value fails to be updated

More details, please see #415",unstable,True,False,6,redis_string.h,h,3,0,3
1c021ae4e0cfb3fe04d28c59848ae0b36d4a4225,caipengbo@outlook.com,2021-12-03 20:35:44+08:00,noreply@github.com,2021-12-03 20:35:44+08:00,"Implement CAS and CAD commands for string type (#415)

CAS, set its value to new value when the current value of the string corresponding to key is equal to old value.
- syntax: CAS key old_value new_value [EX seconds | PX milliseconds]
- return value: returns 1 if the value is successfully updated, -1 if the key does not exist, and 0 if the value fails to be updated

CAD, delete the key when the value is equal to the value in the db.
- syntax: CAD key value
- return value: returns 1 if the value is successfully updated, -1 if the key does not exist, and 0 if the value fails to be updated

More details, please see #415",unstable,True,False,6,t_string_test.cc,cc,57,0,57
1c021ae4e0cfb3fe04d28c59848ae0b36d4a4225,caipengbo@outlook.com,2021-12-03 20:35:44+08:00,noreply@github.com,2021-12-03 20:35:44+08:00,"Implement CAS and CAD commands for string type (#415)

CAS, set its value to new value when the current value of the string corresponding to key is equal to old value.
- syntax: CAS key old_value new_value [EX seconds | PX milliseconds]
- return value: returns 1 if the value is successfully updated, -1 if the key does not exist, and 0 if the value fails to be updated

CAD, delete the key when the value is equal to the value in the db.
- syntax: CAD key value
- return value: returns 1 if the value is successfully updated, -1 if the key does not exist, and 0 if the value fails to be updated

More details, please see #415",unstable,True,False,6,command.tcl,tcl,2,2,4
1c021ae4e0cfb3fe04d28c59848ae0b36d4a4225,caipengbo@outlook.com,2021-12-03 20:35:44+08:00,noreply@github.com,2021-12-03 20:35:44+08:00,"Implement CAS and CAD commands for string type (#415)

CAS, set its value to new value when the current value of the string corresponding to key is equal to old value.
- syntax: CAS key old_value new_value [EX seconds | PX milliseconds]
- return value: returns 1 if the value is successfully updated, -1 if the key does not exist, and 0 if the value fails to be updated

CAD, delete the key when the value is equal to the value in the db.
- syntax: CAD key value
- return value: returns 1 if the value is successfully updated, -1 if the key does not exist, and 0 if the value fails to be updated

More details, please see #415",unstable,True,False,6,string.tcl,tcl,80,0,80
59f0a43f1eb484226c14c47fa365daeda8623ecb,caipengbo@outlook.com,2021-12-03 20:47:48+08:00,noreply@github.com,2021-12-03 20:47:48+08:00,"Make kvrocks2redis work (#404)

`kvrocks2redis` will first attempt to connect to the kvrocks instance for incremental synchronization.

If the connection or incremental synchronization fails, `kvrocks2redis` will parse the full Kvrocks data from the configured data directory to the AOF file.

If incremental synchronization is possible, `kvrocks2redis` parses the incremental data to the AOF file.
Another thread (named `redis-writer`) reads the AOF continuously and sends the contents of the AOF to Redis.

When the program runs, the following files are generated:
1. xxx_appendonly.aof: parsed data will be saved in this file.
2. xxx_last_next_offset.txt: indicates the position of the AOF file read by the `redis-writer` thread.
3. last_next_seq.txt: indicates the sequence number parsed by `kvrocks2redis` to record the synchronization location and check whether incremental synchronization can be performed.",unstable,True,False,11,README.md,md,13,0,13
59f0a43f1eb484226c14c47fa365daeda8623ecb,caipengbo@outlook.com,2021-12-03 20:47:48+08:00,noreply@github.com,2021-12-03 20:47:48+08:00,"Make kvrocks2redis work (#404)

`kvrocks2redis` will first attempt to connect to the kvrocks instance for incremental synchronization.

If the connection or incremental synchronization fails, `kvrocks2redis` will parse the full Kvrocks data from the configured data directory to the AOF file.

If incremental synchronization is possible, `kvrocks2redis` parses the incremental data to the AOF file.
Another thread (named `redis-writer`) reads the AOF continuously and sends the contents of the AOF to Redis.

When the program runs, the following files are generated:
1. xxx_appendonly.aof: parsed data will be saved in this file.
2. xxx_last_next_offset.txt: indicates the position of the AOF file read by the `redis-writer` thread.
3. last_next_seq.txt: indicates the sequence number parsed by `kvrocks2redis` to record the synchronization location and check whether incremental synchronization can be performed.",unstable,True,False,11,config.cc,cc,28,9,37
59f0a43f1eb484226c14c47fa365daeda8623ecb,caipengbo@outlook.com,2021-12-03 20:47:48+08:00,noreply@github.com,2021-12-03 20:47:48+08:00,"Make kvrocks2redis work (#404)

`kvrocks2redis` will first attempt to connect to the kvrocks instance for incremental synchronization.

If the connection or incremental synchronization fails, `kvrocks2redis` will parse the full Kvrocks data from the configured data directory to the AOF file.

If incremental synchronization is possible, `kvrocks2redis` parses the incremental data to the AOF file.
Another thread (named `redis-writer`) reads the AOF continuously and sends the contents of the AOF to Redis.

When the program runs, the following files are generated:
1. xxx_appendonly.aof: parsed data will be saved in this file.
2. xxx_last_next_offset.txt: indicates the position of the AOF file read by the `redis-writer` thread.
3. last_next_seq.txt: indicates the sequence number parsed by `kvrocks2redis` to record the synchronization location and check whether incremental synchronization can be performed.",unstable,True,False,11,config.h,h,6,5,11
59f0a43f1eb484226c14c47fa365daeda8623ecb,caipengbo@outlook.com,2021-12-03 20:47:48+08:00,noreply@github.com,2021-12-03 20:47:48+08:00,"Make kvrocks2redis work (#404)

`kvrocks2redis` will first attempt to connect to the kvrocks instance for incremental synchronization.

If the connection or incremental synchronization fails, `kvrocks2redis` will parse the full Kvrocks data from the configured data directory to the AOF file.

If incremental synchronization is possible, `kvrocks2redis` parses the incremental data to the AOF file.
Another thread (named `redis-writer`) reads the AOF continuously and sends the contents of the AOF to Redis.

When the program runs, the following files are generated:
1. xxx_appendonly.aof: parsed data will be saved in this file.
2. xxx_last_next_offset.txt: indicates the position of the AOF file read by the `redis-writer` thread.
3. last_next_seq.txt: indicates the sequence number parsed by `kvrocks2redis` to record the synchronization location and check whether incremental synchronization can be performed.",unstable,True,False,11,kvrocks2redis.conf,conf,15,7,22
59f0a43f1eb484226c14c47fa365daeda8623ecb,caipengbo@outlook.com,2021-12-03 20:47:48+08:00,noreply@github.com,2021-12-03 20:47:48+08:00,"Make kvrocks2redis work (#404)

`kvrocks2redis` will first attempt to connect to the kvrocks instance for incremental synchronization.

If the connection or incremental synchronization fails, `kvrocks2redis` will parse the full Kvrocks data from the configured data directory to the AOF file.

If incremental synchronization is possible, `kvrocks2redis` parses the incremental data to the AOF file.
Another thread (named `redis-writer`) reads the AOF continuously and sends the contents of the AOF to Redis.

When the program runs, the following files are generated:
1. xxx_appendonly.aof: parsed data will be saved in this file.
2. xxx_last_next_offset.txt: indicates the position of the AOF file read by the `redis-writer` thread.
3. last_next_seq.txt: indicates the sequence number parsed by `kvrocks2redis` to record the synchronization location and check whether incremental synchronization can be performed.",unstable,True,False,11,main.cc,cc,14,10,24
59f0a43f1eb484226c14c47fa365daeda8623ecb,caipengbo@outlook.com,2021-12-03 20:47:48+08:00,noreply@github.com,2021-12-03 20:47:48+08:00,"Make kvrocks2redis work (#404)

`kvrocks2redis` will first attempt to connect to the kvrocks instance for incremental synchronization.

If the connection or incremental synchronization fails, `kvrocks2redis` will parse the full Kvrocks data from the configured data directory to the AOF file.

If incremental synchronization is possible, `kvrocks2redis` parses the incremental data to the AOF file.
Another thread (named `redis-writer`) reads the AOF continuously and sends the contents of the AOF to Redis.

When the program runs, the following files are generated:
1. xxx_appendonly.aof: parsed data will be saved in this file.
2. xxx_last_next_offset.txt: indicates the position of the AOF file read by the `redis-writer` thread.
3. last_next_seq.txt: indicates the sequence number parsed by `kvrocks2redis` to record the synchronization location and check whether incremental synchronization can be performed.",unstable,True,False,11,parser.cc,cc,60,19,79
59f0a43f1eb484226c14c47fa365daeda8623ecb,caipengbo@outlook.com,2021-12-03 20:47:48+08:00,noreply@github.com,2021-12-03 20:47:48+08:00,"Make kvrocks2redis work (#404)

`kvrocks2redis` will first attempt to connect to the kvrocks instance for incremental synchronization.

If the connection or incremental synchronization fails, `kvrocks2redis` will parse the full Kvrocks data from the configured data directory to the AOF file.

If incremental synchronization is possible, `kvrocks2redis` parses the incremental data to the AOF file.
Another thread (named `redis-writer`) reads the AOF continuously and sends the contents of the AOF to Redis.

When the program runs, the following files are generated:
1. xxx_appendonly.aof: parsed data will be saved in this file.
2. xxx_last_next_offset.txt: indicates the position of the AOF file read by the `redis-writer` thread.
3. last_next_seq.txt: indicates the sequence number parsed by `kvrocks2redis` to record the synchronization location and check whether incremental synchronization can be performed.",unstable,True,False,11,parser.h,h,17,6,23
59f0a43f1eb484226c14c47fa365daeda8623ecb,caipengbo@outlook.com,2021-12-03 20:47:48+08:00,noreply@github.com,2021-12-03 20:47:48+08:00,"Make kvrocks2redis work (#404)

`kvrocks2redis` will first attempt to connect to the kvrocks instance for incremental synchronization.

If the connection or incremental synchronization fails, `kvrocks2redis` will parse the full Kvrocks data from the configured data directory to the AOF file.

If incremental synchronization is possible, `kvrocks2redis` parses the incremental data to the AOF file.
Another thread (named `redis-writer`) reads the AOF continuously and sends the contents of the AOF to Redis.

When the program runs, the following files are generated:
1. xxx_appendonly.aof: parsed data will be saved in this file.
2. xxx_last_next_offset.txt: indicates the position of the AOF file read by the `redis-writer` thread.
3. last_next_seq.txt: indicates the sequence number parsed by `kvrocks2redis` to record the synchronization location and check whether incremental synchronization can be performed.",unstable,True,False,11,redis_writer.cc,cc,5,3,8
59f0a43f1eb484226c14c47fa365daeda8623ecb,caipengbo@outlook.com,2021-12-03 20:47:48+08:00,noreply@github.com,2021-12-03 20:47:48+08:00,"Make kvrocks2redis work (#404)

`kvrocks2redis` will first attempt to connect to the kvrocks instance for incremental synchronization.

If the connection or incremental synchronization fails, `kvrocks2redis` will parse the full Kvrocks data from the configured data directory to the AOF file.

If incremental synchronization is possible, `kvrocks2redis` parses the incremental data to the AOF file.
Another thread (named `redis-writer`) reads the AOF continuously and sends the contents of the AOF to Redis.

When the program runs, the following files are generated:
1. xxx_appendonly.aof: parsed data will be saved in this file.
2. xxx_last_next_offset.txt: indicates the position of the AOF file read by the `redis-writer` thread.
3. last_next_seq.txt: indicates the sequence number parsed by `kvrocks2redis` to record the synchronization location and check whether incremental synchronization can be performed.",unstable,True,False,11,sync.cc,cc,38,32,70
59f0a43f1eb484226c14c47fa365daeda8623ecb,caipengbo@outlook.com,2021-12-03 20:47:48+08:00,noreply@github.com,2021-12-03 20:47:48+08:00,"Make kvrocks2redis work (#404)

`kvrocks2redis` will first attempt to connect to the kvrocks instance for incremental synchronization.

If the connection or incremental synchronization fails, `kvrocks2redis` will parse the full Kvrocks data from the configured data directory to the AOF file.

If incremental synchronization is possible, `kvrocks2redis` parses the incremental data to the AOF file.
Another thread (named `redis-writer`) reads the AOF continuously and sends the contents of the AOF to Redis.

When the program runs, the following files are generated:
1. xxx_appendonly.aof: parsed data will be saved in this file.
2. xxx_last_next_offset.txt: indicates the position of the AOF file read by the `redis-writer` thread.
3. last_next_seq.txt: indicates the sequence number parsed by `kvrocks2redis` to record the synchronization location and check whether incremental synchronization can be performed.",unstable,True,False,11,writer.cc,cc,1,2,3
59f0a43f1eb484226c14c47fa365daeda8623ecb,caipengbo@outlook.com,2021-12-03 20:47:48+08:00,noreply@github.com,2021-12-03 20:47:48+08:00,"Make kvrocks2redis work (#404)

`kvrocks2redis` will first attempt to connect to the kvrocks instance for incremental synchronization.

If the connection or incremental synchronization fails, `kvrocks2redis` will parse the full Kvrocks data from the configured data directory to the AOF file.

If incremental synchronization is possible, `kvrocks2redis` parses the incremental data to the AOF file.
Another thread (named `redis-writer`) reads the AOF continuously and sends the contents of the AOF to Redis.

When the program runs, the following files are generated:
1. xxx_appendonly.aof: parsed data will be saved in this file.
2. xxx_last_next_offset.txt: indicates the position of the AOF file read by the `redis-writer` thread.
3. last_next_seq.txt: indicates the sequence number parsed by `kvrocks2redis` to record the synchronization location and check whether incremental synchronization can be performed.",unstable,True,False,11,writer.h,h,1,1,2
546a1b6fac5a9bf26af4abca2c727ad120c3bac3,hulk.website@gmail.com,2021-12-07 09:01:03+08:00,noreply@github.com,2021-12-07 09:01:03+08:00,Adjust the max open file limit according to the max clients and rocksdb max open files (#418),unstable,True,False,3,config.cc,cc,5,0,5
546a1b6fac5a9bf26af4abca2c727ad120c3bac3,hulk.website@gmail.com,2021-12-07 09:01:03+08:00,noreply@github.com,2021-12-07 09:01:03+08:00,Adjust the max open file limit according to the max clients and rocksdb max open files (#418),unstable,True,False,3,server.cc,cc,54,0,54
546a1b6fac5a9bf26af4abca2c727ad120c3bac3,hulk.website@gmail.com,2021-12-07 09:01:03+08:00,noreply@github.com,2021-12-07 09:01:03+08:00,Adjust the max open file limit according to the max clients and rocksdb max open files (#418),unstable,True,False,3,server.h,h,1,1,2
98f7d038fab6f63dfea25261368568854b7e3efc,wangyuan21@baidu.com,2021-12-07 09:13:59+08:00,noreply@github.com,2021-12-07 09:13:59+08:00,"Support to use row cache of RocksDB (#407)

RocksDB row cache may be useful for hots keys scenario, but it is not always
useful and cost much more memory, so it is disabled by default, you can test
and then decide to enable it or not in your scenario.",unstable,True,False,5,kvrocks.conf,conf,7,0,7
98f7d038fab6f63dfea25261368568854b7e3efc,wangyuan21@baidu.com,2021-12-07 09:13:59+08:00,noreply@github.com,2021-12-07 09:13:59+08:00,"Support to use row cache of RocksDB (#407)

RocksDB row cache may be useful for hots keys scenario, but it is not always
useful and cost much more memory, so it is disabled by default, you can test
and then decide to enable it or not in your scenario.",unstable,True,False,5,config.cc,cc,1,0,1
98f7d038fab6f63dfea25261368568854b7e3efc,wangyuan21@baidu.com,2021-12-07 09:13:59+08:00,noreply@github.com,2021-12-07 09:13:59+08:00,"Support to use row cache of RocksDB (#407)

RocksDB row cache may be useful for hots keys scenario, but it is not always
useful and cost much more memory, so it is disabled by default, you can test
and then decide to enable it or not in your scenario.",unstable,True,False,5,config.h,h,1,0,1
98f7d038fab6f63dfea25261368568854b7e3efc,wangyuan21@baidu.com,2021-12-07 09:13:59+08:00,noreply@github.com,2021-12-07 09:13:59+08:00,"Support to use row cache of RocksDB (#407)

RocksDB row cache may be useful for hots keys scenario, but it is not always
useful and cost much more memory, so it is disabled by default, you can test
and then decide to enable it or not in your scenario.",unstable,True,False,5,storage.cc,cc,3,0,3
98f7d038fab6f63dfea25261368568854b7e3efc,wangyuan21@baidu.com,2021-12-07 09:13:59+08:00,noreply@github.com,2021-12-07 09:13:59+08:00,"Support to use row cache of RocksDB (#407)

RocksDB row cache may be useful for hots keys scenario, but it is not always
useful and cost much more memory, so it is disabled by default, you can test
and then decide to enable it or not in your scenario.",unstable,True,False,5,config_test.cc,cc,1,0,1
029503d4520b1d4e3d5a22e5273c2721af4b5f06,hulk.website@gmail.com,2021-12-09 12:47:48+08:00,noreply@github.com,2021-12-09 12:47:48+08:00,Fix missing RUN keyword in dockerfile which cause the release CI failure (#420),unstable,True,False,1,Dockerfile,None,1,1,2
1a4ceb0f5d3b0be41b8c89b7623c494156949597,hulk.website@gmail.com,2021-12-14 13:02:57+08:00,noreply@github.com,2021-12-14 13:02:57+08:00,Fix the parameter `blob_garbage_collection_age_cutoff` would be always zero (#425),unstable,True,False,2,config.cc,cc,1,1,2
1a4ceb0f5d3b0be41b8c89b7623c494156949597,hulk.website@gmail.com,2021-12-14 13:02:57+08:00,noreply@github.com,2021-12-14 13:02:57+08:00,Fix the parameter `blob_garbage_collection_age_cutoff` would be always zero (#425),unstable,True,False,2,storage.cc,cc,2,1,3
ba0f1314434db249611a472e396096f1c1f2d734,hulk.website@gmail.com,2021-12-16 19:27:09+08:00,noreply@github.com,2021-12-16 19:27:09+08:00,"Auto Rewrite the config after the namespace was updated (#423)

Currently, we didn't rewrite the config when the namespace was updated,
which may cause the namespace loss after restarting without manual
executing the config rewrite command. So we fix issue by rewriting the
config here to make users happy.",unstable,True,False,4,config.cc,cc,26,5,31
ba0f1314434db249611a472e396096f1c1f2d734,hulk.website@gmail.com,2021-12-16 19:27:09+08:00,noreply@github.com,2021-12-16 19:27:09+08:00,"Auto Rewrite the config after the namespace was updated (#423)

Currently, we didn't rewrite the config when the namespace was updated,
which may cause the namespace loss after restarting without manual
executing the config rewrite command. So we fix issue by rewriting the
config here to make users happy.",unstable,True,False,4,redis_cmd.cc,cc,0,3,3
ba0f1314434db249611a472e396096f1c1f2d734,hulk.website@gmail.com,2021-12-16 19:27:09+08:00,noreply@github.com,2021-12-16 19:27:09+08:00,"Auto Rewrite the config after the namespace was updated (#423)

Currently, we didn't rewrite the config when the namespace was updated,
which may cause the namespace loss after restarting without manual
executing the config rewrite command. So we fix issue by rewriting the
config here to make users happy.",unstable,True,False,4,config_test.cc,cc,24,5,29
ba0f1314434db249611a472e396096f1c1f2d734,hulk.website@gmail.com,2021-12-16 19:27:09+08:00,noreply@github.com,2021-12-16 19:27:09+08:00,"Auto Rewrite the config after the namespace was updated (#423)

Currently, we didn't rewrite the config when the namespace was updated,
which may cause the namespace loss after restarting without manual
executing the config rewrite command. So we fix issue by rewriting the
config here to make users happy.",unstable,True,False,4,string_util_test.cc,cc,8,1,9
6c8534a17f056f06faa09bfeada3f92df686975a,hulk.website@gmail.com,2021-12-17 07:57:11+08:00,noreply@github.com,2021-12-17 07:57:11+08:00,"Fix config rewrite overwrite the first rename-command with the last one (#429)

For example, we have below rename-commands in the config file:
```
rename-command KEYS KEYS_NEW
rename-command GET  GET_NEW
rename-command SET  SET_NEW
```
then `rename-command KEYS KEYS_NEW` would be overwriten to
`rename-command SET  SET_NEW` since we didn't skip the `rename-command`
correctly in config rewrite.",unstable,True,False,2,config.cc,cc,5,0,5
6c8534a17f056f06faa09bfeada3f92df686975a,hulk.website@gmail.com,2021-12-17 07:57:11+08:00,noreply@github.com,2021-12-17 07:57:11+08:00,"Fix config rewrite overwrite the first rename-command with the last one (#429)

For example, we have below rename-commands in the config file:
```
rename-command KEYS KEYS_NEW
rename-command GET  GET_NEW
rename-command SET  SET_NEW
```
then `rename-command KEYS KEYS_NEW` would be overwriten to
`rename-command SET  SET_NEW` since we didn't skip the `rename-command`
correctly in config rewrite.",unstable,True,False,2,config_test.cc,cc,24,0,24
b9dc65adda5e557fa638009e7aaf82be2e4d28db,63535239+fishery86@users.noreply.github.com,2021-12-22 09:23:51+08:00,noreply@github.com,2021-12-22 09:23:51+08:00,"Support to convert sortedint type to zset type in kvrocks2redis (#431)

Co-authored-by: Myth <caipengbo@outlook.com>",unstable,True,False,1,parser.cc,cc,13,5,18
fc00bf699d15ecfb1d20e3b0244a4fa392ac294b,hulk.website@gmail.com,2021-12-27 10:18:08+08:00,noreply@github.com,2021-12-27 10:18:08+08:00,"Export more informations to the command INFO output (#435)

Currently, the command bgsave was totally async behavior, which always
return ""OK"" and users have no way to know whether bgsave was ok or not.
So we export below informations:

* last_bgsave_time, the last timestamp that bgsave command was executed
* last_bgsave_status, whether the bgsave was ok or not
* bgsave_in_progress, whether the bgsave was in-progress
* last_bgsave_time_sec, the bgsave command elasped seconds",unstable,True,False,3,server.cc,cc,17,5,22
fc00bf699d15ecfb1d20e3b0244a4fa392ac294b,hulk.website@gmail.com,2021-12-27 10:18:08+08:00,noreply@github.com,2021-12-27 10:18:08+08:00,"Export more informations to the command INFO output (#435)

Currently, the command bgsave was totally async behavior, which always
return ""OK"" and users have no way to know whether bgsave was ok or not.
So we export below informations:

* last_bgsave_time, the last timestamp that bgsave command was executed
* last_bgsave_status, whether the bgsave was ok or not
* bgsave_in_progress, whether the bgsave was in-progress
* last_bgsave_time_sec, the bgsave command elasped seconds",unstable,True,False,3,server.h,h,5,1,6
fc00bf699d15ecfb1d20e3b0244a4fa392ac294b,hulk.website@gmail.com,2021-12-27 10:18:08+08:00,noreply@github.com,2021-12-27 10:18:08+08:00,"Export more informations to the command INFO output (#435)

Currently, the command bgsave was totally async behavior, which always
return ""OK"" and users have no way to know whether bgsave was ok or not.
So we export below informations:

* last_bgsave_time, the last timestamp that bgsave command was executed
* last_bgsave_status, whether the bgsave was ok or not
* bgsave_in_progress, whether the bgsave was in-progress
* last_bgsave_time_sec, the bgsave command elasped seconds",unstable,True,False,3,command.tcl,tcl,17,0,17
90267c92bf0233e9d01843e35ddeba12190792e0,52746580+shangxiaoxiong@users.noreply.github.com,2021-12-29 16:21:02+08:00,noreply@github.com,2021-12-29 16:21:02+08:00,"Fix zrevrangebyscore for multi members with the same max score (#434)

The reply of ""zrevrangebyscore zset_key  min_score  max_score"" just include
one member with max_score when the zset_key has multi members with the same max_score.",unstable,True,False,2,redis_zset.cc,cc,45,10,55
90267c92bf0233e9d01843e35ddeba12190792e0,52746580+shangxiaoxiong@users.noreply.github.com,2021-12-29 16:21:02+08:00,noreply@github.com,2021-12-29 16:21:02+08:00,"Fix zrevrangebyscore for multi members with the same max score (#434)

The reply of ""zrevrangebyscore zset_key  min_score  max_score"" just include
one member with max_score when the zset_key has multi members with the same max_score.",unstable,True,False,2,zset.tcl,tcl,12,0,12
a03f1159361096a45a9d3aeadf8f6b26b3c9caf5,52746580+shangxiaoxiong@users.noreply.github.com,2021-12-30 17:56:18+08:00,noreply@github.com,2021-12-30 17:56:18+08:00,"Optimize the seek of RocksDB iterators (#438)

RocksDB iterator seek slows down dramatically when there are many large
deleted rows. This slow down persists until a compaction occurs.
To set read_options.iterate_upper_bound as tight as possible is recommended,
so that internal iterating can stop sooner, rather than walking over the whole
range of tombstones. Similarly, setting read_options.iterate_lower_bound for
seekForPrev is recommended too.

Relevant RocksDB issue: https://github.com/facebook/rocksdb/issues/5265",unstable,True,False,6,redis_hash.cc,cc,8,3,11
a03f1159361096a45a9d3aeadf8f6b26b3c9caf5,52746580+shangxiaoxiong@users.noreply.github.com,2021-12-30 17:56:18+08:00,noreply@github.com,2021-12-30 17:56:18+08:00,"Optimize the seek of RocksDB iterators (#438)

RocksDB iterator seek slows down dramatically when there are many large
deleted rows. This slow down persists until a compaction occurs.
To set read_options.iterate_upper_bound as tight as possible is recommended,
so that internal iterating can stop sooner, rather than walking over the whole
range of tombstones. Similarly, setting read_options.iterate_lower_bound for
seekForPrev is recommended too.

Relevant RocksDB issue: https://github.com/facebook/rocksdb/issues/5265",unstable,True,False,6,redis_list.cc,cc,19,3,22
a03f1159361096a45a9d3aeadf8f6b26b3c9caf5,52746580+shangxiaoxiong@users.noreply.github.com,2021-12-30 17:56:18+08:00,noreply@github.com,2021-12-30 17:56:18+08:00,"Optimize the seek of RocksDB iterators (#438)

RocksDB iterator seek slows down dramatically when there are many large
deleted rows. This slow down persists until a compaction occurs.
To set read_options.iterate_upper_bound as tight as possible is recommended,
so that internal iterating can stop sooner, rather than walking over the whole
range of tombstones. Similarly, setting read_options.iterate_lower_bound for
seekForPrev is recommended too.

Relevant RocksDB issue: https://github.com/facebook/rocksdb/issues/5265",unstable,True,False,6,redis_set.cc,cc,14,3,17
a03f1159361096a45a9d3aeadf8f6b26b3c9caf5,52746580+shangxiaoxiong@users.noreply.github.com,2021-12-30 17:56:18+08:00,noreply@github.com,2021-12-30 17:56:18+08:00,"Optimize the seek of RocksDB iterators (#438)

RocksDB iterator seek slows down dramatically when there are many large
deleted rows. This slow down persists until a compaction occurs.
To set read_options.iterate_upper_bound as tight as possible is recommended,
so that internal iterating can stop sooner, rather than walking over the whole
range of tombstones. Similarly, setting read_options.iterate_lower_bound for
seekForPrev is recommended too.

Relevant RocksDB issue: https://github.com/facebook/rocksdb/issues/5265",unstable,True,False,6,redis_sortedint.cc,cc,18,11,29
a03f1159361096a45a9d3aeadf8f6b26b3c9caf5,52746580+shangxiaoxiong@users.noreply.github.com,2021-12-30 17:56:18+08:00,noreply@github.com,2021-12-30 17:56:18+08:00,"Optimize the seek of RocksDB iterators (#438)

RocksDB iterator seek slows down dramatically when there are many large
deleted rows. This slow down persists until a compaction occurs.
To set read_options.iterate_upper_bound as tight as possible is recommended,
so that internal iterating can stop sooner, rather than walking over the whole
range of tombstones. Similarly, setting read_options.iterate_lower_bound for
seekForPrev is recommended too.

Relevant RocksDB issue: https://github.com/facebook/rocksdb/issues/5265",unstable,True,False,6,redis_zset.cc,cc,45,11,56
a03f1159361096a45a9d3aeadf8f6b26b3c9caf5,52746580+shangxiaoxiong@users.noreply.github.com,2021-12-30 17:56:18+08:00,noreply@github.com,2021-12-30 17:56:18+08:00,"Optimize the seek of RocksDB iterators (#438)

RocksDB iterator seek slows down dramatically when there are many large
deleted rows. This slow down persists until a compaction occurs.
To set read_options.iterate_upper_bound as tight as possible is recommended,
so that internal iterating can stop sooner, rather than walking over the whole
range of tombstones. Similarly, setting read_options.iterate_lower_bound for
seekForPrev is recommended too.

Relevant RocksDB issue: https://github.com/facebook/rocksdb/issues/5265",unstable,True,False,6,parser.cc,cc,5,1,6
8bfff2dcb7920ca6ba638556de3a5120b7b0fa6b,hulk.website@gmail.com,2021-12-31 13:10:15+08:00,noreply@github.com,2021-12-31 13:10:15+08:00,Fix occassionally failure in tcl test case (#441),unstable,True,False,1,command.tcl,tcl,5,2,7
e83f143cad7307c80da411ccb4704b0a526b32e6,calvin325@gmail.com,2021-12-31 14:10:23+08:00,noreply@github.com,2021-12-31 14:10:23+08:00,Fix data race in SetCurrentConnection (#440),unstable,True,False,1,redis_connection.cc,cc,5,1,6
5b811c16e838a693da6af47fdc173e84a1eb1258,hulk.website@gmail.com,2022-01-04 11:06:17+08:00,noreply@github.com,2022-01-04 11:06:17+08:00,Ignore the dirty submodule (#443),unstable,True,False,1,.gitmodules,gitmodules,6,0,6
817190477fd7fb41598e902ad9a1283aa3183737,95634254+ColinChamber@users.noreply.github.com,2022-01-04 11:07:02+08:00,noreply@github.com,2022-01-04 11:07:02+08:00,Fix the misuse of multi-get API (#442),unstable,True,False,1,redis_string.cc,cc,6,2,8
4f88d749a2ff7b690a8171ee88e5be64985714a9,calvin325@gmail.com,2022-01-07 12:22:10+08:00,noreply@github.com,2022-01-07 12:22:10+08:00,Update grammar in metadata design doc (#445),unstable,True,False,1,metadata-design.md,md,42,43,85
4acf444a27285d590927dade9e283f6c323e52b8,wangyuan21@baidu.com,2022-01-07 13:18:39+08:00,noreply@github.com,2022-01-07 13:18:39+08:00,"Support executing INFO command during restoring database (#375)

Currently, we can't execute INFO command during restoring database on kvrocks,
but redis can. Kvrocks returns error messages directly, it is not easy for some
SDK/proxy/tools to check loading or other status, so this commit implements.",unstable,True,False,2,redis_cmd.cc,cc,1,1,2
4acf444a27285d590927dade9e283f6c323e52b8,wangyuan21@baidu.com,2022-01-07 13:18:39+08:00,noreply@github.com,2022-01-07 13:18:39+08:00,"Support executing INFO command during restoring database (#375)

Currently, we can't execute INFO command during restoring database on kvrocks,
but redis can. Kvrocks returns error messages directly, it is not easy for some
SDK/proxy/tools to check loading or other status, so this commit implements.",unstable,True,False,2,server.cc,cc,14,3,17
3127c71ccf4e9af0d048f5bb9185c41f8e656c79,hulk.website@gmail.com,2022-01-10 15:01:09+08:00,noreply@github.com,2022-01-10 15:01:09+08:00,"Allow to  disable jemalloc when compiling (#436)

- Allow to disable the jemlloc on CMake
- Allow to disable the jemalloc on Makefile
- Add the build without jemalloc to the github actions
- Daily schedule the disable jemalloc compiling GitHub actions",unstable,True,False,4,run-ci-without-jemalloc.yaml,yaml,35,0,35
3127c71ccf4e9af0d048f5bb9185c41f8e656c79,hulk.website@gmail.com,2022-01-10 15:01:09+08:00,noreply@github.com,2022-01-10 15:01:09+08:00,"Allow to  disable jemalloc when compiling (#436)

- Allow to disable the jemlloc on CMake
- Allow to disable the jemalloc on Makefile
- Add the build without jemalloc to the github actions
- Daily schedule the disable jemalloc compiling GitHub actions",unstable,True,False,4,CMakeLists.txt,txt,11,5,16
3127c71ccf4e9af0d048f5bb9185c41f8e656c79,hulk.website@gmail.com,2022-01-10 15:01:09+08:00,noreply@github.com,2022-01-10 15:01:09+08:00,"Allow to  disable jemalloc when compiling (#436)

- Allow to disable the jemlloc on CMake
- Allow to disable the jemalloc on Makefile
- Add the build without jemalloc to the github actions
- Daily schedule the disable jemalloc compiling GitHub actions",unstable,True,False,4,rocksdb.cmake,cmake,10,3,13
3127c71ccf4e9af0d048f5bb9185c41f8e656c79,hulk.website@gmail.com,2022-01-10 15:01:09+08:00,noreply@github.com,2022-01-10 15:01:09+08:00,"Allow to  disable jemalloc when compiling (#436)

- Allow to disable the jemlloc on CMake
- Allow to disable the jemalloc on Makefile
- Add the build without jemalloc to the github actions
- Daily schedule the disable jemalloc compiling GitHub actions",unstable,True,False,4,Makefile,None,13,3,16
8f36a2e37ef65e8d1c1f10bd15f0b6e295da80b6,wangyuan21@baidu.com,2022-01-10 15:48:55+08:00,noreply@github.com,2022-01-10 15:48:55+08:00,"Fix failing full replication when enabling slave-empty-db-before-fullsync (#446)

If enabling slave-empty-db-before-fullsync, replica will core dump since
we operate against the opened RocksDB, and renaming a non-exist directory
never succeed.

Introduced in #233",unstable,True,False,5,config.cc,cc,1,0,1
8f36a2e37ef65e8d1c1f10bd15f0b6e295da80b6,wangyuan21@baidu.com,2022-01-10 15:48:55+08:00,noreply@github.com,2022-01-10 15:48:55+08:00,"Fix failing full replication when enabling slave-empty-db-before-fullsync (#446)

If enabling slave-empty-db-before-fullsync, replica will core dump since
we operate against the opened RocksDB, and renaming a non-exist directory
never succeed.

Introduced in #233",unstable,True,False,5,config.h,h,1,0,1
8f36a2e37ef65e8d1c1f10bd15f0b6e295da80b6,wangyuan21@baidu.com,2022-01-10 15:48:55+08:00,noreply@github.com,2022-01-10 15:48:55+08:00,"Fix failing full replication when enabling slave-empty-db-before-fullsync (#446)

If enabling slave-empty-db-before-fullsync, replica will core dump since
we operate against the opened RocksDB, and renaming a non-exist directory
never succeed.

Introduced in #233",unstable,True,False,5,replication.cc,cc,5,0,5
8f36a2e37ef65e8d1c1f10bd15f0b6e295da80b6,wangyuan21@baidu.com,2022-01-10 15:48:55+08:00,noreply@github.com,2022-01-10 15:48:55+08:00,"Fix failing full replication when enabling slave-empty-db-before-fullsync (#446)

If enabling slave-empty-db-before-fullsync, replica will core dump since
we operate against the opened RocksDB, and renaming a non-exist directory
never succeed.

Introduced in #233",unstable,True,False,5,storage.cc,cc,7,12,19
8f36a2e37ef65e8d1c1f10bd15f0b6e295da80b6,wangyuan21@baidu.com,2022-01-10 15:48:55+08:00,noreply@github.com,2022-01-10 15:48:55+08:00,"Fix failing full replication when enabling slave-empty-db-before-fullsync (#446)

If enabling slave-empty-db-before-fullsync, replica will core dump since
we operate against the opened RocksDB, and renaming a non-exist directory
never succeed.

Introduced in #233",unstable,True,False,5,replication.tcl,tcl,15,0,15
8590da611334d68adb819c7dd677f2182bbde3df,95634254+ColinChamber@users.noreply.github.com,2022-01-12 16:45:39+08:00,noreply@github.com,2022-01-12 16:45:39+08:00,"Support GET command on bitmap type (#447)

In Kvrocks, bitmap and string are two completely different types. Although setbit,
getbit, bitcount, and bitpos operations on the string type are supported.
@smartlee once mentioned that when using setbit on the string type, master-slave
replication will have a tremendous amount of write amplification because Kvrocks
replication does not use command propagation like Redis. In addition, using bitmap
type conserves storage space. So we recommend using type bitmap.
But to make it easy to use, we want to get the whole string after setbit operations,
so we implement this interface.

We covert bitmap to string when executing GET command and return string reply,
otherwise, we provide one configuration item max-bitmap-to-string-mb which uses
to limit the max size of bitmap to string transformation(MB).

Why we need to swap the bit when converting bitmap type to string?
If you setbit bit 0 1, the value is stored as 0x01 in Kvocks but 0x80 in Redis.
So swapping bits is to get the same return value as Redis.",unstable,True,False,9,kvrocks.conf,conf,5,0,5
8590da611334d68adb819c7dd677f2182bbde3df,95634254+ColinChamber@users.noreply.github.com,2022-01-12 16:45:39+08:00,noreply@github.com,2022-01-12 16:45:39+08:00,"Support GET command on bitmap type (#447)

In Kvrocks, bitmap and string are two completely different types. Although setbit,
getbit, bitcount, and bitpos operations on the string type are supported.
@smartlee once mentioned that when using setbit on the string type, master-slave
replication will have a tremendous amount of write amplification because Kvrocks
replication does not use command propagation like Redis. In addition, using bitmap
type conserves storage space. So we recommend using type bitmap.
But to make it easy to use, we want to get the whole string after setbit operations,
so we implement this interface.

We covert bitmap to string when executing GET command and return string reply,
otherwise, we provide one configuration item max-bitmap-to-string-mb which uses
to limit the max size of bitmap to string transformation(MB).

Why we need to swap the bit when converting bitmap type to string?
If you setbit bit 0 1, the value is stored as 0x01 in Kvocks but 0x80 in Redis.
So swapping bits is to get the same return value as Redis.",unstable,True,False,9,config.cc,cc,1,0,1
8590da611334d68adb819c7dd677f2182bbde3df,95634254+ColinChamber@users.noreply.github.com,2022-01-12 16:45:39+08:00,noreply@github.com,2022-01-12 16:45:39+08:00,"Support GET command on bitmap type (#447)

In Kvrocks, bitmap and string are two completely different types. Although setbit,
getbit, bitcount, and bitpos operations on the string type are supported.
@smartlee once mentioned that when using setbit on the string type, master-slave
replication will have a tremendous amount of write amplification because Kvrocks
replication does not use command propagation like Redis. In addition, using bitmap
type conserves storage space. So we recommend using type bitmap.
But to make it easy to use, we want to get the whole string after setbit operations,
so we implement this interface.

We covert bitmap to string when executing GET command and return string reply,
otherwise, we provide one configuration item max-bitmap-to-string-mb which uses
to limit the max size of bitmap to string transformation(MB).

Why we need to swap the bit when converting bitmap type to string?
If you setbit bit 0 1, the value is stored as 0x01 in Kvocks but 0x80 in Redis.
So swapping bits is to get the same return value as Redis.",unstable,True,False,9,config.h,h,1,0,1
8590da611334d68adb819c7dd677f2182bbde3df,95634254+ColinChamber@users.noreply.github.com,2022-01-12 16:45:39+08:00,noreply@github.com,2022-01-12 16:45:39+08:00,"Support GET command on bitmap type (#447)

In Kvrocks, bitmap and string are two completely different types. Although setbit,
getbit, bitcount, and bitpos operations on the string type are supported.
@smartlee once mentioned that when using setbit on the string type, master-slave
replication will have a tremendous amount of write amplification because Kvrocks
replication does not use command propagation like Redis. In addition, using bitmap
type conserves storage space. So we recommend using type bitmap.
But to make it easy to use, we want to get the whole string after setbit operations,
so we implement this interface.

We covert bitmap to string when executing GET command and return string reply,
otherwise, we provide one configuration item max-bitmap-to-string-mb which uses
to limit the max size of bitmap to string transformation(MB).

Why we need to swap the bit when converting bitmap type to string?
If you setbit bit 0 1, the value is stored as 0x01 in Kvocks but 0x80 in Redis.
So swapping bits is to get the same return value as Redis.",unstable,True,False,9,redis_bitmap.cc,cc,64,5,69
8590da611334d68adb819c7dd677f2182bbde3df,95634254+ColinChamber@users.noreply.github.com,2022-01-12 16:45:39+08:00,noreply@github.com,2022-01-12 16:45:39+08:00,"Support GET command on bitmap type (#447)

In Kvrocks, bitmap and string are two completely different types. Although setbit,
getbit, bitcount, and bitpos operations on the string type are supported.
@smartlee once mentioned that when using setbit on the string type, master-slave
replication will have a tremendous amount of write amplification because Kvrocks
replication does not use command propagation like Redis. In addition, using bitmap
type conserves storage space. So we recommend using type bitmap.
But to make it easy to use, we want to get the whole string after setbit operations,
so we implement this interface.

We covert bitmap to string when executing GET command and return string reply,
otherwise, we provide one configuration item max-bitmap-to-string-mb which uses
to limit the max size of bitmap to string transformation(MB).

Why we need to swap the bit when converting bitmap type to string?
If you setbit bit 0 1, the value is stored as 0x01 in Kvocks but 0x80 in Redis.
So swapping bits is to get the same return value as Redis.",unstable,True,False,9,redis_bitmap.h,h,1,0,1
8590da611334d68adb819c7dd677f2182bbde3df,95634254+ColinChamber@users.noreply.github.com,2022-01-12 16:45:39+08:00,noreply@github.com,2022-01-12 16:45:39+08:00,"Support GET command on bitmap type (#447)

In Kvrocks, bitmap and string are two completely different types. Although setbit,
getbit, bitcount, and bitpos operations on the string type are supported.
@smartlee once mentioned that when using setbit on the string type, master-slave
replication will have a tremendous amount of write amplification because Kvrocks
replication does not use command propagation like Redis. In addition, using bitmap
type conserves storage space. So we recommend using type bitmap.
But to make it easy to use, we want to get the whole string after setbit operations,
so we implement this interface.

We covert bitmap to string when executing GET command and return string reply,
otherwise, we provide one configuration item max-bitmap-to-string-mb which uses
to limit the max size of bitmap to string transformation(MB).

Why we need to swap the bit when converting bitmap type to string?
If you setbit bit 0 1, the value is stored as 0x01 in Kvocks but 0x80 in Redis.
So swapping bits is to get the same return value as Redis.",unstable,True,False,9,redis_cmd.cc,cc,9,0,9
8590da611334d68adb819c7dd677f2182bbde3df,95634254+ColinChamber@users.noreply.github.com,2022-01-12 16:45:39+08:00,noreply@github.com,2022-01-12 16:45:39+08:00,"Support GET command on bitmap type (#447)

In Kvrocks, bitmap and string are two completely different types. Although setbit,
getbit, bitcount, and bitpos operations on the string type are supported.
@smartlee once mentioned that when using setbit on the string type, master-slave
replication will have a tremendous amount of write amplification because Kvrocks
replication does not use command propagation like Redis. In addition, using bitmap
type conserves storage space. So we recommend using type bitmap.
But to make it easy to use, we want to get the whole string after setbit operations,
so we implement this interface.

We covert bitmap to string when executing GET command and return string reply,
otherwise, we provide one configuration item max-bitmap-to-string-mb which uses
to limit the max size of bitmap to string transformation(MB).

Why we need to swap the bit when converting bitmap type to string?
If you setbit bit 0 1, the value is stored as 0x01 in Kvocks but 0x80 in Redis.
So swapping bits is to get the same return value as Redis.",unstable,True,False,9,redis_string.cc,cc,3,5,8
8590da611334d68adb819c7dd677f2182bbde3df,95634254+ColinChamber@users.noreply.github.com,2022-01-12 16:45:39+08:00,noreply@github.com,2022-01-12 16:45:39+08:00,"Support GET command on bitmap type (#447)

In Kvrocks, bitmap and string are two completely different types. Although setbit,
getbit, bitcount, and bitpos operations on the string type are supported.
@smartlee once mentioned that when using setbit on the string type, master-slave
replication will have a tremendous amount of write amplification because Kvrocks
replication does not use command propagation like Redis. In addition, using bitmap
type conserves storage space. So we recommend using type bitmap.
But to make it easy to use, we want to get the whole string after setbit operations,
so we implement this interface.

We covert bitmap to string when executing GET command and return string reply,
otherwise, we provide one configuration item max-bitmap-to-string-mb which uses
to limit the max size of bitmap to string transformation(MB).

Why we need to swap the bit when converting bitmap type to string?
If you setbit bit 0 1, the value is stored as 0x01 in Kvocks but 0x80 in Redis.
So swapping bits is to get the same return value as Redis.",unstable,True,False,9,test_helper.tcl,tcl,1,0,1
8590da611334d68adb819c7dd677f2182bbde3df,95634254+ColinChamber@users.noreply.github.com,2022-01-12 16:45:39+08:00,noreply@github.com,2022-01-12 16:45:39+08:00,"Support GET command on bitmap type (#447)

In Kvrocks, bitmap and string are two completely different types. Although setbit,
getbit, bitcount, and bitpos operations on the string type are supported.
@smartlee once mentioned that when using setbit on the string type, master-slave
replication will have a tremendous amount of write amplification because Kvrocks
replication does not use command propagation like Redis. In addition, using bitmap
type conserves storage space. So we recommend using type bitmap.
But to make it easy to use, we want to get the whole string after setbit operations,
so we implement this interface.

We covert bitmap to string when executing GET command and return string reply,
otherwise, we provide one configuration item max-bitmap-to-string-mb which uses
to limit the max size of bitmap to string transformation(MB).

Why we need to swap the bit when converting bitmap type to string?
If you setbit bit 0 1, the value is stored as 0x01 in Kvocks but 0x80 in Redis.
So swapping bits is to get the same return value as Redis.",unstable,True,False,9,bitmap.tcl,tcl,24,0,24
938dcb2e0364cfd219646891aec20cc5d482ab03,mzygdeaq@qq.com,2022-01-13 20:33:35+08:00,noreply@github.com,2022-01-13 20:33:35+08:00,Make level0_file_num_compaction_trigger of RocksDB configurable (#455),unstable,True,False,4,kvrocks.conf,conf,5,0,5
938dcb2e0364cfd219646891aec20cc5d482ab03,mzygdeaq@qq.com,2022-01-13 20:33:35+08:00,noreply@github.com,2022-01-13 20:33:35+08:00,Make level0_file_num_compaction_trigger of RocksDB configurable (#455),unstable,True,False,4,config.cc,cc,3,0,3
938dcb2e0364cfd219646891aec20cc5d482ab03,mzygdeaq@qq.com,2022-01-13 20:33:35+08:00,noreply@github.com,2022-01-13 20:33:35+08:00,Make level0_file_num_compaction_trigger of RocksDB configurable (#455),unstable,True,False,4,config.h,h,1,0,1
938dcb2e0364cfd219646891aec20cc5d482ab03,mzygdeaq@qq.com,2022-01-13 20:33:35+08:00,noreply@github.com,2022-01-13 20:33:35+08:00,Make level0_file_num_compaction_trigger of RocksDB configurable (#455),unstable,True,False,4,storage.cc,cc,1,0,1
b0869719d12c0d4b1e378fcd44d85608975536bd,52746580+shangxiaoxiong@users.noreply.github.com,2022-01-14 16:48:32+08:00,noreply@github.com,2022-01-14 16:48:32+08:00,"Add tcl tests about redis-cli (#452)

Add tcl tests about redis-cli to make sure that redis-cli can work well with kvrocks.",unstable,True,False,7,kvrocks.yaml,yaml,13,3,16
b0869719d12c0d4b1e378fcd44d85608975536bd,52746580+shangxiaoxiong@users.noreply.github.com,2022-01-14 16:48:32+08:00,noreply@github.com,2022-01-14 16:48:32+08:00,"Add tcl tests about redis-cli (#452)

Add tcl tests about redis-cli to make sure that redis-cli can work well with kvrocks.",unstable,True,False,7,Makefile,None,1,0,1
b0869719d12c0d4b1e378fcd44d85608975536bd,52746580+shangxiaoxiong@users.noreply.github.com,2022-01-14 16:48:32+08:00,noreply@github.com,2022-01-14 16:48:32+08:00,"Add tcl tests about redis-cli (#452)

Add tcl tests about redis-cli to make sure that redis-cli can work well with kvrocks.",unstable,True,False,7,redis_cmd.cc,cc,9,0,9
b0869719d12c0d4b1e378fcd44d85608975536bd,52746580+shangxiaoxiong@users.noreply.github.com,2022-01-14 16:48:32+08:00,noreply@github.com,2022-01-14 16:48:32+08:00,"Add tcl tests about redis-cli (#452)

Add tcl tests about redis-cli to make sure that redis-cli can work well with kvrocks.",unstable,True,False,7,redis_connection.cc,cc,1,1,2
b0869719d12c0d4b1e378fcd44d85608975536bd,52746580+shangxiaoxiong@users.noreply.github.com,2022-01-14 16:48:32+08:00,noreply@github.com,2022-01-14 16:48:32+08:00,"Add tcl tests about redis-cli (#452)

Add tcl tests about redis-cli to make sure that redis-cli can work well with kvrocks.",unstable,True,False,7,redis-cli.tcl,tcl,300,0,300
b0869719d12c0d4b1e378fcd44d85608975536bd,52746580+shangxiaoxiong@users.noreply.github.com,2022-01-14 16:48:32+08:00,noreply@github.com,2022-01-14 16:48:32+08:00,"Add tcl tests about redis-cli (#452)

Add tcl tests about redis-cli to make sure that redis-cli can work well with kvrocks.",unstable,True,False,7,cli.tcl,tcl,18,1,19
b0869719d12c0d4b1e378fcd44d85608975536bd,52746580+shangxiaoxiong@users.noreply.github.com,2022-01-14 16:48:32+08:00,noreply@github.com,2022-01-14 16:48:32+08:00,"Add tcl tests about redis-cli (#452)

Add tcl tests about redis-cli to make sure that redis-cli can work well with kvrocks.",unstable,True,False,7,command.tcl,tcl,2,2,4
a8a52494afcaced3ee252866177f8c3c4e6c2767,mzygdeaq@qq.com,2022-01-14 23:42:05+08:00,noreply@github.com,2022-01-14 23:42:05+08:00,Remove duplicated register the SIGBUS (#458),unstable,True,False,1,main.cc,cc,0,1,1
475644f79e5f4adf40b11200f71d1af83fe07195,hulk.website@gmail.com,2022-01-15 21:18:25+08:00,noreply@github.com,2022-01-15 21:18:25+08:00,Add code of conduct (#459),unstable,True,False,1,CODE_OF_CONDUCT.md,md,65,0,65
df01fa44a2cbfde6036c2b4d2fe115eca4bb6aab,mzygdeaq@qq.com,2022-01-17 10:54:17+08:00,noreply@github.com,2022-01-17 10:54:17+08:00,Fix a cmake string subcommand error. (#460),unstable,True,False,1,CMakeLists.txt,txt,1,1,2
cb8378aaf184a4d3a0d0ae82435e114708c7c3c9,wangyuan21@baidu.com,2022-01-18 18:54:42+08:00,noreply@github.com,2022-01-18 18:54:42+08:00,"Fix memory leak when full replication (#461)

Kvrocks may leak dozen kilobytes per full replication",unstable,True,False,1,replication.cc,cc,2,0,2
1aeb004ef6289d37bc7bf308a1f4888800011d30,wangyuan21@baidu.com,2022-01-19 12:42:23+08:00,noreply@github.com,2022-01-19 12:42:23+08:00,Support to compile on macOS 11 (#450),unstable,True,False,4,kvrocks.yaml,yaml,3,17,20
1aeb004ef6289d37bc7bf308a1f4888800011d30,wangyuan21@baidu.com,2022-01-19 12:42:23+08:00,noreply@github.com,2022-01-19 12:42:23+08:00,Support to compile on macOS 11 (#450),unstable,True,False,4,CMakeLists.txt,txt,4,0,4
1aeb004ef6289d37bc7bf308a1f4888800011d30,wangyuan21@baidu.com,2022-01-19 12:42:23+08:00,noreply@github.com,2022-01-19 12:42:23+08:00,Support to compile on macOS 11 (#450),unstable,True,False,4,Makefile,None,10,0,10
1aeb004ef6289d37bc7bf308a1f4888800011d30,wangyuan21@baidu.com,2022-01-19 12:42:23+08:00,noreply@github.com,2022-01-19 12:42:23+08:00,Support to compile on macOS 11 (#450),unstable,True,False,4,main.cc,cc,4,1,5
4b5e1ded2a2279982fb4894a2086a1840df6fa82,hulk.website@gmail.com,2022-01-19 14:07:56+08:00,noreply@github.com,2022-01-19 14:07:56+08:00,Remove the pr labelled condition and add macos test (#464),unstable,True,False,1,daily-ci.yaml,yaml,24,4,28
bc1ebc8529100099c7f3efe2323f804ab3da2f15,wangyuan21@baidu.com,2022-01-21 19:05:54+08:00,noreply@github.com,2022-01-21 19:05:54+08:00,"Support CLUSTERX SETSLOT command (#463)

CLUSTERX SETSLOT $slot_id NODE $node_id $new_version

- Description
assign the slot to the node if new version is current version+1.

- Parameters
$slot_id: the slot which we want to assign
$node_id: the node which we want to assign the slot into
NODE: keep the same with redis CLUSTER SETSLOT command, maybe we want to expand
this command in the future
$new_version: the new version MUST be +1 of current version so that kvrocks could
execute this command, this is to guarantee this change is based on a special
cluster topology

- Purpose
users can use this command to set slot distribution
slot migration needs this command to update slot distribution
New version constraint
The reason why the new version MUST be +1 of current version is that,
the command changes topology based on specific topology (also means specific
version), we must guarantee current topology is exactly expected, otherwise
this update may make topology corrupt, so base topology version is very important.
This is different with CLUSTERX SETNODES commands because it uses new version
topology to cover current version, it allows kvrocks nodes lost some topology
updates since of network failure, it is state instead of operation.",unstable,True,False,5,.gitignore,gitignore,2,1,3
bc1ebc8529100099c7f3efe2323f804ab3da2f15,wangyuan21@baidu.com,2022-01-21 19:05:54+08:00,noreply@github.com,2022-01-21 19:05:54+08:00,"Support CLUSTERX SETSLOT command (#463)

CLUSTERX SETSLOT $slot_id NODE $node_id $new_version

- Description
assign the slot to the node if new version is current version+1.

- Parameters
$slot_id: the slot which we want to assign
$node_id: the node which we want to assign the slot into
NODE: keep the same with redis CLUSTER SETSLOT command, maybe we want to expand
this command in the future
$new_version: the new version MUST be +1 of current version so that kvrocks could
execute this command, this is to guarantee this change is based on a special
cluster topology

- Purpose
users can use this command to set slot distribution
slot migration needs this command to update slot distribution
New version constraint
The reason why the new version MUST be +1 of current version is that,
the command changes topology based on specific topology (also means specific
version), we must guarantee current topology is exactly expected, otherwise
this update may make topology corrupt, so base topology version is very important.
This is different with CLUSTERX SETNODES commands because it uses new version
topology to cover current version, it allows kvrocks nodes lost some topology
updates since of network failure, it is state instead of operation.",unstable,True,False,5,cluster.cc,cc,57,4,61
bc1ebc8529100099c7f3efe2323f804ab3da2f15,wangyuan21@baidu.com,2022-01-21 19:05:54+08:00,noreply@github.com,2022-01-21 19:05:54+08:00,"Support CLUSTERX SETSLOT command (#463)

CLUSTERX SETSLOT $slot_id NODE $node_id $new_version

- Description
assign the slot to the node if new version is current version+1.

- Parameters
$slot_id: the slot which we want to assign
$node_id: the node which we want to assign the slot into
NODE: keep the same with redis CLUSTER SETSLOT command, maybe we want to expand
this command in the future
$new_version: the new version MUST be +1 of current version so that kvrocks could
execute this command, this is to guarantee this change is based on a special
cluster topology

- Purpose
users can use this command to set slot distribution
slot migration needs this command to update slot distribution
New version constraint
The reason why the new version MUST be +1 of current version is that,
the command changes topology based on specific topology (also means specific
version), we must guarantee current topology is exactly expected, otherwise
this update may make topology corrupt, so base topology version is very important.
This is different with CLUSTERX SETNODES commands because it uses new version
topology to cover current version, it allows kvrocks nodes lost some topology
updates since of network failure, it is state instead of operation.",unstable,True,False,5,cluster.h,h,7,6,13
bc1ebc8529100099c7f3efe2323f804ab3da2f15,wangyuan21@baidu.com,2022-01-21 19:05:54+08:00,noreply@github.com,2022-01-21 19:05:54+08:00,"Support CLUSTERX SETSLOT command (#463)

CLUSTERX SETSLOT $slot_id NODE $node_id $new_version

- Description
assign the slot to the node if new version is current version+1.

- Parameters
$slot_id: the slot which we want to assign
$node_id: the node which we want to assign the slot into
NODE: keep the same with redis CLUSTER SETSLOT command, maybe we want to expand
this command in the future
$new_version: the new version MUST be +1 of current version so that kvrocks could
execute this command, this is to guarantee this change is based on a special
cluster topology

- Purpose
users can use this command to set slot distribution
slot migration needs this command to update slot distribution
New version constraint
The reason why the new version MUST be +1 of current version is that,
the command changes topology based on specific topology (also means specific
version), we must guarantee current topology is exactly expected, otherwise
this update may make topology corrupt, so base topology version is very important.
This is different with CLUSTERX SETNODES commands because it uses new version
topology to cover current version, it allows kvrocks nodes lost some topology
updates since of network failure, it is state instead of operation.",unstable,True,False,5,redis_cmd.cc,cc,29,2,31
bc1ebc8529100099c7f3efe2323f804ab3da2f15,wangyuan21@baidu.com,2022-01-21 19:05:54+08:00,noreply@github.com,2022-01-21 19:05:54+08:00,"Support CLUSTERX SETSLOT command (#463)

CLUSTERX SETSLOT $slot_id NODE $node_id $new_version

- Description
assign the slot to the node if new version is current version+1.

- Parameters
$slot_id: the slot which we want to assign
$node_id: the node which we want to assign the slot into
NODE: keep the same with redis CLUSTER SETSLOT command, maybe we want to expand
this command in the future
$new_version: the new version MUST be +1 of current version so that kvrocks could
execute this command, this is to guarantee this change is based on a special
cluster topology

- Purpose
users can use this command to set slot distribution
slot migration needs this command to update slot distribution
New version constraint
The reason why the new version MUST be +1 of current version is that,
the command changes topology based on specific topology (also means specific
version), we must guarantee current topology is exactly expected, otherwise
this update may make topology corrupt, so base topology version is very important.
This is different with CLUSTERX SETNODES commands because it uses new version
topology to cover current version, it allows kvrocks nodes lost some topology
updates since of network failure, it is state instead of operation.",unstable,True,False,5,cluster.tcl,tcl,57,0,57
a603fba400d285d4b34afa105e92bae692b194ff,95634254+ColinChamber@users.noreply.github.com,2022-01-23 13:41:50+08:00,noreply@github.com,2022-01-23 13:41:50+08:00,Fix the bitmap range is smaller than that of Redis (#465),unstable,True,False,8,redis_bitmap.cc,cc,22,16,38
a603fba400d285d4b34afa105e92bae692b194ff,95634254+ColinChamber@users.noreply.github.com,2022-01-23 13:41:50+08:00,noreply@github.com,2022-01-23 13:41:50+08:00,Fix the bitmap range is smaller than that of Redis (#465),unstable,True,False,8,redis_bitmap.h,h,2,2,4
a603fba400d285d4b34afa105e92bae692b194ff,95634254+ColinChamber@users.noreply.github.com,2022-01-23 13:41:50+08:00,noreply@github.com,2022-01-23 13:41:50+08:00,Fix the bitmap range is smaller than that of Redis (#465),unstable,True,False,8,redis_bitmap_string.cc,cc,11,11,22
a603fba400d285d4b34afa105e92bae692b194ff,95634254+ColinChamber@users.noreply.github.com,2022-01-23 13:41:50+08:00,noreply@github.com,2022-01-23 13:41:50+08:00,Fix the bitmap range is smaller than that of Redis (#465),unstable,True,False,8,redis_bitmap_string.h,h,5,4,9
a603fba400d285d4b34afa105e92bae692b194ff,95634254+ColinChamber@users.noreply.github.com,2022-01-23 13:41:50+08:00,noreply@github.com,2022-01-23 13:41:50+08:00,Fix the bitmap range is smaller than that of Redis (#465),unstable,True,False,8,redis_cmd.cc,cc,17,11,28
a603fba400d285d4b34afa105e92bae692b194ff,95634254+ColinChamber@users.noreply.github.com,2022-01-23 13:41:50+08:00,noreply@github.com,2022-01-23 13:41:50+08:00,Fix the bitmap range is smaller than that of Redis (#465),unstable,True,False,8,t_bitmap_test.cc,cc,2,2,4
a603fba400d285d4b34afa105e92bae692b194ff,95634254+ColinChamber@users.noreply.github.com,2022-01-23 13:41:50+08:00,noreply@github.com,2022-01-23 13:41:50+08:00,Fix the bitmap range is smaller than that of Redis (#465),unstable,True,False,8,bitmap.tcl,tcl,10,0,10
a603fba400d285d4b34afa105e92bae692b194ff,95634254+ColinChamber@users.noreply.github.com,2022-01-23 13:41:50+08:00,noreply@github.com,2022-01-23 13:41:50+08:00,Fix the bitmap range is smaller than that of Redis (#465),unstable,True,False,8,string.tcl,tcl,10,0,10
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,CMakeLists.txt,txt,12,2,14
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,kvrocks.conf,conf,31,4,35
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,Makefile,None,4,3,7
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,batch_extractor.cc,cc,207,0,207
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,batch_extractor.h,h,32,0,32
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,cluster.cc,cc,176,5,181
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,cluster.h,h,16,1,17
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,config.cc,cc,25,0,25
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,config.h,h,3,0,3
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,main.cc,cc,5,1,6
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,redis_cmd.cc,cc,65,4,69
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,redis_connection.cc,cc,4,3,7
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,redis_connection.h,h,5,0,5
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,redis_db.cc,cc,72,7,79
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,redis_db.h,h,7,0,7
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,redis_metadata.cc,cc,9,0,9
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,redis_metadata.h,h,1,0,1
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,redis_reply.cc,cc,10,0,10
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,redis_reply.h,h,1,0,1
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,redis_request.cc,cc,1,1,2
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,scripting.cc,cc,1,1,2
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,server.cc,cc,28,0,28
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,server.h,h,5,0,5
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,slot_import.cc,cc,144,0,144
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,slot_import.h,h,37,0,37
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,slot_migrate.cc,cc,954,0,954
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,slot_migrate.h,h,162,0,162
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,status.h,h,4,0,4
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,storage.cc,cc,1,1,2
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,util.cc,cc,12,0,12
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,util.h,h,4,0,4
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,cluster.tcl,tcl,8,16,24
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,slotimport.tcl,tcl,100,0,100
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,slotmigrate.tcl,tcl,861,0,861
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,test_helper.tcl,tcl,2,0,2
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,parser.cc,cc,19,229,248
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,parser.h,h,3,26,29
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,redis_writer.cc,cc,2,4,6
805dc84dda430d123dc6cdbc912ec2f00f7fd500,ChrisZMF@163.com,2022-01-27 20:24:48+08:00,noreply@github.com,2022-01-27 20:24:48+08:00,"Support slot-based data migration (#430)

A new command CLUSTERX MIGRATE is used for migrate slot data, slot-based migration
process mainly includes the following stages: migrating existing data and migrating
incremental data.

Command format:
CLUSTERX MIGRATE $slot $dst_nodeid
  - $slot is the slot which is to migrate
  - $dst_nodeid is the node id of destination server in the cluster.

We also introduce an internal command CLUSTER IMPORT for importing the migrating
slot data into destination server.

Migration status are shown into the output of CLUSTER INFO command.

After migration slot, you also should use CLUSTERX SETSLOT command to change cluster slot
distribution.

For more details, please see #412 and #430",unstable,True,False,41,try_cluster.sh,sh,5,5,10
48127167ea6e5f714e9c38e18bb22cbbedf9a646,hulk.website@gmail.com,2022-01-28 12:46:01+08:00,noreply@github.com,2022-01-28 12:46:01+08:00,Fix included non-exists header file (#469),unstable,True,False,1,sync.cc,cc,0,2,2
b93338ec603880e809c8bae4616835467019cd53,hulk.website@gmail.com,2022-01-28 13:31:13+08:00,noreply@github.com,2022-01-28 13:31:13+08:00,Fix jemalloc.cmake must be before the rocksdb.cmake (#470),unstable,True,False,1,CMakeLists.txt,txt,6,6,12
dd9622c9d2f4af0fdb86b2404abcf6c0d0674aca,wangyuan21@baidu.com,2022-02-09 14:02:57+08:00,noreply@github.com,2022-02-09 14:02:57+08:00,Add cluster support in README (#473),unstable,True,False,1,README.md,md,2,1,3
f3a1fb54526b30734737d814eb39994c34421c6b,hulk.website@gmail.com,2022-02-13 20:37:30+08:00,noreply@github.com,2022-02-13 20:37:30+08:00,Fix the connection fd was used after free (#479),unstable,True,False,1,redis_connection.cc,cc,1,1,2
933512d821ff4100db94c6db016e0c47b5ce6f18,ChrisZMF@163.com,2022-02-18 16:17:46+08:00,noreply@github.com,2022-02-18 16:17:46+08:00,"Avoid accessing slot_migrate_ before it is created (#472)

- Fix slot_migrate_ was initialed after starting workers which may cause coredump
- Fix typo
- Fix wrong initial current_pipeline_size_ value
- Ignore some cluster config items if the cluster mode was disabled",unstable,True,False,6,cluster.cc,cc,3,3,6
933512d821ff4100db94c6db016e0c47b5ce6f18,ChrisZMF@163.com,2022-02-18 16:17:46+08:00,noreply@github.com,2022-02-18 16:17:46+08:00,"Avoid accessing slot_migrate_ before it is created (#472)

- Fix slot_migrate_ was initialed after starting workers which may cause coredump
- Fix typo
- Fix wrong initial current_pipeline_size_ value
- Ignore some cluster config items if the cluster mode was disabled",unstable,True,False,6,config.cc,cc,3,3,6
933512d821ff4100db94c6db016e0c47b5ce6f18,ChrisZMF@163.com,2022-02-18 16:17:46+08:00,noreply@github.com,2022-02-18 16:17:46+08:00,"Avoid accessing slot_migrate_ before it is created (#472)

- Fix slot_migrate_ was initialed after starting workers which may cause coredump
- Fix typo
- Fix wrong initial current_pipeline_size_ value
- Ignore some cluster config items if the cluster mode was disabled",unstable,True,False,6,server.cc,cc,14,13,27
933512d821ff4100db94c6db016e0c47b5ce6f18,ChrisZMF@163.com,2022-02-18 16:17:46+08:00,noreply@github.com,2022-02-18 16:17:46+08:00,"Avoid accessing slot_migrate_ before it is created (#472)

- Fix slot_migrate_ was initialed after starting workers which may cause coredump
- Fix typo
- Fix wrong initial current_pipeline_size_ value
- Ignore some cluster config items if the cluster mode was disabled",unstable,True,False,6,slot_migrate.cc,cc,11,10,21
933512d821ff4100db94c6db016e0c47b5ce6f18,ChrisZMF@163.com,2022-02-18 16:17:46+08:00,noreply@github.com,2022-02-18 16:17:46+08:00,"Avoid accessing slot_migrate_ before it is created (#472)

- Fix slot_migrate_ was initialed after starting workers which may cause coredump
- Fix typo
- Fix wrong initial current_pipeline_size_ value
- Ignore some cluster config items if the cluster mode was disabled",unstable,True,False,6,slot_migrate.h,h,2,2,4
933512d821ff4100db94c6db016e0c47b5ce6f18,ChrisZMF@163.com,2022-02-18 16:17:46+08:00,noreply@github.com,2022-02-18 16:17:46+08:00,"Avoid accessing slot_migrate_ before it is created (#472)

- Fix slot_migrate_ was initialed after starting workers which may cause coredump
- Fix typo
- Fix wrong initial current_pipeline_size_ value
- Ignore some cluster config items if the cluster mode was disabled",unstable,True,False,6,slotmigrate.tcl,tcl,2,2,4
9d6d570f8163212d3db47212c7405760babfc984,hulk.website@gmail.com,2022-02-23 00:30:46+08:00,noreply@github.com,2022-02-23 00:30:46+08:00,Fix the broken rpm endpoint (#493),unstable,True,False,1,release.yaml,yaml,1,1,2
5c6fcfdf3351ff898a80a723488c9c2645b03eab,zhaoshirong@pku.edu.cn,2022-02-23 19:39:31+08:00,noreply@github.com,2022-02-23 19:39:31+08:00,"Fix failing in setting thread name with string more than 16 byte (#496)

According to man 'pthread_setname_np', thread name should be restricted
to 16 characters, including the terminating null byte ('\0').",unstable,True,False,4,redis_cmd.cc,cc,2,2,4
5c6fcfdf3351ff898a80a723488c9c2645b03eab,zhaoshirong@pku.edu.cn,2022-02-23 19:39:31+08:00,noreply@github.com,2022-02-23 19:39:31+08:00,"Fix failing in setting thread name with string more than 16 byte (#496)

According to man 'pthread_setname_np', thread name should be restricted
to 16 characters, including the terminating null byte ('\0').",unstable,True,False,4,replication.cc,cc,1,1,2
5c6fcfdf3351ff898a80a723488c9c2645b03eab,zhaoshirong@pku.edu.cn,2022-02-23 19:39:31+08:00,noreply@github.com,2022-02-23 19:39:31+08:00,"Fix failing in setting thread name with string more than 16 byte (#496)

According to man 'pthread_setname_np', thread name should be restricted
to 16 characters, including the terminating null byte ('\0').",unstable,True,False,4,server.cc,cc,1,1,2
5c6fcfdf3351ff898a80a723488c9c2645b03eab,zhaoshirong@pku.edu.cn,2022-02-23 19:39:31+08:00,noreply@github.com,2022-02-23 19:39:31+08:00,"Fix failing in setting thread name with string more than 16 byte (#496)

According to man 'pthread_setname_np', thread name should be restricted
to 16 characters, including the terminating null byte ('\0').",unstable,True,False,4,slot_migrate.cc,cc,1,1,2
f0d848fca16524e2fb170cf5d2f1162e564152ec,caipengbo@outlook.com,2022-02-28 09:35:14+08:00,noreply@github.com,2022-02-28 09:35:14+08:00,"Avoid flush all redis db in kvrocks2redis (#498)

In the kvrocks2redis tool, when kvrocks sends data to Redis, it will flush
the whole target redis by using the FLUSHALL command. We shouldn't do that,
we just need to clear the target DB.

In addition, modify the comments in the configuration file to make it more
accessible. And based on the output of cpplint, fixed the nonstandard header file.",unstable,True,False,8,config.cc,cc,2,5,7
f0d848fca16524e2fb170cf5d2f1162e564152ec,caipengbo@outlook.com,2022-02-28 09:35:14+08:00,noreply@github.com,2022-02-28 09:35:14+08:00,"Avoid flush all redis db in kvrocks2redis (#498)

In the kvrocks2redis tool, when kvrocks sends data to Redis, it will flush
the whole target redis by using the FLUSHALL command. We shouldn't do that,
we just need to clear the target DB.

In addition, modify the comments in the configuration file to make it more
accessible. And based on the output of cpplint, fixed the nonstandard header file.",unstable,True,False,8,kvrocks2redis.conf,conf,11,11,22
f0d848fca16524e2fb170cf5d2f1162e564152ec,caipengbo@outlook.com,2022-02-28 09:35:14+08:00,noreply@github.com,2022-02-28 09:35:14+08:00,"Avoid flush all redis db in kvrocks2redis (#498)

In the kvrocks2redis tool, when kvrocks sends data to Redis, it will flush
the whole target redis by using the FLUSHALL command. We shouldn't do that,
we just need to clear the target DB.

In addition, modify the comments in the configuration file to make it more
accessible. And based on the output of cpplint, fixed the nonstandard header file.",unstable,True,False,8,parser.cc,cc,2,3,5
f0d848fca16524e2fb170cf5d2f1162e564152ec,caipengbo@outlook.com,2022-02-28 09:35:14+08:00,noreply@github.com,2022-02-28 09:35:14+08:00,"Avoid flush all redis db in kvrocks2redis (#498)

In the kvrocks2redis tool, when kvrocks sends data to Redis, it will flush
the whole target redis by using the FLUSHALL command. We shouldn't do that,
we just need to clear the target DB.

In addition, modify the comments in the configuration file to make it more
accessible. And based on the output of cpplint, fixed the nonstandard header file.",unstable,True,False,8,redis_writer.cc,cc,3,4,7
f0d848fca16524e2fb170cf5d2f1162e564152ec,caipengbo@outlook.com,2022-02-28 09:35:14+08:00,noreply@github.com,2022-02-28 09:35:14+08:00,"Avoid flush all redis db in kvrocks2redis (#498)

In the kvrocks2redis tool, when kvrocks sends data to Redis, it will flush
the whole target redis by using the FLUSHALL command. We shouldn't do that,
we just need to clear the target DB.

In addition, modify the comments in the configuration file to make it more
accessible. And based on the output of cpplint, fixed the nonstandard header file.",unstable,True,False,8,redis_writer.h,h,2,1,3
f0d848fca16524e2fb170cf5d2f1162e564152ec,caipengbo@outlook.com,2022-02-28 09:35:14+08:00,noreply@github.com,2022-02-28 09:35:14+08:00,"Avoid flush all redis db in kvrocks2redis (#498)

In the kvrocks2redis tool, when kvrocks sends data to Redis, it will flush
the whole target redis by using the FLUSHALL command. We shouldn't do that,
we just need to clear the target DB.

In addition, modify the comments in the configuration file to make it more
accessible. And based on the output of cpplint, fixed the nonstandard header file.",unstable,True,False,8,sync.cc,cc,2,2,4
f0d848fca16524e2fb170cf5d2f1162e564152ec,caipengbo@outlook.com,2022-02-28 09:35:14+08:00,noreply@github.com,2022-02-28 09:35:14+08:00,"Avoid flush all redis db in kvrocks2redis (#498)

In the kvrocks2redis tool, when kvrocks sends data to Redis, it will flush
the whole target redis by using the FLUSHALL command. We shouldn't do that,
we just need to clear the target DB.

In addition, modify the comments in the configuration file to make it more
accessible. And based on the output of cpplint, fixed the nonstandard header file.",unstable,True,False,8,writer.cc,cc,1,1,2
f0d848fca16524e2fb170cf5d2f1162e564152ec,caipengbo@outlook.com,2022-02-28 09:35:14+08:00,noreply@github.com,2022-02-28 09:35:14+08:00,"Avoid flush all redis db in kvrocks2redis (#498)

In the kvrocks2redis tool, when kvrocks sends data to Redis, it will flush
the whole target redis by using the FLUSHALL command. We shouldn't do that,
we just need to clear the target DB.

In addition, modify the comments in the configuration file to make it more
accessible. And based on the output of cpplint, fixed the nonstandard header file.",unstable,True,False,8,writer.h,h,1,1,2
df804111fe0b4522a7e690e584fe6fd2f8187dc9,hulk.website@gmail.com,2022-02-28 13:28:03+08:00,noreply@github.com,2022-02-28 13:28:03+08:00,Fix missing import some files in the unittest target (#501),unstable,True,False,1,CMakeLists.txt,txt,6,0,6
f2371af5a976297265ded48a7253a5faeda6606d,ChrisZMF@163.com,2022-03-01 10:02:14+08:00,noreply@github.com,2022-03-01 10:02:14+08:00,"Fix wrong replication state (#506)

Fix replica will keep state kReplFetchSST if master is down while replica
is fetching SST files. INFO replication will get master_sync_in_progress:1,
but it should be master_sync_in_progress:0. See #504

Co-authored-by: zoumingfo <zoumingfo@baidu.com>",unstable,True,False,1,replication.cc,cc,1,0,1
84cdbc7c82fa9813e2225a8d657932a5674ca8da,wellschuan@gmail.com,2022-03-06 18:38:48+08:00,noreply@github.com,2022-03-06 18:38:48+08:00,Allow to dynamic resize the `level_compaction_dynamic_level_bytes`  and level base size (#497),unstable,True,False,6,.gitignore,gitignore,2,1,3
84cdbc7c82fa9813e2225a8d657932a5674ca8da,wellschuan@gmail.com,2022-03-06 18:38:48+08:00,noreply@github.com,2022-03-06 18:38:48+08:00,Allow to dynamic resize the `level_compaction_dynamic_level_bytes`  and level base size (#497),unstable,True,False,6,kvrocks.conf,conf,25,1,26
84cdbc7c82fa9813e2225a8d657932a5674ca8da,wellschuan@gmail.com,2022-03-06 18:38:48+08:00,noreply@github.com,2022-03-06 18:38:48+08:00,Allow to dynamic resize the `level_compaction_dynamic_level_bytes`  and level base size (#497),unstable,True,False,6,config.cc,cc,36,1,37
84cdbc7c82fa9813e2225a8d657932a5674ca8da,wellschuan@gmail.com,2022-03-06 18:38:48+08:00,noreply@github.com,2022-03-06 18:38:48+08:00,Allow to dynamic resize the `level_compaction_dynamic_level_bytes`  and level base size (#497),unstable,True,False,6,config.h,h,3,0,3
84cdbc7c82fa9813e2225a8d657932a5674ca8da,wellschuan@gmail.com,2022-03-06 18:38:48+08:00,noreply@github.com,2022-03-06 18:38:48+08:00,Allow to dynamic resize the `level_compaction_dynamic_level_bytes`  and level base size (#497),unstable,True,False,6,storage.cc,cc,3,0,3
84cdbc7c82fa9813e2225a8d657932a5674ca8da,wellschuan@gmail.com,2022-03-06 18:38:48+08:00,noreply@github.com,2022-03-06 18:38:48+08:00,Allow to dynamic resize the `level_compaction_dynamic_level_bytes`  and level base size (#497),unstable,True,False,6,config_test.cc,cc,3,0,3
424e1784b00b2798c60da0bfdbfee8a4291ecfcc,i@eventloop.live,2022-03-07 11:41:01+08:00,noreply@github.com,2022-03-07 11:41:01+08:00,Fix blob file size unit error and set default value to 256 MB (#503),unstable,True,False,4,kvrocks.conf,conf,2,2,4
424e1784b00b2798c60da0bfdbfee8a4291ecfcc,i@eventloop.live,2022-03-07 11:41:01+08:00,noreply@github.com,2022-03-07 11:41:01+08:00,Fix blob file size unit error and set default value to 256 MB (#503),unstable,True,False,4,config.cc,cc,3,2,5
424e1784b00b2798c60da0bfdbfee8a4291ecfcc,i@eventloop.live,2022-03-07 11:41:01+08:00,noreply@github.com,2022-03-07 11:41:01+08:00,Fix blob file size unit error and set default value to 256 MB (#503),unstable,True,False,4,storage.cc,cc,1,1,2
424e1784b00b2798c60da0bfdbfee8a4291ecfcc,i@eventloop.live,2022-03-07 11:41:01+08:00,noreply@github.com,2022-03-07 11:41:01+08:00,Fix blob file size unit error and set default value to 256 MB (#503),unstable,True,False,4,config_test.cc,cc,1,1,2
72f3c3ccb8159a89b7283580f9f0cb1bacff3445,zhaoshirong@pku.edu.cn,2022-03-08 19:52:27+08:00,noreply@github.com,2022-03-08 19:52:27+08:00,Fix spop command should return bulk string  instead of array when without count(#515),unstable,True,False,1,redis_cmd.cc,cc,12,1,13
ba90f4bc854ccbbaeb08afd2b4d2da7fa9bbea5a,ChrisZMF@163.com,2022-03-09 21:17:56+08:00,noreply@github.com,2022-03-09 21:17:56+08:00,Support to send auth command before migrating slots (#514),unstable,True,False,2,slot_migrate.cc,cc,26,0,26
ba90f4bc854ccbbaeb08afd2b4d2da7fa9bbea5a,ChrisZMF@163.com,2022-03-09 21:17:56+08:00,noreply@github.com,2022-03-09 21:17:56+08:00,Support to send auth command before migrating slots (#514),unstable,True,False,2,slotmigrate.tcl,tcl,104,0,104
e3da57d607402a86d63f5b3e52bc77a91ca16f9e,95634254+ColinChamber@users.noreply.github.com,2022-03-11 11:10:33+08:00,noreply@github.com,2022-03-11 11:10:33+08:00,Support unlink command (#517),unstable,True,False,2,redis_cmd.cc,cc,1,0,1
e3da57d607402a86d63f5b3e52bc77a91ca16f9e,95634254+ColinChamber@users.noreply.github.com,2022-03-11 11:10:33+08:00,noreply@github.com,2022-03-11 11:10:33+08:00,Support unlink command (#517),unstable,True,False,2,command.tcl,tcl,1,1,2
378704c4af3a3f83c296829cfb5367ec20c1065a,hulk.website@gmail.com,2022-03-12 22:33:20+08:00,noreply@github.com,2022-03-12 22:33:20+08:00,Fix rocksdb cmake depends should use list instead of string (#518),unstable,True,False,2,README.md,md,3,2,5
378704c4af3a3f83c296829cfb5367ec20c1065a,hulk.website@gmail.com,2022-03-12 22:33:20+08:00,noreply@github.com,2022-03-12 22:33:20+08:00,Fix rocksdb cmake depends should use list instead of string (#518),unstable,True,False,2,rocksdb.cmake,cmake,2,1,3
335120664652fd9df8afa0f002b2d19a27664e2d,ChrisZMF@163.com,2022-03-14 08:47:36+08:00,noreply@github.com,2022-03-14 08:47:36+08:00,"Fix slave can't resync with master after password change (#520)

Co-authored-by: zoumingfo <zoumingfo@baidu.com>",unstable,True,False,7,config_type.h,h,1,1,2
335120664652fd9df8afa0f002b2d19a27664e2d,ChrisZMF@163.com,2022-03-14 08:47:36+08:00,noreply@github.com,2022-03-14 08:47:36+08:00,"Fix slave can't resync with master after password change (#520)

Co-authored-by: zoumingfo <zoumingfo@baidu.com>",unstable,True,False,7,redis_cmd.cc,cc,1,1,2
335120664652fd9df8afa0f002b2d19a27664e2d,ChrisZMF@163.com,2022-03-14 08:47:36+08:00,noreply@github.com,2022-03-14 08:47:36+08:00,"Fix slave can't resync with master after password change (#520)

Co-authored-by: zoumingfo <zoumingfo@baidu.com>",unstable,True,False,7,replication.cc,cc,9,8,17
335120664652fd9df8afa0f002b2d19a27664e2d,ChrisZMF@163.com,2022-03-14 08:47:36+08:00,noreply@github.com,2022-03-14 08:47:36+08:00,"Fix slave can't resync with master after password change (#520)

Co-authored-by: zoumingfo <zoumingfo@baidu.com>",unstable,True,False,7,replication.h,h,1,2,3
335120664652fd9df8afa0f002b2d19a27664e2d,ChrisZMF@163.com,2022-03-14 08:47:36+08:00,noreply@github.com,2022-03-14 08:47:36+08:00,"Fix slave can't resync with master after password change (#520)

Co-authored-by: zoumingfo <zoumingfo@baidu.com>",unstable,True,False,7,server.cc,cc,1,1,2
335120664652fd9df8afa0f002b2d19a27664e2d,ChrisZMF@163.com,2022-03-14 08:47:36+08:00,noreply@github.com,2022-03-14 08:47:36+08:00,"Fix slave can't resync with master after password change (#520)

Co-authored-by: zoumingfo <zoumingfo@baidu.com>",unstable,True,False,7,replication.tcl,tcl,43,0,43
335120664652fd9df8afa0f002b2d19a27664e2d,ChrisZMF@163.com,2022-03-14 08:47:36+08:00,noreply@github.com,2022-03-14 08:47:36+08:00,"Fix slave can't resync with master after password change (#520)

Co-authored-by: zoumingfo <zoumingfo@baidu.com>",unstable,True,False,7,auth.tcl,tcl,1,1,2
74ebdc919fce199e50ec195f1b627e1e0ff8ab2a,95634254+ColinChamber@users.noreply.github.com,2022-03-18 13:21:06+08:00,noreply@github.com,2022-03-18 13:21:06+08:00,Support BITOP command (#471),unstable,True,False,7,batch_extractor.cc,cc,28,3,31
74ebdc919fce199e50ec195f1b627e1e0ff8ab2a,95634254+ColinChamber@users.noreply.github.com,2022-03-18 13:21:06+08:00,noreply@github.com,2022-03-18 13:21:06+08:00,Support BITOP command (#471),unstable,True,False,7,redis_bitmap.cc,cc,188,1,189
74ebdc919fce199e50ec195f1b627e1e0ff8ab2a,95634254+ColinChamber@users.noreply.github.com,2022-03-18 13:21:06+08:00,noreply@github.com,2022-03-18 13:21:06+08:00,Support BITOP command (#471),unstable,True,False,7,redis_bitmap.h,h,13,0,13
74ebdc919fce199e50ec195f1b627e1e0ff8ab2a,95634254+ColinChamber@users.noreply.github.com,2022-03-18 13:21:06+08:00,noreply@github.com,2022-03-18 13:21:06+08:00,Support BITOP command (#471),unstable,True,False,7,redis_cmd.cc,cc,39,0,39
74ebdc919fce199e50ec195f1b627e1e0ff8ab2a,95634254+ColinChamber@users.noreply.github.com,2022-03-18 13:21:06+08:00,noreply@github.com,2022-03-18 13:21:06+08:00,Support BITOP command (#471),unstable,True,False,7,redis_metadata.h,h,2,0,2
74ebdc919fce199e50ec195f1b627e1e0ff8ab2a,95634254+ColinChamber@users.noreply.github.com,2022-03-18 13:21:06+08:00,noreply@github.com,2022-03-18 13:21:06+08:00,Support BITOP command (#471),unstable,True,False,7,command.tcl,tcl,2,2,4
74ebdc919fce199e50ec195f1b627e1e0ff8ab2a,95634254+ColinChamber@users.noreply.github.com,2022-03-18 13:21:06+08:00,noreply@github.com,2022-03-18 13:21:06+08:00,Support BITOP command (#471),unstable,True,False,7,bitmap.tcl,tcl,147,32,179
010eb67793293445600197ee26f1441a2f8eb647,wangyuan21@baidu.com,2022-03-23 09:47:16+08:00,noreply@github.com,2022-03-23 09:47:16+08:00,Add cluster introduction in README (#524),unstable,True,False,1,README.md,md,4,0,4
e70bf4d1b36a859d270b5da6abe736736490ae9d,wangyuan21@baidu.com,2022-03-23 12:20:03+08:00,noreply@github.com,2022-03-23 12:20:03+08:00,Update Kvrocks introduction (#526),unstable,True,False,1,README.md,md,1,1,2
9c3cf467954ea87d25a17e10ca41496e3b72b080,ChrisZMF@163.com,2022-03-23 20:05:25+08:00,noreply@github.com,2022-03-23 20:05:25+08:00,"Fix tcl cases go wrong on Ubuntu (#527)

Co-authored-by: zoumingfo <zoumingfo@baidu.com>",unstable,True,False,2,slotmigrate.tcl,tcl,2,10,12
9c3cf467954ea87d25a17e10ca41496e3b72b080,ChrisZMF@163.com,2022-03-23 20:05:25+08:00,noreply@github.com,2022-03-23 20:05:25+08:00,"Fix tcl cases go wrong on Ubuntu (#527)

Co-authored-by: zoumingfo <zoumingfo@baidu.com>",unstable,True,False,2,pubsub.tcl,tcl,1,0,1
4cd4bb9a59fc6e5b79e1a246b7bf6e698f5c117f,caipengbo@outlook.com,2022-03-24 22:50:08+08:00,noreply@github.com,2022-03-24 22:50:08+08:00,Avoid requirepass and masterauth conflicts with the namespace tokens (#507),unstable,True,False,3,config.cc,cc,35,6,41
4cd4bb9a59fc6e5b79e1a246b7bf6e698f5c117f,caipengbo@outlook.com,2022-03-24 22:50:08+08:00,noreply@github.com,2022-03-24 22:50:08+08:00,Avoid requirepass and masterauth conflicts with the namespace tokens (#507),unstable,True,False,3,config.h,h,1,1,2
4cd4bb9a59fc6e5b79e1a246b7bf6e698f5c117f,caipengbo@outlook.com,2022-03-24 22:50:08+08:00,noreply@github.com,2022-03-24 22:50:08+08:00,Avoid requirepass and masterauth conflicts with the namespace tokens (#507),unstable,True,False,3,config_type.h,h,1,0,1
39609a9edb42c6d7cfc48a60f7c307fe9ae1bebf,wangyuan21@baidu.com,2022-04-07 10:46:50+08:00,noreply@github.com,2022-04-07 10:46:50+08:00,"Change license to Apache 2.0 (#533)

Resolved #530",unstable,True,False,4,release.yaml,yaml,1,1,2
39609a9edb42c6d7cfc48a60f7c307fe9ae1bebf,wangyuan21@baidu.com,2022-04-07 10:46:50+08:00,noreply@github.com,2022-04-07 10:46:50+08:00,"Change license to Apache 2.0 (#533)

Resolved #530",unstable,True,False,4,LICENSE,None,201,29,230
39609a9edb42c6d7cfc48a60f7c307fe9ae1bebf,wangyuan21@baidu.com,2022-04-07 10:46:50+08:00,noreply@github.com,2022-04-07 10:46:50+08:00,"Change license to Apache 2.0 (#533)

Resolved #530",unstable,True,False,4,README.md,md,1,1,2
39609a9edb42c6d7cfc48a60f7c307fe9ae1bebf,wangyuan21@baidu.com,2022-04-07 10:46:50+08:00,noreply@github.com,2022-04-07 10:46:50+08:00,"Change license to Apache 2.0 (#533)

Resolved #530",unstable,True,False,4,package.sh,sh,1,1,2
d55076f45684913613acb8866a63bdbe70792c09,wangyuan21@baidu.com,2022-04-22 19:20:24+08:00,noreply@github.com,2022-04-22 19:20:24+08:00,"Stop sending files if failed in full synchronization (#539)

Before this commit, master may still send file even if failed in full
synchronization. It is not necessary, and cause next full synchronization
failed until all files totally are sent.

Co-authored-by: zoumingfo <zoumingfo@baidu.com>",unstable,True,False,1,redis_cmd.cc,cc,2,0,2
f01aac219f4fd0fb06750b0f43b9303c4316969c,wangyuan21@baidu.com,2022-04-22 22:05:24+08:00,noreply@github.com,2022-04-22 22:05:24+08:00,Disable macOS leak check in daily CI (#540),unstable,True,False,5,kvrocks.yaml,yaml,1,1,2
f01aac219f4fd0fb06750b0f43b9303c4316969c,wangyuan21@baidu.com,2022-04-22 22:05:24+08:00,noreply@github.com,2022-04-22 22:05:24+08:00,Disable macOS leak check in daily CI (#540),unstable,True,False,5,redis_metadata.cc,cc,3,0,3
f01aac219f4fd0fb06750b0f43b9303c4316969c,wangyuan21@baidu.com,2022-04-22 22:05:24+08:00,noreply@github.com,2022-04-22 22:05:24+08:00,Disable macOS leak check in daily CI (#540),unstable,True,False,5,redis_metadata.h,h,2,2,4
f01aac219f4fd0fb06750b0f43b9303c4316969c,wangyuan21@baidu.com,2022-04-22 22:05:24+08:00,noreply@github.com,2022-04-22 22:05:24+08:00,Disable macOS leak check in daily CI (#540),unstable,True,False,5,server.tcl,tcl,5,0,5
f01aac219f4fd0fb06750b0f43b9303c4316969c,wangyuan21@baidu.com,2022-04-22 22:05:24+08:00,noreply@github.com,2022-04-22 22:05:24+08:00,Disable macOS leak check in daily CI (#540),unstable,True,False,5,test_helper.tcl,tcl,1,0,1
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,daily-ci.yaml,yaml,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,kvrocks.yaml,yaml,26,0,26
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,release.yaml,yaml,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,CMakeLists.txt,txt,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,Dockerfile,None,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,Makefile,None,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,build.sh,sh,16,0,16
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,gflags.cmake,cmake,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,glog.cmake,cmake,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,gtest.cmake,cmake,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,jemalloc.cmake,cmake,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,libevent.cmake,cmake,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,lua.cmake,cmake,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,rocksdb.cmake,cmake,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,snappy.cmake,cmake,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,cppcheck.sh,sh,18,0,18
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,cpplint.sh,sh,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,package.sh,sh,18,0,18
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,Makefile,None,17,1,18
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,batch_extractor.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,batch_extractor.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,cluster.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,cluster.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,compact_filter.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,compact_filter.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,compaction_checker.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,compaction_checker.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,config.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,config.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,config_type.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,cron.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,cron.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,encoding.cc,cc,21,0,21
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,encoding.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,event_listener.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,event_listener.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,geohash.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,geohash.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,lock_manager.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,lock_manager.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,log_collector.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,log_collector.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,main.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,mkreleasehdr.sh,sh,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,rand.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,rand.h,h,21,0,21
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_bitmap.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_bitmap.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_bitmap_string.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_bitmap_string.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_cmd.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_cmd.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_connection.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_connection.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_db.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_db.h,h,19,0,19
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_geo.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_geo.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_hash.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_hash.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_list.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_list.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_metadata.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_metadata.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_pubsub.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_pubsub.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_reply.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_reply.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_request.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_request.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_set.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_set.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_slot.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_slot.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_sortedint.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_sortedint.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_string.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_string.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_zset.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_zset.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,replication.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,replication.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,rocksdb_crc32c.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,rw_lock.h,h,23,4,27
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,scripting.cc,cc,52,4,56
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,scripting.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,server.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,server.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,sha1.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,sha1.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,slot_import.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,slot_import.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,slot_migrate.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,slot_migrate.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,stats.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,stats.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,status.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,storage.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,storage.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,table_properties_collector.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,table_properties_collector.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,task_runner.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,task_runner.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,util.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,util.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,worker.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,worker.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,cluster_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,compact_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,config_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,cron_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,log_collector_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,main.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,rwlock_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,string_reply_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,string_util_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,t_bitmap_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,t_encoding_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,t_geo_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,t_hash_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,t_list_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,t_metadata_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,t_set_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,t_sortedint_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,t_string_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,t_zset_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,task_runner_test.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,test_base.h,h,19,0,19
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,licenserc.yml,yml,33,0,33
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,config.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,config.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,main.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,parser.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,parser.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_writer.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,redis_writer.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,sync.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,sync.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,README.md,md,3,0,3
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,append-data-to-kvrocks.py,py,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,populate-kvrocks.py,py,17,0,17
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,writer.cc,cc,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,writer.h,h,20,0,20
0b2de8ab6f661d90a279a0c11096755d7733b11c,wander4096@gmail.com,2022-04-29 11:13:30+08:00,noreply@github.com,2022-04-29 11:13:30+08:00,"Apply Apache License header for source code  (#543)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,144,try_cluster.sh,sh,17,0,17
574aa487bb4ac35d406230bb1d3a294188364dfc,wander4096@gmail.com,2022-04-29 15:44:56+08:00,noreply@github.com,2022-04-29 15:44:56+08:00,"Add .asf.yaml file (#545)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,.asf.yaml,yaml,33,0,33
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,NOTICE,None,5,0,5
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,LICENSE.redis,redis,10,0,10
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,bg_block_op.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,bg_complex_data.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,crc16_slottable.tcl,tcl,17,0,17
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,gen_write_load.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,instances.tcl,tcl,23,4,27
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,cluster.tcl,tcl,17,0,17
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,redis-cli.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,replication.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,slotimport.tcl,tcl,17,0,17
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,slotmigrate.tcl,tcl,17,0,17
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,benchmark.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,cli.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,cluster.tcl,tcl,23,2,25
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,redis.tcl,tcl,23,2,25
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,server.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,test.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,tmpfile.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,util.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,test_helper.tcl,tcl,24,3,27
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,acl.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,auth.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,bitfield.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,bitops.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,command.tcl,tcl,17,0,17
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,config.tcl,tcl,17,2,19
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,expire.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,geo.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,hyperloglog.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,introspection.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,keyspace.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,limits.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,multi.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,protocol.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,pubsub.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,quit.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,scan.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,scripting.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,slowlog.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,tls.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,bitmap.tcl,tcl,17,0,17
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,hash.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,incr.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,list-2.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,list-3.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,list-common.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,list.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,set.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,sint.tcl,tcl,17,0,17
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,string.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,zset.tcl,tcl,23,0,23
fca9e6962be5e85ad659545d94b5dafa4aec1325,wander4096@gmail.com,2022-04-30 15:20:45+08:00,noreply@github.com,2022-04-30 15:20:45+08:00,"Apply Apache License header for Tcl files (#548)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,53,licenserc.yml,yml,1,0,1
77f7c6f53c6b747977285357fc94ec4af0d862eb,a@foo.be,2022-04-30 09:23:22+02:00,noreply@github.com,2022-04-30 15:23:22+08:00,Add use case CIRCL.lu (#546),unstable,True,False,2,README.md,md,3,2,5
77f7c6f53c6b747977285357fc94ec4af0d862eb,a@foo.be,2022-04-30 09:23:22+02:00,noreply@github.com,2022-04-30 15:23:22+08:00,Add use case CIRCL.lu (#546),unstable,True,False,2,circl-lu.png,png,0,0,0
5c2e68f641703c898b63aeafe7d6abac4dd603f1,hexiaoqiao@apache.org,2022-05-06 14:42:50+08:00,noreply@github.com,2022-05-06 14:42:50+08:00,Update repository link to Apache Incubator repo. (#551),unstable,True,False,4,release.yaml,yaml,1,1,2
5c2e68f641703c898b63aeafe7d6abac4dd603f1,hexiaoqiao@apache.org,2022-05-06 14:42:50+08:00,noreply@github.com,2022-05-06 14:42:50+08:00,Update repository link to Apache Incubator repo. (#551),unstable,True,False,4,README.md,md,10,10,20
5c2e68f641703c898b63aeafe7d6abac4dd603f1,hexiaoqiao@apache.org,2022-05-06 14:42:50+08:00,noreply@github.com,2022-05-06 14:42:50+08:00,Update repository link to Apache Incubator repo. (#551),unstable,True,False,4,package.sh,sh,1,1,2
5c2e68f641703c898b63aeafe7d6abac4dd603f1,hexiaoqiao@apache.org,2022-05-06 14:42:50+08:00,noreply@github.com,2022-05-06 14:42:50+08:00,Update repository link to Apache Incubator repo. (#551),unstable,True,False,4,kvrocks.service,service,1,1,2
f4c517bc802a09c730b2e474b4918735a28cb037,torwigua@gmail.com,2022-05-07 09:48:27+03:00,noreply@github.com,2022-05-07 14:48:27+08:00,"Add support for listening to unix socket (#531)

Two processes cannot bind (and listen) to the same unix socket.
That's why only one worker binds the socket.
Introduce a separate ConfigField and function to parse
unix socket permissions from config file. This number is defined
in octal form (e.g. 770 or 0777).",unstable,True,False,11,kvrocks.conf,conf,9,0,9
f4c517bc802a09c730b2e474b4918735a28cb037,torwigua@gmail.com,2022-05-07 09:48:27+03:00,noreply@github.com,2022-05-07 14:48:27+08:00,"Add support for listening to unix socket (#531)

Two processes cannot bind (and listen) to the same unix socket.
That's why only one worker binds the socket.
Introduce a separate ConfigField and function to parse
unix socket permissions from config file. This number is defined
in octal form (e.g. 770 or 0777).",unstable,True,False,11,config.cc,cc,4,2,6
f4c517bc802a09c730b2e474b4918735a28cb037,torwigua@gmail.com,2022-05-07 09:48:27+03:00,noreply@github.com,2022-05-07 14:48:27+08:00,"Add support for listening to unix socket (#531)

Two processes cannot bind (and listen) to the same unix socket.
That's why only one worker binds the socket.
Introduce a separate ConfigField and function to parse
unix socket permissions from config file. This number is defined
in octal form (e.g. 770 or 0777).",unstable,True,False,11,config.h,h,2,0,2
f4c517bc802a09c730b2e474b4918735a28cb037,torwigua@gmail.com,2022-05-07 09:48:27+03:00,noreply@github.com,2022-05-07 14:48:27+08:00,"Add support for listening to unix socket (#531)

Two processes cannot bind (and listen) to the same unix socket.
That's why only one worker binds the socket.
Introduce a separate ConfigField and function to parse
unix socket permissions from config file. This number is defined
in octal form (e.g. 770 or 0777).",unstable,True,False,11,config_type.h,h,30,2,32
f4c517bc802a09c730b2e474b4918735a28cb037,torwigua@gmail.com,2022-05-07 09:48:27+03:00,noreply@github.com,2022-05-07 14:48:27+08:00,"Add support for listening to unix socket (#531)

Two processes cannot bind (and listen) to the same unix socket.
That's why only one worker binds the socket.
Introduce a separate ConfigField and function to parse
unix socket permissions from config file. This number is defined
in octal form (e.g. 770 or 0777).",unstable,True,False,11,redis_cmd.cc,cc,2,2,4
f4c517bc802a09c730b2e474b4918735a28cb037,torwigua@gmail.com,2022-05-07 09:48:27+03:00,noreply@github.com,2022-05-07 14:48:27+08:00,"Add support for listening to unix socket (#531)

Two processes cannot bind (and listen) to the same unix socket.
That's why only one worker binds the socket.
Introduce a separate ConfigField and function to parse
unix socket permissions from config file. This number is defined
in octal form (e.g. 770 or 0777).",unstable,True,False,11,scripting.cc,cc,4,4,8
f4c517bc802a09c730b2e474b4918735a28cb037,torwigua@gmail.com,2022-05-07 09:48:27+03:00,noreply@github.com,2022-05-07 14:48:27+08:00,"Add support for listening to unix socket (#531)

Two processes cannot bind (and listen) to the same unix socket.
That's why only one worker binds the socket.
Introduce a separate ConfigField and function to parse
unix socket permissions from config file. This number is defined
in octal form (e.g. 770 or 0777).",unstable,True,False,11,server.cc,cc,11,0,11
f4c517bc802a09c730b2e474b4918735a28cb037,torwigua@gmail.com,2022-05-07 09:48:27+03:00,noreply@github.com,2022-05-07 14:48:27+08:00,"Add support for listening to unix socket (#531)

Two processes cannot bind (and listen) to the same unix socket.
That's why only one worker binds the socket.
Introduce a separate ConfigField and function to parse
unix socket permissions from config file. This number is defined
in octal form (e.g. 770 or 0777).",unstable,True,False,11,util.cc,cc,13,1,14
f4c517bc802a09c730b2e474b4918735a28cb037,torwigua@gmail.com,2022-05-07 09:48:27+03:00,noreply@github.com,2022-05-07 14:48:27+08:00,"Add support for listening to unix socket (#531)

Two processes cannot bind (and listen) to the same unix socket.
That's why only one worker binds the socket.
Introduce a separate ConfigField and function to parse
unix socket permissions from config file. This number is defined
in octal form (e.g. 770 or 0777).",unstable,True,False,11,util.h,h,2,1,3
f4c517bc802a09c730b2e474b4918735a28cb037,torwigua@gmail.com,2022-05-07 09:48:27+03:00,noreply@github.com,2022-05-07 14:48:27+08:00,"Add support for listening to unix socket (#531)

Two processes cannot bind (and listen) to the same unix socket.
That's why only one worker binds the socket.
Introduce a separate ConfigField and function to parse
unix socket permissions from config file. This number is defined
in octal form (e.g. 770 or 0777).",unstable,True,False,11,worker.cc,cc,62,6,68
f4c517bc802a09c730b2e474b4918735a28cb037,torwigua@gmail.com,2022-05-07 09:48:27+03:00,noreply@github.com,2022-05-07 14:48:27+08:00,"Add support for listening to unix socket (#531)

Two processes cannot bind (and listen) to the same unix socket.
That's why only one worker binds the socket.
Introduce a separate ConfigField and function to parse
unix socket permissions from config file. This number is defined
in octal form (e.g. 770 or 0777).",unstable,True,False,11,worker.h,h,7,3,10
515d270cb5122f590189e96a73ecba7b2256af40,foxdalas@gmail.com,2022-05-07 16:42:19+07:00,noreply@github.com,2022-05-07 17:42:19+08:00,Support to cross compile and release arm64 docker image (#550),unstable,True,False,4,.dockerignore,dockerignore,1,0,1
515d270cb5122f590189e96a73ecba7b2256af40,foxdalas@gmail.com,2022-05-07 16:42:19+07:00,noreply@github.com,2022-05-07 17:42:19+08:00,Support to cross compile and release arm64 docker image (#550),unstable,True,False,4,daily-ci.yaml,yaml,25,1,26
515d270cb5122f590189e96a73ecba7b2256af40,foxdalas@gmail.com,2022-05-07 16:42:19+07:00,noreply@github.com,2022-05-07 17:42:19+08:00,Support to cross compile and release arm64 docker image (#550),unstable,True,False,4,release.yaml,yaml,11,4,15
515d270cb5122f590189e96a73ecba7b2256af40,foxdalas@gmail.com,2022-05-07 16:42:19+07:00,noreply@github.com,2022-05-07 17:42:19+08:00,Support to cross compile and release arm64 docker image (#550),unstable,True,False,4,Dockerfile,None,12,3,15
cf9901f88f5905f75e542999529fcbad2ec66dd1,aleks.raiden@gmail.com,2022-05-08 06:48:56+03:00,noreply@github.com,2022-05-08 11:48:56+08:00,Fix missing googletest dependency for Ubuntu/Debian in README(#553),unstable,True,False,1,README.md,md,1,2,3
a5a5434a93388137be640c55b5440a66f42e1659,hulk.website@gmail.com,2022-05-09 10:01:38+08:00,noreply@github.com,2022-05-09 10:01:38+08:00,"Fix can't find jemalloc when building with makefile on MacOSX (#557)

The root cause of this issue is that rocksdb would auto detect and link
the jemalloc library, but Kvrocks doesn't do that. So it will cause missing
some jemalloc symbols when linking.",unstable,True,False,1,Makefile,None,1,0,1
beceb047b8d9009e7e878361e8e8920321d08137,chenliang613@apache.org,2022-05-09 22:04:25+08:00,noreply@github.com,2022-05-09 22:04:25+08:00,Add DISCLAIMER (#558),unstable,True,False,1,DISCLAIMER,None,10,0,10
98b974a9e68c50e99b0b5f61e3cbfffcbb33d465,wander4096@gmail.com,2022-05-10 16:01:25+08:00,noreply@github.com,2022-05-10 16:01:25+08:00,"Adopt issue template configs (#568)

This closes #560.

New feature is now part of enhancement.

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,6,bug-report.yml,yml,74,0,74
98b974a9e68c50e99b0b5f61e3cbfffcbb33d465,wander4096@gmail.com,2022-05-10 16:01:25+08:00,noreply@github.com,2022-05-10 16:01:25+08:00,"Adopt issue template configs (#568)

This closes #560.

New feature is now part of enhancement.

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,6,config.yml,yml,22,0,22
98b974a9e68c50e99b0b5f61e3cbfffcbb33d465,wander4096@gmail.com,2022-05-10 16:01:25+08:00,noreply@github.com,2022-05-10 16:01:25+08:00,"Adopt issue template configs (#568)

This closes #560.

New feature is now part of enhancement.

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,6,enhancement.yml,yml,54,0,54
b1e6a44daddc55ec3cb83438fe2371f6caa7756a,hulk.website@gmail.com,2022-05-10 17:00:27+08:00,noreply@github.com,2022-05-10 17:00:27+08:00,"ci: Check build with CMake on ubuntu (#566)

Currently, Kvrocks supported make and cmake ways to build the source, but CI workflow only check the make command. To be more rigorous, we need to also check the cmake way.

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,2,kvrocks.yaml,yaml,24,0,24
b1e6a44daddc55ec3cb83438fe2371f6caa7756a,hulk.website@gmail.com,2022-05-10 17:00:27+08:00,noreply@github.com,2022-05-10 17:00:27+08:00,"ci: Check build with CMake on ubuntu (#566)

Currently, Kvrocks supported make and cmake ways to build the source, but CI workflow only check the make command. To be more rigorous, we need to also check the cmake way.

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,2,build.sh,sh,1,1,2
a51be769f8d7f8b73ecac3cfe8183b7ec1c69193,i@twice.moe,2022-05-11 20:54:27+08:00,noreply@github.com,2022-05-11 20:54:27+08:00,"Use FetchContent instead of ExternalProject and git submodules in CMake (#564)

Currently, we are using git submodules to manage external libraries which
need to pull full git histories. CMake gives a light way `FetchContent` to handle
this scenario after 3.11, we can only fetch the specify tag or commit  instead of full histories. 

Another minor change was that the CMake minimal required will be 3.13 to support the 
FetchContent instruction.

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,13,CMakeLists.txt,txt,9,25,34
a51be769f8d7f8b73ecac3cfe8183b7ec1c69193,i@twice.moe,2022-05-11 20:54:27+08:00,noreply@github.com,2022-05-11 20:54:27+08:00,"Use FetchContent instead of ExternalProject and git submodules in CMake (#564)

Currently, we are using git submodules to manage external libraries which
need to pull full git histories. CMake gives a light way `FetchContent` to handle
this scenario after 3.11, we can only fetch the specify tag or commit  instead of full histories. 

Another minor change was that the CMake minimal required will be 3.13 to support the 
FetchContent instruction.

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,13,build.sh,sh,3,4,7
a51be769f8d7f8b73ecac3cfe8183b7ec1c69193,i@twice.moe,2022-05-11 20:54:27+08:00,noreply@github.com,2022-05-11 20:54:27+08:00,"Use FetchContent instead of ExternalProject and git submodules in CMake (#564)

Currently, we are using git submodules to manage external libraries which
need to pull full git histories. CMake gives a light way `FetchContent` to handle
this scenario after 3.11, we can only fetch the specify tag or commit  instead of full histories. 

Another minor change was that the CMake minimal required will be 3.13 to support the 
FetchContent instruction.

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,13,glog.cmake,cmake,11,41,52
a51be769f8d7f8b73ecac3cfe8183b7ec1c69193,i@twice.moe,2022-05-11 20:54:27+08:00,noreply@github.com,2022-05-11 20:54:27+08:00,"Use FetchContent instead of ExternalProject and git submodules in CMake (#564)

Currently, we are using git submodules to manage external libraries which
need to pull full git histories. CMake gives a light way `FetchContent` to handle
this scenario after 3.11, we can only fetch the specify tag or commit  instead of full histories. 

Another minor change was that the CMake minimal required will be 3.13 to support the 
FetchContent instruction.

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,13,gtest.cmake,cmake,11,31,42
a51be769f8d7f8b73ecac3cfe8183b7ec1c69193,i@twice.moe,2022-05-11 20:54:27+08:00,noreply@github.com,2022-05-11 20:54:27+08:00,"Use FetchContent instead of ExternalProject and git submodules in CMake (#564)

Currently, we are using git submodules to manage external libraries which
need to pull full git histories. CMake gives a light way `FetchContent` to handle
this scenario after 3.11, we can only fetch the specify tag or commit  instead of full histories. 

Another minor change was that the CMake minimal required will be 3.13 to support the 
FetchContent instruction.

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,13,jemalloc.cmake,cmake,26,31,57
a51be769f8d7f8b73ecac3cfe8183b7ec1c69193,i@twice.moe,2022-05-11 20:54:27+08:00,noreply@github.com,2022-05-11 20:54:27+08:00,"Use FetchContent instead of ExternalProject and git submodules in CMake (#564)

Currently, we are using git submodules to manage external libraries which
need to pull full git histories. CMake gives a light way `FetchContent` to handle
this scenario after 3.11, we can only fetch the specify tag or commit  instead of full histories. 

Another minor change was that the CMake minimal required will be 3.13 to support the 
FetchContent instruction.

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,13,libevent.cmake,cmake,19,32,51
a51be769f8d7f8b73ecac3cfe8183b7ec1c69193,i@twice.moe,2022-05-11 20:54:27+08:00,noreply@github.com,2022-05-11 20:54:27+08:00,"Use FetchContent instead of ExternalProject and git submodules in CMake (#564)

Currently, we are using git submodules to manage external libraries which
need to pull full git histories. CMake gives a light way `FetchContent` to handle
this scenario after 3.11, we can only fetch the specify tag or commit  instead of full histories. 

Another minor change was that the CMake minimal required will be 3.13 to support the 
FetchContent instruction.

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,13,lua.cmake,cmake,23,26,49
a51be769f8d7f8b73ecac3cfe8183b7ec1c69193,i@twice.moe,2022-05-11 20:54:27+08:00,noreply@github.com,2022-05-11 20:54:27+08:00,"Use FetchContent instead of ExternalProject and git submodules in CMake (#564)

Currently, we are using git submodules to manage external libraries which
need to pull full git histories. CMake gives a light way `FetchContent` to handle
this scenario after 3.11, we can only fetch the specify tag or commit  instead of full histories. 

Another minor change was that the CMake minimal required will be 3.13 to support the 
FetchContent instruction.

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,13,FindJeMalloc.cmake,cmake,25,0,25
a51be769f8d7f8b73ecac3cfe8183b7ec1c69193,i@twice.moe,2022-05-11 20:54:27+08:00,noreply@github.com,2022-05-11 20:54:27+08:00,"Use FetchContent instead of ExternalProject and git submodules in CMake (#564)

Currently, we are using git submodules to manage external libraries which
need to pull full git histories. CMake gives a light way `FetchContent` to handle
this scenario after 3.11, we can only fetch the specify tag or commit  instead of full histories. 

Another minor change was that the CMake minimal required will be 3.13 to support the 
FetchContent instruction.

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,13,SnappyConfig.cmake,cmake,24,0,24
a51be769f8d7f8b73ecac3cfe8183b7ec1c69193,i@twice.moe,2022-05-11 20:54:27+08:00,noreply@github.com,2022-05-11 20:54:27+08:00,"Use FetchContent instead of ExternalProject and git submodules in CMake (#564)

Currently, we are using git submodules to manage external libraries which
need to pull full git histories. CMake gives a light way `FetchContent` to handle
this scenario after 3.11, we can only fetch the specify tag or commit  instead of full histories. 

Another minor change was that the CMake minimal required will be 3.13 to support the 
FetchContent instruction.

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,13,rocksdb.cmake,cmake,32,59,91
a51be769f8d7f8b73ecac3cfe8183b7ec1c69193,i@twice.moe,2022-05-11 20:54:27+08:00,noreply@github.com,2022-05-11 20:54:27+08:00,"Use FetchContent instead of ExternalProject and git submodules in CMake (#564)

Currently, we are using git submodules to manage external libraries which
need to pull full git histories. CMake gives a light way `FetchContent` to handle
this scenario after 3.11, we can only fetch the specify tag or commit  instead of full histories. 

Another minor change was that the CMake minimal required will be 3.13 to support the 
FetchContent instruction.

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,13,snappy.cmake,cmake,11,41,52
a51be769f8d7f8b73ecac3cfe8183b7ec1c69193,i@twice.moe,2022-05-11 20:54:27+08:00,noreply@github.com,2022-05-11 20:54:27+08:00,"Use FetchContent instead of ExternalProject and git submodules in CMake (#564)

Currently, we are using git submodules to manage external libraries which
need to pull full git histories. CMake gives a light way `FetchContent` to handle
this scenario after 3.11, we can only fetch the specify tag or commit  instead of full histories. 

Another minor change was that the CMake minimal required will be 3.13 to support the 
FetchContent instruction.

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,13,utils.cmake,cmake,43,0,43
274042ff1e5354763a9584308b1a0f352ee722a6,yancz2000@163.com,2022-05-12 10:47:49+08:00,noreply@github.com,2022-05-12 10:47:49+08:00,Remove redundant debugging information (#573),unstable,True,False,1,task_runner_test.cc,cc,1,2,3
6ab3ff4b868fbb2e0ac64048483ac5ff8d140f1e,wander4096@gmail.com,2022-05-13 18:19:00+08:00,noreply@github.com,2022-05-13 18:19:00+08:00,"Remove unused and misleading variable kDefaultConfPath (#578)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,main.cc,cc,1,3,4
518549fe473c08585ca154bd8697b878bc81a4ad,i@twice.moe,2022-05-13 18:59:26+08:00,noreply@github.com,2022-05-13 18:59:26+08:00,Remove handwritten makefiles to keep only one build system (#576),unstable,True,False,17,daily-ci.yaml,yaml,3,3,6
518549fe473c08585ca154bd8697b878bc81a4ad,i@twice.moe,2022-05-13 18:59:26+08:00,noreply@github.com,2022-05-13 18:59:26+08:00,Remove handwritten makefiles to keep only one build system (#576),unstable,True,False,17,kvrocks.yaml,yaml,12,33,45
518549fe473c08585ca154bd8697b878bc81a4ad,i@twice.moe,2022-05-13 18:59:26+08:00,noreply@github.com,2022-05-13 18:59:26+08:00,Remove handwritten makefiles to keep only one build system (#576),unstable,True,False,17,release.yaml,yaml,15,10,25
518549fe473c08585ca154bd8697b878bc81a4ad,i@twice.moe,2022-05-13 18:59:26+08:00,noreply@github.com,2022-05-13 18:59:26+08:00,Remove handwritten makefiles to keep only one build system (#576),unstable,True,False,17,Dockerfile,None,3,4,7
518549fe473c08585ca154bd8697b878bc81a4ad,i@twice.moe,2022-05-13 18:59:26+08:00,noreply@github.com,2022-05-13 18:59:26+08:00,Remove handwritten makefiles to keep only one build system (#576),unstable,True,False,17,README.md,md,12,12,24
518549fe473c08585ca154bd8697b878bc81a4ad,i@twice.moe,2022-05-13 18:59:26+08:00,noreply@github.com,2022-05-13 18:59:26+08:00,Remove handwritten makefiles to keep only one build system (#576),unstable,True,False,17,runtest,None,1,1,2
a86f4d00df8ccbe2b018b94f41b5047280230684,hulk.website@gmail.com,2022-05-14 11:27:39+08:00,noreply@github.com,2022-05-14 11:27:39+08:00,Support to listen on the IPV6 address (#554),unstable,True,False,3,kvrocks.conf,conf,1,1,2
a86f4d00df8ccbe2b018b94f41b5047280230684,hulk.website@gmail.com,2022-05-14 11:27:39+08:00,noreply@github.com,2022-05-14 11:27:39+08:00,Support to listen on the IPV6 address (#554),unstable,True,False,3,util.cc,cc,10,4,14
a86f4d00df8ccbe2b018b94f41b5047280230684,hulk.website@gmail.com,2022-05-14 11:27:39+08:00,noreply@github.com,2022-05-14 11:27:39+08:00,Support to listen on the IPV6 address (#554),unstable,True,False,3,worker.cc,cc,46,19,65
4f9f01c785cfea7ae4cc66f9c6cf55fa0c4866d9,i@twice.moe,2022-05-14 13:27:48+08:00,noreply@github.com,2022-05-14 13:27:48+08:00,Fix errors in daily CI (#579),unstable,True,False,1,daily-ci.yaml,yaml,8,4,12
411bf43710679a7fa8a5c4b5e4946225757be562,hulk.website@gmail.com,2022-05-17 01:46:01+08:00,noreply@github.com,2022-05-17 01:46:01+08:00,Disable the OPENSSL when building the newer version cmake (#583),unstable,True,False,1,build.sh,sh,1,1,2
fa7dbc33cdaae8cef3f282d94e42fd4c010bd163,i@twice.moe,2022-05-18 16:24:50+08:00,noreply@github.com,2022-05-18 16:24:50+08:00,"Refactor CMakeLists: introduce target kvrocks_objs to avoid redundance (#586)

- file(GLOB ...) is used to avoid handwritten source file lists.
- Do not need to modify CMakeLists.txt while you add/remove some source files.
- Any common properties e.g. compile options, include directories etc. can be
  added only to kvrocks_objs target, not every target including kvrocks,
  kvrocks2redis and unittest.

Other changes
- Fix ENBALE_ASAN typo.
- Use RelWithDebInfo mode for cmake in build.sh",unstable,True,False,2,CMakeLists.txt,txt,35,330,365
fa7dbc33cdaae8cef3f282d94e42fd4c010bd163,i@twice.moe,2022-05-18 16:24:50+08:00,noreply@github.com,2022-05-18 16:24:50+08:00,"Refactor CMakeLists: introduce target kvrocks_objs to avoid redundance (#586)

- file(GLOB ...) is used to avoid handwritten source file lists.
- Do not need to modify CMakeLists.txt while you add/remove some source files.
- Any common properties e.g. compile options, include directories etc. can be
  added only to kvrocks_objs target, not every target including kvrocks,
  kvrocks2redis and unittest.

Other changes
- Fix ENBALE_ASAN typo.
- Use RelWithDebInfo mode for cmake in build.sh",unstable,True,False,2,build.sh,sh,1,1,2
422104e5f5da68b63820eb15c7fab40ece75c817,i@twice.moe,2022-05-19 11:11:28+08:00,noreply@github.com,2022-05-19 11:11:28+08:00,Fix release CI: use build.sh & use fresh directory & remove useless deps (#588),unstable,True,False,1,release.yaml,yaml,15,16,31
455445a4d164584eab42d6b907b5db539040866f,torwigua@gmail.com,2022-05-19 09:04:57+03:00,noreply@github.com,2022-05-19 14:04:57+08:00,"Add LMove command (#577)

- LMove is able to operate on a single list if the source and destination are the same
- In case of two lists LMove acquires two locks and performs Pop and Push atomically
- Also implement multi locks gurad in the lock manger, it is convenient to operate multi
  keys atomically

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,10,lock_manager.cc,cc,22,0,22
455445a4d164584eab42d6b907b5db539040866f,torwigua@gmail.com,2022-05-19 09:04:57+03:00,noreply@github.com,2022-05-19 14:04:57+08:00,"Add LMove command (#577)

- LMove is able to operate on a single list if the source and destination are the same
- In case of two lists LMove acquires two locks and performs Pop and Push atomically
- Also implement multi locks gurad in the lock manger, it is convenient to operate multi
  keys atomically

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,10,lock_manager.h,h,25,0,25
455445a4d164584eab42d6b907b5db539040866f,torwigua@gmail.com,2022-05-19 09:04:57+03:00,noreply@github.com,2022-05-19 14:04:57+08:00,"Add LMove command (#577)

- LMove is able to operate on a single list if the source and destination are the same
- In case of two lists LMove acquires two locks and performs Pop and Push atomically
- Also implement multi locks gurad in the lock manger, it is convenient to operate multi
  keys atomically

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,10,redis_cmd.cc,cc,33,0,33
455445a4d164584eab42d6b907b5db539040866f,torwigua@gmail.com,2022-05-19 09:04:57+03:00,noreply@github.com,2022-05-19 14:04:57+08:00,"Add LMove command (#577)

- LMove is able to operate on a single list if the source and destination are the same
- In case of two lists LMove acquires two locks and performs Pop and Push atomically
- Also implement multi locks gurad in the lock manger, it is convenient to operate multi
  keys atomically

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,10,redis_list.cc,cc,133,0,133
455445a4d164584eab42d6b907b5db539040866f,torwigua@gmail.com,2022-05-19 09:04:57+03:00,noreply@github.com,2022-05-19 14:04:57+08:00,"Add LMove command (#577)

- LMove is able to operate on a single list if the source and destination are the same
- In case of two lists LMove acquires two locks and performs Pop and Push atomically
- Also implement multi locks gurad in the lock manger, it is convenient to operate multi
  keys atomically

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,10,redis_list.h,h,3,0,3
455445a4d164584eab42d6b907b5db539040866f,torwigua@gmail.com,2022-05-19 09:04:57+03:00,noreply@github.com,2022-05-19 14:04:57+08:00,"Add LMove command (#577)

- LMove is able to operate on a single list if the source and destination are the same
- In case of two lists LMove acquires two locks and performs Pop and Push atomically
- Also implement multi locks gurad in the lock manger, it is convenient to operate multi
  keys atomically

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,10,redis_metadata.h,h,1,0,1
455445a4d164584eab42d6b907b5db539040866f,torwigua@gmail.com,2022-05-19 09:04:57+03:00,noreply@github.com,2022-05-19 14:04:57+08:00,"Add LMove command (#577)

- LMove is able to operate on a single list if the source and destination are the same
- In case of two lists LMove acquires two locks and performs Pop and Push atomically
- Also implement multi locks gurad in the lock manger, it is convenient to operate multi
  keys atomically

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,10,rwlock_test.cc,cc,23,0,23
455445a4d164584eab42d6b907b5db539040866f,torwigua@gmail.com,2022-05-19 09:04:57+03:00,noreply@github.com,2022-05-19 14:04:57+08:00,"Add LMove command (#577)

- LMove is able to operate on a single list if the source and destination are the same
- In case of two lists LMove acquires two locks and performs Pop and Push atomically
- Also implement multi locks gurad in the lock manger, it is convenient to operate multi
  keys atomically

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,10,t_list_test.cc,cc,142,1,143
455445a4d164584eab42d6b907b5db539040866f,torwigua@gmail.com,2022-05-19 09:04:57+03:00,noreply@github.com,2022-05-19 14:04:57+08:00,"Add LMove command (#577)

- LMove is able to operate on a single list if the source and destination are the same
- In case of two lists LMove acquires two locks and performs Pop and Push atomically
- Also implement multi locks gurad in the lock manger, it is convenient to operate multi
  keys atomically

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,10,command.tcl,tcl,2,2,4
455445a4d164584eab42d6b907b5db539040866f,torwigua@gmail.com,2022-05-19 09:04:57+03:00,noreply@github.com,2022-05-19 14:04:57+08:00,"Add LMove command (#577)

- LMove is able to operate on a single list if the source and destination are the same
- In case of two lists LMove acquires two locks and performs Pop and Push atomically
- Also implement multi locks gurad in the lock manger, it is convenient to operate multi
  keys atomically

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,10,list.tcl,tcl,44,0,44
6c2f1d4702d3ae93be5c182e4fbe4d6c70a240a5,i@twice.moe,2022-05-19 19:03:44+08:00,noreply@github.com,2022-05-19 19:03:44+08:00,Improve version.h.in processing in CMake (#593),unstable,True,False,1,CMakeLists.txt,txt,4,2,6
02587003c6e60fb705ae6d3b3dd58711b616bc00,i@twice.moe,2022-05-19 20:31:48+08:00,noreply@github.com,2022-05-19 20:31:48+08:00,Search library first before linking `libstdc++.a` in CMake (#592),unstable,True,False,2,CMakeLists.txt,txt,16,4,20
02587003c6e60fb705ae6d3b3dd58711b616bc00,i@twice.moe,2022-05-19 20:31:48+08:00,noreply@github.com,2022-05-19 20:31:48+08:00,Search library first before linking `libstdc++.a` in CMake (#592),unstable,True,False,2,static_libstdcxx.cc,cc,25,0,25
fd81d5b60857ab79169f3a9ae8f284e910031a8e,hulk.website@gmail.com,2022-05-19 22:40:03+08:00,noreply@github.com,2022-05-19 22:40:03+08:00,Claim Kvrocks is under the apache incubating state in README (#596),unstable,True,False,1,README.md,md,1,1,2
9ecf5c7dbc7013f7ec1c08fb1f990bc63fc9a841,wangyuan21@baidu.com,2022-05-24 10:53:46+08:00,noreply@github.com,2022-05-24 10:53:46+08:00,"PSYNC based on Unique Replication Sequence ID (#538)

### Background
Currently, master only checks sequence number when replica asks for PSYNC,
that is not enough since they may have different replication history even
the replica asking sequence is in the range of the master current WAL.

A bug report in #462

PS: Master check also DB name before checking sequence number, but it is
also not enough since it is setting in conf, and don't change when role is
changed.
 
### Solution
We design 'PSYNC based on Unique Replication Sequence ID', we add unique
replication id for every write batch (the operation of each command on the
storage engine), so the combination of replication id and sequence is unique
for write batch. The master can identify whether the replica has the same
replication history by checking replication id and sequence. 
Like Redis, replicas can partially resynchronize with new master if old
master is failed and new selected master has largest offset, and replicas
can also partially resynchronize with master after restarting if the replicas'
conf file has the its origin master.

Unique replication id will be changed when replicas become master.

By default, it is not enabled since this stricter check may easily lead to
full synchronization. You should enable it if you want to data correctness,
maybe we enable it by default in Kvrocks 3.0.",unstable,True,False,13,kvrocks.conf,conf,14,0,14
9ecf5c7dbc7013f7ec1c08fb1f990bc63fc9a841,wangyuan21@baidu.com,2022-05-24 10:53:46+08:00,noreply@github.com,2022-05-24 10:53:46+08:00,"PSYNC based on Unique Replication Sequence ID (#538)

### Background
Currently, master only checks sequence number when replica asks for PSYNC,
that is not enough since they may have different replication history even
the replica asking sequence is in the range of the master current WAL.

A bug report in #462

PS: Master check also DB name before checking sequence number, but it is
also not enough since it is setting in conf, and don't change when role is
changed.
 
### Solution
We design 'PSYNC based on Unique Replication Sequence ID', we add unique
replication id for every write batch (the operation of each command on the
storage engine), so the combination of replication id and sequence is unique
for write batch. The master can identify whether the replica has the same
replication history by checking replication id and sequence. 
Like Redis, replicas can partially resynchronize with new master if old
master is failed and new selected master has largest offset, and replicas
can also partially resynchronize with master after restarting if the replicas'
conf file has the its origin master.

Unique replication id will be changed when replicas become master.

By default, it is not enabled since this stricter check may easily lead to
full synchronization. You should enable it if you want to data correctness,
maybe we enable it by default in Kvrocks 3.0.",unstable,True,False,13,batch_extractor.cc,cc,11,1,12
9ecf5c7dbc7013f7ec1c08fb1f990bc63fc9a841,wangyuan21@baidu.com,2022-05-24 10:53:46+08:00,noreply@github.com,2022-05-24 10:53:46+08:00,"PSYNC based on Unique Replication Sequence ID (#538)

### Background
Currently, master only checks sequence number when replica asks for PSYNC,
that is not enough since they may have different replication history even
the replica asking sequence is in the range of the master current WAL.

A bug report in #462

PS: Master check also DB name before checking sequence number, but it is
also not enough since it is setting in conf, and don't change when role is
changed.
 
### Solution
We design 'PSYNC based on Unique Replication Sequence ID', we add unique
replication id for every write batch (the operation of each command on the
storage engine), so the combination of replication id and sequence is unique
for write batch. The master can identify whether the replica has the same
replication history by checking replication id and sequence. 
Like Redis, replicas can partially resynchronize with new master if old
master is failed and new selected master has largest offset, and replicas
can also partially resynchronize with master after restarting if the replicas'
conf file has the its origin master.

Unique replication id will be changed when replicas become master.

By default, it is not enabled since this stricter check may easily lead to
full synchronization. You should enable it if you want to data correctness,
maybe we enable it by default in Kvrocks 3.0.",unstable,True,False,13,config.cc,cc,1,0,1
9ecf5c7dbc7013f7ec1c08fb1f990bc63fc9a841,wangyuan21@baidu.com,2022-05-24 10:53:46+08:00,noreply@github.com,2022-05-24 10:53:46+08:00,"PSYNC based on Unique Replication Sequence ID (#538)

### Background
Currently, master only checks sequence number when replica asks for PSYNC,
that is not enough since they may have different replication history even
the replica asking sequence is in the range of the master current WAL.

A bug report in #462

PS: Master check also DB name before checking sequence number, but it is
also not enough since it is setting in conf, and don't change when role is
changed.
 
### Solution
We design 'PSYNC based on Unique Replication Sequence ID', we add unique
replication id for every write batch (the operation of each command on the
storage engine), so the combination of replication id and sequence is unique
for write batch. The master can identify whether the replica has the same
replication history by checking replication id and sequence. 
Like Redis, replicas can partially resynchronize with new master if old
master is failed and new selected master has largest offset, and replicas
can also partially resynchronize with master after restarting if the replicas'
conf file has the its origin master.

Unique replication id will be changed when replicas become master.

By default, it is not enabled since this stricter check may easily lead to
full synchronization. You should enable it if you want to data correctness,
maybe we enable it by default in Kvrocks 3.0.",unstable,True,False,13,config.h,h,1,0,1
9ecf5c7dbc7013f7ec1c08fb1f990bc63fc9a841,wangyuan21@baidu.com,2022-05-24 10:53:46+08:00,noreply@github.com,2022-05-24 10:53:46+08:00,"PSYNC based on Unique Replication Sequence ID (#538)

### Background
Currently, master only checks sequence number when replica asks for PSYNC,
that is not enough since they may have different replication history even
the replica asking sequence is in the range of the master current WAL.

A bug report in #462

PS: Master check also DB name before checking sequence number, but it is
also not enough since it is setting in conf, and don't change when role is
changed.
 
### Solution
We design 'PSYNC based on Unique Replication Sequence ID', we add unique
replication id for every write batch (the operation of each command on the
storage engine), so the combination of replication id and sequence is unique
for write batch. The master can identify whether the replica has the same
replication history by checking replication id and sequence. 
Like Redis, replicas can partially resynchronize with new master if old
master is failed and new selected master has largest offset, and replicas
can also partially resynchronize with master after restarting if the replicas'
conf file has the its origin master.

Unique replication id will be changed when replicas become master.

By default, it is not enabled since this stricter check may easily lead to
full synchronization. You should enable it if you want to data correctness,
maybe we enable it by default in Kvrocks 3.0.",unstable,True,False,13,redis_cmd.cc,cc,43,5,48
9ecf5c7dbc7013f7ec1c08fb1f990bc63fc9a841,wangyuan21@baidu.com,2022-05-24 10:53:46+08:00,noreply@github.com,2022-05-24 10:53:46+08:00,"PSYNC based on Unique Replication Sequence ID (#538)

### Background
Currently, master only checks sequence number when replica asks for PSYNC,
that is not enough since they may have different replication history even
the replica asking sequence is in the range of the master current WAL.

A bug report in #462

PS: Master check also DB name before checking sequence number, but it is
also not enough since it is setting in conf, and don't change when role is
changed.
 
### Solution
We design 'PSYNC based on Unique Replication Sequence ID', we add unique
replication id for every write batch (the operation of each command on the
storage engine), so the combination of replication id and sequence is unique
for write batch. The master can identify whether the replica has the same
replication history by checking replication id and sequence. 
Like Redis, replicas can partially resynchronize with new master if old
master is failed and new selected master has largest offset, and replicas
can also partially resynchronize with master after restarting if the replicas'
conf file has the its origin master.

Unique replication id will be changed when replicas become master.

By default, it is not enabled since this stricter check may easily lead to
full synchronization. You should enable it if you want to data correctness,
maybe we enable it by default in Kvrocks 3.0.",unstable,True,False,13,replication.cc,cc,49,4,53
9ecf5c7dbc7013f7ec1c08fb1f990bc63fc9a841,wangyuan21@baidu.com,2022-05-24 10:53:46+08:00,noreply@github.com,2022-05-24 10:53:46+08:00,"PSYNC based on Unique Replication Sequence ID (#538)

### Background
Currently, master only checks sequence number when replica asks for PSYNC,
that is not enough since they may have different replication history even
the replica asking sequence is in the range of the master current WAL.

A bug report in #462

PS: Master check also DB name before checking sequence number, but it is
also not enough since it is setting in conf, and don't change when role is
changed.
 
### Solution
We design 'PSYNC based on Unique Replication Sequence ID', we add unique
replication id for every write batch (the operation of each command on the
storage engine), so the combination of replication id and sequence is unique
for write batch. The master can identify whether the replica has the same
replication history by checking replication id and sequence. 
Like Redis, replicas can partially resynchronize with new master if old
master is failed and new selected master has largest offset, and replicas
can also partially resynchronize with master after restarting if the replicas'
conf file has the its origin master.

Unique replication id will be changed when replicas become master.

By default, it is not enabled since this stricter check may easily lead to
full synchronization. You should enable it if you want to data correctness,
maybe we enable it by default in Kvrocks 3.0.",unstable,True,False,13,replication.h,h,10,0,10
9ecf5c7dbc7013f7ec1c08fb1f990bc63fc9a841,wangyuan21@baidu.com,2022-05-24 10:53:46+08:00,noreply@github.com,2022-05-24 10:53:46+08:00,"PSYNC based on Unique Replication Sequence ID (#538)

### Background
Currently, master only checks sequence number when replica asks for PSYNC,
that is not enough since they may have different replication history even
the replica asking sequence is in the range of the master current WAL.

A bug report in #462

PS: Master check also DB name before checking sequence number, but it is
also not enough since it is setting in conf, and don't change when role is
changed.
 
### Solution
We design 'PSYNC based on Unique Replication Sequence ID', we add unique
replication id for every write batch (the operation of each command on the
storage engine), so the combination of replication id and sequence is unique
for write batch. The master can identify whether the replica has the same
replication history by checking replication id and sequence. 
Like Redis, replicas can partially resynchronize with new master if old
master is failed and new selected master has largest offset, and replicas
can also partially resynchronize with master after restarting if the replicas'
conf file has the its origin master.

Unique replication id will be changed when replicas become master.

By default, it is not enabled since this stricter check may easily lead to
full synchronization. You should enable it if you want to data correctness,
maybe we enable it by default in Kvrocks 3.0.",unstable,True,False,13,server.cc,cc,29,13,42
9ecf5c7dbc7013f7ec1c08fb1f990bc63fc9a841,wangyuan21@baidu.com,2022-05-24 10:53:46+08:00,noreply@github.com,2022-05-24 10:53:46+08:00,"PSYNC based on Unique Replication Sequence ID (#538)

### Background
Currently, master only checks sequence number when replica asks for PSYNC,
that is not enough since they may have different replication history even
the replica asking sequence is in the range of the master current WAL.

A bug report in #462

PS: Master check also DB name before checking sequence number, but it is
also not enough since it is setting in conf, and don't change when role is
changed.
 
### Solution
We design 'PSYNC based on Unique Replication Sequence ID', we add unique
replication id for every write batch (the operation of each command on the
storage engine), so the combination of replication id and sequence is unique
for write batch. The master can identify whether the replica has the same
replication history by checking replication id and sequence. 
Like Redis, replicas can partially resynchronize with new master if old
master is failed and new selected master has largest offset, and replicas
can also partially resynchronize with master after restarting if the replicas'
conf file has the its origin master.

Unique replication id will be changed when replicas become master.

By default, it is not enabled since this stricter check may easily lead to
full synchronization. You should enable it if you want to data correctness,
maybe we enable it by default in Kvrocks 3.0.",unstable,True,False,13,server.h,h,29,1,30
9ecf5c7dbc7013f7ec1c08fb1f990bc63fc9a841,wangyuan21@baidu.com,2022-05-24 10:53:46+08:00,noreply@github.com,2022-05-24 10:53:46+08:00,"PSYNC based on Unique Replication Sequence ID (#538)

### Background
Currently, master only checks sequence number when replica asks for PSYNC,
that is not enough since they may have different replication history even
the replica asking sequence is in the range of the master current WAL.

A bug report in #462

PS: Master check also DB name before checking sequence number, but it is
also not enough since it is setting in conf, and don't change when role is
changed.
 
### Solution
We design 'PSYNC based on Unique Replication Sequence ID', we add unique
replication id for every write batch (the operation of each command on the
storage engine), so the combination of replication id and sequence is unique
for write batch. The master can identify whether the replica has the same
replication history by checking replication id and sequence. 
Like Redis, replicas can partially resynchronize with new master if old
master is failed and new selected master has largest offset, and replicas
can also partially resynchronize with master after restarting if the replicas'
conf file has the its origin master.

Unique replication id will be changed when replicas become master.

By default, it is not enabled since this stricter check may easily lead to
full synchronization. You should enable it if you want to data correctness,
maybe we enable it by default in Kvrocks 3.0.",unstable,True,False,13,storage.cc,cc,110,9,119
9ecf5c7dbc7013f7ec1c08fb1f990bc63fc9a841,wangyuan21@baidu.com,2022-05-24 10:53:46+08:00,noreply@github.com,2022-05-24 10:53:46+08:00,"PSYNC based on Unique Replication Sequence ID (#538)

### Background
Currently, master only checks sequence number when replica asks for PSYNC,
that is not enough since they may have different replication history even
the replica asking sequence is in the range of the master current WAL.

A bug report in #462

PS: Master check also DB name before checking sequence number, but it is
also not enough since it is setting in conf, and don't change when role is
changed.
 
### Solution
We design 'PSYNC based on Unique Replication Sequence ID', we add unique
replication id for every write batch (the operation of each command on the
storage engine), so the combination of replication id and sequence is unique
for write batch. The master can identify whether the replica has the same
replication history by checking replication id and sequence. 
Like Redis, replicas can partially resynchronize with new master if old
master is failed and new selected master has largest offset, and replicas
can also partially resynchronize with master after restarting if the replicas'
conf file has the its origin master.

Unique replication id will be changed when replicas become master.

By default, it is not enabled since this stricter check may easily lead to
full synchronization. You should enable it if you want to data correctness,
maybe we enable it by default in Kvrocks 3.0.",unstable,True,False,13,storage.h,h,9,1,10
9ecf5c7dbc7013f7ec1c08fb1f990bc63fc9a841,wangyuan21@baidu.com,2022-05-24 10:53:46+08:00,noreply@github.com,2022-05-24 10:53:46+08:00,"PSYNC based on Unique Replication Sequence ID (#538)

### Background
Currently, master only checks sequence number when replica asks for PSYNC,
that is not enough since they may have different replication history even
the replica asking sequence is in the range of the master current WAL.

A bug report in #462

PS: Master check also DB name before checking sequence number, but it is
also not enough since it is setting in conf, and don't change when role is
changed.
 
### Solution
We design 'PSYNC based on Unique Replication Sequence ID', we add unique
replication id for every write batch (the operation of each command on the
storage engine), so the combination of replication id and sequence is unique
for write batch. The master can identify whether the replica has the same
replication history by checking replication id and sequence. 
Like Redis, replicas can partially resynchronize with new master if old
master is failed and new selected master has largest offset, and replicas
can also partially resynchronize with master after restarting if the replicas'
conf file has the its origin master.

Unique replication id will be changed when replicas become master.

By default, it is not enabled since this stricter check may easily lead to
full synchronization. You should enable it if you want to data correctness,
maybe we enable it by default in Kvrocks 3.0.",unstable,True,False,13,rsid_psync.tcl,tcl,122,0,122
9ecf5c7dbc7013f7ec1c08fb1f990bc63fc9a841,wangyuan21@baidu.com,2022-05-24 10:53:46+08:00,noreply@github.com,2022-05-24 10:53:46+08:00,"PSYNC based on Unique Replication Sequence ID (#538)

### Background
Currently, master only checks sequence number when replica asks for PSYNC,
that is not enough since they may have different replication history even
the replica asking sequence is in the range of the master current WAL.

A bug report in #462

PS: Master check also DB name before checking sequence number, but it is
also not enough since it is setting in conf, and don't change when role is
changed.
 
### Solution
We design 'PSYNC based on Unique Replication Sequence ID', we add unique
replication id for every write batch (the operation of each command on the
storage engine), so the combination of replication id and sequence is unique
for write batch. The master can identify whether the replica has the same
replication history by checking replication id and sequence. 
Like Redis, replicas can partially resynchronize with new master if old
master is failed and new selected master has largest offset, and replicas
can also partially resynchronize with master after restarting if the replicas'
conf file has the its origin master.

Unique replication id will be changed when replicas become master.

By default, it is not enabled since this stricter check may easily lead to
full synchronization. You should enable it if you want to data correctness,
maybe we enable it by default in Kvrocks 3.0.",unstable,True,False,13,test_helper.tcl,tcl,1,0,1
62e0de996f29376badd2787771b65ab50367731f,i@twice.moe,2022-05-24 15:57:04+08:00,noreply@github.com,2022-05-24 15:57:04+08:00,unittests: fix leaks reported by ASan (#605),unstable,True,False,2,util.h,h,9,0,9
62e0de996f29376badd2787771b65ab50367731f,i@twice.moe,2022-05-24 15:57:04+08:00,noreply@github.com,2022-05-24 15:57:04+08:00,unittests: fix leaks reported by ASan (#605),unstable,True,False,2,compact_test.cc,cc,14,11,25
98e1e7949443a3ddc9194ef4fad0d6821f0b8c5e,hulk.website@gmail.com,2022-05-25 16:10:41+08:00,noreply@github.com,2022-05-25 16:10:41+08:00,"Fix the slave may crash when restoring the db (#606)

The db pointer was forbidden to use when restoring the db, but we
didn't check the loading status in `recordInstantaneousMetrics`
in the server's cron thread. We can skip all the cron operations
when restoring the db instead of checking status one by one.",unstable,True,False,1,server.cc,cc,12,5,17
834a164f53a3f342447346bb150df961f20e38a2,torwigua@gmail.com,2022-05-25 12:48:37+03:00,noreply@github.com,2022-05-25 17:48:37+08:00,"LPOP/RPOP support pop multi elements (#594)

Before this commit, LPOP/RPOP of kvrocks only support pop one element once,
now, like redis, LPOP/RPOP support 'count' parameter to pop multi elements.",unstable,True,False,5,redis_cmd.cc,cc,48,11,59
834a164f53a3f342447346bb150df961f20e38a2,torwigua@gmail.com,2022-05-25 12:48:37+03:00,noreply@github.com,2022-05-25 17:48:37+08:00,"LPOP/RPOP support pop multi elements (#594)

Before this commit, LPOP/RPOP of kvrocks only support pop one element once,
now, like redis, LPOP/RPOP support 'count' parameter to pop multi elements.",unstable,True,False,5,redis_list.cc,cc,37,16,53
834a164f53a3f342447346bb150df961f20e38a2,torwigua@gmail.com,2022-05-25 12:48:37+03:00,noreply@github.com,2022-05-25 17:48:37+08:00,"LPOP/RPOP support pop multi elements (#594)

Before this commit, LPOP/RPOP of kvrocks only support pop one element once,
now, like redis, LPOP/RPOP support 'count' parameter to pop multi elements.",unstable,True,False,5,redis_list.h,h,2,1,3
834a164f53a3f342447346bb150df961f20e38a2,torwigua@gmail.com,2022-05-25 12:48:37+03:00,noreply@github.com,2022-05-25 17:48:37+08:00,"LPOP/RPOP support pop multi elements (#594)

Before this commit, LPOP/RPOP of kvrocks only support pop one element once,
now, like redis, LPOP/RPOP support 'count' parameter to pop multi elements.",unstable,True,False,5,t_list_test.cc,cc,125,15,140
834a164f53a3f342447346bb150df961f20e38a2,torwigua@gmail.com,2022-05-25 12:48:37+03:00,noreply@github.com,2022-05-25 17:48:37+08:00,"LPOP/RPOP support pop multi elements (#594)

Before this commit, LPOP/RPOP of kvrocks only support pop one element once,
now, like redis, LPOP/RPOP support 'count' parameter to pop multi elements.",unstable,True,False,5,list.tcl,tcl,50,0,50
2bde3e8171c5bb48525a3d12c1ecd81ccf583138,i@twice.moe,2022-05-27 16:38:51+08:00,noreply@github.com,2022-05-27 16:38:51+08:00,"Add option processing to forward CMake options, job nums and unittest build switch (#608)",unstable,True,False,2,README.md,md,2,3,5
2bde3e8171c5bb48525a3d12c1ecd81ccf583138,i@twice.moe,2022-05-27 16:38:51+08:00,noreply@github.com,2022-05-27 16:38:51+08:00,"Add option processing to forward CMake options, job nums and unittest build switch (#608)",unstable,True,False,2,build.sh,sh,41,5,46
a3cba6dcace29a88ceb409ed7604fe90faec18c5,hulk.website@gmail.com,2022-05-29 19:07:17+08:00,noreply@github.com,2022-05-29 19:07:17+08:00,"Allow to send logs to stdout/stderr (#613)

Currently, we only supported to send logs to the log file,
but we expected to collect logs through stdout/stderr instead of
the log file when deploying the Kvrocks in the container. We also
upgrade the glog to v0.6.0 since the logs to stdout was supported
after that.",unstable,True,False,4,glog.cmake,cmake,1,1,2
a3cba6dcace29a88ceb409ed7604fe90faec18c5,hulk.website@gmail.com,2022-05-29 19:07:17+08:00,noreply@github.com,2022-05-29 19:07:17+08:00,"Allow to send logs to stdout/stderr (#613)

Currently, we only supported to send logs to the log file,
but we expected to collect logs through stdout/stderr instead of
the log file when deploying the Kvrocks in the container. We also
upgrade the glog to v0.6.0 since the logs to stdout was supported
after that.",unstable,True,False,4,snappy.cmake,cmake,1,0,1
a3cba6dcace29a88ceb409ed7604fe90faec18c5,hulk.website@gmail.com,2022-05-29 19:07:17+08:00,noreply@github.com,2022-05-29 19:07:17+08:00,"Allow to send logs to stdout/stderr (#613)

Currently, we only supported to send logs to the log file,
but we expected to collect logs through stdout/stderr instead of
the log file when deploying the Kvrocks in the container. We also
upgrade the glog to v0.6.0 since the logs to stdout was supported
after that.",unstable,True,False,4,kvrocks.conf,conf,5,4,9
a3cba6dcace29a88ceb409ed7604fe90faec18c5,hulk.website@gmail.com,2022-05-29 19:07:17+08:00,noreply@github.com,2022-05-29 19:07:17+08:00,"Allow to send logs to stdout/stderr (#613)

Currently, we only supported to send logs to the log file,
but we expected to collect logs through stdout/stderr instead of
the log file when deploying the Kvrocks in the container. We also
upgrade the glog to v0.6.0 since the logs to stdout was supported
after that.",unstable,True,False,4,main.cc,cc,10,1,11
a4e52edc5e802f7f0ab5a8a1933fa711f5e88f1c,i@eventloop.live,2022-05-31 11:29:35+08:00,noreply@github.com,2022-05-31 11:29:35+08:00,Update blob_file_size unit MiB to bytes. (#611),unstable,True,False,4,kvrocks.conf,conf,2,2,4
a4e52edc5e802f7f0ab5a8a1933fa711f5e88f1c,i@eventloop.live,2022-05-31 11:29:35+08:00,noreply@github.com,2022-05-31 11:29:35+08:00,Update blob_file_size unit MiB to bytes. (#611),unstable,True,False,4,config.cc,cc,2,2,4
a4e52edc5e802f7f0ab5a8a1933fa711f5e88f1c,i@eventloop.live,2022-05-31 11:29:35+08:00,noreply@github.com,2022-05-31 11:29:35+08:00,Update blob_file_size unit MiB to bytes. (#611),unstable,True,False,4,storage.cc,cc,1,1,2
a4e52edc5e802f7f0ab5a8a1933fa711f5e88f1c,i@eventloop.live,2022-05-31 11:29:35+08:00,noreply@github.com,2022-05-31 11:29:35+08:00,Update blob_file_size unit MiB to bytes. (#611),unstable,True,False,4,config_test.cc,cc,1,1,2
b9f7863abc3d15f5a489c7c210eb83712c3cf05e,i@twice.moe,2022-06-01 12:45:37+08:00,noreply@github.com,2022-06-01 12:45:37+08:00,"Compile lua by C++ compilers to avoid memory leaks (#614)

As mentioned in issue #609, the lua_error will use the longjump internal
and ignore the C++ destructor if we built with c mode. This would break
the RAII mode and cause memory leak, so we workaround this issue by
building with the c++ compiler.",unstable,True,False,5,kvrocks.yaml,yaml,1,1,2
b9f7863abc3d15f5a489c7c210eb83712c3cf05e,i@twice.moe,2022-06-01 12:45:37+08:00,noreply@github.com,2022-06-01 12:45:37+08:00,"Compile lua by C++ compilers to avoid memory leaks (#614)

As mentioned in issue #609, the lua_error will use the longjump internal
and ignore the C++ destructor if we built with c mode. This would break
the RAII mode and cause memory leak, so we workaround this issue by
building with the c++ compiler.",unstable,True,False,5,lua.cmake,cmake,7,3,10
b9f7863abc3d15f5a489c7c210eb83712c3cf05e,i@twice.moe,2022-06-01 12:45:37+08:00,noreply@github.com,2022-06-01 12:45:37+08:00,"Compile lua by C++ compilers to avoid memory leaks (#614)

As mentioned in issue #609, the lua_error will use the longjump internal
and ignore the C++ destructor if we built with c mode. This would break
the RAII mode and cause memory leak, so we workaround this issue by
building with the c++ compiler.",unstable,True,False,5,scripting.cc,cc,1,3,4
b9f7863abc3d15f5a489c7c210eb83712c3cf05e,i@twice.moe,2022-06-01 12:45:37+08:00,noreply@github.com,2022-06-01 12:45:37+08:00,"Compile lua by C++ compilers to avoid memory leaks (#614)

As mentioned in issue #609, the lua_error will use the longjump internal
and ignore the C++ destructor if we built with c mode. This would break
the RAII mode and cause memory leak, so we workaround this issue by
building with the c++ compiler.",unstable,True,False,5,scripting.h,h,1,3,4
b9f7863abc3d15f5a489c7c210eb83712c3cf05e,i@twice.moe,2022-06-01 12:45:37+08:00,noreply@github.com,2022-06-01 12:45:37+08:00,"Compile lua by C++ compilers to avoid memory leaks (#614)

As mentioned in issue #609, the lua_error will use the longjump internal
and ignore the C++ destructor if we built with c mode. This would break
the RAII mode and cause memory leak, so we workaround this issue by
building with the c++ compiler.",unstable,True,False,5,server.h,h,0,2,2
7a3d964c40d974f62079e2406ffeaf53327b34e4,i@eventloop.live,2022-06-02 12:35:29+08:00,noreply@github.com,2022-06-02 12:35:29+08:00,Update max_bytes_for_level_base unit to bytes and remove unuseful error checker (#610),unstable,True,False,4,kvrocks.conf,conf,2,2,4
7a3d964c40d974f62079e2406ffeaf53327b34e4,i@eventloop.live,2022-06-02 12:35:29+08:00,noreply@github.com,2022-06-02 12:35:29+08:00,Update max_bytes_for_level_base unit to bytes and remove unuseful error checker (#610),unstable,True,False,4,config.cc,cc,8,11,19
7a3d964c40d974f62079e2406ffeaf53327b34e4,i@eventloop.live,2022-06-02 12:35:29+08:00,noreply@github.com,2022-06-02 12:35:29+08:00,Update max_bytes_for_level_base unit to bytes and remove unuseful error checker (#610),unstable,True,False,4,storage.cc,cc,1,1,2
7a3d964c40d974f62079e2406ffeaf53327b34e4,i@eventloop.live,2022-06-02 12:35:29+08:00,noreply@github.com,2022-06-02 12:35:29+08:00,Update max_bytes_for_level_base unit to bytes and remove unuseful error checker (#610),unstable,True,False,4,config_test.cc,cc,1,1,2
a13465b5306a40ca04e37db02595bee0b36b0192,i@twice.moe,2022-06-02 16:20:33+08:00,noreply@github.com,2022-06-02 16:20:33+08:00,Improve using of ASan and TSan in CMake build (#599),unstable,True,False,2,daily-ci.yaml,yaml,29,0,29
a13465b5306a40ca04e37db02595bee0b36b0192,i@twice.moe,2022-06-02 16:20:33+08:00,noreply@github.com,2022-06-02 16:20:33+08:00,Improve using of ASan and TSan in CMake build (#599),unstable,True,False,2,CMakeLists.txt,txt,18,1,19
5d16b7d690e38965a6d0f7315dbef09289a24c0f,hulk.website@gmail.com,2022-06-02 21:50:13+08:00,noreply@github.com,2022-06-02 21:50:13+08:00,Fix didn't build the unittest target in the daily CI (#617),unstable,True,False,1,daily-ci.yaml,yaml,1,1,2
103b26c51c19597a97a1bdcff60721101d0195d7,wander4096@gmail.com,2022-06-04 10:13:18+08:00,noreply@github.com,2022-06-04 10:13:18+08:00,"Add notification settings to .asf.yaml (#619)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,.asf.yaml,yaml,5,0,5
65778a1f0dab97dcaac01801e41afdfc2cf92691,i@twice.moe,2022-06-04 10:55:46+08:00,noreply@github.com,2022-06-04 10:55:46+08:00,Build static lib for glog (#618),unstable,True,False,2,CMakeLists.txt,txt,2,0,2
65778a1f0dab97dcaac01801e41afdfc2cf92691,i@twice.moe,2022-06-04 10:55:46+08:00,noreply@github.com,2022-06-04 10:55:46+08:00,Build static lib for glog (#618),unstable,True,False,2,glog.cmake,cmake,1,0,1
537ad451d70fc78d041a3659c37b969644229e88,hulk.website@gmail.com,2022-06-06 19:03:04+08:00,noreply@github.com,2022-06-06 19:03:04+08:00,"Fix don't swallow the error when creating column families failed (#620)

We expected to ignore the column families not opened error
opened error, but we ignored all errors without checking the
error type and message. This may cause other errors being ignored
as well.",unstable,True,False,1,storage.cc,cc,13,2,15
badd9d76413ecc290963b3dea34b8df1aa506389,i@twice.moe,2022-06-10 15:09:31+08:00,noreply@github.com,2022-06-10 15:09:31+08:00,CMake: support ninja as a build backend (#626),unstable,True,False,5,daily-ci.yaml,yaml,20,0,20
badd9d76413ecc290963b3dea34b8df1aa506389,i@twice.moe,2022-06-10 15:09:31+08:00,noreply@github.com,2022-06-10 15:09:31+08:00,CMake: support ninja as a build backend (#626),unstable,True,False,5,README.md,md,1,2,3
badd9d76413ecc290963b3dea34b8df1aa506389,i@twice.moe,2022-06-10 15:09:31+08:00,noreply@github.com,2022-06-10 15:09:31+08:00,CMake: support ninja as a build backend (#626),unstable,True,False,5,build.sh,sh,5,3,8
badd9d76413ecc290963b3dea34b8df1aa506389,i@twice.moe,2022-06-10 15:09:31+08:00,noreply@github.com,2022-06-10 15:09:31+08:00,CMake: support ninja as a build backend (#626),unstable,True,False,5,jemalloc.cmake,cmake,1,0,1
badd9d76413ecc290963b3dea34b8df1aa506389,i@twice.moe,2022-06-10 15:09:31+08:00,noreply@github.com,2022-06-10 15:09:31+08:00,CMake: support ninja as a build backend (#626),unstable,True,False,5,lua.cmake,cmake,1,0,1
5cf450f13f0245ccd78f81feda10d1967d367857,caipengbo@outlook.com,2022-06-10 15:46:54+08:00,noreply@github.com,2022-06-10 15:46:54+08:00,"Fix RocksDB can't auto resume after disk quota exceeded error (#628)

In #229, the issue where RocksDB could not recover from the no Space background
error was fixed. This problem RocksDB at facebook/rocksdb#8376 has been repaired,
but the issue has not been thoroughly solved, The same problem will still occur
when an EDQUOT Disk Quota Exceeded error is encountered (see the detailed in 
facebook/rocksdb#10134).

RocksDB cannot recover from this problem and must be restarted. This problem is
more likely to occur when kvrocks is deployed in container.

In order to handle all versions of RocksDB, we manually resume DB when we encounter
two retryable io errors: No space left on device and Disk Quota Exceeded.

For the Disk Quota Exceeded error, RocksDB did not expose a friendly interface,
so we did a string match.",unstable,True,False,2,event_listener.cc,cc,21,7,28
5cf450f13f0245ccd78f81feda10d1967d367857,caipengbo@outlook.com,2022-06-10 15:46:54+08:00,noreply@github.com,2022-06-10 15:46:54+08:00,"Fix RocksDB can't auto resume after disk quota exceeded error (#628)

In #229, the issue where RocksDB could not recover from the no Space background
error was fixed. This problem RocksDB at facebook/rocksdb#8376 has been repaired,
but the issue has not been thoroughly solved, The same problem will still occur
when an EDQUOT Disk Quota Exceeded error is encountered (see the detailed in 
facebook/rocksdb#10134).

RocksDB cannot recover from this problem and must be restarted. This problem is
more likely to occur when kvrocks is deployed in container.

In order to handle all versions of RocksDB, we manually resume DB when we encounter
two retryable io errors: No space left on device and Disk Quota Exceeded.

For the Disk Quota Exceeded error, RocksDB did not expose a friendly interface,
so we did a string match.",unstable,True,False,2,server.cc,cc,6,4,10
b1eb17f0228b40244694b308639a8876c90444ba,294843472@qq.com,2022-06-14 19:14:29+08:00,noreply@github.com,2022-06-14 19:14:29+08:00,"Ignore build directory in .gitignore to avoid committing unused build files (#632)

Co-authored-by: jinzewu <jinzewu@tencent.com>",unstable,True,False,1,.gitignore,gitignore,1,1,2
c391953f92fc03b4d22e100a42024a898f3fae47,i@twice.moe,2022-06-17 15:56:25+08:00,noreply@github.com,2022-06-17 15:56:25+08:00,Add `Required`  CI step and `required_status_checks` asfyaml conf (#636),unstable,True,False,2,.asf.yaml,yaml,4,0,4
c391953f92fc03b4d22e100a42024a898f3fae47,i@twice.moe,2022-06-17 15:56:25+08:00,noreply@github.com,2022-06-17 15:56:25+08:00,Add `Required`  CI step and `required_status_checks` asfyaml conf (#636),unstable,True,False,2,kvrocks.yaml,yaml,17,0,17
dd7e78d235d3163316ef5601ba15198f2b320fd0,30525741+jackwener@users.noreply.github.com,2022-06-17 17:10:48+08:00,noreply@github.com,2022-06-17 17:10:48+08:00,typo: fix typo in README (#634),unstable,True,False,1,README.md,md,6,6,12
469c047b10665f9838793f05364f6290c73ee857,wander4096@gmail.com,2022-06-17 18:09:35+08:00,noreply@github.com,2022-06-17 18:09:35+08:00,"bump .asf.yaml (#638)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,.asf.yaml,yaml,9,1,10
a4193eaed40198121aadb8d9ca6f51f91d5aff44,i@twice.moe,2022-06-18 13:42:20+08:00,noreply@github.com,2022-06-18 13:42:20+08:00,"Refactor configuration for kvrocks ci actions using matrix (#635)

- refactor kvrocks ci actions using an unified matrix for different build options and environment
- add clang build in Ubuntu with libstdc++ since it is different than macOS build which uses Apple Clang and libc++
- retrieve `nproc` (`sysctl -n hw.ncpu` in macOS) to specify number of build jobs

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,1,kvrocks.yaml,yaml,65,51,116
19da43373566a3a9c70e10660e8ff9e09d31555e,i@twice.moe,2022-06-19 13:53:49+08:00,noreply@github.com,2022-06-19 13:53:49+08:00,"Refactor daily CI configuration using matrix (#630)

- fix missing ninja binary in ninja build of daily CI
- add `pull_request` trigger for the specific configuration file
- refactor the daily CI using a unified matrix instead of some repeated jobs",unstable,True,False,1,daily-ci.yaml,yaml,70,90,160
98904aec38fc5e73e5d8bffdfca9e89e1b3b3e4b,63535239+fishery86@users.noreply.github.com,2022-06-20 21:08:52+08:00,noreply@github.com,2022-06-20 21:08:52+08:00,"Fix load namespaces from the config file would ignore case-sensitive (#642)

Kvrocks would lower the key string when loading from the config file,
but case sensitive was expected when it's the namespace name.

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,config.cc,cc,9,5,14
d2a970177c9d8852c57a8ab0c6581533d41b343b,twice.mliu@gmail.com,2022-06-21 17:29:13+08:00,noreply@github.com,2022-06-21 17:29:13+08:00,Optimize happy path for constructing Status (#643),unstable,True,False,1,status.h,h,9,4,13
7d51ba54a2913a70720bfd1c2ebfcf87c3058a82,twice.mliu@gmail.com,2022-06-22 19:50:42+08:00,noreply@github.com,2022-06-22 19:50:42+08:00,"Refactor Trim/Split/Split2KV functions in util.h (#644)

In #644, we refactored `Trim`, `Split` and `Split2KV` by replace the output pointer parameter as a return type, optimized some signature to const reference parameters, and added some unit test for these string utils.",unstable,True,False,11,cluster.cc,cc,3,6,9
7d51ba54a2913a70720bfd1c2ebfcf87c3058a82,twice.mliu@gmail.com,2022-06-22 19:50:42+08:00,noreply@github.com,2022-06-22 19:50:42+08:00,"Refactor Trim/Split/Split2KV functions in util.h (#644)

In #644, we refactored `Trim`, `Split` and `Split2KV` by replace the output pointer parameter as a return type, optimized some signature to const reference parameters, and added some unit test for these string utils.",unstable,True,False,11,config.cc,cc,10,18,28
7d51ba54a2913a70720bfd1c2ebfcf87c3058a82,twice.mliu@gmail.com,2022-06-22 19:50:42+08:00,noreply@github.com,2022-06-22 19:50:42+08:00,"Refactor Trim/Split/Split2KV functions in util.h (#644)

In #644, we refactored `Trim`, `Split` and `Split2KV` by replace the output pointer parameter as a return type, optimized some signature to const reference parameters, and added some unit test for these string utils.",unstable,True,False,11,redis_cmd.cc,cc,2,4,6
7d51ba54a2913a70720bfd1c2ebfcf87c3058a82,twice.mliu@gmail.com,2022-06-22 19:50:42+08:00,noreply@github.com,2022-06-22 19:50:42+08:00,"Refactor Trim/Split/Split2KV functions in util.h (#644)

In #644, we refactored `Trim`, `Split` and `Split2KV` by replace the output pointer parameter as a return type, optimized some signature to const reference parameters, and added some unit test for these string utils.",unstable,True,False,11,redis_db.cc,cc,1,2,3
7d51ba54a2913a70720bfd1c2ebfcf87c3058a82,twice.mliu@gmail.com,2022-06-22 19:50:42+08:00,noreply@github.com,2022-06-22 19:50:42+08:00,"Refactor Trim/Split/Split2KV functions in util.h (#644)

In #644, we refactored `Trim`, `Split` and `Split2KV` by replace the output pointer parameter as a return type, optimized some signature to const reference parameters, and added some unit test for these string utils.",unstable,True,False,11,redis_request.cc,cc,1,1,2
7d51ba54a2913a70720bfd1c2ebfcf87c3058a82,twice.mliu@gmail.com,2022-06-22 19:50:42+08:00,noreply@github.com,2022-06-22 19:50:42+08:00,"Refactor Trim/Split/Split2KV functions in util.h (#644)

In #644, we refactored `Trim`, `Split` and `Split2KV` by replace the output pointer parameter as a return type, optimized some signature to const reference parameters, and added some unit test for these string utils.",unstable,True,False,11,replication.cc,cc,1,2,3
7d51ba54a2913a70720bfd1c2ebfcf87c3058a82,twice.mliu@gmail.com,2022-06-22 19:50:42+08:00,noreply@github.com,2022-06-22 19:50:42+08:00,"Refactor Trim/Split/Split2KV functions in util.h (#644)

In #644, we refactored `Trim`, `Split` and `Split2KV` by replace the output pointer parameter as a return type, optimized some signature to const reference parameters, and added some unit test for these string utils.",unstable,True,False,11,util.cc,cc,43,31,74
7d51ba54a2913a70720bfd1c2ebfcf87c3058a82,twice.mliu@gmail.com,2022-06-22 19:50:42+08:00,noreply@github.com,2022-06-22 19:50:42+08:00,"Refactor Trim/Split/Split2KV functions in util.h (#644)

In #644, we refactored `Trim`, `Split` and `Split2KV` by replace the output pointer parameter as a return type, optimized some signature to const reference parameters, and added some unit test for these string utils.",unstable,True,False,11,util.h,h,7,31,38
7d51ba54a2913a70720bfd1c2ebfcf87c3058a82,twice.mliu@gmail.com,2022-06-22 19:50:42+08:00,noreply@github.com,2022-06-22 19:50:42+08:00,"Refactor Trim/Split/Split2KV functions in util.h (#644)

In #644, we refactored `Trim`, `Split` and `Split2KV` by replace the output pointer parameter as a return type, optimized some signature to const reference parameters, and added some unit test for these string utils.",unstable,True,False,11,cluster_test.cc,cc,2,4,6
7d51ba54a2913a70720bfd1c2ebfcf87c3058a82,twice.mliu@gmail.com,2022-06-22 19:50:42+08:00,noreply@github.com,2022-06-22 19:50:42+08:00,"Refactor Trim/Split/Split2KV functions in util.h (#644)

In #644, we refactored `Trim`, `Split` and `Split2KV` by replace the output pointer parameter as a return type, optimized some signature to const reference parameters, and added some unit test for these string utils.",unstable,True,False,11,string_util_test.cc,cc,13,8,21
7d51ba54a2913a70720bfd1c2ebfcf87c3058a82,twice.mliu@gmail.com,2022-06-22 19:50:42+08:00,noreply@github.com,2022-06-22 19:50:42+08:00,"Refactor Trim/Split/Split2KV functions in util.h (#644)

In #644, we refactored `Trim`, `Split` and `Split2KV` by replace the output pointer parameter as a return type, optimized some signature to const reference parameters, and added some unit test for these string utils.",unstable,True,False,11,config.cc,cc,1,2,3
76e63553f2332356eef4aec993ef3f0045f83642,twice.mliu@gmail.com,2022-06-22 21:27:47+08:00,noreply@github.com,2022-06-22 21:27:47+08:00,"Fix unmatched iterator in Cluster::SetClusterNodes (#646)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,1,cluster.cc,cc,1,1,2
c790a7a191ed863a67bb8b52fba4d8e6a9c0f282,30525741+jackwener@users.noreply.github.com,2022-06-23 10:26:00+08:00,noreply@github.com,2022-06-23 10:26:00+08:00,Polish README.md (#648),unstable,True,False,1,README.md,md,15,10,25
c7299353d64ae988a44634791b229827c7e4e19b,twice.mliu@gmail.com,2022-06-23 10:45:52+08:00,noreply@github.com,2022-06-23 10:45:52+08:00,add __builtin_unreachable to raiseError to make compiler happy (#651),unstable,True,False,1,scripting.cc,cc,2,1,3
d42f02969636c5006112147df7041d3b391b27b5,52393536+xiaobiaozhao@users.noreply.github.com,2022-06-23 19:19:20+08:00,noreply@github.com,2022-06-23 19:19:20+08:00,"Support  to use lz4 compression in RocksDB(#584)

RocksDB supported many compression libraries(like snappy/lz4/zstd...) to compress the user data,
but static linked all was not a good idea since it will import too many dependencies. With this concern,
Kvrocks supported snappy only before this PR and found the LZ4 performances better in many scenarios,
so decided to introduce the it now to make users happy.

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,CMakeLists.txt,txt,6,4,10
d42f02969636c5006112147df7041d3b391b27b5,52393536+xiaobiaozhao@users.noreply.github.com,2022-06-23 19:19:20+08:00,noreply@github.com,2022-06-23 19:19:20+08:00,"Support  to use lz4 compression in RocksDB(#584)

RocksDB supported many compression libraries(like snappy/lz4/zstd...) to compress the user data,
but static linked all was not a good idea since it will import too many dependencies. With this concern,
Kvrocks supported snappy only before this PR and found the LZ4 performances better in many scenarios,
so decided to introduce the it now to make users happy.

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,lz4.cmake,cmake,37,0,37
d42f02969636c5006112147df7041d3b391b27b5,52393536+xiaobiaozhao@users.noreply.github.com,2022-06-23 19:19:20+08:00,noreply@github.com,2022-06-23 19:19:20+08:00,"Support  to use lz4 compression in RocksDB(#584)

RocksDB supported many compression libraries(like snappy/lz4/zstd...) to compress the user data,
but static linked all was not a good idea since it will import too many dependencies. With this concern,
Kvrocks supported snappy only before this PR and found the LZ4 performances better in many scenarios,
so decided to introduce the it now to make users happy.

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,rocksdb.cmake,cmake,4,0,4
d42f02969636c5006112147df7041d3b391b27b5,52393536+xiaobiaozhao@users.noreply.github.com,2022-06-23 19:19:20+08:00,noreply@github.com,2022-06-23 19:19:20+08:00,"Support  to use lz4 compression in RocksDB(#584)

RocksDB supported many compression libraries(like snappy/lz4/zstd...) to compress the user data,
but static linked all was not a good idea since it will import too many dependencies. With this concern,
Kvrocks supported snappy only before this PR and found the LZ4 performances better in many scenarios,
so decided to introduce the it now to make users happy.

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,kvrocks.conf,conf,7,7,14
d42f02969636c5006112147df7041d3b391b27b5,52393536+xiaobiaozhao@users.noreply.github.com,2022-06-23 19:19:20+08:00,noreply@github.com,2022-06-23 19:19:20+08:00,"Support  to use lz4 compression in RocksDB(#584)

RocksDB supported many compression libraries(like snappy/lz4/zstd...) to compress the user data,
but static linked all was not a good idea since it will import too many dependencies. With this concern,
Kvrocks supported snappy only before this PR and found the LZ4 performances better in many scenarios,
so decided to introduce the it now to make users happy.

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,config.cc,cc,1,0,1
4f927341f8c91943d8a6fe9b898f5007a9170274,twice.mliu@gmail.com,2022-06-24 07:55:31+08:00,noreply@github.com,2022-06-24 07:55:31+08:00,Set CMAKE_EXPORT_COMPILE_COMMANDS to ON as a default behavior (#649),unstable,True,False,1,CMakeLists.txt,txt,2,0,2
3c5ff59396044d4338483c8ae150359d6c33f843,twice.mliu@gmail.com,2022-06-24 10:15:35+08:00,noreply@github.com,2022-06-24 10:15:35+08:00,Fix lz4 in CMake: support ninja & add Findlz4.cmake (#654),unstable,True,False,3,lz4.cmake,cmake,5,3,8
3c5ff59396044d4338483c8ae150359d6c33f843,twice.mliu@gmail.com,2022-06-24 10:15:35+08:00,noreply@github.com,2022-06-24 10:15:35+08:00,Fix lz4 in CMake: support ninja & add Findlz4.cmake (#654),unstable,True,False,3,Findlz4.cmake,cmake,25,0,25
3c5ff59396044d4338483c8ae150359d6c33f843,twice.mliu@gmail.com,2022-06-24 10:15:35+08:00,noreply@github.com,2022-06-24 10:15:35+08:00,Fix lz4 in CMake: support ninja & add Findlz4.cmake (#654),unstable,True,False,3,rocksdb.cmake,cmake,0,3,3
fc9b3fcf8064f9841cd711ecdb958797cf5ca7a2,twice.mliu@gmail.com,2022-06-24 11:35:15+08:00,noreply@github.com,2022-06-24 11:35:15+08:00,"Add a unique_ptr wrapper for rocksdb::Iterator (#650)

In #650, we added a `unique_ptr` wrapper for `rocksdb::Iterator` to avoid manual deallocation.

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>",unstable,True,False,9,db_util.h,h,40,0,40
fc9b3fcf8064f9841cd711ecdb958797cf5ca7a2,twice.mliu@gmail.com,2022-06-24 11:35:15+08:00,noreply@github.com,2022-06-24 11:35:15+08:00,"Add a unique_ptr wrapper for rocksdb::Iterator (#650)

In #650, we added a `unique_ptr` wrapper for `rocksdb::Iterator` to avoid manual deallocation.

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>",unstable,True,False,9,redis_bitmap.cc,cc,2,2,4
fc9b3fcf8064f9841cd711ecdb958797cf5ca7a2,twice.mliu@gmail.com,2022-06-24 11:35:15+08:00,noreply@github.com,2022-06-24 11:35:15+08:00,"Add a unique_ptr wrapper for rocksdb::Iterator (#650)

In #650, we added a `unique_ptr` wrapper for `rocksdb::Iterator` to avoid manual deallocation.

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>",unstable,True,False,9,redis_db.cc,cc,7,15,22
fc9b3fcf8064f9841cd711ecdb958797cf5ca7a2,twice.mliu@gmail.com,2022-06-24 11:35:15+08:00,noreply@github.com,2022-06-24 11:35:15+08:00,"Add a unique_ptr wrapper for rocksdb::Iterator (#650)

In #650, we added a `unique_ptr` wrapper for `rocksdb::Iterator` to avoid manual deallocation.

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>",unstable,True,False,9,redis_hash.cc,cc,2,2,4
fc9b3fcf8064f9841cd711ecdb958797cf5ca7a2,twice.mliu@gmail.com,2022-06-24 11:35:15+08:00,noreply@github.com,2022-06-24 11:35:15+08:00,"Add a unique_ptr wrapper for rocksdb::Iterator (#650)

In #650, we added a `unique_ptr` wrapper for `rocksdb::Iterator` to avoid manual deallocation.

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>",unstable,True,False,9,redis_list.cc,cc,5,8,13
fc9b3fcf8064f9841cd711ecdb958797cf5ca7a2,twice.mliu@gmail.com,2022-06-24 11:35:15+08:00,noreply@github.com,2022-06-24 11:35:15+08:00,"Add a unique_ptr wrapper for rocksdb::Iterator (#650)

In #650, we added a `unique_ptr` wrapper for `rocksdb::Iterator` to avoid manual deallocation.

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>",unstable,True,False,9,redis_set.cc,cc,4,4,8
fc9b3fcf8064f9841cd711ecdb958797cf5ca7a2,twice.mliu@gmail.com,2022-06-24 11:35:15+08:00,noreply@github.com,2022-06-24 11:35:15+08:00,"Add a unique_ptr wrapper for rocksdb::Iterator (#650)

In #650, we added a `unique_ptr` wrapper for `rocksdb::Iterator` to avoid manual deallocation.

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>",unstable,True,False,9,redis_sortedint.cc,cc,4,4,8
fc9b3fcf8064f9841cd711ecdb958797cf5ca7a2,twice.mliu@gmail.com,2022-06-24 11:35:15+08:00,noreply@github.com,2022-06-24 11:35:15+08:00,"Add a unique_ptr wrapper for rocksdb::Iterator (#650)

In #650, we added a `unique_ptr` wrapper for `rocksdb::Iterator` to avoid manual deallocation.

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>",unstable,True,False,9,redis_zset.cc,cc,8,10,18
fc9b3fcf8064f9841cd711ecdb958797cf5ca7a2,twice.mliu@gmail.com,2022-06-24 11:35:15+08:00,noreply@github.com,2022-06-24 11:35:15+08:00,"Add a unique_ptr wrapper for rocksdb::Iterator (#650)

In #650, we added a `unique_ptr` wrapper for `rocksdb::Iterator` to avoid manual deallocation.

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>",unstable,True,False,9,util.h,h,1,1,2
7976e562362ed81a35e684a216c09784febff14e,30525741+jackwener@users.noreply.github.com,2022-06-24 11:59:51+08:00,noreply@github.com,2022-06-24 11:59:51+08:00,"Fix compile warnings in kvrocks (#653)

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,.gitignore,gitignore,8,6,14
7976e562362ed81a35e684a216c09784febff14e,30525741+jackwener@users.noreply.github.com,2022-06-24 11:59:51+08:00,noreply@github.com,2022-06-24 11:59:51+08:00,"Fix compile warnings in kvrocks (#653)

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,config.cc,cc,1,1,2
7976e562362ed81a35e684a216c09784febff14e,30525741+jackwener@users.noreply.github.com,2022-06-24 11:59:51+08:00,noreply@github.com,2022-06-24 11:59:51+08:00,"Fix compile warnings in kvrocks (#653)

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,redis_zset.cc,cc,1,1,2
7976e562362ed81a35e684a216c09784febff14e,30525741+jackwener@users.noreply.github.com,2022-06-24 11:59:51+08:00,noreply@github.com,2022-06-24 11:59:51+08:00,"Fix compile warnings in kvrocks (#653)

Co-authored-by: Wang Yuan <wangyuan21@baidu.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,t_list_test.cc,cc,1,1,2
0fe4f0981fba053e87243ddbba68002825139c26,wander4096@gmail.com,2022-06-24 18:20:07+08:00,noreply@github.com,2022-06-24 18:20:07+08:00,"Update badges (#659)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,README.md,md,5,1,6
e910200dd43427a1b2d1fa4f31a6975734a069b2,41932662+willshS@users.noreply.github.com,2022-06-24 18:52:25+08:00,noreply@github.com,2022-06-24 18:52:25+08:00,Fix Wrongly parsed the RESP empty/null array (#652),unstable,True,False,3,redis_request.cc,cc,7,2,9
e910200dd43427a1b2d1fa4f31a6975734a069b2,41932662+willshS@users.noreply.github.com,2022-06-24 18:52:25+08:00,noreply@github.com,2022-06-24 18:52:25+08:00,Fix Wrongly parsed the RESP empty/null array (#652),unstable,True,False,3,redis_request.h,h,1,1,2
e910200dd43427a1b2d1fa4f31a6975734a069b2,41932662+willshS@users.noreply.github.com,2022-06-24 18:52:25+08:00,noreply@github.com,2022-06-24 18:52:25+08:00,Fix Wrongly parsed the RESP empty/null array (#652),unstable,True,False,3,protocol.tcl,tcl,7,0,7
9544858ecf5fd5daa29f84c7133ed45ca7bd81c1,hulk.website@gmail.com,2022-06-25 10:41:04+08:00,noreply@github.com,2022-06-25 10:41:04+08:00,"Fix the role command can't be used when loading data (#661)

Currently, Kvrocks forbid to use the DB pointer when loading data,
so we add ok-loading to exclude those commands that do NOT use the DB pointer.
But we forgot to add ok-loading to the role command which is using by the replication test case: tests/integration/replication.tcl#L254, and it got error when restoring the backup.",unstable,True,False,1,redis_cmd.cc,cc,1,1,2
ad6dbba1aac666897857fb23239d31ec53dc3e1a,wander4096@gmail.com,2022-06-25 12:59:32+08:00,noreply@github.com,2022-06-25 12:59:32+08:00,"fix: replication tests should wait for server restarted (#660)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,3,server.cc,cc,2,0,2
ad6dbba1aac666897857fb23239d31ec53dc3e1a,wander4096@gmail.com,2022-06-25 12:59:32+08:00,noreply@github.com,2022-06-25 12:59:32+08:00,"fix: replication tests should wait for server restarted (#660)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,3,server.tcl,tcl,20,21,41
ad6dbba1aac666897857fb23239d31ec53dc3e1a,wander4096@gmail.com,2022-06-25 12:59:32+08:00,noreply@github.com,2022-06-25 12:59:32+08:00,"fix: replication tests should wait for server restarted (#660)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,3,util.tcl,tcl,7,3,10
6bf7a2ed7fc0578a1c23c385f42457bdd27bf49b,github@xuanwo.io,2022-06-25 14:09:29+08:00,noreply@github.com,2022-06-25 14:09:29+08:00,"ci: Cancel previous workflows on the same ref (#667)

Signed-off-by: Xuanwo <github@xuanwo.io>",unstable,True,False,1,kvrocks.yaml,yaml,13,6,19
2a86ad1642d6c352a1ddf491877937fe3154f68c,hulk.website@gmail.com,2022-06-25 15:42:51+08:00,noreply@github.com,2022-06-25 15:42:51+08:00,Wait for migrating status finished to prevent test case failure (#666),unstable,True,False,1,slotmigrate.tcl,tcl,10,10,20
dde438f04c577050e299cce981a17018f056c3b3,hulk.website@gmail.com,2022-06-25 22:12:39+08:00,noreply@github.com,2022-06-25 22:12:39+08:00,"Fix typos in config file (#669)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,1,kvrocks.conf,conf,41,40,81
dd25baf3fbf145a17fcb63158f5166e78ee19e6d,twice.mliu@gmail.com,2022-06-26 09:26:50+08:00,noreply@github.com,2022-06-26 09:26:50+08:00,Add some RAII type for evbuffer to avoid manual free (#645),unstable,True,False,8,kvrocks.yaml,yaml,1,1,2
dd25baf3fbf145a17fcb63158f5166e78ee19e6d,twice.mliu@gmail.com,2022-06-26 09:26:50+08:00,noreply@github.com,2022-06-26 09:26:50+08:00,Add some RAII type for evbuffer to avoid manual free (#645),unstable,True,False,8,cppcheck.sh,sh,8,2,10
dd25baf3fbf145a17fcb63158f5166e78ee19e6d,twice.mliu@gmail.com,2022-06-26 09:26:50+08:00,noreply@github.com,2022-06-26 09:26:50+08:00,Add some RAII type for evbuffer to avoid manual free (#645),unstable,True,False,8,event_util.h,h,59,0,59
dd25baf3fbf145a17fcb63158f5166e78ee19e6d,twice.mliu@gmail.com,2022-06-26 09:26:50+08:00,noreply@github.com,2022-06-26 09:26:50+08:00,Add some RAII type for evbuffer to avoid manual free (#645),unstable,True,False,8,redis_request.cc,cc,15,24,39
dd25baf3fbf145a17fcb63158f5166e78ee19e6d,twice.mliu@gmail.com,2022-06-26 09:26:50+08:00,noreply@github.com,2022-06-26 09:26:50+08:00,Add some RAII type for evbuffer to avoid manual free (#645),unstable,True,False,8,replication.cc,cc,48,84,132
dd25baf3fbf145a17fcb63158f5166e78ee19e6d,twice.mliu@gmail.com,2022-06-26 09:26:50+08:00,noreply@github.com,2022-06-26 09:26:50+08:00,Add some RAII type for evbuffer to avoid manual free (#645),unstable,True,False,8,slot_migrate.cc,cc,11,16,27
dd25baf3fbf145a17fcb63158f5166e78ee19e6d,twice.mliu@gmail.com,2022-06-26 09:26:50+08:00,noreply@github.com,2022-06-26 09:26:50+08:00,Add some RAII type for evbuffer to avoid manual free (#645),unstable,True,False,8,storage.cc,cc,18,24,42
dd25baf3fbf145a17fcb63158f5166e78ee19e6d,twice.mliu@gmail.com,2022-06-26 09:26:50+08:00,noreply@github.com,2022-06-26 09:26:50+08:00,Add some RAII type for evbuffer to avoid manual free (#645),unstable,True,False,8,util.cc,cc,5,10,15
ecf95c992bced0bbe5e6827eb873809c3947e205,caipengbo@outlook.com,2022-06-26 20:50:54+08:00,noreply@github.com,2022-06-26 20:50:54+08:00,Fix get rocksdb ops tcl test case (#668),unstable,True,False,1,command.tcl,tcl,9,11,20
83aaf058a48fe70dd15bf76376cdaf64323759cb,zjsariel@gmail.com,2022-06-26 22:41:46+08:00,noreply@github.com,2022-06-26 22:41:46+08:00,"Use unique_ptr in src/server.h (#673)

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,cppcheck.sh,sh,1,1,2
83aaf058a48fe70dd15bf76376cdaf64323759cb,zjsariel@gmail.com,2022-06-26 22:41:46+08:00,noreply@github.com,2022-06-26 22:41:46+08:00,"Use unique_ptr in src/server.h (#673)

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,server.cc,cc,3,3,6
83aaf058a48fe70dd15bf76376cdaf64323759cb,zjsariel@gmail.com,2022-06-26 22:41:46+08:00,noreply@github.com,2022-06-26 22:41:46+08:00,"Use unique_ptr in src/server.h (#673)

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,server.h,h,2,2,4
df4a548789a2aa1ef58aaaa47e1d0f7b132e2522,30525741+jackwener@users.noreply.github.com,2022-06-26 23:16:26+08:00,noreply@github.com,2022-06-26 23:16:26+08:00,"Use unique_ptr in Config (#672)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,2,config.cc,cc,12,14,26
df4a548789a2aa1ef58aaaa47e1d0f7b132e2522,30525741+jackwener@users.noreply.github.com,2022-06-26 23:16:26+08:00,noreply@github.com,2022-06-26 23:16:26+08:00,"Use unique_ptr in Config (#672)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,2,config.h,h,5,4,9
143a99d9044fb72bafc0088b516dc13df401e211,zjsariel@gmail.com,2022-06-27 08:28:04+08:00,noreply@github.com,2022-06-27 08:28:04+08:00,"use unique_ptr in parser (#678)

Signed-off-by: Jian Zhang <zjsariel@gmail.com>",unstable,True,False,2,parser.cc,cc,1,1,2
143a99d9044fb72bafc0088b516dc13df401e211,zjsariel@gmail.com,2022-06-27 08:28:04+08:00,noreply@github.com,2022-06-27 08:28:04+08:00,"use unique_ptr in parser (#678)

Signed-off-by: Jian Zhang <zjsariel@gmail.com>",unstable,True,False,2,parser.h,h,4,6,10
5c4b4120150ae53e915f5d830c4e77e13944fa84,wander4096@gmail.com,2022-06-27 10:16:00+08:00,noreply@github.com,2022-06-27 10:16:00+08:00,"chore: move cpp unit tests files to a dedicated folder (#679)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,22,CMakeLists.txt,txt,1,1,2
5a4aa2e686e43750a59cc4f5906190e7cc9a18d7,wangyuan21@baidu.com,2022-06-28 20:44:26+08:00,noreply@github.com,2022-06-28 20:44:26+08:00,Fix some time dependencies in replication.tcl (#688),unstable,True,False,1,replication.tcl,tcl,12,14,26
a25faa1f10eff4a40843ecdeca1b3cdbf60328ed,wangyuan21@baidu.com,2022-06-28 21:13:04+08:00,noreply@github.com,2022-06-28 21:13:04+08:00,"Use lock guard for zremrangebylex command (#686)

zremrangebylex command will change the zset data without lock guard,
this may cause zset data error.",unstable,True,False,1,redis_zset.cc,cc,5,0,5
ef7cd2149cfb70c88e1a818608fabb1d72faa740,294843472@qq.com,2022-06-28 22:06:08+08:00,noreply@github.com,2022-06-28 22:06:08+08:00,"Use unique_ptr in SlotMigrate and FeedSlaveThread (#682)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,replication.cc,cc,0,4,4
ef7cd2149cfb70c88e1a818608fabb1d72faa740,294843472@qq.com,2022-06-28 22:06:08+08:00,noreply@github.com,2022-06-28 22:06:08+08:00,"Use unique_ptr in SlotMigrate and FeedSlaveThread (#682)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,replication.h,h,3,3,6
ef7cd2149cfb70c88e1a818608fabb1d72faa740,294843472@qq.com,2022-06-28 22:06:08+08:00,noreply@github.com,2022-06-28 22:06:08+08:00,"Use unique_ptr in SlotMigrate and FeedSlaveThread (#682)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,slot_migrate.cc,cc,11,7,18
ef7cd2149cfb70c88e1a818608fabb1d72faa740,294843472@qq.com,2022-06-28 22:06:08+08:00,noreply@github.com,2022-06-28 22:06:08+08:00,"Use unique_ptr in SlotMigrate and FeedSlaveThread (#682)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,slot_migrate.h,h,1,1,2
5559e34718d5339ff7884bc9d17785977442b064,twice.mliu@gmail.com,2022-06-28 23:35:33+08:00,noreply@github.com,2022-06-28 23:35:33+08:00,Support GitHub mirrors in CMake build configurations (#685),unstable,True,False,12,CMakeLists.txt,txt,4,0,4
5559e34718d5339ff7884bc9d17785977442b064,twice.mliu@gmail.com,2022-06-28 23:35:33+08:00,noreply@github.com,2022-06-28 23:35:33+08:00,Support GitHub mirrors in CMake build configurations (#685),unstable,True,False,12,README.md,md,6,3,9
5559e34718d5339ff7884bc9d17785977442b064,twice.mliu@gmail.com,2022-06-28 23:35:33+08:00,noreply@github.com,2022-06-28 23:35:33+08:00,Support GitHub mirrors in CMake build configurations (#685),unstable,True,False,12,build.sh,sh,3,1,4
5559e34718d5339ff7884bc9d17785977442b064,twice.mliu@gmail.com,2022-06-28 23:35:33+08:00,noreply@github.com,2022-06-28 23:35:33+08:00,Support GitHub mirrors in CMake build configurations (#685),unstable,True,False,12,glog.cmake,cmake,4,6,10
5559e34718d5339ff7884bc9d17785977442b064,twice.mliu@gmail.com,2022-06-28 23:35:33+08:00,noreply@github.com,2022-06-28 23:35:33+08:00,Support GitHub mirrors in CMake build configurations (#685),unstable,True,False,12,gtest.cmake,cmake,4,6,10
5559e34718d5339ff7884bc9d17785977442b064,twice.mliu@gmail.com,2022-06-28 23:35:33+08:00,noreply@github.com,2022-06-28 23:35:33+08:00,Support GitHub mirrors in CMake build configurations (#685),unstable,True,False,12,jemalloc.cmake,cmake,4,4,8
5559e34718d5339ff7884bc9d17785977442b064,twice.mliu@gmail.com,2022-06-28 23:35:33+08:00,noreply@github.com,2022-06-28 23:35:33+08:00,Support GitHub mirrors in CMake build configurations (#685),unstable,True,False,12,libevent.cmake,cmake,4,6,10
5559e34718d5339ff7884bc9d17785977442b064,twice.mliu@gmail.com,2022-06-28 23:35:33+08:00,noreply@github.com,2022-06-28 23:35:33+08:00,Support GitHub mirrors in CMake build configurations (#685),unstable,True,False,12,lua.cmake,cmake,4,4,8
5559e34718d5339ff7884bc9d17785977442b064,twice.mliu@gmail.com,2022-06-28 23:35:33+08:00,noreply@github.com,2022-06-28 23:35:33+08:00,Support GitHub mirrors in CMake build configurations (#685),unstable,True,False,12,lz4.cmake,cmake,5,5,10
5559e34718d5339ff7884bc9d17785977442b064,twice.mliu@gmail.com,2022-06-28 23:35:33+08:00,noreply@github.com,2022-06-28 23:35:33+08:00,Support GitHub mirrors in CMake build configurations (#685),unstable,True,False,12,rocksdb.cmake,cmake,4,6,10
5559e34718d5339ff7884bc9d17785977442b064,twice.mliu@gmail.com,2022-06-28 23:35:33+08:00,noreply@github.com,2022-06-28 23:35:33+08:00,Support GitHub mirrors in CMake build configurations (#685),unstable,True,False,12,snappy.cmake,cmake,4,6,10
5559e34718d5339ff7884bc9d17785977442b064,twice.mliu@gmail.com,2022-06-28 23:35:33+08:00,noreply@github.com,2022-06-28 23:35:33+08:00,Support GitHub mirrors in CMake build configurations (#685),unstable,True,False,12,utils.cmake,cmake,16,0,16
343c22b5cb46bebc2b3b9e7c45e657d86bdf009f,wander4096@gmail.com,2022-06-29 12:18:30+08:00,noreply@github.com,2022-06-29 12:18:30+08:00,"Forward GitHub Discussions to dev mailing list (#690)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,.asf.yaml,yaml,1,0,1
4b0f135a9936298bd37e6a764dffafaff46fb21e,wander4096@gmail.com,2022-06-29 15:40:49+08:00,noreply@github.com,2022-06-29 15:40:49+08:00,"ci: refactor CI yaml settings (#689)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,daily-ci.yaml,yaml,33,20,53
4b0f135a9936298bd37e6a764dffafaff46fb21e,wander4096@gmail.com,2022-06-29 15:40:49+08:00,noreply@github.com,2022-06-29 15:40:49+08:00,"ci: refactor CI yaml settings (#689)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,kvrocks.yaml,yaml,32,37,69
4b0f135a9936298bd37e6a764dffafaff46fb21e,wander4096@gmail.com,2022-06-29 15:40:49+08:00,noreply@github.com,2022-06-29 15:40:49+08:00,"ci: refactor CI yaml settings (#689)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,test_helper.tcl,tcl,1,0,1
bf3287cad4dee6b6c50f92aaaa2521744325a655,twice.mliu@gmail.com,2022-06-29 23:32:00+08:00,noreply@github.com,2022-06-29 23:32:00+08:00,"Forward C compiler to build deps in CMake (#692)

In this PR, we make sure that those C dependencies with makefiles or automake is compiled by the compiler specified by `CMAKE_C_COMPILER`.",unstable,True,False,3,build.sh,sh,5,1,6
bf3287cad4dee6b6c50f92aaaa2521744325a655,twice.mliu@gmail.com,2022-06-29 23:32:00+08:00,noreply@github.com,2022-06-29 23:32:00+08:00,"Forward C compiler to build deps in CMake (#692)

In this PR, we make sure that those C dependencies with makefiles or automake is compiled by the compiler specified by `CMAKE_C_COMPILER`.",unstable,True,False,3,jemalloc.cmake,cmake,1,1,2
bf3287cad4dee6b6c50f92aaaa2521744325a655,twice.mliu@gmail.com,2022-06-29 23:32:00+08:00,noreply@github.com,2022-06-29 23:32:00+08:00,"Forward C compiler to build deps in CMake (#692)

In this PR, we make sure that those C dependencies with makefiles or automake is compiled by the compiler specified by `CMAKE_C_COMPILER`.",unstable,True,False,3,lz4.cmake,cmake,6,1,7
3d4a3dd70bd00c3164531754be5d645c21fcd9c4,wander4096@gmail.com,2022-06-30 09:38:13+08:00,noreply@github.com,2022-06-30 09:38:13+08:00,"ci: separate daily ci and trigger daily ci only if labeled (#695)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,daily-ci.yaml,yaml,5,96,101
3d4a3dd70bd00c3164531754be5d645c21fcd9c4,wander4096@gmail.com,2022-06-30 09:38:13+08:00,noreply@github.com,2022-06-30 09:38:13+08:00,"ci: separate daily ci and trigger daily ci only if labeled (#695)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,kvrocks.yaml,yaml,36,4,40
5783f02204e0cc00484f4e042b56c0177e6baeec,twice.mliu@gmail.com,2022-06-30 20:27:03+08:00,noreply@github.com,2022-06-30 20:27:03+08:00,"Check sanitizer status for TCL tests in CI (#698)

Currently, TCL tests did not sense sanitizier errors when executed, which make the CI remain successful even some sanitiziers reported errors, and we fixed that in this PR.",unstable,True,False,1,kvrocks.yaml,yaml,10,1,11
b7679b504c6de0ffb8a42dba5e6274890b71b083,wander4096@gmail.com,2022-06-30 23:06:25+08:00,noreply@github.com,2022-06-30 23:06:25+08:00,"Disable require branches to be up-to-date (#700)

As development under Kvrocks grows rapidly, it causes unnecessary reruns for patches due to we require branches to be up to date before merging.

We can disable the option and let the committers decide whether we should merge base branch before accepting the patch.

See also this discussion on general@: https://lists.apache.org/thread/w1tvjxzooyrjso80hdd7y04n2q6k7mxl

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,.asf.yaml,yaml,0,1,1
09921ff6622af9e0a51bcc04ff1aa14aa5812b00,30525741+jackwener@users.noreply.github.com,2022-07-02 15:09:00+08:00,noreply@github.com,2022-07-02 15:09:00+08:00,"chore: Use unique_ptr for WorkerThread#worker  (#703)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,3,server.cc,cc,5,9,14
09921ff6622af9e0a51bcc04ff1aa14aa5812b00,30525741+jackwener@users.noreply.github.com,2022-07-02 15:09:00+08:00,noreply@github.com,2022-07-02 15:09:00+08:00,"chore: Use unique_ptr for WorkerThread#worker  (#703)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,3,server.h,h,1,1,2
09921ff6622af9e0a51bcc04ff1aa14aa5812b00,30525741+jackwener@users.noreply.github.com,2022-07-02 15:09:00+08:00,noreply@github.com,2022-07-02 15:09:00+08:00,"chore: Use unique_ptr for WorkerThread#worker  (#703)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,3,worker.h,h,5,4,9
a9425497790bdba8ab785aa4ad6e7214049584e9,30525741+jackwener@users.noreply.github.com,2022-07-03 13:25:49+08:00,noreply@github.com,2022-07-03 13:25:49+08:00,use the const reference for avoiding copy (#704),unstable,True,False,5,cluster.cc,cc,1,1,2
a9425497790bdba8ab785aa4ad6e7214049584e9,30525741+jackwener@users.noreply.github.com,2022-07-03 13:25:49+08:00,noreply@github.com,2022-07-03 13:25:49+08:00,use the const reference for avoiding copy (#704),unstable,True,False,5,config.cc,cc,2,2,4
a9425497790bdba8ab785aa4ad6e7214049584e9,30525741+jackwener@users.noreply.github.com,2022-07-03 13:25:49+08:00,noreply@github.com,2022-07-03 13:25:49+08:00,use the const reference for avoiding copy (#704),unstable,True,False,5,server.cc,cc,3,3,6
a9425497790bdba8ab785aa4ad6e7214049584e9,30525741+jackwener@users.noreply.github.com,2022-07-03 13:25:49+08:00,noreply@github.com,2022-07-03 13:25:49+08:00,use the const reference for avoiding copy (#704),unstable,True,False,5,rwlock_test.cc,cc,1,1,2
a9425497790bdba8ab785aa4ad6e7214049584e9,30525741+jackwener@users.noreply.github.com,2022-07-03 13:25:49+08:00,noreply@github.com,2022-07-03 13:25:49+08:00,use the const reference for avoiding copy (#704),unstable,True,False,5,t_string_test.cc,cc,2,2,4
fcc9b2ea5ab8cf87b069da0e3abb5ac1fa66eb0b,1506118561@qq.com,2022-07-03 19:00:16+08:00,noreply@github.com,2022-07-03 19:00:16+08:00,Remove the slice `ToString()` when encoding or decoding the key (#707),unstable,True,False,4,compact_filter.cc,cc,1,1,2
fcc9b2ea5ab8cf87b069da0e3abb5ac1fa66eb0b,1506118561@qq.com,2022-07-03 19:00:16+08:00,noreply@github.com,2022-07-03 19:00:16+08:00,Remove the slice `ToString()` when encoding or decoding the key (#707),unstable,True,False,4,redis_metadata.cc,cc,3,4,7
fcc9b2ea5ab8cf87b069da0e3abb5ac1fa66eb0b,1506118561@qq.com,2022-07-03 19:00:16+08:00,noreply@github.com,2022-07-03 19:00:16+08:00,Remove the slice `ToString()` when encoding or decoding the key (#707),unstable,True,False,4,redis_string.cc,cc,2,2,4
fcc9b2ea5ab8cf87b069da0e3abb5ac1fa66eb0b,1506118561@qq.com,2022-07-03 19:00:16+08:00,noreply@github.com,2022-07-03 19:00:16+08:00,Remove the slice `ToString()` when encoding or decoding the key (#707),unstable,True,False,4,redis_zset.cc,cc,2,2,4
e86411a9dfc9eb371f9d7431bd409b716ee2f61f,twice.mliu@gmail.com,2022-07-04 12:02:14+08:00,noreply@github.com,2022-07-04 12:02:14+08:00,refactor: remove useless struct field in Task (#705),unstable,True,False,4,server.cc,cc,19,31,50
e86411a9dfc9eb371f9d7431bd409b716ee2f61f,twice.mliu@gmail.com,2022-07-04 12:02:14+08:00,noreply@github.com,2022-07-04 12:02:14+08:00,refactor: remove useless struct field in Task (#705),unstable,True,False,4,task_runner.cc,cc,2,2,4
e86411a9dfc9eb371f9d7431bd409b716ee2f61f,twice.mliu@gmail.com,2022-07-04 12:02:14+08:00,noreply@github.com,2022-07-04 12:02:14+08:00,refactor: remove useless struct field in Task (#705),unstable,True,False,4,task_runner.h,h,2,5,7
e86411a9dfc9eb371f9d7431bd409b716ee2f61f,twice.mliu@gmail.com,2022-07-04 12:02:14+08:00,noreply@github.com,2022-07-04 12:02:14+08:00,refactor: remove useless struct field in Task (#705),unstable,True,False,4,task_runner_test.cc,cc,1,2,3
ddcd7ea2a969bda5b73b5b1a0dc2ac34357f7c1b,1506118561@qq.com,2022-07-05 15:58:34+08:00,noreply@github.com,2022-07-05 15:58:34+08:00,Don't call GetCurrentTime in expired and type when possible (#709),unstable,True,False,1,redis_metadata.cc,cc,13,7,20
c094ea46ae500169dcc3e9b3b28ee6c47ea098bc,108676515+AvivPl@users.noreply.github.com,2022-07-06 04:57:02+03:00,noreply@github.com,2022-07-06 09:57:02+08:00,Remove the deprecated config `auto-resize-block-and-sst` in kvrocks.conf (#716),unstable,True,False,1,kvrocks.conf,conf,2,15,17
a95ef2d6c3d4a5de8d49ecd7ad21ddbc3b293227,30525741+jackwener@users.noreply.github.com,2022-07-07 22:39:46+08:00,noreply@github.com,2022-07-07 22:39:46+08:00,"Use unique_ptr in unit tests (#711)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,12,compact_test.cc,cc,2,5,7
a95ef2d6c3d4a5de8d49ecd7ad21ddbc3b293227,30525741+jackwener@users.noreply.github.com,2022-07-07 22:39:46+08:00,noreply@github.com,2022-07-07 22:39:46+08:00,"Use unique_ptr in unit tests (#711)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,12,cron_test.cc,cc,5,5,10
a95ef2d6c3d4a5de8d49ecd7ad21ddbc3b293227,30525741+jackwener@users.noreply.github.com,2022-07-07 22:39:46+08:00,noreply@github.com,2022-07-07 22:39:46+08:00,"Use unique_ptr in unit tests (#711)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,12,t_bitmap_test.cc,cc,4,5,9
a95ef2d6c3d4a5de8d49ecd7ad21ddbc3b293227,30525741+jackwener@users.noreply.github.com,2022-07-07 22:39:46+08:00,noreply@github.com,2022-07-07 22:39:46+08:00,"Use unique_ptr in unit tests (#711)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,12,t_geo_test.cc,cc,4,6,10
a95ef2d6c3d4a5de8d49ecd7ad21ddbc3b293227,30525741+jackwener@users.noreply.github.com,2022-07-07 22:39:46+08:00,noreply@github.com,2022-07-07 22:39:46+08:00,"Use unique_ptr in unit tests (#711)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,12,t_hash_test.cc,cc,4,5,9
a95ef2d6c3d4a5de8d49ecd7ad21ddbc3b293227,30525741+jackwener@users.noreply.github.com,2022-07-07 22:39:46+08:00,noreply@github.com,2022-07-07 22:39:46+08:00,"Use unique_ptr in unit tests (#711)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,12,t_list_test.cc,cc,4,5,9
a95ef2d6c3d4a5de8d49ecd7ad21ddbc3b293227,30525741+jackwener@users.noreply.github.com,2022-07-07 22:39:46+08:00,noreply@github.com,2022-07-07 22:39:46+08:00,"Use unique_ptr in unit tests (#711)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,12,t_metadata_test.cc,cc,6,8,14
a95ef2d6c3d4a5de8d49ecd7ad21ddbc3b293227,30525741+jackwener@users.noreply.github.com,2022-07-07 22:39:46+08:00,noreply@github.com,2022-07-07 22:39:46+08:00,"Use unique_ptr in unit tests (#711)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,12,t_set_test.cc,cc,4,5,9
a95ef2d6c3d4a5de8d49ecd7ad21ddbc3b293227,30525741+jackwener@users.noreply.github.com,2022-07-07 22:39:46+08:00,noreply@github.com,2022-07-07 22:39:46+08:00,"Use unique_ptr in unit tests (#711)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,12,t_sortedint_test.cc,cc,4,5,9
a95ef2d6c3d4a5de8d49ecd7ad21ddbc3b293227,30525741+jackwener@users.noreply.github.com,2022-07-07 22:39:46+08:00,noreply@github.com,2022-07-07 22:39:46+08:00,"Use unique_ptr in unit tests (#711)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,12,t_string_test.cc,cc,4,5,9
a95ef2d6c3d4a5de8d49ecd7ad21ddbc3b293227,30525741+jackwener@users.noreply.github.com,2022-07-07 22:39:46+08:00,noreply@github.com,2022-07-07 22:39:46+08:00,"Use unique_ptr in unit tests (#711)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,12,t_zset_test.cc,cc,4,6,10
a95ef2d6c3d4a5de8d49ecd7ad21ddbc3b293227,30525741+jackwener@users.noreply.github.com,2022-07-07 22:39:46+08:00,noreply@github.com,2022-07-07 22:39:46+08:00,"Use unique_ptr in unit tests (#711)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,12,parser.cc,cc,2,2,4
99634207386dde4d71b44cad5d51b2d97942ee44,kezhenxu94@apache.org,2022-07-08 23:23:22+08:00,noreply@github.com,2022-07-08 23:23:22+08:00,FIx version of skywalking-eyes in kvrocks.yaml (#721),unstable,True,False,1,kvrocks.yaml,yaml,1,1,2
9b63bccc4433f3bd3c4f7eab0ad96d7297406d32,jakevingoo@gmail.com,2022-07-10 21:08:41+08:00,noreply@github.com,2022-07-10 21:08:41+08:00,Return values instead of passing pointers (#722),unstable,True,False,6,replication.cc,cc,1,2,3
9b63bccc4433f3bd3c4f7eab0ad96d7297406d32,jakevingoo@gmail.com,2022-07-10 21:08:41+08:00,noreply@github.com,2022-07-10 21:08:41+08:00,Return values instead of passing pointers (#722),unstable,True,False,6,storage.cc,cc,60,60,120
9b63bccc4433f3bd3c4f7eab0ad96d7297406d32,jakevingoo@gmail.com,2022-07-10 21:08:41+08:00,noreply@github.com,2022-07-10 21:08:41+08:00,Return values instead of passing pointers (#722),unstable,True,False,6,storage.h,h,2,2,4
9b63bccc4433f3bd3c4f7eab0ad96d7297406d32,jakevingoo@gmail.com,2022-07-10 21:08:41+08:00,noreply@github.com,2022-07-10 21:08:41+08:00,Return values instead of passing pointers (#722),unstable,True,False,6,util.cc,cc,15,14,29
9b63bccc4433f3bd3c4f7eab0ad96d7297406d32,jakevingoo@gmail.com,2022-07-10 21:08:41+08:00,noreply@github.com,2022-07-10 21:08:41+08:00,Return values instead of passing pointers (#722),unstable,True,False,6,util.h,h,1,1,2
9b63bccc4433f3bd3c4f7eab0ad96d7297406d32,jakevingoo@gmail.com,2022-07-10 21:08:41+08:00,noreply@github.com,2022-07-10 21:08:41+08:00,Return values instead of passing pointers (#722),unstable,True,False,6,string_util_test.cc,cc,1,2,3
3f35369cb18af195e64ad08e314f2e80c8083c25,wander4096@gmail.com,2022-07-11 14:20:43+08:00,noreply@github.com,2022-07-11 14:20:43+08:00,"ci: build docker image with travis ci (#724)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,.travis.yml,yml,31,0,31
3f35369cb18af195e64ad08e314f2e80c8083c25,wander4096@gmail.com,2022-07-11 14:20:43+08:00,noreply@github.com,2022-07-11 14:20:43+08:00,"ci: build docker image with travis ci (#724)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,Dockerfile,None,11,7,18
b064b98bc6e3fb8e17c03af14523326e9f650383,jakevingoo@gmail.com,2022-07-11 17:29:57+08:00,noreply@github.com,2022-07-11 17:29:57+08:00,Use lock_guard to replace the manual mutex lock/unlock(#723),unstable,True,False,4,log_collector.cc,cc,5,10,15
b064b98bc6e3fb8e17c03af14523326e9f650383,jakevingoo@gmail.com,2022-07-11 17:29:57+08:00,noreply@github.com,2022-07-11 17:29:57+08:00,Use lock_guard to replace the manual mutex lock/unlock(#723),unstable,True,False,4,server.cc,cc,7,15,22
b064b98bc6e3fb8e17c03af14523326e9f650383,jakevingoo@gmail.com,2022-07-11 17:29:57+08:00,noreply@github.com,2022-07-11 17:29:57+08:00,Use lock_guard to replace the manual mutex lock/unlock(#723),unstable,True,False,4,task_runner.cc,cc,3,8,11
b064b98bc6e3fb8e17c03af14523326e9f650383,jakevingoo@gmail.com,2022-07-11 17:29:57+08:00,noreply@github.com,2022-07-11 17:29:57+08:00,Use lock_guard to replace the manual mutex lock/unlock(#723),unstable,True,False,4,worker.cc,cc,23,22,45
8544c2fe86f715bdfe8732ee37a34bdb40a5010a,wander4096@gmail.com,2022-07-12 22:43:35+08:00,noreply@github.com,2022-07-12 22:43:35+08:00,"replace shell scripts with x.py (#725)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,8,kvrocks.yaml,yaml,28,14,42
8544c2fe86f715bdfe8732ee37a34bdb40a5010a,wander4096@gmail.com,2022-07-12 22:43:35+08:00,noreply@github.com,2022-07-12 22:43:35+08:00,"replace shell scripts with x.py (#725)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,8,release.yaml,yaml,2,2,4
8544c2fe86f715bdfe8732ee37a34bdb40a5010a,wander4096@gmail.com,2022-07-12 22:43:35+08:00,noreply@github.com,2022-07-12 22:43:35+08:00,"replace shell scripts with x.py (#725)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,8,Dockerfile,None,2,2,4
8544c2fe86f715bdfe8732ee37a34bdb40a5010a,wander4096@gmail.com,2022-07-12 22:43:35+08:00,noreply@github.com,2022-07-12 22:43:35+08:00,"replace shell scripts with x.py (#725)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,8,README.md,md,36,36,72
8544c2fe86f715bdfe8732ee37a34bdb40a5010a,wander4096@gmail.com,2022-07-12 22:43:35+08:00,noreply@github.com,2022-07-12 22:43:35+08:00,"replace shell scripts with x.py (#725)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,8,x.py,py,175,0,175
a39a9e545723ce3a0817ac7cbb892edbf13527cf,caipengbo@outlook.com,2022-07-15 19:42:50+08:00,noreply@github.com,2022-07-15 19:42:50+08:00,Make the set command consistent with redis (#730),unstable,True,False,2,redis_cmd.cc,cc,26,10,36
a39a9e545723ce3a0817ac7cbb892edbf13527cf,caipengbo@outlook.com,2022-07-15 19:42:50+08:00,noreply@github.com,2022-07-15 19:42:50+08:00,Make the set command consistent with redis (#730),unstable,True,False,2,string.tcl,tcl,12,0,12
3e32eccc40cfdc0c312250cf7dfaf0954afea935,wander4096@gmail.com,2022-07-15 20:20:38+08:00,noreply@github.com,2022-07-15 20:20:38+08:00,"x.py: support source packaging (#729)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,CMakeLists.txt,txt,1,1,2
3e32eccc40cfdc0c312250cf7dfaf0954afea935,wander4096@gmail.com,2022-07-15 20:20:38+08:00,noreply@github.com,2022-07-15 20:20:38+08:00,"x.py: support source packaging (#729)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,VERSION,None,1,0,1
3e32eccc40cfdc0c312250cf7dfaf0954afea935,wander4096@gmail.com,2022-07-15 20:20:38+08:00,noreply@github.com,2022-07-15 20:20:38+08:00,"x.py: support source packaging (#729)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,x.py,py,46,0,46
f061049476da136cc787718ed7c49a38bd426f3f,wander4096@gmail.com,2022-07-16 00:54:55+08:00,noreply@github.com,2022-07-16 00:54:55+08:00,"x.py: fix release tarball naming (#732)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,x.py,py,1,1,2
e445f8365a8e4798f19b757791f035be232de51d,hulk.website@gmail.com,2022-07-20 15:56:10+08:00,noreply@github.com,2022-07-20 15:56:10+08:00,Fix use after free  and some memory leaks which reported by ASan (#714),unstable,True,False,9,main.cc,cc,1,0,1
e445f8365a8e4798f19b757791f035be232de51d,hulk.website@gmail.com,2022-07-20 15:56:10+08:00,noreply@github.com,2022-07-20 15:56:10+08:00,Fix use after free  and some memory leaks which reported by ASan (#714),unstable,True,False,9,redis_cmd.cc,cc,3,2,5
e445f8365a8e4798f19b757791f035be232de51d,hulk.website@gmail.com,2022-07-20 15:56:10+08:00,noreply@github.com,2022-07-20 15:56:10+08:00,Fix use after free  and some memory leaks which reported by ASan (#714),unstable,True,False,9,redis_connection.cc,cc,11,5,16
e445f8365a8e4798f19b757791f035be232de51d,hulk.website@gmail.com,2022-07-20 15:56:10+08:00,noreply@github.com,2022-07-20 15:56:10+08:00,Fix use after free  and some memory leaks which reported by ASan (#714),unstable,True,False,9,redis_connection.h,h,4,3,7
e445f8365a8e4798f19b757791f035be232de51d,hulk.website@gmail.com,2022-07-20 15:56:10+08:00,noreply@github.com,2022-07-20 15:56:10+08:00,Fix use after free  and some memory leaks which reported by ASan (#714),unstable,True,False,9,redis_request.h,h,3,3,6
e445f8365a8e4798f19b757791f035be232de51d,hulk.website@gmail.com,2022-07-20 15:56:10+08:00,noreply@github.com,2022-07-20 15:56:10+08:00,Fix use after free  and some memory leaks which reported by ASan (#714),unstable,True,False,9,scripting.cc,cc,1,0,1
e445f8365a8e4798f19b757791f035be232de51d,hulk.website@gmail.com,2022-07-20 15:56:10+08:00,noreply@github.com,2022-07-20 15:56:10+08:00,Fix use after free  and some memory leaks which reported by ASan (#714),unstable,True,False,9,server.cc,cc,13,0,13
e445f8365a8e4798f19b757791f035be232de51d,hulk.website@gmail.com,2022-07-20 15:56:10+08:00,noreply@github.com,2022-07-20 15:56:10+08:00,Fix use after free  and some memory leaks which reported by ASan (#714),unstable,True,False,9,status.h,h,4,0,4
e445f8365a8e4798f19b757791f035be232de51d,hulk.website@gmail.com,2022-07-20 15:56:10+08:00,noreply@github.com,2022-07-20 15:56:10+08:00,Fix use after free  and some memory leaks which reported by ASan (#714),unstable,True,False,9,worker.cc,cc,3,0,3
bacb45a5e056c243d87d6d5b92cc1cd55948a82c,52393536+xiaobiaozhao@users.noreply.github.com,2022-07-20 19:43:12+08:00,noreply@github.com,2022-07-20 19:43:12+08:00,"Allow using LuaJIT to improve performance of the Lua script   (#697)

LuaJIT can improve the performance of Lua script in most scenarios,
so we enable it by default to achieve better performance and users
can disabled it by passing `-DUSE_LUAJIT=OFF` when building from
source.

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,7,kvrocks.yaml,yaml,5,1,6
bacb45a5e056c243d87d6d5b92cc1cd55948a82c,52393536+xiaobiaozhao@users.noreply.github.com,2022-07-20 19:43:12+08:00,noreply@github.com,2022-07-20 19:43:12+08:00,"Allow using LuaJIT to improve performance of the Lua script   (#697)

LuaJIT can improve the performance of Lua script in most scenarios,
so we enable it by default to achieve better performance and users
can disabled it by passing `-DUSE_LUAJIT=OFF` when building from
source.

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,7,CMakeLists.txt,txt,14,2,16
bacb45a5e056c243d87d6d5b92cc1cd55948a82c,52393536+xiaobiaozhao@users.noreply.github.com,2022-07-20 19:43:12+08:00,noreply@github.com,2022-07-20 19:43:12+08:00,"Allow using LuaJIT to improve performance of the Lua script   (#697)

LuaJIT can improve the performance of Lua script in most scenarios,
so we enable it by default to achieve better performance and users
can disabled it by passing `-DUSE_LUAJIT=OFF` when building from
source.

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,7,lua.cmake,cmake,4,4,8
bacb45a5e056c243d87d6d5b92cc1cd55948a82c,52393536+xiaobiaozhao@users.noreply.github.com,2022-07-20 19:43:12+08:00,noreply@github.com,2022-07-20 19:43:12+08:00,"Allow using LuaJIT to improve performance of the Lua script   (#697)

LuaJIT can improve the performance of Lua script in most scenarios,
so we enable it by default to achieve better performance and users
can disabled it by passing `-DUSE_LUAJIT=OFF` when building from
source.

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,7,luajit.cmake,cmake,55,0,55
bacb45a5e056c243d87d6d5b92cc1cd55948a82c,52393536+xiaobiaozhao@users.noreply.github.com,2022-07-20 19:43:12+08:00,noreply@github.com,2022-07-20 19:43:12+08:00,"Allow using LuaJIT to improve performance of the Lua script   (#697)

LuaJIT can improve the performance of Lua script in most scenarios,
so we enable it by default to achieve better performance and users
can disabled it by passing `-DUSE_LUAJIT=OFF` when building from
source.

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,7,scripting.h,h,1,5,6
bacb45a5e056c243d87d6d5b92cc1cd55948a82c,52393536+xiaobiaozhao@users.noreply.github.com,2022-07-20 19:43:12+08:00,noreply@github.com,2022-07-20 19:43:12+08:00,"Allow using LuaJIT to improve performance of the Lua script   (#697)

LuaJIT can improve the performance of Lua script in most scenarios,
so we enable it by default to achieve better performance and users
can disabled it by passing `-DUSE_LUAJIT=OFF` when building from
source.

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,7,server.h,h,1,2,3
bacb45a5e056c243d87d6d5b92cc1cd55948a82c,52393536+xiaobiaozhao@users.noreply.github.com,2022-07-20 19:43:12+08:00,noreply@github.com,2022-07-20 19:43:12+08:00,"Allow using LuaJIT to improve performance of the Lua script   (#697)

LuaJIT can improve the performance of Lua script in most scenarios,
so we enable it by default to achieve better performance and users
can disabled it by passing `-DUSE_LUAJIT=OFF` when building from
source.

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,7,scripting.tcl,tcl,3,2,5
8e9b94ed0b23e1ba7608f89665bf6cb56ac83d48,hulk.website@gmail.com,2022-07-21 21:08:30+08:00,noreply@github.com,2022-07-21 21:08:30+08:00,Remove docs in repo and apply apache license header for some files (#740),unstable,True,False,6,README.md,md,19,0,19
8e9b94ed0b23e1ba7608f89665bf6cb56ac83d48,hulk.website@gmail.com,2022-07-21 21:08:30+08:00,noreply@github.com,2022-07-21 21:08:30+08:00,Remove docs in repo and apply apache license header for some files (#740),unstable,True,False,6,version.h.in,in,20,0,20
1fd312c183371cd93ddc32087d0113aaaf5ee9d3,hulk.website@gmail.com,2022-07-22 00:01:51+08:00,noreply@github.com,2022-07-22 00:01:51+08:00,"Fix occasionally failed in test/unit/expire.tcl (#743)

* Fix occasionally failed in test/unit/expire.tcl

* Fix occasionally failed in undo an EXPIRE",unstable,True,False,1,expire.tcl,tcl,3,3,6
4c138bfa1c82873d6c5c7a7786e1360f1d1c7820,twice.mliu@gmail.com,2022-07-22 00:34:23+08:00,noreply@github.com,2022-07-22 00:34:23+08:00,Push nightly kvrocks images to Docker Hub in Travis CI (#741),unstable,True,False,1,.travis.yml,yml,19,1,20
e3eb8f401d798aee9d8d335419429d27fa69e915,twice.mliu@gmail.com,2022-07-22 14:18:27+08:00,noreply@github.com,2022-07-22 14:18:27+08:00,Fix multiple arch nightly images by docker manifest in Travis CI (#746),unstable,True,False,1,.travis.yml,yml,47,19,66
7064112be84125c77de59b43df71f22bd6230290,twice.mliu@gmail.com,2022-07-22 15:36:40+08:00,noreply@github.com,2022-07-22 15:36:40+08:00,Fix manifest creation of nightly tag in Travis CI (#747),unstable,True,False,1,.travis.yml,yml,1,1,2
40132067bc7bb696f96675e8a396f0473321a454,i@twice.moe,2022-07-22 17:20:04+08:00,noreply@github.com,2022-07-22 17:20:04+08:00,Fix updating of nightly images in Travis CI (#748),unstable,True,False,1,.travis.yml,yml,1,1,2
140cf2f40904454b51f8408aaeb65aa45a0d6d38,hulk.website@gmail.com,2022-07-23 11:13:50+08:00,noreply@github.com,2022-07-23 11:13:50+08:00,Add the license notice for dependencies (#744),unstable,True,False,1,NOTICE,None,169,0,169
42c2b33e365ab34443dc165af584e0630b51f959,hulk.website@gmail.com,2022-07-26 12:02:49+08:00,noreply@github.com,2022-07-26 12:02:49+08:00,Switch the default value of log-dir to `stdout` (#754),unstable,True,False,1,kvrocks.conf,conf,1,1,2
ed83deebc525f1d71d84cee36ccc96462e1943e5,twice.mliu@gmail.com,2022-07-26 16:17:28+08:00,noreply@github.com,2022-07-26 16:17:28+08:00,Add fpm packaging to x.py (#752),unstable,True,False,3,x.py,py,114,55,169
9c4d1a989ab19357870de88f685a3b0c78454b20,twice.mliu@gmail.com,2022-07-27 19:47:34+08:00,noreply@github.com,2022-07-27 19:47:34+08:00,Bump luaJIT commit and cleanup duplicate declarations (#757),unstable,True,False,2,luajit.cmake,cmake,2,2,4
9c4d1a989ab19357870de88f685a3b0c78454b20,twice.mliu@gmail.com,2022-07-27 19:47:34+08:00,noreply@github.com,2022-07-27 19:47:34+08:00,Bump luaJIT commit and cleanup duplicate declarations (#757),unstable,True,False,2,scripting.cc,cc,0,5,5
9b721b1d9e2bb93aabd54c04ada2a50a2574d858,twice.mliu@gmail.com,2022-07-28 12:35:05+08:00,noreply@github.com,2022-07-28 12:35:05+08:00,Statically link libgcc and libstdc++ while using Clang (#758),unstable,True,False,1,CMakeLists.txt,txt,1,1,2
2059b5c4f145c6aeea4ea12b7554e43d33ed1edc,hulk.website@gmail.com,2022-07-30 08:23:50+08:00,noreply@github.com,2022-07-30 08:23:50+08:00,Fix incorrect rendered the release version in the commit message (#762),unstable,True,False,1,x.py,py,1,1,2
5dc7867bb0f9ca078dda2bd3874c994fe0c03bf5,hulk.website@gmail.com,2022-07-30 12:47:14+08:00,noreply@github.com,2022-07-30 12:47:14+08:00,Fix starting server should wait for ready in tcl tests (#761),unstable,True,False,2,main.cc,cc,2,3,5
5dc7867bb0f9ca078dda2bd3874c994fe0c03bf5,hulk.website@gmail.com,2022-07-30 12:47:14+08:00,noreply@github.com,2022-07-30 12:47:14+08:00,Fix starting server should wait for ready in tcl tests (#761),unstable,True,False,2,server.tcl,tcl,6,6,12
341a989d75783d8dad76bbd5a4473dd345472337,twice.mliu@gmail.com,2022-07-31 15:16:09+08:00,noreply@github.com,2022-07-31 15:16:09+08:00,Propagate sanitizer flags to all cmake deps (#759),unstable,True,False,5,kvrocks.yaml,yaml,12,11,23
341a989d75783d8dad76bbd5a4473dd345472337,twice.mliu@gmail.com,2022-07-31 15:16:09+08:00,noreply@github.com,2022-07-31 15:16:09+08:00,Propagate sanitizer flags to all cmake deps (#759),unstable,True,False,5,CMakeLists.txt,txt,23,15,38
341a989d75783d8dad76bbd5a4473dd345472337,twice.mliu@gmail.com,2022-07-31 15:16:09+08:00,noreply@github.com,2022-07-31 15:16:09+08:00,Propagate sanitizer flags to all cmake deps (#759),unstable,True,False,5,lua.cmake,cmake,1,1,2
341a989d75783d8dad76bbd5a4473dd345472337,twice.mliu@gmail.com,2022-07-31 15:16:09+08:00,noreply@github.com,2022-07-31 15:16:09+08:00,Propagate sanitizer flags to all cmake deps (#759),unstable,True,False,5,luajit.cmake,cmake,2,4,6
341a989d75783d8dad76bbd5a4473dd345472337,twice.mliu@gmail.com,2022-07-31 15:16:09+08:00,noreply@github.com,2022-07-31 15:16:09+08:00,Propagate sanitizer flags to all cmake deps (#759),unstable,True,False,5,tsan-suppressions,None,22,0,22
8e3a0ae0b806546fa844b48282b02abdb41b4186,twice.mliu@gmail.com,2022-08-03 15:39:57+08:00,noreply@github.com,2022-08-03 15:39:57+08:00,Move `runtest` to `x.py` with customized server/cli path (#765),unstable,True,False,6,kvrocks.yaml,yaml,1,3,4
8e3a0ae0b806546fa844b48282b02abdb41b4186,twice.mliu@gmail.com,2022-08-03 15:39:57+08:00,noreply@github.com,2022-08-03 15:39:57+08:00,Move `runtest` to `x.py` with customized server/cli path (#765),unstable,True,False,6,cli.tcl,tcl,2,2,4
8e3a0ae0b806546fa844b48282b02abdb41b4186,twice.mliu@gmail.com,2022-08-03 15:39:57+08:00,noreply@github.com,2022-08-03 15:39:57+08:00,Move `runtest` to `x.py` with customized server/cli path (#765),unstable,True,False,6,server.tcl,tcl,3,3,6
8e3a0ae0b806546fa844b48282b02abdb41b4186,twice.mliu@gmail.com,2022-08-03 15:39:57+08:00,noreply@github.com,2022-08-03 15:39:57+08:00,Move `runtest` to `x.py` with customized server/cli path (#765),unstable,True,False,6,test_helper.tcl,tcl,11,0,11
8e3a0ae0b806546fa844b48282b02abdb41b4186,twice.mliu@gmail.com,2022-08-03 15:39:57+08:00,noreply@github.com,2022-08-03 15:39:57+08:00,Move `runtest` to `x.py` with customized server/cli path (#765),unstable,True,False,6,x.py,py,53,20,73
a3a2d51222a12a2ca6cde72eadf59dbd5e661cde,3327004+Ranxy@users.noreply.github.com,2022-08-03 18:44:26+08:00,noreply@github.com,2022-08-03 18:44:26+08:00,"Fix didn't return the out of range error in cluster import command(#767)

It's caused by using `atoi` which won't throw exception",unstable,True,False,1,redis_cmd.cc,cc,16,16,32
32241c9d02d624d01ba2b14ae6d5c4965841eeb7,twice.mliu@gmail.com,2022-08-06 23:04:42+08:00,noreply@github.com,2022-08-06 23:04:42+08:00,Remove generic parameter for Popen in x.py (#773),unstable,True,False,1,x.py,py,1,1,2
add1a788ceea391f7d88384869ccfaf67f1dab92,mathspanda826@gmail.com,2022-08-07 23:44:05+08:00,noreply@github.com,2022-08-07 23:44:05+08:00,Fix should forbid to create the default namespace (#772),unstable,True,False,3,config.cc,cc,3,0,3
add1a788ceea391f7d88384869ccfaf67f1dab92,mathspanda826@gmail.com,2022-08-07 23:44:05+08:00,noreply@github.com,2022-08-07 23:44:05+08:00,Fix should forbid to create the default namespace (#772),unstable,True,False,3,redis_cmd.cc,cc,2,0,2
add1a788ceea391f7d88384869ccfaf67f1dab92,mathspanda826@gmail.com,2022-08-07 23:44:05+08:00,noreply@github.com,2022-08-07 23:44:05+08:00,Fix should forbid to create the default namespace (#772),unstable,True,False,3,config_test.cc,cc,4,0,4
8ffdfaf2d5caf73977a9855066d7e06ecc93c76f,3327004+Ranxy@users.noreply.github.com,2022-08-07 23:45:07+08:00,noreply@github.com,2022-08-07 23:45:07+08:00,Add GETDEL command (#771),unstable,True,False,7,README.md,md,1,1,2
8ffdfaf2d5caf73977a9855066d7e06ecc93c76f,3327004+Ranxy@users.noreply.github.com,2022-08-07 23:45:07+08:00,noreply@github.com,2022-08-07 23:45:07+08:00,Add GETDEL command (#771),unstable,True,False,7,redis_cmd.cc,cc,19,0,19
8ffdfaf2d5caf73977a9855066d7e06ecc93c76f,3327004+Ranxy@users.noreply.github.com,2022-08-07 23:45:07+08:00,noreply@github.com,2022-08-07 23:45:07+08:00,Add GETDEL command (#771),unstable,True,False,7,redis_string.cc,cc,10,0,10
8ffdfaf2d5caf73977a9855066d7e06ecc93c76f,3327004+Ranxy@users.noreply.github.com,2022-08-07 23:45:07+08:00,noreply@github.com,2022-08-07 23:45:07+08:00,Add GETDEL command (#771),unstable,True,False,7,redis_string.h,h,1,0,1
8ffdfaf2d5caf73977a9855066d7e06ecc93c76f,3327004+Ranxy@users.noreply.github.com,2022-08-07 23:45:07+08:00,noreply@github.com,2022-08-07 23:45:07+08:00,Add GETDEL command (#771),unstable,True,False,7,t_string_test.cc,cc,14,0,14
8ffdfaf2d5caf73977a9855066d7e06ecc93c76f,3327004+Ranxy@users.noreply.github.com,2022-08-07 23:45:07+08:00,noreply@github.com,2022-08-07 23:45:07+08:00,Add GETDEL command (#771),unstable,True,False,7,command.tcl,tcl,2,2,4
8ffdfaf2d5caf73977a9855066d7e06ecc93c76f,3327004+Ranxy@users.noreply.github.com,2022-08-07 23:45:07+08:00,noreply@github.com,2022-08-07 23:45:07+08:00,Add GETDEL command (#771),unstable,True,False,7,string.tcl,tcl,6,6,12
983ed09f8ca75abcddd2d8289732b8e8053eded8,maplewish117@gmail.com,2022-08-14 16:12:53+08:00,noreply@github.com,2022-08-14 16:12:53+08:00,Fix some typos and eliminate string copy in `List` (#775),unstable,True,False,6,cluster.cc,cc,2,2,4
983ed09f8ca75abcddd2d8289732b8e8053eded8,maplewish117@gmail.com,2022-08-14 16:12:53+08:00,noreply@github.com,2022-08-14 16:12:53+08:00,Fix some typos and eliminate string copy in `List` (#775),unstable,True,False,6,redis_bitmap.cc,cc,1,1,2
983ed09f8ca75abcddd2d8289732b8e8053eded8,maplewish117@gmail.com,2022-08-14 16:12:53+08:00,noreply@github.com,2022-08-14 16:12:53+08:00,Fix some typos and eliminate string copy in `List` (#775),unstable,True,False,6,redis_cmd.cc,cc,8,3,11
983ed09f8ca75abcddd2d8289732b8e8053eded8,maplewish117@gmail.com,2022-08-14 16:12:53+08:00,noreply@github.com,2022-08-14 16:12:53+08:00,Fix some typos and eliminate string copy in `List` (#775),unstable,True,False,6,redis_cmd.h,h,1,1,2
983ed09f8ca75abcddd2d8289732b8e8053eded8,maplewish117@gmail.com,2022-08-14 16:12:53+08:00,noreply@github.com,2022-08-14 16:12:53+08:00,Fix some typos and eliminate string copy in `List` (#775),unstable,True,False,6,redis_list.cc,cc,4,2,6
983ed09f8ca75abcddd2d8289732b8e8053eded8,maplewish117@gmail.com,2022-08-14 16:12:53+08:00,noreply@github.com,2022-08-14 16:12:53+08:00,Fix some typos and eliminate string copy in `List` (#775),unstable,True,False,6,redis_sortedint.cc,cc,1,1,2
1bcb7dbe39af5ad16a39743420976a841c38fa14,mathspanda826@gmail.com,2022-08-16 09:51:46+08:00,noreply@github.com,2022-08-16 09:51:46+08:00,Add the new command SMISMEMBER (#778),unstable,True,False,6,redis_cmd.cc,cc,26,0,26
1bcb7dbe39af5ad16a39743420976a841c38fa14,mathspanda826@gmail.com,2022-08-16 09:51:46+08:00,noreply@github.com,2022-08-16 09:51:46+08:00,Add the new command SMISMEMBER (#778),unstable,True,False,6,redis_set.cc,cc,20,8,28
1bcb7dbe39af5ad16a39743420976a841c38fa14,mathspanda826@gmail.com,2022-08-16 09:51:46+08:00,noreply@github.com,2022-08-16 09:51:46+08:00,Add the new command SMISMEMBER (#778),unstable,True,False,6,redis_set.h,h,1,0,1
1bcb7dbe39af5ad16a39743420976a841c38fa14,mathspanda826@gmail.com,2022-08-16 09:51:46+08:00,noreply@github.com,2022-08-16 09:51:46+08:00,Add the new command SMISMEMBER (#778),unstable,True,False,6,t_set_test.cc,cc,20,0,20
1bcb7dbe39af5ad16a39743420976a841c38fa14,mathspanda826@gmail.com,2022-08-16 09:51:46+08:00,noreply@github.com,2022-08-16 09:51:46+08:00,Add the new command SMISMEMBER (#778),unstable,True,False,6,command.tcl,tcl,2,2,4
1bcb7dbe39af5ad16a39743420976a841c38fa14,mathspanda826@gmail.com,2022-08-16 09:51:46+08:00,noreply@github.com,2022-08-16 09:51:46+08:00,Add the new command SMISMEMBER (#778),unstable,True,False,6,set.tcl,tcl,32,2,34
4ba6b100ca62044cae9426f02c9e358b8f56841a,twice.mliu@gmail.com,2022-08-16 22:37:06+08:00,noreply@github.com,2022-08-16 22:37:06+08:00,Add `StatusOr` for error handling in modern C++ style (#768),unstable,True,False,4,redis_cmd.cc,cc,1,1,2
4ba6b100ca62044cae9426f02c9e358b8f56841a,twice.mliu@gmail.com,2022-08-16 22:37:06+08:00,noreply@github.com,2022-08-16 22:37:06+08:00,Add `StatusOr` for error handling in modern C++ style (#768),unstable,True,False,4,redis_connection.cc,cc,1,1,2
4ba6b100ca62044cae9426f02c9e358b8f56841a,twice.mliu@gmail.com,2022-08-16 22:37:06+08:00,noreply@github.com,2022-08-16 22:37:06+08:00,Add `StatusOr` for error handling in modern C++ style (#768),unstable,True,False,4,status.h,h,200,11,211
4ba6b100ca62044cae9426f02c9e358b8f56841a,twice.mliu@gmail.com,2022-08-16 22:37:06+08:00,noreply@github.com,2022-08-16 22:37:06+08:00,Add `StatusOr` for error handling in modern C++ style (#768),unstable,True,False,4,status_test.cc,cc,146,0,146
b3106caaaf7f46bc0df451020f3e842d8c81e0a2,90088090+Qiaolin-Yu@users.noreply.github.com,2022-08-17 13:36:09+08:00,noreply@github.com,2022-08-17 13:36:09+08:00,Replace obsolete RocksDB API (#780),unstable,True,False,3,redis_cmd.h,h,1,1,2
b3106caaaf7f46bc0df451020f3e842d8c81e0a2,90088090+Qiaolin-Yu@users.noreply.github.com,2022-08-17 13:36:09+08:00,noreply@github.com,2022-08-17 13:36:09+08:00,Replace obsolete RocksDB API (#780),unstable,True,False,3,storage.cc,cc,1,1,2
b3106caaaf7f46bc0df451020f3e842d8c81e0a2,90088090+Qiaolin-Yu@users.noreply.github.com,2022-08-17 13:36:09+08:00,noreply@github.com,2022-08-17 13:36:09+08:00,Replace obsolete RocksDB API (#780),unstable,True,False,3,storage.h,h,1,1,2
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,redis_cmd.cc,cc,876,0,876
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,redis_db.cc,cc,3,2,5
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,redis_metadata.cc,cc,70,5,75
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,redis_metadata.h,h,18,1,19
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,redis_stream.cc,cc,585,0,585
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,redis_stream.h,h,67,0,67
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,redis_stream_base.cc,cc,152,0,152
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,redis_stream_base.h,h,151,0,151
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,replication.cc,cc,11,0,11
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,replication.h,h,1,0,1
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,server.cc,cc,72,0,72
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,server.h,h,20,0,20
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,storage.cc,cc,6,1,7
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,storage.h,h,2,0,2
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,t_stream_test.cc,cc,2057,0,2057
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,util.tcl,tcl,16,0,16
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,test_helper.tcl,tcl,1,0,1
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,command.tcl,tcl,2,2,4
73092dc4a5e4f87411133efdcf10b393dd8f9ae9,torwigua@gmail.com,2022-08-17 12:30:53+03:00,noreply@github.com,2022-08-17 17:30:53+08:00,"Implement the data structure and partial commands of the Redis stream (#745)

The data type Redis stream was introduced in Redis 5.0 as an alternative to Kafka. For more details, see https://redis.io/docs/data-types/streams.

Like the most complex data types, each stream has a metadata key to identify which version is alive and then stores a key-value per entry in a new column family(stream). The reason why we didn't put those entry key-values in the existing column family is that replicas need to replay and notify blocking clients like PubSub.

In case of the command: `XADD s1 1-0 key1 val1 key2 val2`, the ID is 1-0 and the value is `key1 val1 key2 val2`.

In RocksDB entries are represented as key-value pairs where the key is formed as:

`key | version | entry-ID-milliseconds-value | entry-ID-sequence-number-value`

and the value is encoded as:

`key1-length(fixed-32) | key1 | val1-length(fixed-32) | val1 | key2-length(fixed-32) | key2 | val2-length(fixed-32) | val2`.

Available commands:

XADD
XDEL
XINFO STREAM
XLEN
XRANGE
XREAD
XREVRANGE
XTRIM",unstable,True,False,19,stream.tcl,tcl,658,0,658
d436fe291424de6d234badc64be178201f9d2fb4,95225543+Furud0Er1ka@users.noreply.github.com,2022-08-22 00:13:02+08:00,noreply@github.com,2022-08-22 00:13:02+08:00,"Use MakeUnique and MakeShared (#781)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,9,cluster.cc,cc,5,4,9
d436fe291424de6d234badc64be178201f9d2fb4,95225543+Furud0Er1ka@users.noreply.github.com,2022-08-22 00:13:02+08:00,noreply@github.com,2022-08-22 00:13:02+08:00,"Use MakeUnique and MakeShared (#781)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,9,redis_set.cc,cc,1,1,2
d436fe291424de6d234badc64be178201f9d2fb4,95225543+Furud0Er1ka@users.noreply.github.com,2022-08-22 00:13:02+08:00,noreply@github.com,2022-08-22 00:13:02+08:00,"Use MakeUnique and MakeShared (#781)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,9,redis_stream.cc,cc,4,4,8
d436fe291424de6d234badc64be178201f9d2fb4,95225543+Furud0Er1ka@users.noreply.github.com,2022-08-22 00:13:02+08:00,noreply@github.com,2022-08-22 00:13:02+08:00,"Use MakeUnique and MakeShared (#781)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,9,redis_zset.cc,cc,4,4,8
d436fe291424de6d234badc64be178201f9d2fb4,95225543+Furud0Er1ka@users.noreply.github.com,2022-08-22 00:13:02+08:00,noreply@github.com,2022-08-22 00:13:02+08:00,"Use MakeUnique and MakeShared (#781)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,9,server.cc,cc,6,6,12
d436fe291424de6d234badc64be178201f9d2fb4,95225543+Furud0Er1ka@users.noreply.github.com,2022-08-22 00:13:02+08:00,noreply@github.com,2022-08-22 00:13:02+08:00,"Use MakeUnique and MakeShared (#781)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,9,slot_migrate.cc,cc,3,2,5
d436fe291424de6d234badc64be178201f9d2fb4,95225543+Furud0Er1ka@users.noreply.github.com,2022-08-22 00:13:02+08:00,noreply@github.com,2022-08-22 00:13:02+08:00,"Use MakeUnique and MakeShared (#781)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,9,storage.cc,cc,2,2,4
d436fe291424de6d234badc64be178201f9d2fb4,95225543+Furud0Er1ka@users.noreply.github.com,2022-08-22 00:13:02+08:00,noreply@github.com,2022-08-22 00:13:02+08:00,"Use MakeUnique and MakeShared (#781)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,9,table_properties_collector.cc,cc,3,2,5
d436fe291424de6d234badc64be178201f9d2fb4,95225543+Furud0Er1ka@users.noreply.github.com,2022-08-22 00:13:02+08:00,noreply@github.com,2022-08-22 00:13:02+08:00,"Use MakeUnique and MakeShared (#781)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,9,util.h,h,4,0,4
a2fb204094eb8da2174069b884d5431e7718c827,i@twice.moe,2022-08-22 22:25:16+08:00,noreply@github.com,2022-08-22 22:25:16+08:00,Add package `libstdc++-static` to prerequisite in README (#786),unstable,True,False,1,README.md,md,2,2,4
bda64adc09f47f0bb19d4fcc85d69579f9ebcbc8,twice.mliu@gmail.com,2022-08-24 10:36:00+08:00,noreply@github.com,2022-08-24 10:36:00+08:00,"Replace `text` with `universal_newlines` to support python<3.7 in `x.py` (#789)

* Replace `text` with `universal_newlines` to support python<3.7 in `x.py`

* add python to README",unstable,True,False,2,README.md,md,2,2,4
bda64adc09f47f0bb19d4fcc85d69579f9ebcbc8,twice.mliu@gmail.com,2022-08-24 10:36:00+08:00,noreply@github.com,2022-08-24 10:36:00+08:00,"Replace `text` with `universal_newlines` to support python<3.7 in `x.py` (#789)

* Replace `text` with `universal_newlines` to support python<3.7 in `x.py`

* add python to README",unstable,True,False,2,x.py,py,1,1,2
fac42b092810f7273385cd57e881c5e4b91e1158,hulk.website@gmail.com,2022-08-25 19:42:14+08:00,noreply@github.com,2022-08-25 19:42:14+08:00,Revert snappy library from v1.1.9 to v1.1.7 (#790),unstable,True,False,1,snappy.cmake,cmake,2,2,4
694d5617bcb873db8d107decd7fe297e4588360b,torwigua@gmail.com,2022-08-27 05:50:49+03:00,noreply@github.com,2022-08-27 10:50:49+08:00,"Use PutVarInt instead of PutFixed while encoding stream entry value (#791)

Changes PutFixed32 to PutVarint32 and GetFixed32 to GetVarint32,
this way could effectively save space usage for small entries.

Obviously, as ##745, this change makes it impossible to decode entries
if entries were encoded with PutFixed32 (an error will be returned).",unstable,True,False,7,encoding.cc,cc,57,0,57
694d5617bcb873db8d107decd7fe297e4588360b,torwigua@gmail.com,2022-08-27 05:50:49+03:00,noreply@github.com,2022-08-27 10:50:49+08:00,"Use PutVarInt instead of PutFixed while encoding stream entry value (#791)

Changes PutFixed32 to PutVarint32 and GetFixed32 to GetVarint32,
this way could effectively save space usage for small entries.

Obviously, as ##745, this change makes it impossible to decode entries
if entries were encoded with PutFixed32 (an error will be returned).",unstable,True,False,7,encoding.h,h,5,0,5
694d5617bcb873db8d107decd7fe297e4588360b,torwigua@gmail.com,2022-08-27 05:50:49+03:00,noreply@github.com,2022-08-27 10:50:49+08:00,"Use PutVarInt instead of PutFixed while encoding stream entry value (#791)

Changes PutFixed32 to PutVarint32 and GetFixed32 to GetVarint32,
this way could effectively save space usage for small entries.

Obviously, as ##745, this change makes it impossible to decode entries
if entries were encoded with PutFixed32 (an error will be returned).",unstable,True,False,7,redis_stream.cc,cc,33,9,42
694d5617bcb873db8d107decd7fe297e4588360b,torwigua@gmail.com,2022-08-27 05:50:49+03:00,noreply@github.com,2022-08-27 10:50:49+08:00,"Use PutVarInt instead of PutFixed while encoding stream entry value (#791)

Changes PutFixed32 to PutVarint32 and GetFixed32 to GetVarint32,
this way could effectively save space usage for small entries.

Obviously, as ##745, this change makes it impossible to decode entries
if entries were encoded with PutFixed32 (an error will be returned).",unstable,True,False,7,redis_stream_base.cc,cc,11,8,19
694d5617bcb873db8d107decd7fe297e4588360b,torwigua@gmail.com,2022-08-27 05:50:49+03:00,noreply@github.com,2022-08-27 10:50:49+08:00,"Use PutVarInt instead of PutFixed while encoding stream entry value (#791)

Changes PutFixed32 to PutVarint32 and GetFixed32 to GetVarint32,
this way could effectively save space usage for small entries.

Obviously, as ##745, this change makes it impossible to decode entries
if entries were encoded with PutFixed32 (an error will be returned).",unstable,True,False,7,redis_stream_base.h,h,1,1,2
694d5617bcb873db8d107decd7fe297e4588360b,torwigua@gmail.com,2022-08-27 05:50:49+03:00,noreply@github.com,2022-08-27 10:50:49+08:00,"Use PutVarInt instead of PutFixed while encoding stream entry value (#791)

Changes PutFixed32 to PutVarint32 and GetFixed32 to GetVarint32,
this way could effectively save space usage for small entries.

Obviously, as ##745, this change makes it impossible to decode entries
if entries were encoded with PutFixed32 (an error will be returned).",unstable,True,False,7,t_encoding_test.cc,cc,21,1,22
694d5617bcb873db8d107decd7fe297e4588360b,torwigua@gmail.com,2022-08-27 05:50:49+03:00,noreply@github.com,2022-08-27 10:50:49+08:00,"Use PutVarInt instead of PutFixed while encoding stream entry value (#791)

Changes PutFixed32 to PutVarint32 and GetFixed32 to GetVarint32,
this way could effectively save space usage for small entries.

Obviously, as ##745, this change makes it impossible to decode entries
if entries were encoded with PutFixed32 (an error will be returned).",unstable,True,False,7,t_stream_test.cc,cc,9,0,9
e4ae784a271b4d815eb3a015e27c6f6e296b3036,twice.mliu@gmail.com,2022-08-27 22:29:15+08:00,noreply@github.com,2022-08-27 22:29:15+08:00,"Add `ParseInt` in `StatusOr` style (#787)

- add `TryParseInt<T>`, `ParseInt<T>` and unit tests
- use `union` in `StatusOr` since it is more readable and no strict aliasing issue",unstable,True,False,4,parse_util.h,h,141,0,141
e4ae784a271b4d815eb3a015e27c6f6e296b3036,twice.mliu@gmail.com,2022-08-27 22:29:15+08:00,noreply@github.com,2022-08-27 22:29:15+08:00,"Add `ParseInt` in `StatusOr` style (#787)

- add `TryParseInt<T>`, `ParseInt<T>` and unit tests
- use `union` in `StatusOr` since it is more readable and no strict aliasing issue",unstable,True,False,4,status.h,h,39,44,83
e4ae784a271b4d815eb3a015e27c6f6e296b3036,twice.mliu@gmail.com,2022-08-27 22:29:15+08:00,noreply@github.com,2022-08-27 22:29:15+08:00,"Add `ParseInt` in `StatusOr` style (#787)

- add `TryParseInt<T>`, `ParseInt<T>` and unit tests
- use `union` in `StatusOr` since it is more readable and no strict aliasing issue",unstable,True,False,4,main.cc,cc,2,1,3
e4ae784a271b4d815eb3a015e27c6f6e296b3036,twice.mliu@gmail.com,2022-08-27 22:29:15+08:00,noreply@github.com,2022-08-27 22:29:15+08:00,"Add `ParseInt` in `StatusOr` style (#787)

- add `TryParseInt<T>`, `ParseInt<T>` and unit tests
- use `union` in `StatusOr` since it is more readable and no strict aliasing issue",unstable,True,False,4,parse_util.cc,cc,57,0,57
d35bcf997addd18b710b7454de502ca604febb29,twice.mliu@gmail.com,2022-08-29 21:28:50+08:00,noreply@github.com,2022-08-29 21:28:50+08:00,Show function name in backtrace (#796),unstable,True,False,1,main.cc,cc,17,51,68
b4334195b981f64e24fdb6b3224d07f77b567ccd,95634254+ColinChamber@users.noreply.github.com,2022-08-31 11:37:19+08:00,noreply@github.com,2022-08-31 11:37:19+08:00,Optimize get bitmap string and remove redundant num2bit array (#793),unstable,True,False,2,redis_bitmap.cc,cc,29,11,40
b4334195b981f64e24fdb6b3224d07f77b567ccd,95634254+ColinChamber@users.noreply.github.com,2022-08-31 11:37:19+08:00,noreply@github.com,2022-08-31 11:37:19+08:00,Optimize get bitmap string and remove redundant num2bit array (#793),unstable,True,False,2,redis_bitmap_string.cc,cc,4,10,14
40989fc26dc4229bd9f797c14eaa4df07574f47e,torwigua@gmail.com,2022-09-01 07:16:01+03:00,noreply@github.com,2022-09-01 12:16:01+08:00,Fix transforming stream entry values to lowercase (#802),unstable,True,False,2,redis_cmd.cc,cc,1,1,2
40989fc26dc4229bd9f797c14eaa4df07574f47e,torwigua@gmail.com,2022-09-01 07:16:01+03:00,noreply@github.com,2022-09-01 12:16:01+08:00,Fix transforming stream entry values to lowercase (#802),unstable,True,False,2,stream.tcl,tcl,9,0,9
b3506ad86f8dbd9f28eee7bc4186596b91aa5803,twice.mliu@gmail.com,2022-09-01 18:36:51+08:00,noreply@github.com,2022-09-01 18:36:51+08:00,Fix CMake configuration error in snappy (#803),unstable,True,False,3,FindGTest.cmake,cmake,20,0,20
b3506ad86f8dbd9f28eee7bc4186596b91aa5803,twice.mliu@gmail.com,2022-09-01 18:36:51+08:00,noreply@github.com,2022-09-01 18:36:51+08:00,Fix CMake configuration error in snappy (#803),unstable,True,False,3,FindGflags.cmake,cmake,20,0,20
b3506ad86f8dbd9f28eee7bc4186596b91aa5803,twice.mliu@gmail.com,2022-09-01 18:36:51+08:00,noreply@github.com,2022-09-01 18:36:51+08:00,Fix CMake configuration error in snappy (#803),unstable,True,False,3,snappy.cmake,cmake,1,0,1
2cb51903532e26db231f040e57c6e1e9a74edc13,hulk.website@gmail.com,2022-09-03 15:46:15+08:00,noreply@github.com,2022-09-03 15:46:15+08:00,Fix inline protocol don't allow LF only EOL (#808),unstable,True,False,2,redis_request.cc,cc,14,4,18
2cb51903532e26db231f040e57c6e1e9a74edc13,hulk.website@gmail.com,2022-09-03 15:46:15+08:00,noreply@github.com,2022-09-03 15:46:15+08:00,Fix inline protocol don't allow LF only EOL (#808),unstable,True,False,2,protocol.tcl,tcl,23,0,23
c9d175aee1b2f52c1ba281d85dc5d9524b519b9a,wander4096@gmail.com,2022-09-04 01:29:00+08:00,noreply@github.com,2022-09-04 01:29:00+08:00,"refactor: write integration tests in Golang (#806)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,kvrocks.yaml,yaml,21,0,21
c9d175aee1b2f52c1ba281d85dc5d9524b519b9a,wander4096@gmail.com,2022-09-04 01:29:00+08:00,noreply@github.com,2022-09-04 01:29:00+08:00,"refactor: write integration tests in Golang (#806)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,go.mod,mod,16,0,16
c9d175aee1b2f52c1ba281d85dc5d9524b519b9a,wander4096@gmail.com,2022-09-04 01:29:00+08:00,noreply@github.com,2022-09-04 01:29:00+08:00,"refactor: write integration tests in Golang (#806)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,go.sum,sum,30,0,30
c9d175aee1b2f52c1ba281d85dc5d9524b519b9a,wander4096@gmail.com,2022-09-04 01:29:00+08:00,noreply@github.com,2022-09-04 01:29:00+08:00,"refactor: write integration tests in Golang (#806)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,command_test.go,go,77,0,77
c9d175aee1b2f52c1ba281d85dc5d9524b519b9a,wander4096@gmail.com,2022-09-04 01:29:00+08:00,noreply@github.com,2022-09-04 01:29:00+08:00,"refactor: write integration tests in Golang (#806)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,info_test.go,go,103,0,103
c9d175aee1b2f52c1ba281d85dc5d9524b519b9a,wander4096@gmail.com,2022-09-04 01:29:00+08:00,noreply@github.com,2022-09-04 01:29:00+08:00,"refactor: write integration tests in Golang (#806)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,server.go,go,122,0,122
c9d175aee1b2f52c1ba281d85dc5d9524b519b9a,wander4096@gmail.com,2022-09-04 01:29:00+08:00,noreply@github.com,2022-09-04 01:29:00+08:00,"refactor: write integration tests in Golang (#806)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,.gitignore,gitignore,1,0,1
c9d175aee1b2f52c1ba281d85dc5d9524b519b9a,wander4096@gmail.com,2022-09-04 01:29:00+08:00,noreply@github.com,2022-09-04 01:29:00+08:00,"refactor: write integration tests in Golang (#806)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,test_helper.tcl,tcl,0,1,1
c9d175aee1b2f52c1ba281d85dc5d9524b519b9a,wander4096@gmail.com,2022-09-04 01:29:00+08:00,noreply@github.com,2022-09-04 01:29:00+08:00,"refactor: write integration tests in Golang (#806)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,licenserc.yml,yml,1,2,3
e8b042a4f84d5a4ff30c824639ea9ed3ea77e0cb,wander4096@gmail.com,2022-09-05 15:08:54+08:00,noreply@github.com,2022-09-05 15:08:54+08:00,"refactor: unit/protocol to gocase (#810)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,8,command_test.go,go,1,3,4
e8b042a4f84d5a4ff30c824639ea9ed3ea77e0cb,wander4096@gmail.com,2022-09-05 15:08:54+08:00,noreply@github.com,2022-09-05 15:08:54+08:00,"refactor: unit/protocol to gocase (#810)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,8,info_test.go,go,1,3,4
e8b042a4f84d5a4ff30c824639ea9ed3ea77e0cb,wander4096@gmail.com,2022-09-05 15:08:54+08:00,noreply@github.com,2022-09-05 15:08:54+08:00,"refactor: unit/protocol to gocase (#810)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,8,protocol_test.go,go,142,0,142
e8b042a4f84d5a4ff30c824639ea9ed3ea77e0cb,wander4096@gmail.com,2022-09-05 15:08:54+08:00,noreply@github.com,2022-09-05 15:08:54+08:00,"refactor: unit/protocol to gocase (#810)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,8,regression_test.go,go,64,0,64
e8b042a4f84d5a4ff30c824639ea9ed3ea77e0cb,wander4096@gmail.com,2022-09-05 15:08:54+08:00,noreply@github.com,2022-09-05 15:08:54+08:00,"refactor: unit/protocol to gocase (#810)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,8,server.go,go,13,16,29
e8b042a4f84d5a4ff30c824639ea9ed3ea77e0cb,wander4096@gmail.com,2022-09-05 15:08:54+08:00,noreply@github.com,2022-09-05 15:08:54+08:00,"refactor: unit/protocol to gocase (#810)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,8,tcp_client.go,go,60,0,60
e8b042a4f84d5a4ff30c824639ea9ed3ea77e0cb,wander4096@gmail.com,2022-09-05 15:08:54+08:00,noreply@github.com,2022-09-05 15:08:54+08:00,"refactor: unit/protocol to gocase (#810)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,8,test_helper.tcl,tcl,0,1,1
9c64cb20f5a90da7903fd6c77dd3f287d10bc7f3,torwigua@gmail.com,2022-09-06 04:16:35+03:00,noreply@github.com,2022-09-06 09:16:35+08:00,Add stream column family to compaction checker input (#825),unstable,True,False,1,server.cc,cc,2,1,3
dbd968b47a08184b3a0b6492f28f9ba8edf6d11b,torwigua@gmail.com,2022-09-06 08:57:23+03:00,noreply@github.com,2022-09-06 13:57:23+08:00,"Allows Kvrocks to listen to only the unix socket (#809)

If unix socket is specified, don't listen default TCP if addr:port wasn't explicitly set.",unstable,True,False,7,kvrocks.conf,conf,3,4,7
dbd968b47a08184b3a0b6492f28f9ba8edf6d11b,torwigua@gmail.com,2022-09-06 08:57:23+03:00,noreply@github.com,2022-09-06 13:57:23+08:00,"Allows Kvrocks to listen to only the unix socket (#809)

If unix socket is specified, don't listen default TCP if addr:port wasn't explicitly set.",unstable,True,False,7,config.cc,cc,15,6,21
dbd968b47a08184b3a0b6492f28f9ba8edf6d11b,torwigua@gmail.com,2022-09-06 08:57:23+03:00,noreply@github.com,2022-09-06 13:57:23+08:00,"Allows Kvrocks to listen to only the unix socket (#809)

If unix socket is specified, don't listen default TCP if addr:port wasn't explicitly set.",unstable,True,False,7,config.h,h,3,1,4
dbd968b47a08184b3a0b6492f28f9ba8edf6d11b,torwigua@gmail.com,2022-09-06 08:57:23+03:00,noreply@github.com,2022-09-06 13:57:23+08:00,"Allows Kvrocks to listen to only the unix socket (#809)

If unix socket is specified, don't listen default TCP if addr:port wasn't explicitly set.",unstable,True,False,7,config_type.h,h,1,1,2
dbd968b47a08184b3a0b6492f28f9ba8edf6d11b,torwigua@gmail.com,2022-09-06 08:57:23+03:00,noreply@github.com,2022-09-06 13:57:23+08:00,"Allows Kvrocks to listen to only the unix socket (#809)

If unix socket is specified, don't listen default TCP if addr:port wasn't explicitly set.",unstable,True,False,7,main.cc,cc,2,2,4
dbd968b47a08184b3a0b6492f28f9ba8edf6d11b,torwigua@gmail.com,2022-09-06 08:57:23+03:00,noreply@github.com,2022-09-06 13:57:23+08:00,"Allows Kvrocks to listen to only the unix socket (#809)

If unix socket is specified, don't listen default TCP if addr:port wasn't explicitly set.",unstable,True,False,7,server.cc,cc,2,1,3
dbd968b47a08184b3a0b6492f28f9ba8edf6d11b,torwigua@gmail.com,2022-09-06 08:57:23+03:00,noreply@github.com,2022-09-06 13:57:23+08:00,"Allows Kvrocks to listen to only the unix socket (#809)

If unix socket is specified, don't listen default TCP if addr:port wasn't explicitly set.",unstable,True,False,7,worker.cc,cc,2,1,3
56397623624e2532e1da99017d2fd2665de743ca,aleks.raiden@gmail.com,2022-09-06 19:28:42+03:00,noreply@github.com,2022-09-07 00:28:42+08:00,"Fix CMake policy CMP0135 (#827)

* Update utils.cmake

Set an DOWNLOAD_EXTRACT_TIMESTAMP options to new behavior (by cmake policy CMP0135)

* Update utils.cmake

Revert

* Create policy.cmake

Add policy macro and fix warning about DOWNLOAD_EXTRACT_TIMESTAMP

* Update CMakeLists.txt

Run kvrocks cmake policy macro

* Update policy.cmake

Fix missing license header

* Update CMakeLists.txt

Fix (remove dedicated policy.cmake file)

* Delete policy.cmake

* Update CMakeLists.txt",unstable,True,False,1,CMakeLists.txt,txt,4,0,4
3f0fb401030332aff76a4d2638887cbf0de240fc,wander4096@gmail.com,2022-09-07 00:29:21+08:00,noreply@github.com,2022-09-07 00:29:21+08:00,"refactor: unit/auth to gocase (#830)

Signed-off-by: tison <wander4096@gmail.com>

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,5,redis_connection.cc,cc,8,6,14
3f0fb401030332aff76a4d2638887cbf0de240fc,wander4096@gmail.com,2022-09-07 00:29:21+08:00,noreply@github.com,2022-09-07 00:29:21+08:00,"refactor: unit/auth to gocase (#830)

Signed-off-by: tison <wander4096@gmail.com>

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,5,auth_test.go,go,73,0,73
3f0fb401030332aff76a4d2638887cbf0de240fc,wander4096@gmail.com,2022-09-07 00:29:21+08:00,noreply@github.com,2022-09-07 00:29:21+08:00,"refactor: unit/auth to gocase (#830)

Signed-off-by: tison <wander4096@gmail.com>

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,5,server.go,go,2,1,3
3f0fb401030332aff76a4d2638887cbf0de240fc,wander4096@gmail.com,2022-09-07 00:29:21+08:00,noreply@github.com,2022-09-07 00:29:21+08:00,"refactor: unit/auth to gocase (#830)

Signed-off-by: tison <wander4096@gmail.com>

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,5,test_helper.tcl,tcl,0,1,1
4dc7f77c049a1d346cb043dbcac72f457662c729,suica@users.noreply.github.com,2022-09-07 14:56:48+08:00,noreply@github.com,2022-09-07 14:56:48+08:00,"refactor: test unit/type/list-2 to Go case (#833)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,7,kvrocks.yaml,yaml,1,1,2
4dc7f77c049a1d346cb043dbcac72f457662c729,suica@users.noreply.github.com,2022-09-07 14:56:48+08:00,noreply@github.com,2022-09-07 14:56:48+08:00,"refactor: test unit/type/list-2 to Go case (#833)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,7,go.mod,mod,2,0,2
4dc7f77c049a1d346cb043dbcac72f457662c729,suica@users.noreply.github.com,2022-09-07 14:56:48+08:00,noreply@github.com,2022-09-07 14:56:48+08:00,"refactor: test unit/type/list-2 to Go case (#833)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,7,go.sum,sum,4,0,4
4dc7f77c049a1d346cb043dbcac72f457662c729,suica@users.noreply.github.com,2022-09-07 14:56:48+08:00,noreply@github.com,2022-09-07 14:56:48+08:00,"refactor: test unit/type/list-2 to Go case (#833)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,7,list_test.go,go,86,0,86
4dc7f77c049a1d346cb043dbcac72f457662c729,suica@users.noreply.github.com,2022-09-07 14:56:48+08:00,noreply@github.com,2022-09-07 14:56:48+08:00,"refactor: test unit/type/list-2 to Go case (#833)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,7,server.go,go,2,2,4
4dc7f77c049a1d346cb043dbcac72f457662c729,suica@users.noreply.github.com,2022-09-07 14:56:48+08:00,noreply@github.com,2022-09-07 14:56:48+08:00,"refactor: test unit/type/list-2 to Go case (#833)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,7,test_helper.tcl,tcl,0,1,1
479233717ef20bd2e27c2dd04e436446583b298d,twice.mliu@gmail.com,2022-09-07 17:14:16+08:00,noreply@github.com,2022-09-07 17:14:16+08:00,Add go test to `x.py` and improve error in gocase (#832),unstable,True,False,3,kvrocks.yaml,yaml,3,6,9
479233717ef20bd2e27c2dd04e436446583b298d,twice.mliu@gmail.com,2022-09-07 17:14:16+08:00,noreply@github.com,2022-09-07 17:14:16+08:00,Add go test to `x.py` and improve error in gocase (#832),unstable,True,False,3,server.go,go,5,1,6
479233717ef20bd2e27c2dd04e436446583b298d,twice.mliu@gmail.com,2022-09-07 17:14:16+08:00,noreply@github.com,2022-09-07 17:14:16+08:00,Add go test to `x.py` and improve error in gocase (#832),unstable,True,False,3,x.py,py,23,0,23
5bcbc7445f5523cd434814f37948519eaf1e901e,wander4096@gmail.com,2022-09-07 22:07:34+08:00,noreply@github.com,2022-09-07 22:07:34+08:00,"ci: add golangci_lint  (#834)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,7,kvrocks.yaml,yaml,5,0,5
5bcbc7445f5523cd434814f37948519eaf1e901e,wander4096@gmail.com,2022-09-07 22:07:34+08:00,noreply@github.com,2022-09-07 22:07:34+08:00,"ci: add golangci_lint  (#834)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,7,.golangci.yml,yml,42,0,42
5bcbc7445f5523cd434814f37948519eaf1e901e,wander4096@gmail.com,2022-09-07 22:07:34+08:00,noreply@github.com,2022-09-07 22:07:34+08:00,"ci: add golangci_lint  (#834)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,7,protocol_test.go,go,11,11,22
5bcbc7445f5523cd434814f37948519eaf1e901e,wander4096@gmail.com,2022-09-07 22:07:34+08:00,noreply@github.com,2022-09-07 22:07:34+08:00,"ci: add golangci_lint  (#834)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,7,regression_test.go,go,1,1,2
5bcbc7445f5523cd434814f37948519eaf1e901e,wander4096@gmail.com,2022-09-07 22:07:34+08:00,noreply@github.com,2022-09-07 22:07:34+08:00,"ci: add golangci_lint  (#834)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,7,server.go,go,2,2,4
5bcbc7445f5523cd434814f37948519eaf1e901e,wander4096@gmail.com,2022-09-07 22:07:34+08:00,noreply@github.com,2022-09-07 22:07:34+08:00,"ci: add golangci_lint  (#834)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,7,tcp_client.go,go,1,1,2
5bcbc7445f5523cd434814f37948519eaf1e901e,wander4096@gmail.com,2022-09-07 22:07:34+08:00,noreply@github.com,2022-09-07 22:07:34+08:00,"ci: add golangci_lint  (#834)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,7,x.py,py,29,9,38
ff0ef1eabdda40387d9dee138a71e8ca766abdfc,aleks.raiden@gmail.com,2022-09-08 16:19:59+03:00,noreply@github.com,2022-09-08 21:19:59+08:00,"Update dependency to latest version (lz4, libevent, gtest) (#828)",unstable,True,False,3,gtest.cmake,cmake,2,2,4
ff0ef1eabdda40387d9dee138a71e8ca766abdfc,aleks.raiden@gmail.com,2022-09-08 16:19:59+03:00,noreply@github.com,2022-09-08 21:19:59+08:00,"Update dependency to latest version (lz4, libevent, gtest) (#828)",unstable,True,False,3,libevent.cmake,cmake,2,2,4
ff0ef1eabdda40387d9dee138a71e8ca766abdfc,aleks.raiden@gmail.com,2022-09-08 16:19:59+03:00,noreply@github.com,2022-09-08 21:19:59+08:00,"Update dependency to latest version (lz4, libevent, gtest) (#828)",unstable,True,False,3,lz4.cmake,cmake,2,2,4
a8d8ccbe97a755148011e5d2a87fae8596177913,819464715@qq.com,2022-09-09 01:22:16+08:00,noreply@github.com,2022-09-09 01:22:16+08:00,chore: better help info for x.py check -h (#838),unstable,True,False,1,x.py,py,2,2,4
1469746ddc9105faa4054ea95d9af61c9dce5fd9,hulk.website@gmail.com,2022-09-09 10:14:08+08:00,noreply@github.com,2022-09-09 10:14:08+08:00,"Fix successor commands won't be processed before receiving the next read event (#839)

Currently, we will stop processing commands when running into block commands
like BRPOP/BLPOP and there remained commands in the connection, but the connection
continues handling those commands since the read event was triggered.",unstable,True,False,2,redis_cmd.cc,cc,10,5,15
1469746ddc9105faa4054ea95d9af61c9dce5fd9,hulk.website@gmail.com,2022-09-09 10:14:08+08:00,noreply@github.com,2022-09-09 10:14:08+08:00,"Fix successor commands won't be processed before receiving the next read event (#839)

Currently, we will stop processing commands when running into block commands
like BRPOP/BLPOP and there remained commands in the connection, but the connection
continues handling those commands since the read event was triggered.",unstable,True,False,2,regression_test.go,go,5,6,11
bb6264b56410adb1239d3abbc684cbcd34088778,819464715@qq.com,2022-09-09 15:30:05+08:00,noreply@github.com,2022-09-09 15:30:05+08:00,"Move TCL test unit/type/incr to Go case (#837)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,incr_test.go,go,151,0,151
bb6264b56410adb1239d3abbc684cbcd34088778,819464715@qq.com,2022-09-09 15:30:05+08:00,noreply@github.com,2022-09-09 15:30:05+08:00,"Move TCL test unit/type/incr to Go case (#837)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,assertions.go,go,31,0,31
bb6264b56410adb1239d3abbc684cbcd34088778,819464715@qq.com,2022-09-09 15:30:05+08:00,noreply@github.com,2022-09-09 15:30:05+08:00,"Move TCL test unit/type/incr to Go case (#837)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,constants.go,go,22,0,22
bb6264b56410adb1239d3abbc684cbcd34088778,819464715@qq.com,2022-09-09 15:30:05+08:00,noreply@github.com,2022-09-09 15:30:05+08:00,"Move TCL test unit/type/incr to Go case (#837)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,test_helper.tcl,tcl,0,1,1
7b0821b01e32099633934883a805ad6341e1e9df,819464715@qq.com,2022-09-09 23:38:25+08:00,noreply@github.com,2022-09-09 23:38:25+08:00,Move TCL test unit/type/sint to Go case (#840),unstable,True,False,3,sint_test.go,go,52,0,52
7b0821b01e32099633934883a805ad6341e1e9df,819464715@qq.com,2022-09-09 23:38:25+08:00,noreply@github.com,2022-09-09 23:38:25+08:00,Move TCL test unit/type/sint to Go case (#840),unstable,True,False,3,test_helper.tcl,tcl,0,1,1
8a206b86cbd5eef847e468f0ffbbad9bb067d56a,twice.mliu@gmail.com,2022-09-10 12:30:36+08:00,noreply@github.com,2022-09-10 12:30:36+08:00,Report error if `CMAKE_OSX_DEPLOYMENT_TARGET` is not set on darwin (#843),unstable,True,False,1,luajit.cmake,cmake,4,0,4
fa01b036f2f61ec98f4c7bbec57f96db7009eba6,95634254+ColinChamber@users.noreply.github.com,2022-09-11 11:42:57+08:00,noreply@github.com,2022-09-11 11:42:57+08:00,fix: georadius should return empty set if the key does not exist (#845),unstable,True,False,2,redis_geo.cc,cc,1,1,2
fa01b036f2f61ec98f4c7bbec57f96db7009eba6,95634254+ColinChamber@users.noreply.github.com,2022-09-11 11:42:57+08:00,noreply@github.com,2022-09-11 11:42:57+08:00,fix: georadius should return empty set if the key does not exist (#845),unstable,True,False,2,geo.tcl,tcl,5,0,5
38ca47a650f0fbf8c338c6535c0c953607391c27,hulk.website@gmail.com,2022-09-11 12:03:59+08:00,noreply@github.com,2022-09-11 12:03:59+08:00,Move tcl keyspace test cases to Go (#846),unstable,True,False,3,keyspace_test.go,go,206,0,206
38ca47a650f0fbf8c338c6535c0c953607391c27,hulk.website@gmail.com,2022-09-11 12:03:59+08:00,noreply@github.com,2022-09-11 12:03:59+08:00,Move tcl keyspace test cases to Go (#846),unstable,True,False,3,test_helper.tcl,tcl,0,1,1
6715700980586b4d6c87cc60d9f75fda99bc7ee7,wander4096@gmail.com,2022-09-11 15:16:47+08:00,noreply@github.com,2022-09-11 15:16:47+08:00,"move to dedicated pacakge (#852)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,keyspace_test.go,go,1,1,2
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,kvrocks.yaml,yaml,26,5,31
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,CMakeLists.txt,txt,19,9,28
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,README.md,md,6,3,9
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,libevent.cmake,cmake,9,1,10
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,kvrocks.conf,conf,78,0,78
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,config.cc,cc,46,1,47
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,config.h,h,17,1,18
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,main.cc,cc,16,4,20
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,redis_connection.cc,cc,9,1,10
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,server.cc,cc,11,0,11
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,server.h,h,5,0,5
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,tls_util.cc,cc,241,0,241
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,tls_util.h,h,68,0,68
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,util.cc,cc,16,0,16
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,util.h,h,1,0,1
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,worker.cc,cc,59,13,72
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,worker.h,h,0,1,1
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,server.tcl,tcl,2,1,3
9240ba43c489e97d80ffb032bd35c64507e4f811,twice.mliu@gmail.com,2022-09-11 16:06:47+08:00,noreply@github.com,2022-09-11 16:06:47+08:00,"Add TLS support for kvrocks connections (#797)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,19,tls.tcl,tcl,20,20,40
2ebd603aa5772f31ab1e9cb8ca04a058cbb2df2a,wander4096@gmail.com,2022-09-11 20:12:17+08:00,noreply@github.com,2022-09-11 20:12:17+08:00,"Move TCL test unit/limits to Go case (#854)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,4,limits_test.go,go,60,0,60
2ebd603aa5772f31ab1e9cb8ca04a058cbb2df2a,wander4096@gmail.com,2022-09-11 20:12:17+08:00,noreply@github.com,2022-09-11 20:12:17+08:00,"Move TCL test unit/limits to Go case (#854)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,4,assertions.go,go,1,1,2
2ebd603aa5772f31ab1e9cb8ca04a058cbb2df2a,wander4096@gmail.com,2022-09-11 20:12:17+08:00,noreply@github.com,2022-09-11 20:12:17+08:00,"Move TCL test unit/limits to Go case (#854)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,4,test_helper.tcl,tcl,0,1,1
2402dfec05c582235dfb195bb1d4210584e59848,suica@users.noreply.github.com,2022-09-12 01:05:07+08:00,noreply@github.com,2022-09-12 01:05:07+08:00,Move TCL test unit/type/list-3 to Go case (#835),unstable,True,False,4,list_test.go,go,149,0,149
2402dfec05c582235dfb195bb1d4210584e59848,suica@users.noreply.github.com,2022-09-12 01:05:07+08:00,noreply@github.com,2022-09-12 01:05:07+08:00,Move TCL test unit/type/list-3 to Go case (#835),unstable,True,False,4,random.go,go,108,0,108
2402dfec05c582235dfb195bb1d4210584e59848,suica@users.noreply.github.com,2022-09-12 01:05:07+08:00,noreply@github.com,2022-09-12 01:05:07+08:00,Move TCL test unit/type/list-3 to Go case (#835),unstable,True,False,4,test_helper.tcl,tcl,0,1,1
e8efdf28260d31f181fc200ec9082f36d9294c47,torwigua@gmail.com,2022-09-12 13:52:04+03:00,noreply@github.com,2022-09-12 18:52:04+08:00,Add zstd to available compression algorithms (#863),unstable,True,False,6,CMakeLists.txt,txt,2,0,2
e8efdf28260d31f181fc200ec9082f36d9294c47,torwigua@gmail.com,2022-09-12 13:52:04+03:00,noreply@github.com,2022-09-12 18:52:04+08:00,Add zstd to available compression algorithms (#863),unstable,True,False,6,Findzstd.cmake,cmake,25,0,25
e8efdf28260d31f181fc200ec9082f36d9294c47,torwigua@gmail.com,2022-09-12 13:52:04+03:00,noreply@github.com,2022-09-12 18:52:04+08:00,Add zstd to available compression algorithms (#863),unstable,True,False,6,rocksdb.cmake,cmake,1,0,1
e8efdf28260d31f181fc200ec9082f36d9294c47,torwigua@gmail.com,2022-09-12 13:52:04+03:00,noreply@github.com,2022-09-12 18:52:04+08:00,Add zstd to available compression algorithms (#863),unstable,True,False,6,zstd.cmake,cmake,44,0,44
e8efdf28260d31f181fc200ec9082f36d9294c47,torwigua@gmail.com,2022-09-12 13:52:04+03:00,noreply@github.com,2022-09-12 18:52:04+08:00,Add zstd to available compression algorithms (#863),unstable,True,False,6,kvrocks.conf,conf,1,1,2
e8efdf28260d31f181fc200ec9082f36d9294c47,torwigua@gmail.com,2022-09-12 13:52:04+03:00,noreply@github.com,2022-09-12 18:52:04+08:00,Add zstd to available compression algorithms (#863),unstable,True,False,6,config.cc,cc,1,0,1
ad002c647e61673c153c0972e8b06df9c533aaf0,wander4096@gmail.com,2022-09-12 19:58:54+08:00,noreply@github.com,2022-09-12 19:58:54+08:00,"Move TCL test unit/config to Go case (#865)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,config_test.go,go,43,0,43
ad002c647e61673c153c0972e8b06df9c533aaf0,wander4096@gmail.com,2022-09-12 19:58:54+08:00,noreply@github.com,2022-09-12 19:58:54+08:00,"Move TCL test unit/config to Go case (#865)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,test_helper.tcl,tcl,0,1,1
dacce8b6d7ada42cbd8bc6d8a0d54f25bc8975dd,wander4096@gmail.com,2022-09-13 08:44:06+08:00,noreply@github.com,2022-09-13 08:44:06+08:00,"disable retry for go-redis client (#869)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,list_test.go,go,5,2,7
dacce8b6d7ada42cbd8bc6d8a0d54f25bc8975dd,wander4096@gmail.com,2022-09-13 08:44:06+08:00,noreply@github.com,2022-09-13 08:44:06+08:00,"disable retry for go-redis client (#869)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,server.go,go,8,1,9
500a766334f994cc239ead05d9fc62c8f52b5123,819464715@qq.com,2022-09-13 11:03:13+08:00,noreply@github.com,2022-09-13 11:03:13+08:00,Move TCL test unit/type/set to Go case (#858),unstable,True,False,4,set_test.go,go,704,0,704
500a766334f994cc239ead05d9fc62c8f52b5123,819464715@qq.com,2022-09-13 11:03:13+08:00,noreply@github.com,2022-09-13 11:03:13+08:00,Move TCL test unit/type/set to Go case (#858),unstable,True,False,4,random.go,go,5,0,5
500a766334f994cc239ead05d9fc62c8f52b5123,819464715@qq.com,2022-09-13 11:03:13+08:00,noreply@github.com,2022-09-13 11:03:13+08:00,Move TCL test unit/type/set to Go case (#858),unstable,True,False,4,test_helper.tcl,tcl,0,1,1
9b3938ed0c52934b61d14b2495c246705d4f02bd,wander4096@gmail.com,2022-09-13 12:05:44+08:00,noreply@github.com,2022-09-13 12:05:44+08:00,"Replace bench with test (#870)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,list_test.go,go,11,11,22
28261b403553469033e5e9c5411083ff844e1f6a,819464715@qq.com,2022-09-18 13:05:12+08:00,noreply@github.com,2022-09-18 13:05:12+08:00,Delete print in test (#883),unstable,True,False,1,cluster_test.cc,cc,0,1,1
231f7504db60506427ca091133debce2c987fe36,maplewish117@gmail.com,2022-09-18 18:39:23+08:00,noreply@github.com,2022-09-18 18:39:23+08:00,Implement the command `hello` (#881),unstable,True,False,7,redis_cmd.cc,cc,102,16,118
231f7504db60506427ca091133debce2c987fe36,maplewish117@gmail.com,2022-09-18 18:39:23+08:00,noreply@github.com,2022-09-18 18:39:23+08:00,Implement the command `hello` (#881),unstable,True,False,7,redis_connection.cc,cc,14,23,37
231f7504db60506427ca091133debce2c987fe36,maplewish117@gmail.com,2022-09-18 18:39:23+08:00,noreply@github.com,2022-09-18 18:39:23+08:00,Implement the command `hello` (#881),unstable,True,False,7,redis_reply.cc,cc,18,15,33
231f7504db60506427ca091133debce2c987fe36,maplewish117@gmail.com,2022-09-18 18:39:23+08:00,noreply@github.com,2022-09-18 18:39:23+08:00,Implement the command `hello` (#881),unstable,True,False,7,redis_reply.h,h,3,3,6
231f7504db60506427ca091133debce2c987fe36,maplewish117@gmail.com,2022-09-18 18:39:23+08:00,noreply@github.com,2022-09-18 18:39:23+08:00,Implement the command `hello` (#881),unstable,True,False,7,util.cc,cc,2,2,4
231f7504db60506427ca091133debce2c987fe36,maplewish117@gmail.com,2022-09-18 18:39:23+08:00,noreply@github.com,2022-09-18 18:39:23+08:00,Implement the command `hello` (#881),unstable,True,False,7,command_test.go,go,2,2,4
231f7504db60506427ca091133debce2c987fe36,maplewish117@gmail.com,2022-09-18 18:39:23+08:00,noreply@github.com,2022-09-18 18:39:23+08:00,Implement the command `hello` (#881),unstable,True,False,7,hello_test.go,go,117,0,117
f76789f33b4ebf325ad91d6b55906975b987013e,twice.mliu@gmail.com,2022-09-18 22:51:55+08:00,noreply@github.com,2022-09-18 22:51:55+08:00,fix: Travis CI should report failure if commands fail (#887),unstable,True,False,2,.travis.yml,yml,5,2,7
f76789f33b4ebf325ad91d6b55906975b987013e,twice.mliu@gmail.com,2022-09-18 22:51:55+08:00,noreply@github.com,2022-09-18 22:51:55+08:00,fix: Travis CI should report failure if commands fail (#887),unstable,True,False,2,Dockerfile,None,1,1,2
ca2a496505b9a0dc0542d6d4674116a4f39f2056,39056297+IoCing@users.noreply.github.com,2022-09-19 14:37:35+08:00,noreply@github.com,2022-09-19 14:37:35+08:00,"Move TCL test unit/quit to Go case (#871)

This closes #857.

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Ruixiang Tan <819464715@qq.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,quit_test.go,go,88,0,88
ca2a496505b9a0dc0542d6d4674116a4f39f2056,39056297+IoCing@users.noreply.github.com,2022-09-19 14:37:35+08:00,noreply@github.com,2022-09-19 14:37:35+08:00,"Move TCL test unit/quit to Go case (#871)

This closes #857.

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Ruixiang Tan <819464715@qq.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,test_helper.tcl,tcl,0,1,1
d09ab67b71e60383367b1c90441419d949a96fe3,819464715@qq.com,2022-09-19 15:23:37+08:00,noreply@github.com,2022-09-19 15:23:37+08:00,"Move TCL test unit/type/bitmap to Go case (#875)

This closes #823.",unstable,True,False,3,bitmap_test.go,go,238,0,238
d09ab67b71e60383367b1c90441419d949a96fe3,819464715@qq.com,2022-09-19 15:23:37+08:00,noreply@github.com,2022-09-19 15:23:37+08:00,"Move TCL test unit/type/bitmap to Go case (#875)

This closes #823.",unstable,True,False,3,test_helper.tcl,tcl,0,1,1
d526d6a8333b71cdb87ef6892934f15c80c5645d,wander4096@gmail.com,2022-09-19 17:25:11+08:00,noreply@github.com,2022-09-19 17:25:11+08:00,"refactor: quit test (#888)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,limits_test.go,go,1,1,2
d526d6a8333b71cdb87ef6892934f15c80c5645d,wander4096@gmail.com,2022-09-19 17:25:11+08:00,noreply@github.com,2022-09-19 17:25:11+08:00,"refactor: quit test (#888)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,quit_test.go,go,33,36,69
d526d6a8333b71cdb87ef6892934f15c80c5645d,wander4096@gmail.com,2022-09-19 17:25:11+08:00,noreply@github.com,2022-09-19 17:25:11+08:00,"refactor: quit test (#888)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,tcp_client.go,go,19,0,19
fc09059083304f922ce74f6fbaa368aa27777406,95634254+ColinChamber@users.noreply.github.com,2022-09-20 10:06:26+08:00,noreply@github.com,2022-09-20 10:06:26+08:00,fix: file should be closed in gocase StartServer func (#892),unstable,True,False,1,server.go,go,1,0,1
62daa73f03fb9675e5cdbcb578f18017d6196864,819464715@qq.com,2022-09-21 00:14:11+08:00,noreply@github.com,2022-09-21 00:14:11+08:00,Add the hrange command (#895),unstable,True,False,6,redis_cmd.cc,cc,48,7,55
62daa73f03fb9675e5cdbcb578f18017d6196864,819464715@qq.com,2022-09-21 00:14:11+08:00,noreply@github.com,2022-09-21 00:14:11+08:00,Add the hrange command (#895),unstable,True,False,6,redis_hash.cc,cc,34,0,34
62daa73f03fb9675e5cdbcb578f18017d6196864,819464715@qq.com,2022-09-21 00:14:11+08:00,noreply@github.com,2022-09-21 00:14:11+08:00,Add the hrange command (#895),unstable,True,False,6,redis_hash.h,h,2,0,2
62daa73f03fb9675e5cdbcb578f18017d6196864,819464715@qq.com,2022-09-21 00:14:11+08:00,noreply@github.com,2022-09-21 00:14:11+08:00,Add the hrange command (#895),unstable,True,False,6,t_hash_test.cc,cc,33,0,33
62daa73f03fb9675e5cdbcb578f18017d6196864,819464715@qq.com,2022-09-21 00:14:11+08:00,noreply@github.com,2022-09-21 00:14:11+08:00,Add the hrange command (#895),unstable,True,False,6,command_test.go,go,2,2,4
62daa73f03fb9675e5cdbcb578f18017d6196864,819464715@qq.com,2022-09-21 00:14:11+08:00,noreply@github.com,2022-09-21 00:14:11+08:00,Add the hrange command (#895),unstable,True,False,6,hash_test.go,go,87,0,87
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,kvrocks.conf,conf,39,0,39
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,config.cc,cc,8,0,8
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,config.h,h,9,1,10
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,redis_bitmap.cc,cc,3,3,6
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,redis_bitmap_string.cc,cc,1,1,2
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,redis_cmd.cc,cc,3,0,3
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,redis_db.cc,cc,2,2,4
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,redis_hash.cc,cc,4,4,8
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,redis_list.cc,cc,9,9,18
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,redis_pubsub.cc,cc,1,1,2
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,redis_set.cc,cc,4,4,8
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,redis_sortedint.cc,cc,2,2,4
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,redis_stream.cc,cc,3,3,6
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,redis_string.cc,cc,5,5,10
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,redis_zset.cc,cc,7,7,14
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,server.cc,cc,1,1,2
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,storage.cc,cc,13,4,17
01c2d87ce0d8e8bcd4cd2f0ff5ae9150040dad8d,tufitko@gmail.com,2022-09-20 23:48:05+07:00,noreply@github.com,2022-09-21 00:48:05+08:00,Export the rocksdb write options (#885),unstable,True,False,18,storage.h,h,4,0,4
04f25c878f8ae80265f1071b674ded0d008e6715,wander4096@gmail.com,2022-09-21 10:44:46+08:00,noreply@github.com,2022-09-21 10:44:46+08:00,"test: harden quit_test and list_test (#899)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,quit_test.go,go,1,1,2
04f25c878f8ae80265f1071b674ded0d008e6715,wander4096@gmail.com,2022-09-21 10:44:46+08:00,noreply@github.com,2022-09-21 10:44:46+08:00,"test: harden quit_test and list_test (#899)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,list_test.go,go,2,1,3
87644ab5672fdcb8fe7d27e811ab115a88eb897f,52393536+xiaobiaozhao@users.noreply.github.com,2022-09-21 10:59:14+08:00,noreply@github.com,2022-09-21 10:59:14+08:00,"Add EVAL_RO (#782)

* ✨ feat: update lua vm

* ✨ feat: update eval_ro

* 🧪 test: add test case

* 🐞 fix: fix not set connection

* 🧪 test: add *sha test case

* 🌈 style: rm ;

* 🧪 test: command 180 -> 182

* 🐞 fix: fix exclusive issue

* Update command_test.go

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,redis_cmd.cc,cc,25,1,26
87644ab5672fdcb8fe7d27e811ab115a88eb897f,52393536+xiaobiaozhao@users.noreply.github.com,2022-09-21 10:59:14+08:00,noreply@github.com,2022-09-21 10:59:14+08:00,"Add EVAL_RO (#782)

* ✨ feat: update lua vm

* ✨ feat: update eval_ro

* 🧪 test: add test case

* 🐞 fix: fix not set connection

* 🧪 test: add *sha test case

* 🌈 style: rm ;

* 🧪 test: command 180 -> 182

* 🐞 fix: fix exclusive issue

* Update command_test.go

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,redis_connection.cc,cc,15,5,20
87644ab5672fdcb8fe7d27e811ab115a88eb897f,52393536+xiaobiaozhao@users.noreply.github.com,2022-09-21 10:59:14+08:00,noreply@github.com,2022-09-21 10:59:14+08:00,"Add EVAL_RO (#782)

* ✨ feat: update lua vm

* ✨ feat: update eval_ro

* 🧪 test: add test case

* 🐞 fix: fix not set connection

* 🧪 test: add *sha test case

* 🌈 style: rm ;

* 🧪 test: command 180 -> 182

* 🐞 fix: fix exclusive issue

* Update command_test.go

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,scripting.cc,cc,27,7,34
87644ab5672fdcb8fe7d27e811ab115a88eb897f,52393536+xiaobiaozhao@users.noreply.github.com,2022-09-21 10:59:14+08:00,noreply@github.com,2022-09-21 10:59:14+08:00,"Add EVAL_RO (#782)

* ✨ feat: update lua vm

* ✨ feat: update eval_ro

* 🧪 test: add test case

* 🐞 fix: fix not set connection

* 🧪 test: add *sha test case

* 🌈 style: rm ;

* 🧪 test: command 180 -> 182

* 🐞 fix: fix exclusive issue

* Update command_test.go

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,scripting.h,h,6,6,12
87644ab5672fdcb8fe7d27e811ab115a88eb897f,52393536+xiaobiaozhao@users.noreply.github.com,2022-09-21 10:59:14+08:00,noreply@github.com,2022-09-21 10:59:14+08:00,"Add EVAL_RO (#782)

* ✨ feat: update lua vm

* ✨ feat: update eval_ro

* 🧪 test: add test case

* 🐞 fix: fix not set connection

* 🧪 test: add *sha test case

* 🌈 style: rm ;

* 🧪 test: command 180 -> 182

* 🐞 fix: fix exclusive issue

* Update command_test.go

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,worker.cc,cc,4,1,5
87644ab5672fdcb8fe7d27e811ab115a88eb897f,52393536+xiaobiaozhao@users.noreply.github.com,2022-09-21 10:59:14+08:00,noreply@github.com,2022-09-21 10:59:14+08:00,"Add EVAL_RO (#782)

* ✨ feat: update lua vm

* ✨ feat: update eval_ro

* 🧪 test: add test case

* 🐞 fix: fix not set connection

* 🧪 test: add *sha test case

* 🌈 style: rm ;

* 🧪 test: command 180 -> 182

* 🐞 fix: fix exclusive issue

* Update command_test.go

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,worker.h,h,4,0,4
87644ab5672fdcb8fe7d27e811ab115a88eb897f,52393536+xiaobiaozhao@users.noreply.github.com,2022-09-21 10:59:14+08:00,noreply@github.com,2022-09-21 10:59:14+08:00,"Add EVAL_RO (#782)

* ✨ feat: update lua vm

* ✨ feat: update eval_ro

* 🧪 test: add test case

* 🐞 fix: fix not set connection

* 🧪 test: add *sha test case

* 🌈 style: rm ;

* 🧪 test: command 180 -> 182

* 🐞 fix: fix exclusive issue

* Update command_test.go

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,command_test.go,go,0,7,7
87644ab5672fdcb8fe7d27e811ab115a88eb897f,52393536+xiaobiaozhao@users.noreply.github.com,2022-09-21 10:59:14+08:00,noreply@github.com,2022-09-21 10:59:14+08:00,"Add EVAL_RO (#782)

* ✨ feat: update lua vm

* ✨ feat: update eval_ro

* 🧪 test: add test case

* 🐞 fix: fix not set connection

* 🧪 test: add *sha test case

* 🌈 style: rm ;

* 🧪 test: command 180 -> 182

* 🐞 fix: fix exclusive issue

* Update command_test.go

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,scripting.tcl,tcl,22,0,22
e8721a270d23345f385af6db0617c3549d6e6812,wander4096@gmail.com,2022-09-21 14:19:34+08:00,noreply@github.com,2022-09-21 14:19:34+08:00,Move TCL test unit/scripting to Go case  (#900),unstable,True,False,7,info_test.go,go,12,22,34
e8721a270d23345f385af6db0617c3549d6e6812,wander4096@gmail.com,2022-09-21 14:19:34+08:00,noreply@github.com,2022-09-21 14:19:34+08:00,Move TCL test unit/scripting to Go case  (#900),unstable,True,False,7,scripting_test.go,go,505,0,505
e8721a270d23345f385af6db0617c3549d6e6812,wander4096@gmail.com,2022-09-21 14:19:34+08:00,noreply@github.com,2022-09-21 14:19:34+08:00,Move TCL test unit/scripting to Go case  (#900),unstable,True,False,7,conditions.go,go,55,0,55
e8721a270d23345f385af6db0617c3549d6e6812,wander4096@gmail.com,2022-09-21 14:19:34+08:00,noreply@github.com,2022-09-21 14:19:34+08:00,Move TCL test unit/scripting to Go case  (#900),unstable,True,False,7,constants.go,go,1,0,1
e8721a270d23345f385af6db0617c3549d6e6812,wander4096@gmail.com,2022-09-21 14:19:34+08:00,noreply@github.com,2022-09-21 14:19:34+08:00,Move TCL test unit/scripting to Go case  (#900),unstable,True,False,7,server.go,go,9,1,10
e8721a270d23345f385af6db0617c3549d6e6812,wander4096@gmail.com,2022-09-21 14:19:34+08:00,noreply@github.com,2022-09-21 14:19:34+08:00,Move TCL test unit/scripting to Go case  (#900),unstable,True,False,7,test_helper.tcl,tcl,0,1,1
399a33d06af9542b3758347a5ee0c5844a032e3c,twice.mliu@gmail.com,2022-09-22 17:58:58+08:00,noreply@github.com,2022-09-22 17:58:58+08:00,Support quoted string and inline comment in config (#849),unstable,True,False,5,config.cc,cc,20,23,43
399a33d06af9542b3758347a5ee0c5844a032e3c,twice.mliu@gmail.com,2022-09-22 17:58:58+08:00,noreply@github.com,2022-09-22 17:58:58+08:00,Support quoted string and inline comment in config (#849),unstable,True,False,5,config.h,h,1,1,2
399a33d06af9542b3758347a5ee0c5844a032e3c,twice.mliu@gmail.com,2022-09-22 17:58:58+08:00,noreply@github.com,2022-09-22 17:58:58+08:00,Support quoted string and inline comment in config (#849),unstable,True,False,5,config_util.cc,cc,195,0,195
399a33d06af9542b3758347a5ee0c5844a032e3c,twice.mliu@gmail.com,2022-09-22 17:58:58+08:00,noreply@github.com,2022-09-22 17:58:58+08:00,Support quoted string and inline comment in config (#849),unstable,True,False,5,config_util.h,h,40,0,40
399a33d06af9542b3758347a5ee0c5844a032e3c,twice.mliu@gmail.com,2022-09-22 17:58:58+08:00,noreply@github.com,2022-09-22 17:58:58+08:00,Support quoted string and inline comment in config (#849),unstable,True,False,5,config_test.cc,cc,34,0,34
d469155d7493ef2d61559eb525e84b3758dd7cbc,twice.mliu@gmail.com,2022-09-23 08:36:25+08:00,noreply@github.com,2022-09-23 08:36:25+08:00,Fix sanitizer report checking in CI (#912),unstable,True,False,1,kvrocks.yaml,yaml,2,2,4
671cab35bbbaf57aeb969025c3c688d8e0dd7e6b,819464715@qq.com,2022-09-23 09:45:03+08:00,noreply@github.com,2022-09-23 09:45:03+08:00,Remove unnecessary Tostring (#909),unstable,True,False,1,redis_bitmap.cc,cc,1,2,3
114af54a57aa5949910d53d81c8d67002c9d3b41,tufitko@gmail.com,2022-09-23 08:46:19+07:00,noreply@github.com,2022-09-23 09:46:19+08:00,Add the FilterBlobByKey for SubKeyFilter (#902),unstable,True,False,2,compact_filter.cc,cc,53,26,79
114af54a57aa5949910d53d81c8d67002c9d3b41,tufitko@gmail.com,2022-09-23 08:46:19+07:00,noreply@github.com,2022-09-23 09:46:19+08:00,Add the FilterBlobByKey for SubKeyFilter (#902),unstable,True,False,2,compact_filter.h,h,5,1,6
2c88a86205b2c52ec445e972b485ecd4f42e2b5e,52746580+shangxiaoxiong@users.noreply.github.com,2022-09-23 13:46:35+08:00,noreply@github.com,2022-09-23 13:46:35+08:00,Fix config set rocksdb.blob_garbage_collection_age_cutoff (#914),unstable,True,False,1,config.cc,cc,1,1,2
afd8668ed536f96d3efa0551c17819b2c28f5e7e,caipengbo@outlook.com,2022-09-24 17:00:48+08:00,noreply@github.com,2022-09-24 17:00:48+08:00,Avoid using Get when iterating sub-keys during migration (#906),unstable,True,False,2,slot_migrate.cc,cc,4,18,22
afd8668ed536f96d3efa0551c17819b2c28f5e7e,caipengbo@outlook.com,2022-09-24 17:00:48+08:00,noreply@github.com,2022-09-24 17:00:48+08:00,Avoid using Get when iterating sub-keys during migration (#906),unstable,True,False,2,slot_migrate.h,h,1,2,3
231d48d5b0129ca0ebb5e070bb769264dd0d0ce5,95634254+ColinChamber@users.noreply.github.com,2022-09-24 22:00:36+08:00,noreply@github.com,2022-09-24 22:00:36+08:00,Send SIGTERM after finishing the unit test (#898),unstable,True,False,2,constants.go,go,6,0,6
231d48d5b0129ca0ebb5e070bb769264dd0d0ce5,95634254+ColinChamber@users.noreply.github.com,2022-09-24 22:00:36+08:00,noreply@github.com,2022-09-24 22:00:36+08:00,Send SIGTERM after finishing the unit test (#898),unstable,True,False,2,server.go,go,7,2,9
91cebf2ccec66c711d64cd207b90ff9e600a565d,hulk.website@gmail.com,2022-09-24 23:14:22+08:00,noreply@github.com,2022-09-24 23:14:22+08:00,Disable the TLS by default (#911),unstable,True,False,4,kvrocks.yaml,yaml,14,6,20
91cebf2ccec66c711d64cd207b90ff9e600a565d,hulk.website@gmail.com,2022-09-24 23:14:22+08:00,noreply@github.com,2022-09-24 23:14:22+08:00,Disable the TLS by default (#911),unstable,True,False,4,CMakeLists.txt,txt,1,1,2
91cebf2ccec66c711d64cd207b90ff9e600a565d,hulk.website@gmail.com,2022-09-24 23:14:22+08:00,noreply@github.com,2022-09-24 23:14:22+08:00,Disable the TLS by default (#911),unstable,True,False,4,Dockerfile,None,2,2,4
91cebf2ccec66c711d64cd207b90ff9e600a565d,hulk.website@gmail.com,2022-09-24 23:14:22+08:00,noreply@github.com,2022-09-24 23:14:22+08:00,Disable the TLS by default (#911),unstable,True,False,4,README.md,md,7,0,7
6d8e8f56269ac5e77e3dba88feeae2f1fb6e54db,819464715@qq.com,2022-09-25 16:04:27+08:00,noreply@github.com,2022-09-25 16:04:27+08:00,Replace `std::stol` with ParseInt (#897),unstable,True,False,7,redis_cmd.cc,cc,87,90,177
6d8e8f56269ac5e77e3dba88feeae2f1fb6e54db,819464715@qq.com,2022-09-25 16:04:27+08:00,noreply@github.com,2022-09-25 16:04:27+08:00,Replace `std::stol` with ParseInt (#897),unstable,True,False,7,redis_hash.cc,cc,7,6,13
6d8e8f56269ac5e77e3dba88feeae2f1fb6e54db,819464715@qq.com,2022-09-25 16:04:27+08:00,noreply@github.com,2022-09-25 16:04:27+08:00,Replace `std::stol` with ParseInt (#897),unstable,True,False,7,redis_request.cc,cc,4,3,7
6d8e8f56269ac5e77e3dba88feeae2f1fb6e54db,819464715@qq.com,2022-09-25 16:04:27+08:00,noreply@github.com,2022-09-25 16:04:27+08:00,Replace `std::stol` with ParseInt (#897),unstable,True,False,7,redis_string.cc,cc,5,5,10
6d8e8f56269ac5e77e3dba88feeae2f1fb6e54db,819464715@qq.com,2022-09-25 16:04:27+08:00,noreply@github.com,2022-09-25 16:04:27+08:00,Replace `std::stol` with ParseInt (#897),unstable,True,False,7,util.cc,cc,9,14,23
6d8e8f56269ac5e77e3dba88feeae2f1fb6e54db,819464715@qq.com,2022-09-25 16:04:27+08:00,noreply@github.com,2022-09-25 16:04:27+08:00,Replace `std::stol` with ParseInt (#897),unstable,True,False,7,t_hash_test.cc,cc,6,2,8
6d8e8f56269ac5e77e3dba88feeae2f1fb6e54db,819464715@qq.com,2022-09-25 16:04:27+08:00,noreply@github.com,2022-09-25 16:04:27+08:00,Replace `std::stol` with ParseInt (#897),unstable,True,False,7,hash.tcl,tcl,2,2,4
9b6cc11e4a26c106b906e62f8e968ac682033ba2,hulk.website@gmail.com,2022-09-26 17:17:31+08:00,noreply@github.com,2022-09-26 17:17:31+08:00,Fix many typos in cluster.cc (#919),unstable,True,False,4,cluster.cc,cc,44,38,82
9b6cc11e4a26c106b906e62f8e968ac682033ba2,hulk.website@gmail.com,2022-09-26 17:17:31+08:00,noreply@github.com,2022-09-26 17:17:31+08:00,Fix many typos in cluster.cc (#919),unstable,True,False,4,cluster_test.cc,cc,5,5,10
9b6cc11e4a26c106b906e62f8e968ac682033ba2,hulk.website@gmail.com,2022-09-26 17:17:31+08:00,noreply@github.com,2022-09-26 17:17:31+08:00,Fix many typos in cluster.cc (#919),unstable,True,False,4,rwlock_test.cc,cc,1,1,2
9b6cc11e4a26c106b906e62f8e968ac682033ba2,hulk.website@gmail.com,2022-09-26 17:17:31+08:00,noreply@github.com,2022-09-26 17:17:31+08:00,Fix many typos in cluster.cc (#919),unstable,True,False,4,cluster.tcl,tcl,1,1,2
31ded36ad97ca3ca4e3d1a33b2dd4cde0990817e,torwigua@gmail.com,2022-09-27 04:41:14+03:00,noreply@github.com,2022-09-27 09:41:14+08:00,Return from HRANGE if key wasn't found (#923),unstable,True,False,2,redis_hash.cc,cc,3,1,4
31ded36ad97ca3ca4e3d1a33b2dd4cde0990817e,torwigua@gmail.com,2022-09-27 04:41:14+03:00,noreply@github.com,2022-09-27 09:41:14+08:00,Return from HRANGE if key wasn't found (#923),unstable,True,False,2,t_hash_test.cc,cc,8,1,9
cc97478a578387acc5c411a3f52432ff6de1c554,819464715@qq.com,2022-09-27 12:55:15+08:00,noreply@github.com,2022-09-27 12:55:15+08:00,Fix uses the host as the port number in test case (#922),unstable,True,False,1,slotmigrate.tcl,tcl,18,18,36
da0d77680a8cf0ef678c1e1c8debea0f7dffdee3,39056297+IoCing@users.noreply.github.com,2022-09-27 23:31:07+08:00,noreply@github.com,2022-09-27 23:31:07+08:00,"Move TCL test unit/type/hash to Go case (#903)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,4,hash_test.go,go,617,37,654
da0d77680a8cf0ef678c1e1c8debea0f7dffdee3,39056297+IoCing@users.noreply.github.com,2022-09-27 23:31:07+08:00,noreply@github.com,2022-09-27 23:31:07+08:00,"Move TCL test unit/type/hash to Go case (#903)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,4,random.go,go,2,2,4
da0d77680a8cf0ef678c1e1c8debea0f7dffdee3,39056297+IoCing@users.noreply.github.com,2022-09-27 23:31:07+08:00,noreply@github.com,2022-09-27 23:31:07+08:00,"Move TCL test unit/type/hash to Go case (#903)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,4,test_helper.tcl,tcl,0,1,1
b94ea81a88dbc4c8dc066032856b769dbcbf3283,impc53802957@163.com,2022-09-28 13:24:04+08:00,noreply@github.com,2022-09-28 13:24:04+08:00,Support EXAT/PEXAT option in the set command (#901),unstable,True,False,4,redis_cmd.cc,cc,35,8,43
b94ea81a88dbc4c8dc066032856b769dbcbf3283,impc53802957@163.com,2022-09-28 13:24:04+08:00,noreply@github.com,2022-09-28 13:24:04+08:00,Support EXAT/PEXAT option in the set command (#901),unstable,True,False,4,slot_migrate.cc,cc,6,5,11
b94ea81a88dbc4c8dc066032856b769dbcbf3283,impc53802957@163.com,2022-09-28 13:24:04+08:00,noreply@github.com,2022-09-28 13:24:04+08:00,Support EXAT/PEXAT option in the set command (#901),unstable,True,False,4,slotmigrate.tcl,tcl,8,0,8
b94ea81a88dbc4c8dc066032856b769dbcbf3283,impc53802957@163.com,2022-09-28 13:24:04+08:00,noreply@github.com,2022-09-28 13:24:04+08:00,Support EXAT/PEXAT option in the set command (#901),unstable,True,False,4,string.tcl,tcl,51,12,63
d377b8a9249c488fdcc78e87dd883b2c34ee678f,aleks.raiden@gmail.com,2022-09-29 21:49:05+03:00,noreply@github.com,2022-09-30 02:49:05+08:00,Add missing `return`s in redis_metadata.cc (#932),unstable,True,False,2,redis_metadata.cc,cc,4,4,8
d377b8a9249c488fdcc78e87dd883b2c34ee678f,aleks.raiden@gmail.com,2022-09-29 21:49:05+03:00,noreply@github.com,2022-09-30 02:49:05+08:00,Add missing `return`s in redis_metadata.cc (#932),unstable,True,False,2,redis_stream.cc,cc,1,1,2
ea18a408f50a31ff027824d8a46ca52438832e14,hulk.website@gmail.com,2022-09-30 02:49:49+08:00,noreply@github.com,2022-09-30 02:49:49+08:00,Add the LuaJIT license to NOTICE (#917),unstable,True,False,1,NOTICE,None,59,1,60
a8838aca6d408c98d4d0cdf932855944e72f9bf8,wander4096@gmail.com,2022-09-30 19:08:13+08:00,noreply@github.com,2022-09-30 19:08:13+08:00,"Move TCL test unit/scan to Go case  (#934)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,go.mod,mod,1,0,1
a8838aca6d408c98d4d0cdf932855944e72f9bf8,wander4096@gmail.com,2022-09-30 19:08:13+08:00,noreply@github.com,2022-09-30 19:08:13+08:00,"Move TCL test unit/scan to Go case  (#934)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,go.sum,sum,3,1,4
a8838aca6d408c98d4d0cdf932855944e72f9bf8,wander4096@gmail.com,2022-09-30 19:08:13+08:00,noreply@github.com,2022-09-30 19:08:13+08:00,"Move TCL test unit/scan to Go case  (#934)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,info_test.go,go,12,12,24
a8838aca6d408c98d4d0cdf932855944e72f9bf8,wander4096@gmail.com,2022-09-30 19:08:13+08:00,noreply@github.com,2022-09-30 19:08:13+08:00,"Move TCL test unit/scan to Go case  (#934)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,scan_test.go,go,294,0,294
a8838aca6d408c98d4d0cdf932855944e72f9bf8,wander4096@gmail.com,2022-09-30 19:08:13+08:00,noreply@github.com,2022-09-30 19:08:13+08:00,"Move TCL test unit/scan to Go case  (#934)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,scripting_test.go,go,3,3,6
a8838aca6d408c98d4d0cdf932855944e72f9bf8,wander4096@gmail.com,2022-09-30 19:08:13+08:00,noreply@github.com,2022-09-30 19:08:13+08:00,"Move TCL test unit/scan to Go case  (#934)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,client.go,go,19,7,26
a8838aca6d408c98d4d0cdf932855944e72f9bf8,wander4096@gmail.com,2022-09-30 19:08:13+08:00,noreply@github.com,2022-09-30 19:08:13+08:00,"Move TCL test unit/scan to Go case  (#934)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,server.go,go,1,1,2
a8838aca6d408c98d4d0cdf932855944e72f9bf8,wander4096@gmail.com,2022-09-30 19:08:13+08:00,noreply@github.com,2022-09-30 19:08:13+08:00,"Move TCL test unit/scan to Go case  (#934)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,tcp_client.go,go,7,7,14
a8838aca6d408c98d4d0cdf932855944e72f9bf8,wander4096@gmail.com,2022-09-30 19:08:13+08:00,noreply@github.com,2022-09-30 19:08:13+08:00,"Move TCL test unit/scan to Go case  (#934)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,test_helper.tcl,tcl,0,1,1
648df4ba27914041ddd3a26765c9e2d543633e8f,twice.mliu@gmail.com,2022-10-03 09:51:14+08:00,noreply@github.com,2022-10-03 09:51:14+08:00,feat: add StatusOr#ValueOr (#936),unstable,True,False,2,status.h,h,32,0,32
648df4ba27914041ddd3a26765c9e2d543633e8f,twice.mliu@gmail.com,2022-10-03 09:51:14+08:00,noreply@github.com,2022-10-03 09:51:14+08:00,feat: add StatusOr#ValueOr (#936),unstable,True,False,2,status_test.cc,cc,20,0,20
8f57d6334dc39843bf89395f41ed0426b006a676,wander4096@gmail.com,2022-10-03 12:18:49+08:00,noreply@github.com,2022-10-03 12:18:49+08:00,"test: tidy constants (#937)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,scripting_test.go,go,8,7,15
8f57d6334dc39843bf89395f41ed0426b006a676,wander4096@gmail.com,2022-10-03 12:18:49+08:00,noreply@github.com,2022-10-03 12:18:49+08:00,"test: tidy constants (#937)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,constants.go,go,3,2,5
8f57d6334dc39843bf89395f41ed0426b006a676,wander4096@gmail.com,2022-10-03 12:18:49+08:00,noreply@github.com,2022-10-03 12:18:49+08:00,"test: tidy constants (#937)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,server.go,go,1,1,2
e5ea3911828e336348f139b0612041d277a1c1ef,wander4096@gmail.com,2022-10-03 21:08:22+08:00,noreply@github.com,2022-10-03 21:08:22+08:00,"refactor: go cases with var flags (#939)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,server.go,go,12,4,16
e5ea3911828e336348f139b0612041d277a1c1ef,wander4096@gmail.com,2022-10-03 21:08:22+08:00,noreply@github.com,2022-10-03 21:08:22+08:00,"refactor: go cases with var flags (#939)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,x.py,py,9,8,17
c5cf582469063132f5739e5a628ffb8f5babcc14,aleks.raiden@gmail.com,2022-10-04 02:25:55+03:00,noreply@github.com,2022-10-04 07:25:55+08:00,Update jemalloc to 5.3.0 (#940),unstable,True,False,1,jemalloc.cmake,cmake,2,2,4
43cca6a1ec50bfc850b8d9d08c552a61de8c0034,819464715@qq.com,2022-10-04 10:54:44+08:00,noreply@github.com,2022-10-04 10:54:44+08:00,Move TCL test unit/slowlog to Go case (#935),unstable,True,False,3,slowlog_test.go,go,164,0,164
43cca6a1ec50bfc850b8d9d08c552a61de8c0034,819464715@qq.com,2022-10-04 10:54:44+08:00,noreply@github.com,2022-10-04 10:54:44+08:00,Move TCL test unit/slowlog to Go case (#935),unstable,True,False,3,test_helper.tcl,tcl,0,1,1
e67437605b4b276bc91df653a6617ffa14ea15ac,95634254+ColinChamber@users.noreply.github.com,2022-10-04 10:57:49+08:00,noreply@github.com,2022-10-04 10:57:49+08:00,fix: ping with arg should return bulk string (#933),unstable,True,False,2,redis_cmd.cc,cc,8,2,10
e67437605b4b276bc91df653a6617ffa14ea15ac,95634254+ColinChamber@users.noreply.github.com,2022-10-04 10:57:49+08:00,noreply@github.com,2022-10-04 10:57:49+08:00,fix: ping with arg should return bulk string (#933),unstable,True,False,2,introspection_test.go,go,52,0,52
5401c0886909d38eb18f5f6b48bb9a3f7e096bbf,52393536+xiaobiaozhao@users.noreply.github.com,2022-10-04 11:12:03+08:00,noreply@github.com,2022-10-04 11:12:03+08:00,"Use lua instead of luaJIT by default (#916)

* build: 🔧 def build use lua vm
* 🐎 ci: add ubuntu with luajit *San
* 🐎 ci: update ci case
* 📃 docs: mv lua build ops
* 📃 docs: update readme

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,3,kvrocks.yaml,yaml,17,3,20
5401c0886909d38eb18f5f6b48bb9a3f7e096bbf,52393536+xiaobiaozhao@users.noreply.github.com,2022-10-04 11:12:03+08:00,noreply@github.com,2022-10-04 11:12:03+08:00,"Use lua instead of luaJIT by default (#916)

* build: 🔧 def build use lua vm
* 🐎 ci: add ubuntu with luajit *San
* 🐎 ci: update ci case
* 📃 docs: mv lua build ops
* 📃 docs: update readme

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,3,CMakeLists.txt,txt,1,1,2
5401c0886909d38eb18f5f6b48bb9a3f7e096bbf,52393536+xiaobiaozhao@users.noreply.github.com,2022-10-04 11:12:03+08:00,noreply@github.com,2022-10-04 11:12:03+08:00,"Use lua instead of luaJIT by default (#916)

* build: 🔧 def build use lua vm
* 🐎 ci: add ubuntu with luajit *San
* 🐎 ci: update ci case
* 📃 docs: mv lua build ops
* 📃 docs: update readme

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,3,README.md,md,8,2,10
b16dc76e3504593e1d6266ceec6746009e0a4b98,wander4096@gmail.com,2022-10-04 20:03:24+08:00,noreply@github.com,2022-10-04 20:03:24+08:00,"test: fix go cases package name (#951)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,hello_test.go,go,1,1,2
b16dc76e3504593e1d6266ceec6746009e0a4b98,wander4096@gmail.com,2022-10-04 20:03:24+08:00,noreply@github.com,2022-10-04 20:03:24+08:00,"test: fix go cases package name (#951)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,info_test.go,go,1,1,2
b16dc76e3504593e1d6266ceec6746009e0a4b98,wander4096@gmail.com,2022-10-04 20:03:24+08:00,noreply@github.com,2022-10-04 20:03:24+08:00,"test: fix go cases package name (#951)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,introspection_test.go,go,1,1,2
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,kvrocks.yaml,yaml,27,27,54
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,compact_filter.cc,cc,4,1,5
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,compact_filter.h,h,4,4,8
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,config.cc,cc,9,9,18
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,config.h,h,3,3,6
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,encoding.h,h,2,1,3
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,lock_manager.h,h,4,4,8
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,parse_util.h,h,2,1,3
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,redis_bitmap.h,h,3,3,6
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,redis_bitmap_string.cc,cc,1,1,2
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,redis_cmd.cc,cc,69,73,142
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,redis_cmd.h,h,8,8,16
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,redis_connection.h,h,4,4,8
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,redis_hash.cc,cc,7,5,12
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,redis_hash.h,h,3,3,6
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,redis_metadata.cc,cc,8,5,13
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,redis_metadata.h,h,3,3,6
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,redis_reply.cc,cc,1,0,1
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,redis_reply.h,h,3,2,5
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,redis_request.cc,cc,11,10,21
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,redis_request.h,h,3,2,5
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,redis_stream.cc,cc,5,3,8
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,redis_stream.h,h,2,2,4
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,redis_stream_base.h,h,3,3,6
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,replication.cc,cc,9,9,18
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,replication.h,h,8,7,15
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,server.cc,cc,11,9,20
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,slot_import.h,h,4,3,7
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,slot_migrate.h,h,14,13,27
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,status.h,h,5,4,9
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,storage.cc,cc,17,15,32
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,storage.h,h,10,9,19
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,table_properties_collector.h,h,4,3,7
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,tls_util.cc,cc,8,4,12
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,tls_util.h,h,4,2,6
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,util.cc,cc,20,17,37
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,util.h,h,6,5,11
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,worker.cc,cc,12,10,22
b91c6e883d8f6724532661bc9c0931b08585d1a6,aleks.raiden@gmail.com,2022-10-05 13:25:39+03:00,noreply@github.com,2022-10-05 18:25:39+08:00,"Update to ubuntu 20.04, tcl 8.6 and cpplint 1.6.1 in GitHub Actions (#943)

Co-authored-by: Yaroslav Stepanchuk <torwigua@gmail.com>",unstable,True,False,39,worker.h,h,10,7,17
b15b2a2de77369225118ddb62d1bcb12ee70ece1,819464715@qq.com,2022-10-06 02:42:36+08:00,noreply@github.com,2022-10-06 02:42:36+08:00,"Use ParseInt to replace sto*, ato* (#924)",unstable,True,False,14,batch_extractor.cc,cc,26,5,31
b15b2a2de77369225118ddb62d1bcb12ee70ece1,819464715@qq.com,2022-10-06 02:42:36+08:00,noreply@github.com,2022-10-06 02:42:36+08:00,"Use ParseInt to replace sto*, ato* (#924)",unstable,True,False,14,cluster.cc,cc,13,7,20
b15b2a2de77369225118ddb62d1bcb12ee70ece1,819464715@qq.com,2022-10-06 02:42:36+08:00,noreply@github.com,2022-10-06 02:42:36+08:00,"Use ParseInt to replace sto*, ato* (#924)",unstable,True,False,14,compaction_checker.cc,cc,16,3,19
b15b2a2de77369225118ddb62d1bcb12ee70ece1,819464715@qq.com,2022-10-06 02:42:36+08:00,noreply@github.com,2022-10-06 02:42:36+08:00,"Use ParseInt to replace sto*, ato* (#924)",unstable,True,False,14,config.cc,cc,9,7,16
b15b2a2de77369225118ddb62d1bcb12ee70ece1,819464715@qq.com,2022-10-06 02:42:36+08:00,noreply@github.com,2022-10-06 02:42:36+08:00,"Use ParseInt to replace sto*, ato* (#924)",unstable,True,False,14,config.h,h,1,0,1
b15b2a2de77369225118ddb62d1bcb12ee70ece1,819464715@qq.com,2022-10-06 02:42:36+08:00,noreply@github.com,2022-10-06 02:42:36+08:00,"Use ParseInt to replace sto*, ato* (#924)",unstable,True,False,14,redis_bitmap.cc,cc,6,1,7
b15b2a2de77369225118ddb62d1bcb12ee70ece1,819464715@qq.com,2022-10-06 02:42:36+08:00,noreply@github.com,2022-10-06 02:42:36+08:00,"Use ParseInt to replace sto*, ato* (#924)",unstable,True,False,14,redis_cmd.cc,cc,187,169,356
b15b2a2de77369225118ddb62d1bcb12ee70ece1,819464715@qq.com,2022-10-06 02:42:36+08:00,noreply@github.com,2022-10-06 02:42:36+08:00,"Use ParseInt to replace sto*, ato* (#924)",unstable,True,False,14,redis_db.cc,cc,6,1,7
b15b2a2de77369225118ddb62d1bcb12ee70ece1,819464715@qq.com,2022-10-06 02:42:36+08:00,noreply@github.com,2022-10-06 02:42:36+08:00,"Use ParseInt to replace sto*, ato* (#924)",unstable,True,False,14,redis_request.cc,cc,3,3,6
b15b2a2de77369225118ddb62d1bcb12ee70ece1,819464715@qq.com,2022-10-06 02:42:36+08:00,noreply@github.com,2022-10-06 02:42:36+08:00,"Use ParseInt to replace sto*, ato* (#924)",unstable,True,False,14,redis_sortedint.cc,cc,7,6,13
b15b2a2de77369225118ddb62d1bcb12ee70ece1,819464715@qq.com,2022-10-06 02:42:36+08:00,noreply@github.com,2022-10-06 02:42:36+08:00,"Use ParseInt to replace sto*, ato* (#924)",unstable,True,False,14,redis_stream_base.cc,cc,56,40,96
b15b2a2de77369225118ddb62d1bcb12ee70ece1,819464715@qq.com,2022-10-06 02:42:36+08:00,noreply@github.com,2022-10-06 02:42:36+08:00,"Use ParseInt to replace sto*, ato* (#924)",unstable,True,False,14,slot_migrate.cc,cc,8,7,15
b15b2a2de77369225118ddb62d1bcb12ee70ece1,819464715@qq.com,2022-10-06 02:42:36+08:00,noreply@github.com,2022-10-06 02:42:36+08:00,"Use ParseInt to replace sto*, ato* (#924)",unstable,True,False,14,slot_migrate.h,h,1,0,1
b15b2a2de77369225118ddb62d1bcb12ee70ece1,819464715@qq.com,2022-10-06 02:42:36+08:00,noreply@github.com,2022-10-06 02:42:36+08:00,"Use ParseInt to replace sto*, ato* (#924)",unstable,True,False,14,util.cc,cc,12,9,21
365194dd7357632d9115480f79b3c8667995d0fa,wander4096@gmail.com,2022-10-07 00:31:20+08:00,noreply@github.com,2022-10-07 00:31:20+08:00,"Move TCL test unit/multi to Go case (#954)

Signed-off-by: tison <wander4096@gmail.com>

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,multi_test.go,go,156,0,156
365194dd7357632d9115480f79b3c8667995d0fa,wander4096@gmail.com,2022-10-07 00:31:20+08:00,noreply@github.com,2022-10-07 00:31:20+08:00,"Move TCL test unit/multi to Go case (#954)

Signed-off-by: tison <wander4096@gmail.com>

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,test_helper.tcl,tcl,0,1,1
9a672c904db4a5eed9db9f86c09c76609576188d,wander4096@gmail.com,2022-10-07 16:51:43+08:00,noreply@github.com,2022-10-07 16:51:43+08:00,"Move TCL test unit/introspection to Go case (#956)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,introspection_test.go,go,205,12,217
9a672c904db4a5eed9db9f86c09c76609576188d,wander4096@gmail.com,2022-10-07 16:51:43+08:00,noreply@github.com,2022-10-07 16:51:43+08:00,"Move TCL test unit/introspection to Go case (#956)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,multi_test.go,go,2,2,4
9a672c904db4a5eed9db9f86c09c76609576188d,wander4096@gmail.com,2022-10-07 16:51:43+08:00,noreply@github.com,2022-10-07 16:51:43+08:00,"Move TCL test unit/introspection to Go case (#956)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,ping_test.go,go,52,0,52
9a672c904db4a5eed9db9f86c09c76609576188d,wander4096@gmail.com,2022-10-07 16:51:43+08:00,noreply@github.com,2022-10-07 16:51:43+08:00,"Move TCL test unit/introspection to Go case (#956)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,server.go,go,4,0,4
9a672c904db4a5eed9db9f86c09c76609576188d,wander4096@gmail.com,2022-10-07 16:51:43+08:00,noreply@github.com,2022-10-07 16:51:43+08:00,"Move TCL test unit/introspection to Go case (#956)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,test_helper.tcl,tcl,0,1,1
6e521051ba81aa168312ed695a7bbaf06645a158,maochongxin@gmail.com,2022-10-07 22:29:29+08:00,noreply@github.com,2022-10-07 22:29:29+08:00,"Move TCL test unit/expire to Go case  (#955)

Co-authored-by: MaoChongxin <chongxin.mao@shopee.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,4,expire_test.go,go,218,0,218
6e521051ba81aa168312ed695a7bbaf06645a158,maochongxin@gmail.com,2022-10-07 22:29:29+08:00,noreply@github.com,2022-10-07 22:29:29+08:00,"Move TCL test unit/expire to Go case  (#955)

Co-authored-by: MaoChongxin <chongxin.mao@shopee.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,4,assertions.go,go,18,2,20
6e521051ba81aa168312ed695a7bbaf06645a158,maochongxin@gmail.com,2022-10-07 22:29:29+08:00,noreply@github.com,2022-10-07 22:29:29+08:00,"Move TCL test unit/expire to Go case  (#955)

Co-authored-by: MaoChongxin <chongxin.mao@shopee.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,4,test_helper.tcl,tcl,0,1,1
a8e06c7e373f374e1528861fb96942ebbbb63b2f,wander4096@gmail.com,2022-10-08 13:59:53+08:00,noreply@github.com,2022-10-08 13:59:53+08:00,"Move TCL test integration/rsid_psync to Go case  (#959)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,kvrocks.conf,conf,2,2,4
a8e06c7e373f374e1528861fb96942ebbbb63b2f,wander4096@gmail.com,2022-10-08 13:59:53+08:00,noreply@github.com,2022-10-08 13:59:53+08:00,"Move TCL test integration/rsid_psync to Go case  (#959)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,rsid_test.go,go,146,0,146
a8e06c7e373f374e1528861fb96942ebbbb63b2f,wander4096@gmail.com,2022-10-08 13:59:53+08:00,noreply@github.com,2022-10-08 13:59:53+08:00,"Move TCL test integration/rsid_psync to Go case  (#959)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,info_test.go,go,12,12,24
a8e06c7e373f374e1528861fb96942ebbbb63b2f,wander4096@gmail.com,2022-10-08 13:59:53+08:00,noreply@github.com,2022-10-08 13:59:53+08:00,"Move TCL test integration/rsid_psync to Go case  (#959)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,introspection_test.go,go,8,8,16
a8e06c7e373f374e1528861fb96942ebbbb63b2f,wander4096@gmail.com,2022-10-08 13:59:53+08:00,noreply@github.com,2022-10-08 13:59:53+08:00,"Move TCL test integration/rsid_psync to Go case  (#959)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,multi_test.go,go,3,3,6
a8e06c7e373f374e1528861fb96942ebbbb63b2f,wander4096@gmail.com,2022-10-08 13:59:53+08:00,noreply@github.com,2022-10-08 13:59:53+08:00,"Move TCL test integration/rsid_psync to Go case  (#959)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,scripting_test.go,go,1,1,2
a8e06c7e373f374e1528861fb96942ebbbb63b2f,wander4096@gmail.com,2022-10-08 13:59:53+08:00,noreply@github.com,2022-10-08 13:59:53+08:00,"Move TCL test integration/rsid_psync to Go case  (#959)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,client.go,go,11,5,16
a8e06c7e373f374e1528861fb96942ebbbb63b2f,wander4096@gmail.com,2022-10-08 13:59:53+08:00,noreply@github.com,2022-10-08 13:59:53+08:00,"Move TCL test integration/rsid_psync to Go case  (#959)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,server.go,go,54,7,61
a8e06c7e373f374e1528861fb96942ebbbb63b2f,wander4096@gmail.com,2022-10-08 13:59:53+08:00,noreply@github.com,2022-10-08 13:59:53+08:00,"Move TCL test integration/rsid_psync to Go case  (#959)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,10,test_helper.tcl,tcl,0,1,1
e3e00f36f149a261c9ddb3b88bfb91eee8a3f0b7,aleks.raiden@gmail.com,2022-10-09 10:07:11+03:00,noreply@github.com,2022-10-09 15:07:11+08:00,"Update actions (#968)

Update to latest Github actions",unstable,True,False,1,kvrocks.yaml,yaml,3,3,6
f91aad6246290c7ecd307606e8922dfd04a2fcf6,wander4096@gmail.com,2022-10-09 22:49:02+08:00,noreply@github.com,2022-10-09 22:49:02+08:00,"Move TCL test integration/slotimport to Go case (#966)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,cluster.cc,cc,1,1,2
f91aad6246290c7ecd307606e8922dfd04a2fcf6,wander4096@gmail.com,2022-10-09 22:49:02+08:00,noreply@github.com,2022-10-09 22:49:02+08:00,"Move TCL test integration/slotimport to Go case (#966)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,cluster_test.cc,cc,1,1,2
f91aad6246290c7ecd307606e8922dfd04a2fcf6,wander4096@gmail.com,2022-10-09 22:49:02+08:00,noreply@github.com,2022-10-09 22:49:02+08:00,"Move TCL test integration/slotimport to Go case (#966)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,slotimport_test.go,go,144,0,144
f91aad6246290c7ecd307606e8922dfd04a2fcf6,wander4096@gmail.com,2022-10-09 22:49:02+08:00,noreply@github.com,2022-10-09 22:49:02+08:00,"Move TCL test integration/slotimport to Go case (#966)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,introspection_test.go,go,1,1,2
f91aad6246290c7ecd307606e8922dfd04a2fcf6,wander4096@gmail.com,2022-10-09 22:49:02+08:00,noreply@github.com,2022-10-09 22:49:02+08:00,"Move TCL test integration/slotimport to Go case (#966)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,server.go,go,5,1,6
f91aad6246290c7ecd307606e8922dfd04a2fcf6,wander4096@gmail.com,2022-10-09 22:49:02+08:00,noreply@github.com,2022-10-09 22:49:02+08:00,"Move TCL test integration/slotimport to Go case (#966)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,slot.go,go,852,0,852
f91aad6246290c7ecd307606e8922dfd04a2fcf6,wander4096@gmail.com,2022-10-09 22:49:02+08:00,noreply@github.com,2022-10-09 22:49:02+08:00,"Move TCL test integration/slotimport to Go case (#966)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,util.tcl,tcl,1,1,2
f91aad6246290c7ecd307606e8922dfd04a2fcf6,wander4096@gmail.com,2022-10-09 22:49:02+08:00,noreply@github.com,2022-10-09 22:49:02+08:00,"Move TCL test integration/slotimport to Go case (#966)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,test_helper.tcl,tcl,0,1,1
d50124876638ce3aedea0ff1a5fde48fa7d31408,twice.mliu@gmail.com,2022-10-11 09:33:44+08:00,noreply@github.com,2022-10-11 09:33:44+08:00,Bump CMake minimum required version to 3.16 (#972),unstable,True,False,2,CMakeLists.txt,txt,1,1,2
d50124876638ce3aedea0ff1a5fde48fa7d31408,twice.mliu@gmail.com,2022-10-11 09:33:44+08:00,noreply@github.com,2022-10-11 09:33:44+08:00,Bump CMake minimum required version to 3.16 (#972),unstable,True,False,2,x.py,py,1,1,2
d33ef02fbd76feebcdf6e1e16d0d11d8aee30da7,hulk.website@gmail.com,2022-10-11 13:11:58+08:00,noreply@github.com,2022-10-11 13:11:58+08:00,Fix server cannot exit properly when enabling cluster mode (#969),unstable,True,False,3,slot_migrate.cc,cc,48,31,79
d33ef02fbd76feebcdf6e1e16d0d11d8aee30da7,hulk.website@gmail.com,2022-10-11 13:11:58+08:00,noreply@github.com,2022-10-11 13:11:58+08:00,Fix server cannot exit properly when enabling cluster mode (#969),unstable,True,False,3,slot_migrate.h,h,11,3,14
d33ef02fbd76feebcdf6e1e16d0d11d8aee30da7,hulk.website@gmail.com,2022-10-11 13:11:58+08:00,noreply@github.com,2022-10-11 13:11:58+08:00,Fix server cannot exit properly when enabling cluster mode (#969),unstable,True,False,3,server.go,go,1,3,4
79351f0a65fd425e013aed402808a575f8453c30,82277001+manchurio@users.noreply.github.com,2022-10-11 13:14:16+08:00,noreply@github.com,2022-10-11 13:14:16+08:00,Fix shouldn't lowercase the configuration value in kvrocks2redis(#971),unstable,True,False,1,config.cc,cc,2,2,4
9dbc8c7e2e919689ec5d87db8126c64c242c722b,819464715@qq.com,2022-10-11 14:52:54+08:00,noreply@github.com,2022-10-11 14:52:54+08:00,"Support the disk usage command (#882)

Like Redis key memory usage, we also want to know how many disk bytes were occupied by some key,
and it's possible since the RocksDB give the way to get approximate bytes by the key range.  After this PR,
users can use `disk usage user_key` command to get the disk usage of the key.",unstable,True,False,6,redis_cmd.cc,cc,26,0,26
9dbc8c7e2e919689ec5d87db8126c64c242c722b,819464715@qq.com,2022-10-11 14:52:54+08:00,noreply@github.com,2022-10-11 14:52:54+08:00,"Support the disk usage command (#882)

Like Redis key memory usage, we also want to know how many disk bytes were occupied by some key,
and it's possible since the RocksDB give the way to get approximate bytes by the key range.  After this PR,
users can use `disk usage user_key` command to get the disk usage of the key.",unstable,True,False,6,redis_disk.cc,cc,160,0,160
9dbc8c7e2e919689ec5d87db8126c64c242c722b,819464715@qq.com,2022-10-11 14:52:54+08:00,noreply@github.com,2022-10-11 14:52:54+08:00,"Support the disk usage command (#882)

Like Redis key memory usage, we also want to know how many disk bytes were occupied by some key,
and it's possible since the RocksDB give the way to get approximate bytes by the key range.  After this PR,
users can use `disk usage user_key` command to get the disk usage of the key.",unstable,True,False,6,redis_disk.h,h,52,0,52
9dbc8c7e2e919689ec5d87db8126c64c242c722b,819464715@qq.com,2022-10-11 14:52:54+08:00,noreply@github.com,2022-10-11 14:52:54+08:00,"Support the disk usage command (#882)

Like Redis key memory usage, we also want to know how many disk bytes were occupied by some key,
and it's possible since the RocksDB give the way to get approximate bytes by the key range.  After this PR,
users can use `disk usage user_key` command to get the disk usage of the key.",unstable,True,False,6,disk_test.cc,cc,212,0,212
9dbc8c7e2e919689ec5d87db8126c64c242c722b,819464715@qq.com,2022-10-11 14:52:54+08:00,noreply@github.com,2022-10-11 14:52:54+08:00,"Support the disk usage command (#882)

Like Redis key memory usage, we also want to know how many disk bytes were occupied by some key,
and it's possible since the RocksDB give the way to get approximate bytes by the key range.  After this PR,
users can use `disk usage user_key` command to get the disk usage of the key.",unstable,True,False,6,command_test.go,go,7,0,7
9dbc8c7e2e919689ec5d87db8126c64c242c722b,819464715@qq.com,2022-10-11 14:52:54+08:00,noreply@github.com,2022-10-11 14:52:54+08:00,"Support the disk usage command (#882)

Like Redis key memory usage, we also want to know how many disk bytes were occupied by some key,
and it's possible since the RocksDB give the way to get approximate bytes by the key range.  After this PR,
users can use `disk usage user_key` command to get the disk usage of the key.",unstable,True,False,6,disk_test.go,go,145,0,145
6b33097a50325a07f8e143426de42d23283a864a,294843472@qq.com,2022-10-11 18:09:57+08:00,noreply@github.com,2022-10-11 18:09:57+08:00,"Move TCL test unit/type/string to Go case  (#944)

Signed-off-by: jinzewu <294843472@qq.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,3,strings_test.go,go,518,0,518
6b33097a50325a07f8e143426de42d23283a864a,294843472@qq.com,2022-10-11 18:09:57+08:00,noreply@github.com,2022-10-11 18:09:57+08:00,"Move TCL test unit/type/string to Go case  (#944)

Signed-off-by: jinzewu <294843472@qq.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,3,test_helper.tcl,tcl,0,1,1
da27a92d36e5aa355ea00c8d4a4a3c4dc5b744b6,wander4096@gmail.com,2022-10-12 09:59:26+08:00,noreply@github.com,2022-10-12 09:59:26+08:00,"harden slow tests (#976)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,expire_test.go,go,31,30,61
da27a92d36e5aa355ea00c8d4a4a3c4dc5b744b6,wander4096@gmail.com,2022-10-12 09:59:26+08:00,noreply@github.com,2022-10-12 09:59:26+08:00,"harden slow tests (#976)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,strings_test.go,go,11,4,15
e4a6fdae7d91ed7b920b5718d031c57b8dfd242f,twice.mliu@gmail.com,2022-10-12 09:59:51+08:00,noreply@github.com,2022-10-12 09:59:51+08:00,Remove useless parameter in `SlotMigrate::Loop` (#974),unstable,True,False,2,slot_migrate.cc,cc,3,3,6
e4a6fdae7d91ed7b920b5718d031c57b8dfd242f,twice.mliu@gmail.com,2022-10-12 09:59:51+08:00,noreply@github.com,2022-10-12 09:59:51+08:00,Remove useless parameter in `SlotMigrate::Loop` (#974),unstable,True,False,2,slot_migrate.h,h,1,1,2
b5c3600a92b9fa0eb8c3714fec42d6b8ea3edd86,wander4096@gmail.com,2022-10-12 17:37:12+08:00,noreply@github.com,2022-10-12 17:37:12+08:00,"Move TCL test integration/redis-cli to Go case (#978)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,6,kvrocks.yaml,yaml,3,2,5
b5c3600a92b9fa0eb8c3714fec42d6b8ea3edd86,wander4096@gmail.com,2022-10-12 17:37:12+08:00,noreply@github.com,2022-10-12 17:37:12+08:00,"Move TCL test integration/redis-cli to Go case (#978)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,6,cli_test.go,go,363,0,363
b5c3600a92b9fa0eb8c3714fec42d6b8ea3edd86,wander4096@gmail.com,2022-10-12 17:37:12+08:00,noreply@github.com,2022-10-12 17:37:12+08:00,"Move TCL test integration/redis-cli to Go case (#978)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,6,cluster.tcl,tcl,1,1,2
b5c3600a92b9fa0eb8c3714fec42d6b8ea3edd86,wander4096@gmail.com,2022-10-12 17:37:12+08:00,noreply@github.com,2022-10-12 17:37:12+08:00,"Move TCL test integration/redis-cli to Go case (#978)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,6,test_helper.tcl,tcl,0,1,1
fad697a56f84f4542a8cf0b40cb3f9a783985fc3,twice.mliu@gmail.com,2022-10-12 22:35:09+08:00,noreply@github.com,2022-10-12 22:35:09+08:00,Add `UniqueFD` and `ScopeExit` (#973),unstable,True,False,10,fd_util.h,h,79,0,79
fad697a56f84f4542a8cf0b40cb3f9a783985fc3,twice.mliu@gmail.com,2022-10-12 22:35:09+08:00,noreply@github.com,2022-10-12 22:35:09+08:00,Add `UniqueFD` and `ScopeExit` (#973),unstable,True,False,10,main.cc,cc,7,9,16
fad697a56f84f4542a8cf0b40cb3f9a783985fc3,twice.mliu@gmail.com,2022-10-12 22:35:09+08:00,noreply@github.com,2022-10-12 22:35:09+08:00,Add `UniqueFD` and `ScopeExit` (#973),unstable,True,False,10,redis_cmd.cc,cc,9,9,18
fad697a56f84f4542a8cf0b40cb3f9a783985fc3,twice.mliu@gmail.com,2022-10-12 22:35:09+08:00,noreply@github.com,2022-10-12 22:35:09+08:00,Add `UniqueFD` and `ScopeExit` (#973),unstable,True,False,10,replication.cc,cc,2,2,4
fad697a56f84f4542a8cf0b40cb3f9a783985fc3,twice.mliu@gmail.com,2022-10-12 22:35:09+08:00,noreply@github.com,2022-10-12 22:35:09+08:00,Add `UniqueFD` and `ScopeExit` (#973),unstable,True,False,10,scope_exit.h,h,54,0,54
fad697a56f84f4542a8cf0b40cb3f9a783985fc3,twice.mliu@gmail.com,2022-10-12 22:35:09+08:00,noreply@github.com,2022-10-12 22:35:09+08:00,Add `UniqueFD` and `ScopeExit` (#973),unstable,True,False,10,stats.cc,cc,10,14,24
fad697a56f84f4542a8cf0b40cb3f9a783985fc3,twice.mliu@gmail.com,2022-10-12 22:35:09+08:00,noreply@github.com,2022-10-12 22:35:09+08:00,Add `UniqueFD` and `ScopeExit` (#973),unstable,True,False,10,stats.h,h,0,1,1
fad697a56f84f4542a8cf0b40cb3f9a783985fc3,twice.mliu@gmail.com,2022-10-12 22:35:09+08:00,noreply@github.com,2022-10-12 22:35:09+08:00,Add `UniqueFD` and `ScopeExit` (#973),unstable,True,False,10,status.h,h,2,0,2
fad697a56f84f4542a8cf0b40cb3f9a783985fc3,twice.mliu@gmail.com,2022-10-12 22:35:09+08:00,noreply@github.com,2022-10-12 22:35:09+08:00,Add `UniqueFD` and `ScopeExit` (#973),unstable,True,False,10,storage.cc,cc,2,1,3
fad697a56f84f4542a8cf0b40cb3f9a783985fc3,twice.mliu@gmail.com,2022-10-12 22:35:09+08:00,noreply@github.com,2022-10-12 22:35:09+08:00,Add `UniqueFD` and `ScopeExit` (#973),unstable,True,False,10,util.cc,cc,34,26,60
2f12a3ff4775c4f001341901d3ceff285d6b09c9,wander4096@gmail.com,2022-10-13 00:06:28+08:00,noreply@github.com,2022-10-13 00:06:28+08:00,"tidy test output (#980)

Signed-off-by: tison <wander4096@gmail.com>

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,x.py,py,1,1,2
ebb562970b5ab123b6bf85a22f6dde0816974187,maochongxin@gmail.com,2022-10-13 00:52:13+08:00,noreply@github.com,2022-10-13 00:52:13+08:00,"Implement the GETEX command (#961)

Co-authored-by: MaoChongxin <chongxin.mao@shopee.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,7,redis_cmd.cc,cc,122,65,187
ebb562970b5ab123b6bf85a22f6dde0816974187,maochongxin@gmail.com,2022-10-13 00:52:13+08:00,noreply@github.com,2022-10-13 00:52:13+08:00,"Implement the GETEX command (#961)

Co-authored-by: MaoChongxin <chongxin.mao@shopee.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,7,redis_string.cc,cc,28,0,28
ebb562970b5ab123b6bf85a22f6dde0816974187,maochongxin@gmail.com,2022-10-13 00:52:13+08:00,noreply@github.com,2022-10-13 00:52:13+08:00,"Implement the GETEX command (#961)

Co-authored-by: MaoChongxin <chongxin.mao@shopee.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,7,redis_string.h,h,1,0,1
ebb562970b5ab123b6bf85a22f6dde0816974187,maochongxin@gmail.com,2022-10-13 00:52:13+08:00,noreply@github.com,2022-10-13 00:52:13+08:00,"Implement the GETEX command (#961)

Co-authored-by: MaoChongxin <chongxin.mao@shopee.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,7,util.cc,cc,6,0,6
ebb562970b5ab123b6bf85a22f6dde0816974187,maochongxin@gmail.com,2022-10-13 00:52:13+08:00,noreply@github.com,2022-10-13 00:52:13+08:00,"Implement the GETEX command (#961)

Co-authored-by: MaoChongxin <chongxin.mao@shopee.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,7,util.h,h,1,0,1
ebb562970b5ab123b6bf85a22f6dde0816974187,maochongxin@gmail.com,2022-10-13 00:52:13+08:00,noreply@github.com,2022-10-13 00:52:13+08:00,"Implement the GETEX command (#961)

Co-authored-by: MaoChongxin <chongxin.mao@shopee.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,7,command_test.go,go,0,7,7
ebb562970b5ab123b6bf85a22f6dde0816974187,maochongxin@gmail.com,2022-10-13 00:52:13+08:00,noreply@github.com,2022-10-13 00:52:13+08:00,"Implement the GETEX command (#961)

Co-authored-by: MaoChongxin <chongxin.mao@shopee.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,7,strings_test.go,go,50,0,50
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,.clang-format,clang-format,200,0,200
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,kvrocks.yaml,yaml,16,8,24
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,batch_extractor.cc,cc,31,23,54
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,batch_extractor.h,h,6,8,14
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,cluster.cc,cc,57,65,122
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,cluster.h,h,17,18,35
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,compact_filter.cc,cc,18,31,49
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,compact_filter.h,h,16,26,42
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,compaction_checker.cc,cc,12,12,24
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,compaction_checker.h,h,3,1,4
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,config.cc,cc,334,314,648
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,config.h,h,2,4,6
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,config_type.h,h,16,42,58
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,config_util.cc,cc,10,12,22
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,config_util.h,h,1,1,2
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,cron.cc,cc,13,29,42
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,cron.h,h,4,8,12
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,db_util.h,h,3,4,7
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,encoding.cc,cc,44,52,96
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,encoding.h,h,3,3,6
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,event_listener.cc,cc,22,32,54
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,event_listener.h,h,5,4,9
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,event_util.h,h,8,6,14
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,fd_util.h,h,8,13,21
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,geohash.cc,cc,36,70,106
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,geohash.h,h,12,24,36
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,lock_manager.cc,cc,6,12,18
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,lock_manager.h,h,6,10,16
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,log_collector.cc,cc,4,4,8
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,log_collector.h,h,5,5,10
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,main.cc,cc,34,33,67
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,parse_util.h,h,12,12,24
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,rand.cc,cc,30,25,55
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_bitmap.cc,cc,120,123,243
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_bitmap.h,h,4,3,7
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_bitmap_string.cc,cc,15,23,38
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_bitmap_string.h,h,6,5,11
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_cmd.cc,cc,231,297,528
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_cmd.h,h,13,17,30
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_connection.cc,cc,29,52,81
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_connection.h,h,4,4,8
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_db.cc,cc,22,37,59
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_db.h,h,14,32,46
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_disk.cc,cc,23,39,62
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_disk.h,h,5,4,9
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_geo.cc,cc,31,77,108
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_geo.h,h,17,54,71
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_hash.cc,cc,8,15,23
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_hash.h,h,7,17,24
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_list.cc,cc,14,30,44
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_list.h,h,3,2,5
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_metadata.cc,cc,28,37,65
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_metadata.h,h,11,11,22
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_pubsub.h,h,1,3,4
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_reply.cc,cc,10,20,30
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_reply.h,h,3,3,6
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_request.cc,cc,3,3,6
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_set.cc,cc,5,12,17
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_set.h,h,3,7,10
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_slot.cc,cc,27,43,70
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_slot.h,h,1,1,2
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_sortedint.cc,cc,7,16,23
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_sortedint.h,h,3,10,13
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_stream.cc,cc,13,18,31
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_stream.h,h,13,15,28
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_stream_base.cc,cc,10,12,22
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_stream_base.h,h,10,18,28
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_string.cc,cc,46,47,93
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_string.h,h,3,3,6
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_zset.cc,cc,46,70,116
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_zset.h,h,21,33,54
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,replication.cc,cc,76,119,195
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,replication.h,h,17,30,47
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,rocksdb_crc32c.h,h,2,3,5
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,rw_lock.h,h,10,22,32
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,scope_exit.h,h,2,6,8
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,scripting.cc,cc,491,483,974
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,scripting.h,h,4,6,10
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,server.cc,cc,129,176,305
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,server.h,h,25,31,56
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,sha1.cc,cc,114,50,164
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,slot_import.cc,cc,11,18,29
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,slot_import.h,h,1,1,2
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,slot_migrate.cc,cc,40,56,96
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,slot_migrate.h,h,29,40,69
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,stats.cc,cc,7,6,13
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,stats.h,h,4,3,7
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,status.h,h,35,47,82
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,storage.cc,cc,62,94,156
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,storage.h,h,20,28,48
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,table_properties_collector.cc,cc,18,22,40
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,table_properties_collector.h,h,12,18,30
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,task_runner.cc,cc,2,1,3
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,task_runner.h,h,6,5,11
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,tls_util.cc,cc,7,9,16
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,tls_util.h,h,11,11,22
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,util.cc,cc,59,82,141
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,util.h,h,4,4,8
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,worker.cc,cc,28,47,75
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,worker.h,h,12,16,28
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,cluster_test.cc,cc,34,32,66
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,compact_test.cc,cc,7,7,14
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,config_test.cc,cc,62,56,118
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,cron_test.cc,cc,4,1,5
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,disk_test.cc,cc,45,44,89
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,log_collector_test.cc,cc,2,2,4
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,main.cc,cc,1,3,4
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,parse_util.cc,cc,1,2,3
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,rwlock_test.cc,cc,20,22,42
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,status_test.cc,cc,36,37,73
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,string_reply_test.cc,cc,16,17,33
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,string_util_test.cc,cc,11,13,24
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,t_bitmap_test.cc,cc,11,14,25
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,t_encoding_test.cc,cc,2,2,4
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,t_geo_test.cc,cc,10,18,28
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,t_hash_test.cc,cc,15,17,32
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,t_list_test.cc,cc,43,41,84
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,t_metadata_test.cc,cc,13,10,23
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,t_set_test.cc,cc,13,13,26
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,t_sortedint_test.cc,cc,8,6,14
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,t_stream_test.cc,cc,10,16,26
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,t_string_test.cc,cc,20,27,47
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,t_zset_test.cc,cc,43,43,86
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,task_runner_test.cc,cc,7,5,12
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,test_base.h,h,4,3,7
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,config.cc,cc,2,2,4
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,config.h,h,1,1,2
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,main.cc,cc,10,13,23
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,parser.cc,cc,7,7,14
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,parser.h,h,8,13,21
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_writer.cc,cc,7,10,17
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,redis_writer.h,h,3,5,8
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,sync.cc,cc,10,14,24
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,sync.h,h,4,4,8
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,writer.cc,cc,2,0,2
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,writer.h,h,2,3,5
81d37927dfb2798138c8569af7c6a44dd376c3f4,twice.mliu@gmail.com,2022-10-13 10:44:02+08:00,noreply@github.com,2022-10-13 10:44:02+08:00,Replace cpplint with clang-format (#979),unstable,True,False,137,x.py,py,52,12,64
352dbafdc806b5d734cfed1dd79346b6c30eeb32,wander4096@gmail.com,2022-10-13 16:15:50+08:00,noreply@github.com,2022-10-13 16:15:50+08:00,"Move TCL test unit/pubsub to Go case  (#982)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,introspection_test.go,go,3,9,12
352dbafdc806b5d734cfed1dd79346b6c30eeb32,wander4096@gmail.com,2022-10-13 16:15:50+08:00,noreply@github.com,2022-10-13 16:15:50+08:00,"Move TCL test unit/pubsub to Go case  (#982)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,keyspace_test.go,go,4,12,16
352dbafdc806b5d734cfed1dd79346b6c30eeb32,wander4096@gmail.com,2022-10-13 16:15:50+08:00,noreply@github.com,2022-10-13 16:15:50+08:00,"Move TCL test unit/pubsub to Go case  (#982)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,ping_test.go,go,4,12,16
352dbafdc806b5d734cfed1dd79346b6c30eeb32,wander4096@gmail.com,2022-10-13 16:15:50+08:00,noreply@github.com,2022-10-13 16:15:50+08:00,"Move TCL test unit/pubsub to Go case  (#982)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,protocol_test.go,go,11,33,44
352dbafdc806b5d734cfed1dd79346b6c30eeb32,wander4096@gmail.com,2022-10-13 16:15:50+08:00,noreply@github.com,2022-10-13 16:15:50+08:00,"Move TCL test unit/pubsub to Go case  (#982)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,regression_test.go,go,2,6,8
352dbafdc806b5d734cfed1dd79346b6c30eeb32,wander4096@gmail.com,2022-10-13 16:15:50+08:00,noreply@github.com,2022-10-13 16:15:50+08:00,"Move TCL test unit/pubsub to Go case  (#982)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,pubsub_test.go,go,356,0,356
352dbafdc806b5d734cfed1dd79346b6c30eeb32,wander4096@gmail.com,2022-10-13 16:15:50+08:00,noreply@github.com,2022-10-13 16:15:50+08:00,"Move TCL test unit/pubsub to Go case  (#982)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,quit_test.go,go,2,6,8
352dbafdc806b5d734cfed1dd79346b6c30eeb32,wander4096@gmail.com,2022-10-13 16:15:50+08:00,noreply@github.com,2022-10-13 16:15:50+08:00,"Move TCL test unit/pubsub to Go case  (#982)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,scripting_test.go,go,2,6,8
352dbafdc806b5d734cfed1dd79346b6c30eeb32,wander4096@gmail.com,2022-10-13 16:15:50+08:00,noreply@github.com,2022-10-13 16:15:50+08:00,"Move TCL test unit/pubsub to Go case  (#982)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,tcp_client.go,go,21,0,21
352dbafdc806b5d734cfed1dd79346b6c30eeb32,wander4096@gmail.com,2022-10-13 16:15:50+08:00,noreply@github.com,2022-10-13 16:15:50+08:00,"Move TCL test unit/pubsub to Go case  (#982)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,test_helper.tcl,tcl,0,1,1
aee875e678e3de1d26611523a4ef65d1a79bd854,wander4096@gmail.com,2022-10-13 19:52:04+08:00,noreply@github.com,2022-10-13 19:52:04+08:00,"move xstream offset tests (#984)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,stream_test.go,go,111,0,111
aee875e678e3de1d26611523a4ef65d1a79bd854,wander4096@gmail.com,2022-10-13 19:52:04+08:00,noreply@github.com,2022-10-13 19:52:04+08:00,"move xstream offset tests (#984)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,stream.tcl,tcl,0,59,59
1dcf225acad001175df0ea142b5e498f29d1b18b,twice.mliu@gmail.com,2022-10-13 20:23:12+08:00,noreply@github.com,2022-10-13 20:23:12+08:00,Replace constant macros to constexpr variables and enums in headers (#981),unstable,True,False,10,config.cc,cc,5,5,10
1dcf225acad001175df0ea142b5e498f29d1b18b,twice.mliu@gmail.com,2022-10-13 20:23:12+08:00,noreply@github.com,2022-10-13 20:23:12+08:00,Replace constant macros to constexpr variables and enums in headers (#981),unstable,True,False,10,config.h,h,10,12,22
1dcf225acad001175df0ea142b5e498f29d1b18b,twice.mliu@gmail.com,2022-10-13 20:23:12+08:00,noreply@github.com,2022-10-13 20:23:12+08:00,Replace constant macros to constexpr variables and enums in headers (#981),unstable,True,False,10,main.cc,cc,5,5,10
1dcf225acad001175df0ea142b5e498f29d1b18b,twice.mliu@gmail.com,2022-10-13 20:23:12+08:00,noreply@github.com,2022-10-13 20:23:12+08:00,Replace constant macros to constexpr variables and enums in headers (#981),unstable,True,False,10,rand.h,h,1,1,2
1dcf225acad001175df0ea142b5e498f29d1b18b,twice.mliu@gmail.com,2022-10-13 20:23:12+08:00,noreply@github.com,2022-10-13 20:23:12+08:00,Replace constant macros to constexpr variables and enums in headers (#981),unstable,True,False,10,redis_cmd.cc,cc,1,1,2
1dcf225acad001175df0ea142b5e498f29d1b18b,twice.mliu@gmail.com,2022-10-13 20:23:12+08:00,noreply@github.com,2022-10-13 20:23:12+08:00,Replace constant macros to constexpr variables and enums in headers (#981),unstable,True,False,10,redis_slot.h,h,3,3,6
1dcf225acad001175df0ea142b5e498f29d1b18b,twice.mliu@gmail.com,2022-10-13 20:23:12+08:00,noreply@github.com,2022-10-13 20:23:12+08:00,Replace constant macros to constexpr variables and enums in headers (#981),unstable,True,False,10,redis_zset.cc,cc,5,5,10
1dcf225acad001175df0ea142b5e498f29d1b18b,twice.mliu@gmail.com,2022-10-13 20:23:12+08:00,noreply@github.com,2022-10-13 20:23:12+08:00,Replace constant macros to constexpr variables and enums in headers (#981),unstable,True,False,10,redis_zset.h,h,7,5,12
1dcf225acad001175df0ea142b5e498f29d1b18b,twice.mliu@gmail.com,2022-10-13 20:23:12+08:00,noreply@github.com,2022-10-13 20:23:12+08:00,Replace constant macros to constexpr variables and enums in headers (#981),unstable,True,False,10,slot_migrate.h,h,1,1,2
1dcf225acad001175df0ea142b5e498f29d1b18b,twice.mliu@gmail.com,2022-10-13 20:23:12+08:00,noreply@github.com,2022-10-13 20:23:12+08:00,Replace constant macros to constexpr variables and enums in headers (#981),unstable,True,False,10,t_zset_test.cc,cc,1,1,2
287ed1ae1f781b5acf8b8d743b7fe2c78f5f157a,wander4096@gmail.com,2022-10-13 21:24:48+08:00,noreply@github.com,2022-10-13 21:24:48+08:00,"harden pubsub tests (#985)

Signed-off-by: tison <wander4096@gmail.com>

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,pubsub_test.go,go,13,0,13
84b8c28a17346e5f0ef5fac300c9b1c0944a4310,wander4096@gmail.com,2022-10-14 07:45:33+08:00,noreply@github.com,2022-10-14 07:45:33+08:00,"test: migrate xstream ids (#986)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,stream_test.go,go,97,0,97
84b8c28a17346e5f0ef5fac300c9b1c0944a4310,wander4096@gmail.com,2022-10-14 07:45:33+08:00,noreply@github.com,2022-10-14 07:45:33+08:00,"test: migrate xstream ids (#986)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,stream.tcl,tcl,0,85,85
b1f73a86f299a3263b887ece0fdf07a5f115d0e8,wander4096@gmail.com,2022-10-14 14:36:27+08:00,noreply@github.com,2022-10-14 14:36:27+08:00,"test: migrate xadd options (#987)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,stream_test.go,go,97,0,97
b1f73a86f299a3263b887ece0fdf07a5f115d0e8,wander4096@gmail.com,2022-10-14 14:36:27+08:00,noreply@github.com,2022-10-14 14:36:27+08:00,"test: migrate xadd options (#987)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,random.go,go,9,15,24
b1f73a86f299a3263b887ece0fdf07a5f115d0e8,wander4096@gmail.com,2022-10-14 14:36:27+08:00,noreply@github.com,2022-10-14 14:36:27+08:00,"test: migrate xadd options (#987)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,stream.tcl,tcl,0,84,84
67b39da2f3df7240d859cd913736ad2859ebe991,819464715@qq.com,2022-10-15 01:23:36+08:00,noreply@github.com,2022-10-15 01:23:36+08:00,Align georadius behavior of redis (#993),unstable,True,False,1,redis_cmd.cc,cc,5,1,6
9f462d08a997d37b77c5391d4b9d87a2323c3e4f,39056297+IoCing@users.noreply.github.com,2022-10-15 09:06:20+08:00,noreply@github.com,2022-10-15 09:06:20+08:00,"Move TCL test unit/type/zset to Go case (#988)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,zset_test.go,go,951,0,951
9f462d08a997d37b77c5391d4b9d87a2323c3e4f,39056297+IoCing@users.noreply.github.com,2022-10-15 09:06:20+08:00,noreply@github.com,2022-10-15 09:06:20+08:00,"Move TCL test unit/type/zset to Go case (#988)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,assertions.go,go,7,0,7
9f462d08a997d37b77c5391d4b9d87a2323c3e4f,39056297+IoCing@users.noreply.github.com,2022-10-15 09:06:20+08:00,noreply@github.com,2022-10-15 09:06:20+08:00,"Move TCL test unit/type/zset to Go case (#988)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,random.go,go,4,0,4
9f462d08a997d37b77c5391d4b9d87a2323c3e4f,39056297+IoCing@users.noreply.github.com,2022-10-15 09:06:20+08:00,noreply@github.com,2022-10-15 09:06:20+08:00,"Move TCL test unit/type/zset to Go case (#988)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,test_helper.tcl,tcl,0,1,1
d1e378786aedc89aef7e11f928675bbcf358dfce,wander4096@gmail.com,2022-10-15 09:12:51+08:00,noreply@github.com,2022-10-15 09:12:51+08:00,"Move TCL test integration/cluster to Go case (#990)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,5,cluster_test.go,go,299,0,299
d1e378786aedc89aef7e11f928675bbcf358dfce,wander4096@gmail.com,2022-10-15 09:12:51+08:00,noreply@github.com,2022-10-15 09:12:51+08:00,"Move TCL test integration/cluster to Go case (#990)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,5,slotimport_test.go,go,3,3,6
d1e378786aedc89aef7e11f928675bbcf358dfce,wander4096@gmail.com,2022-10-15 09:12:51+08:00,noreply@github.com,2022-10-15 09:12:51+08:00,"Move TCL test integration/cluster to Go case (#990)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,5,slot.go,go,2,6,8
d1e378786aedc89aef7e11f928675bbcf358dfce,wander4096@gmail.com,2022-10-15 09:12:51+08:00,noreply@github.com,2022-10-15 09:12:51+08:00,"Move TCL test integration/cluster to Go case (#990)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,5,test_helper.tcl,tcl,0,1,1
21b92a9f11cdd479498e592e500c29d137d8eec1,twice.mliu@gmail.com,2022-10-15 09:16:24+08:00,noreply@github.com,2022-10-15 09:16:24+08:00,Use warning instead of error for clang-format version mismatch in x.py (#994),unstable,True,False,1,x.py,py,5,5,10
5474e159ffa9fb5f2f5277f9d58e8e2b4b5d40df,hulk.website@gmail.com,2022-10-16 11:56:44+08:00,noreply@github.com,2022-10-16 11:56:44+08:00,"Move TCL test integration/replication to Go case (#997)

* Move TCL test integration/replication to Go case

* Fix didn't send replication master auth if it's created in flight

The root cause is we determined whether to send auth command or not on
creating the replication state machine. If we add the master auth
after creating the replication thread, it will nerver send auth command
without recreating the replication state machine.

* Resolve PR comments

* Fix PR comments

* Move replication test case into integration",unstable,True,False,6,replication.cc,cc,7,11,18
5474e159ffa9fb5f2f5277f9d58e8e2b4b5d40df,hulk.website@gmail.com,2022-10-16 11:56:44+08:00,noreply@github.com,2022-10-16 11:56:44+08:00,"Move TCL test integration/replication to Go case (#997)

* Move TCL test integration/replication to Go case

* Fix didn't send replication master auth if it's created in flight

The root cause is we determined whether to send auth command or not on
creating the replication state machine. If we add the master auth
after creating the replication thread, it will nerver send auth command
without recreating the replication state machine.

* Resolve PR comments

* Fix PR comments

* Move replication test case into integration",unstable,True,False,6,replication.h,h,2,1,3
5474e159ffa9fb5f2f5277f9d58e8e2b4b5d40df,hulk.website@gmail.com,2022-10-16 11:56:44+08:00,noreply@github.com,2022-10-16 11:56:44+08:00,"Move TCL test integration/replication to Go case (#997)

* Move TCL test integration/replication to Go case

* Fix didn't send replication master auth if it's created in flight

The root cause is we determined whether to send auth command or not on
creating the replication state machine. If we add the master auth
after creating the replication thread, it will nerver send auth command
without recreating the replication state machine.

* Resolve PR comments

* Fix PR comments

* Move replication test case into integration",unstable,True,False,6,replication_test.go,go,351,0,351
5474e159ffa9fb5f2f5277f9d58e8e2b4b5d40df,hulk.website@gmail.com,2022-10-16 11:56:44+08:00,noreply@github.com,2022-10-16 11:56:44+08:00,"Move TCL test integration/replication to Go case (#997)

* Move TCL test integration/replication to Go case

* Fix didn't send replication master auth if it's created in flight

The root cause is we determined whether to send auth command or not on
creating the replication state machine. If we add the master auth
after creating the replication thread, it will nerver send auth command
without recreating the replication state machine.

* Resolve PR comments

* Fix PR comments

* Move replication test case into integration",unstable,True,False,6,server.go,go,9,0,9
5474e159ffa9fb5f2f5277f9d58e8e2b4b5d40df,hulk.website@gmail.com,2022-10-16 11:56:44+08:00,noreply@github.com,2022-10-16 11:56:44+08:00,"Move TCL test integration/replication to Go case (#997)

* Move TCL test integration/replication to Go case

* Fix didn't send replication master auth if it's created in flight

The root cause is we determined whether to send auth command or not on
creating the replication state machine. If we add the master auth
after creating the replication thread, it will nerver send auth command
without recreating the replication state machine.

* Resolve PR comments

* Fix PR comments

* Move replication test case into integration",unstable,True,False,6,test_helper.tcl,tcl,0,1,1
e79871a28ce0845b42f88503b20a61c82b2909ff,hulk.website@gmail.com,2022-10-16 21:18:42+08:00,noreply@github.com,2022-10-16 21:18:42+08:00,"Increase the read/write timeout of tests in large value scenario (#1000)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,1,replication_test.go,go,3,1,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,CMakeLists.txt,txt,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,cluster.cc,cc,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,cluster.h,h,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,replication.cc,cc,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,replication.h,h,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,slot_import.h,h,3,3,6
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,slot_migrate.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,slot_migrate.h,h,3,3,6
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_cmd.cc,cc,22,22,44
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_cmd.h,h,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,config.cc,cc,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,main.cc,cc,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_connection.h,h,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_request.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,server.cc,cc,3,3,6
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,server.h,h,8,8,16
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,tls_util.h,h,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,worker.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,worker.h,h,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,disk_stats.cc,cc,5,5,10
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,disk_stats.h,h,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,log_collector.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,batch_extractor.cc,cc,4,4,8
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,compact_filter.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_db.cc,cc,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_metadata.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_metadata.h,h,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,scripting.cc,cc,3,3,6
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,scripting.h,h,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,storage.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,storage.h,h,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,table_properties_collector.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_bitmap.h,h,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_bitmap_string.h,h,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_geo.h,h,3,3,6
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_hash.h,h,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_list.h,h,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_set.h,h,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_sortedint.h,h,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_stream.h,h,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_string.h,h,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_zset.h,h,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,cluster_test.cc,cc,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,compact_test.cc,cc,4,4,8
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,config_test.cc,cc,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,disk_test.cc,cc,9,9,18
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,log_collector_test.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,main.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,rwlock_test.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,string_reply_test.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,t_bitmap_test.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,t_geo_test.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,t_hash_test.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,t_list_test.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,t_metadata_test.cc,cc,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,t_set_test.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,t_sortedint_test.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,t_stream_test.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,t_string_test.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,t_zset_test.cc,cc,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,test_base.h,h,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,config.cc,cc,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,config.h,h,1,1,2
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,main.cc,cc,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,parser.cc,cc,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,parser.h,h,5,5,10
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,redis_writer.cc,cc,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,sync.cc,cc,2,2,4
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,sync.h,h,4,4,8
17d5fd799814f55a748ed41b956b1075cf2f9af6,twice.mliu@gmail.com,2022-10-17 08:00:17+08:00,noreply@github.com,2022-10-17 08:00:17+08:00,Refactor source file structure (#989),unstable,True,False,131,writer.h,h,1,1,2
8c3703557fe842ef2f81c20d91c0ded5dfd927d4,819464715@qq.com,2022-10-17 08:01:35+08:00,noreply@github.com,2022-10-17 08:01:35+08:00,Move TCL test unit/geo to Go case (#998),unstable,True,False,3,geo_test.go,go,315,0,315
8c3703557fe842ef2f81c20d91c0ded5dfd927d4,819464715@qq.com,2022-10-17 08:01:35+08:00,noreply@github.com,2022-10-17 08:01:35+08:00,Move TCL test unit/geo to Go case (#998),unstable,True,False,3,test_helper.tcl,tcl,0,1,1
9b4932d560309572a0281651fe81d769fd9fdece,wander4096@gmail.com,2022-10-17 13:26:48+08:00,noreply@github.com,2022-10-17 13:26:48+08:00,"test: finish migrating xtream tests  (#1003)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,5,stream_test.go,go,427,0,427
9b4932d560309572a0281651fe81d769fd9fdece,wander4096@gmail.com,2022-10-17 13:26:48+08:00,noreply@github.com,2022-10-17 13:26:48+08:00,"test: finish migrating xtream tests  (#1003)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,5,zset_test.go,go,2,8,10
9b4932d560309572a0281651fe81d769fd9fdece,wander4096@gmail.com,2022-10-17 13:26:48+08:00,noreply@github.com,2022-10-17 13:26:48+08:00,"test: finish migrating xtream tests  (#1003)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,5,slices.go,go,26,0,26
9b4932d560309572a0281651fe81d769fd9fdece,wander4096@gmail.com,2022-10-17 13:26:48+08:00,noreply@github.com,2022-10-17 13:26:48+08:00,"test: finish migrating xtream tests  (#1003)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,5,test_helper.tcl,tcl,0,1,1
1333da7cf45bffbaa1975bfe38c0dba3fb4e8adc,wander4096@gmail.com,2022-10-17 17:49:09+08:00,noreply@github.com,2022-10-17 17:49:09+08:00,"test: migrate part of slotmigrate tests (#1004)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,slotmigrate_test.go,go,108,0,108
1333da7cf45bffbaa1975bfe38c0dba3fb4e8adc,wander4096@gmail.com,2022-10-17 17:49:09+08:00,noreply@github.com,2022-10-17 17:49:09+08:00,"test: migrate part of slotmigrate tests (#1004)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,slotmigrate.tcl,tcl,0,80,80
fcb3a19389fbf29ea6f72678ed6923e7fbcdc717,wander4096@gmail.com,2022-10-18 09:46:10+08:00,noreply@github.com,2022-10-18 09:46:10+08:00,"test: migrate part of slotmigrate tests (#1005)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,slotmigrate_test.go,go,286,4,290
fcb3a19389fbf29ea6f72678ed6923e7fbcdc717,wander4096@gmail.com,2022-10-18 09:46:10+08:00,noreply@github.com,2022-10-18 09:46:10+08:00,"test: migrate part of slotmigrate tests (#1005)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,zset_test.go,go,1,2,3
fcb3a19389fbf29ea6f72678ed6923e7fbcdc717,wander4096@gmail.com,2022-10-18 09:46:10+08:00,noreply@github.com,2022-10-18 09:46:10+08:00,"test: migrate part of slotmigrate tests (#1005)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,slotmigrate.tcl,tcl,0,348,348
42517c576f94067b826df732ae1f55c5a390e40f,twice.mliu@gmail.com,2022-10-18 11:30:36+08:00,noreply@github.com,2022-10-18 11:30:36+08:00,Update C++ standard to 17 (#1006),unstable,True,False,2,CMakeLists.txt,txt,22,2,24
42517c576f94067b826df732ae1f55c5a390e40f,twice.mliu@gmail.com,2022-10-18 11:30:36+08:00,noreply@github.com,2022-10-18 11:30:36+08:00,Update C++ standard to 17 (#1006),unstable,True,False,2,util.h,h,1,1,2
cc492897668aa3654dac5ea7d7f076a895d25809,wander4096@gmail.com,2022-10-18 21:36:05+08:00,noreply@github.com,2022-10-18 21:36:05+08:00,"Move TCL test integration/slotmigrate to Go case (#1008)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,slotmigrate_test.go,go,339,1,340
cc492897668aa3654dac5ea7d7f076a895d25809,wander4096@gmail.com,2022-10-18 21:36:05+08:00,noreply@github.com,2022-10-18 21:36:05+08:00,"Move TCL test integration/slotmigrate to Go case (#1008)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,test_helper.tcl,tcl,1,2,3
5a269c0f71c128a50b5688c341a175a1487e01d8,39056297+IoCing@users.noreply.github.com,2022-10-19 00:28:45+08:00,noreply@github.com,2022-10-19 00:28:45+08:00,"Move TCL test unit/type/list to Go case (#1009)

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: Ruixiang Tan <819464715@qq.com>",unstable,True,False,6,kvrocks.yaml,yaml,0,1,1
5a269c0f71c128a50b5688c341a175a1487e01d8,39056297+IoCing@users.noreply.github.com,2022-10-19 00:28:45+08:00,noreply@github.com,2022-10-19 00:28:45+08:00,"Move TCL test unit/type/list to Go case (#1009)

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: Ruixiang Tan <819464715@qq.com>",unstable,True,False,6,list_test.go,go,626,0,626
5a269c0f71c128a50b5688c341a175a1487e01d8,39056297+IoCing@users.noreply.github.com,2022-10-19 00:28:45+08:00,noreply@github.com,2022-10-19 00:28:45+08:00,"Move TCL test unit/type/list to Go case (#1009)

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: Ruixiang Tan <819464715@qq.com>",unstable,True,False,6,tcp_client.go,go,15,0,15
5a269c0f71c128a50b5688c341a175a1487e01d8,39056297+IoCing@users.noreply.github.com,2022-10-19 00:28:45+08:00,noreply@github.com,2022-10-19 00:28:45+08:00,"Move TCL test unit/type/list to Go case (#1009)

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: Ruixiang Tan <819464715@qq.com>",unstable,True,False,6,test_helper.tcl,tcl,0,1,1
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,cluster.cc,cc,2,2,4
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,slot_migrate.cc,cc,1,1,2
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,util.cc,cc,2,2,4
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,util.h,h,2,13,15
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,server.cc,cc,6,6,12
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,storage.cc,cc,2,2,4
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,table_properties_collector.cc,cc,2,1,3
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,redis_set.cc,cc,1,1,2
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,redis_stream.cc,cc,2,2,4
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,redis_zset.cc,cc,3,3,6
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,compact_test.cc,cc,3,3,6
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,cron_test.cc,cc,1,1,2
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,disk_test.cc,cc,16,16,32
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,t_bitmap_test.cc,cc,1,1,2
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,t_geo_test.cc,cc,1,1,2
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,t_hash_test.cc,cc,1,1,2
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,t_list_test.cc,cc,1,1,2
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,t_metadata_test.cc,cc,2,2,4
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,t_set_test.cc,cc,1,1,2
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,t_sortedint_test.cc,cc,1,1,2
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,t_string_test.cc,cc,1,1,2
777f0f2a3047ede0e52518f157c6ba36ec341117,torwigua@gmail.com,2022-10-19 04:53:06+03:00,noreply@github.com,2022-10-19 09:53:06+08:00,Use make_unique/make_shared from STL (#1011),unstable,True,False,22,t_zset_test.cc,cc,1,1,2
ce33994d4416141a7a91f3d6f4b85c04467e5fcc,twice.mliu@gmail.com,2022-10-20 21:22:01+08:00,noreply@github.com,2022-10-20 21:22:01+08:00,"Move TCL test unit/tls to Go case (#1012)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,34,kvrocks.yaml,yaml,9,23,32
ce33994d4416141a7a91f3d6f4b85c04467e5fcc,twice.mliu@gmail.com,2022-10-20 21:22:01+08:00,noreply@github.com,2022-10-20 21:22:01+08:00,"Move TCL test unit/tls to Go case (#1012)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,34,NOTICE,None,2,2,4
ce33994d4416141a7a91f3d6f4b85c04467e5fcc,twice.mliu@gmail.com,2022-10-20 21:22:01+08:00,noreply@github.com,2022-10-20 21:22:01+08:00,"Move TCL test unit/tls to Go case (#1012)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,34,go.mod,mod,8,0,8
ce33994d4416141a7a91f3d6f4b85c04467e5fcc,twice.mliu@gmail.com,2022-10-20 21:22:01+08:00,noreply@github.com,2022-10-20 21:22:01+08:00,"Move TCL test unit/tls to Go case (#1012)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,34,go.sum,sum,23,1,24
ce33994d4416141a7a91f3d6f4b85c04467e5fcc,twice.mliu@gmail.com,2022-10-20 21:22:01+08:00,noreply@github.com,2022-10-20 21:22:01+08:00,"Move TCL test unit/tls to Go case (#1012)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,34,cli_test.go,go,2,5,7
ce33994d4416141a7a91f3d6f4b85c04467e5fcc,twice.mliu@gmail.com,2022-10-20 21:22:01+08:00,noreply@github.com,2022-10-20 21:22:01+08:00,"Move TCL test unit/tls to Go case (#1012)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,34,.gitignore,gitignore,1,0,1
ce33994d4416141a7a91f3d6f4b85c04467e5fcc,twice.mliu@gmail.com,2022-10-20 21:22:01+08:00,noreply@github.com,2022-10-20 21:22:01+08:00,"Move TCL test unit/tls to Go case (#1012)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,34,tls_test.go,go,138,0,138
ce33994d4416141a7a91f3d6f4b85c04467e5fcc,twice.mliu@gmail.com,2022-10-20 21:22:01+08:00,noreply@github.com,2022-10-20 21:22:01+08:00,"Move TCL test unit/tls to Go case (#1012)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,34,bitmap_test.go,go,13,12,25
ce33994d4416141a7a91f3d6f4b85c04467e5fcc,twice.mliu@gmail.com,2022-10-20 21:22:01+08:00,noreply@github.com,2022-10-20 21:22:01+08:00,"Move TCL test unit/tls to Go case (#1012)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,34,strings_test.go,go,1,1,2
ce33994d4416141a7a91f3d6f4b85c04467e5fcc,twice.mliu@gmail.com,2022-10-20 21:22:01+08:00,noreply@github.com,2022-10-20 21:22:01+08:00,"Move TCL test unit/tls to Go case (#1012)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,34,flags.go,go,36,0,36
ce33994d4416141a7a91f3d6f4b85c04467e5fcc,twice.mliu@gmail.com,2022-10-20 21:22:01+08:00,noreply@github.com,2022-10-20 21:22:01+08:00,"Move TCL test unit/tls to Go case (#1012)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,34,server.go,go,48,12,60
ce33994d4416141a7a91f3d6f4b85c04467e5fcc,twice.mliu@gmail.com,2022-10-20 21:22:01+08:00,noreply@github.com,2022-10-20 21:22:01+08:00,"Move TCL test unit/tls to Go case (#1012)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,34,tcp_client.go,go,10,0,10
ce33994d4416141a7a91f3d6f4b85c04467e5fcc,twice.mliu@gmail.com,2022-10-20 21:22:01+08:00,noreply@github.com,2022-10-20 21:22:01+08:00,"Move TCL test unit/tls to Go case (#1012)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,34,tls.go,go,50,0,50
ce33994d4416141a7a91f3d6f4b85c04467e5fcc,twice.mliu@gmail.com,2022-10-20 21:22:01+08:00,noreply@github.com,2022-10-20 21:22:01+08:00,"Move TCL test unit/tls to Go case (#1012)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,34,x.py,py,1,23,24
dd80ec32f556950638206f5d3678a21132992558,hulk.website@gmail.com,2022-10-21 11:14:11+08:00,noreply@github.com,2022-10-21 11:14:11+08:00,Fix don't duplicate killed clients which have already flagged kCloseAfterReply (#1020),unstable,True,False,1,worker.cc,cc,4,0,4
ca54a5c1e48f7fc4cccdc5f33c67123bac547e37,twice.mliu@gmail.com,2022-10-21 19:34:51+08:00,noreply@github.com,2022-10-21 19:34:51+08:00,"Add mailing list to README (#1023)

* Add mailing list to README

* Update .asf.yaml

* Update README.md

Co-authored-by: tison <wander4096@gmail.com>

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,2,.asf.yaml,yaml,1,1,2
ca54a5c1e48f7fc4cccdc5f33c67123bac547e37,twice.mliu@gmail.com,2022-10-21 19:34:51+08:00,noreply@github.com,2022-10-21 19:34:51+08:00,"Add mailing list to README (#1023)

* Add mailing list to README

* Update .asf.yaml

* Update README.md

Co-authored-by: tison <wander4096@gmail.com>

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,2,README.md,md,1,1,2
c5db264a0c6850ffc8f344129efed02d82c1b532,twice.mliu@gmail.com,2022-10-23 09:32:25+08:00,noreply@github.com,2022-10-23 09:32:25+08:00,"Use clang-tidy instead of cppcheck (#1025)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,12,.clang-tidy,clang-tidy,12,0,12
c5db264a0c6850ffc8f344129efed02d82c1b532,twice.mliu@gmail.com,2022-10-23 09:32:25+08:00,noreply@github.com,2022-10-23 09:32:25+08:00,"Use clang-tidy instead of cppcheck (#1025)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,12,kvrocks.yaml,yaml,6,5,11
c5db264a0c6850ffc8f344129efed02d82c1b532,twice.mliu@gmail.com,2022-10-23 09:32:25+08:00,noreply@github.com,2022-10-23 09:32:25+08:00,"Use clang-tidy instead of cppcheck (#1025)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,12,redis_cmd.cc,cc,1,1,2
c5db264a0c6850ffc8f344129efed02d82c1b532,twice.mliu@gmail.com,2022-10-23 09:32:25+08:00,noreply@github.com,2022-10-23 09:32:25+08:00,"Use clang-tidy instead of cppcheck (#1025)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,12,event_util.h,h,1,2,3
c5db264a0c6850ffc8f344129efed02d82c1b532,twice.mliu@gmail.com,2022-10-23 09:32:25+08:00,noreply@github.com,2022-10-23 09:32:25+08:00,"Use clang-tidy instead of cppcheck (#1025)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,12,sha1.cc,cc,1,1,2
c5db264a0c6850ffc8f344129efed02d82c1b532,twice.mliu@gmail.com,2022-10-23 09:32:25+08:00,noreply@github.com,2022-10-23 09:32:25+08:00,"Use clang-tidy instead of cppcheck (#1025)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,12,util.cc,cc,2,2,4
c5db264a0c6850ffc8f344129efed02d82c1b532,twice.mliu@gmail.com,2022-10-23 09:32:25+08:00,noreply@github.com,2022-10-23 09:32:25+08:00,"Use clang-tidy instead of cppcheck (#1025)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,12,config_util.cc,cc,0,2,2
c5db264a0c6850ffc8f344129efed02d82c1b532,twice.mliu@gmail.com,2022-10-23 09:32:25+08:00,noreply@github.com,2022-10-23 09:32:25+08:00,"Use clang-tidy instead of cppcheck (#1025)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,12,worker.cc,cc,1,1,2
c5db264a0c6850ffc8f344129efed02d82c1b532,twice.mliu@gmail.com,2022-10-23 09:32:25+08:00,noreply@github.com,2022-10-23 09:32:25+08:00,"Use clang-tidy instead of cppcheck (#1025)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,12,geohash.cc,cc,2,2,4
c5db264a0c6850ffc8f344129efed02d82c1b532,twice.mliu@gmail.com,2022-10-23 09:32:25+08:00,noreply@github.com,2022-10-23 09:32:25+08:00,"Use clang-tidy instead of cppcheck (#1025)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,12,geohash.h,h,4,4,8
c5db264a0c6850ffc8f344129efed02d82c1b532,twice.mliu@gmail.com,2022-10-23 09:32:25+08:00,noreply@github.com,2022-10-23 09:32:25+08:00,"Use clang-tidy instead of cppcheck (#1025)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,12,redis_zset.cc,cc,1,1,2
c5db264a0c6850ffc8f344129efed02d82c1b532,twice.mliu@gmail.com,2022-10-23 09:32:25+08:00,noreply@github.com,2022-10-23 09:32:25+08:00,"Use clang-tidy instead of cppcheck (#1025)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,12,x.py,py,30,19,49
d0d5e751fe362cc3c4760a63b022e3891cc4e2e3,819464715@qq.com,2022-10-23 10:15:11+08:00,noreply@github.com,2022-10-23 10:15:11+08:00,"Align the expire option behavior of redis (#1017)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,2,redis_cmd.cc,cc,19,4,23
d0d5e751fe362cc3c4760a63b022e3891cc4e2e3,819464715@qq.com,2022-10-23 10:15:11+08:00,noreply@github.com,2022-10-23 10:15:11+08:00,"Align the expire option behavior of redis (#1017)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,2,strings_test.go,go,132,7,139
c918ced1ef380fdb1528ad083aa35d492943632d,wander4096@gmail.com,2022-10-23 11:34:13+08:00,noreply@github.com,2022-10-23 11:34:13+08:00,"ci: tidy lint job (#1027)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,kvrocks.yaml,yaml,14,15,29
67c52be4b7f323d0c61b9e37f4d944c2b4f1ed55,wander4096@gmail.com,2022-10-23 14:18:14+08:00,noreply@github.com,2022-10-23 14:18:14+08:00,"ci: improve cancel logics and task bunches (#1028)

Signed-off-by: tison <wander4096@gmail.com>

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,kvrocks.yaml,yaml,27,34,61
ce085aa6807e31c987b62ddeb5bf0ca2ae14323d,maplewish117@gmail.com,2022-10-24 12:18:34+08:00,noreply@github.com,2022-10-24 12:18:34+08:00,Support `config set backup-dir new-dir` (#1026),unstable,True,False,6,config.cc,cc,23,3,26
ce085aa6807e31c987b62ddeb5bf0ca2ae14323d,maplewish117@gmail.com,2022-10-24 12:18:34+08:00,noreply@github.com,2022-10-24 12:18:34+08:00,Support `config set backup-dir new-dir` (#1026),unstable,True,False,6,config.h,h,3,1,4
ce085aa6807e31c987b62ddeb5bf0ca2ae14323d,maplewish117@gmail.com,2022-10-24 12:18:34+08:00,noreply@github.com,2022-10-24 12:18:34+08:00,Support `config set backup-dir new-dir` (#1026),unstable,True,False,6,storage.cc,cc,9,7,16
ce085aa6807e31c987b62ddeb5bf0ca2ae14323d,maplewish117@gmail.com,2022-10-24 12:18:34+08:00,noreply@github.com,2022-10-24 12:18:34+08:00,Support `config set backup-dir new-dir` (#1026),unstable,True,False,6,storage.h,h,0,1,1
ce085aa6807e31c987b62ddeb5bf0ca2ae14323d,maplewish117@gmail.com,2022-10-24 12:18:34+08:00,noreply@github.com,2022-10-24 12:18:34+08:00,Support `config set backup-dir new-dir` (#1026),unstable,True,False,6,config_test.cc,cc,1,1,2
ce085aa6807e31c987b62ddeb5bf0ca2ae14323d,maplewish117@gmail.com,2022-10-24 12:18:34+08:00,noreply@github.com,2022-10-24 12:18:34+08:00,Support `config set backup-dir new-dir` (#1026),unstable,True,False,6,config_test.go,go,57,0,57
e6d0dcf3eb4ce05273754bced42b0e12995e5270,twice.mliu@gmail.com,2022-10-24 18:10:53+08:00,noreply@github.com,2022-10-24 18:10:53+08:00,Fix compiler warning in stats/db_stats (#1035),unstable,True,False,1,disk_stats.cc,cc,1,1,2
f5c4a0ab30decd1daa12d4eb9b3fecc74f7b59a2,hulk.website@gmail.com,2022-10-24 23:28:43+08:00,noreply@github.com,2022-10-24 23:28:43+08:00,"Use a consistent way to get the current time (#1038)

* Use a consistent way to get the current time

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

* Update src/common/util.h

* Fix compile error

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,10,cluster.cc,cc,3,2,5
f5c4a0ab30decd1daa12d4eb9b3fecc74f7b59a2,hulk.website@gmail.com,2022-10-24 23:28:43+08:00,noreply@github.com,2022-10-24 23:28:43+08:00,"Use a consistent way to get the current time (#1038)

* Use a consistent way to get the current time

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

* Update src/common/util.h

* Fix compile error

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,10,redis_cmd.cc,cc,7,8,15
f5c4a0ab30decd1daa12d4eb9b3fecc74f7b59a2,hulk.website@gmail.com,2022-10-24 23:28:43+08:00,noreply@github.com,2022-10-24 23:28:43+08:00,"Use a consistent way to get the current time (#1038)

* Use a consistent way to get the current time

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

* Update src/common/util.h

* Fix compile error

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,10,util.cc,cc,0,13,13
f5c4a0ab30decd1daa12d4eb9b3fecc74f7b59a2,hulk.website@gmail.com,2022-10-24 23:28:43+08:00,noreply@github.com,2022-10-24 23:28:43+08:00,"Use a consistent way to get the current time (#1038)

* Use a consistent way to get the current time

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

* Update src/common/util.h

* Fix compile error

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,10,util.h,h,7,2,9
f5c4a0ab30decd1daa12d4eb9b3fecc74f7b59a2,hulk.website@gmail.com,2022-10-24 23:28:43+08:00,noreply@github.com,2022-10-24 23:28:43+08:00,"Use a consistent way to get the current time (#1038)

* Use a consistent way to get the current time

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

* Update src/common/util.h

* Fix compile error

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,10,server.cc,cc,6,6,12
f5c4a0ab30decd1daa12d4eb9b3fecc74f7b59a2,hulk.website@gmail.com,2022-10-24 23:28:43+08:00,noreply@github.com,2022-10-24 23:28:43+08:00,"Use a consistent way to get the current time (#1038)

* Use a consistent way to get the current time

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

* Update src/common/util.h

* Fix compile error

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,10,worker.cc,cc,2,3,5
f5c4a0ab30decd1daa12d4eb9b3fecc74f7b59a2,hulk.website@gmail.com,2022-10-24 23:28:43+08:00,noreply@github.com,2022-10-24 23:28:43+08:00,"Use a consistent way to get the current time (#1038)

* Use a consistent way to get the current time

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

* Update src/common/util.h

* Fix compile error

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,10,compaction_checker.cc,cc,2,2,4
f5c4a0ab30decd1daa12d4eb9b3fecc74f7b59a2,hulk.website@gmail.com,2022-10-24 23:28:43+08:00,noreply@github.com,2022-10-24 23:28:43+08:00,"Use a consistent way to get the current time (#1038)

* Use a consistent way to get the current time

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

* Update src/common/util.h

* Fix compile error

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,10,redis_metadata.cc,cc,5,11,16
f5c4a0ab30decd1daa12d4eb9b3fecc74f7b59a2,hulk.website@gmail.com,2022-10-24 23:28:43+08:00,noreply@github.com,2022-10-24 23:28:43+08:00,"Use a consistent way to get the current time (#1038)

* Use a consistent way to get the current time

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

* Update src/common/util.h

* Fix compile error

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,10,storage.cc,cc,7,5,12
f5c4a0ab30decd1daa12d4eb9b3fecc74f7b59a2,hulk.website@gmail.com,2022-10-24 23:28:43+08:00,noreply@github.com,2022-10-24 23:28:43+08:00,"Use a consistent way to get the current time (#1038)

* Use a consistent way to get the current time

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

Co-authored-by: Twice <twice@apache.org>

* Update src/common/util.h

* Update src/common/util.h

* Fix compile error

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,10,redis_string.cc,cc,5,10,15
c09cb8c4054efadd3958046ee5f92b88a477eabf,twice.mliu@gmail.com,2022-10-24 23:29:14+08:00,noreply@github.com,2022-10-24 23:29:14+08:00,"Support CLI options for kvrocks server (#1037)

* Support CLI options for kvrocks server

* read from stdin

* fix usage

* fix

* remove header",unstable,True,False,7,config.cc,cc,38,24,62
c09cb8c4054efadd3958046ee5f92b88a477eabf,twice.mliu@gmail.com,2022-10-24 23:29:14+08:00,noreply@github.com,2022-10-24 23:29:14+08:00,"Support CLI options for kvrocks server (#1037)

* Support CLI options for kvrocks server

* read from stdin

* fix usage

* fix

* remove header",unstable,True,False,7,config.h,h,10,1,11
c09cb8c4054efadd3958046ee5f92b88a477eabf,twice.mliu@gmail.com,2022-10-24 23:29:14+08:00,noreply@github.com,2022-10-24 23:29:14+08:00,"Support CLI options for kvrocks server (#1037)

* Support CLI options for kvrocks server

* read from stdin

* fix usage

* fix

* remove header",unstable,True,False,7,config_type.h,h,4,4,8
c09cb8c4054efadd3958046ee5f92b88a477eabf,twice.mliu@gmail.com,2022-10-24 23:29:14+08:00,noreply@github.com,2022-10-24 23:29:14+08:00,"Support CLI options for kvrocks server (#1037)

* Support CLI options for kvrocks server

* read from stdin

* fix usage

* fix

* remove header",unstable,True,False,7,main.cc,cc,42,29,71
c09cb8c4054efadd3958046ee5f92b88a477eabf,twice.mliu@gmail.com,2022-10-24 23:29:14+08:00,noreply@github.com,2022-10-24 23:29:14+08:00,"Support CLI options for kvrocks server (#1037)

* Support CLI options for kvrocks server

* read from stdin

* fix usage

* fix

* remove header",unstable,True,False,7,config_test.cc,cc,9,9,18
c09cb8c4054efadd3958046ee5f92b88a477eabf,twice.mliu@gmail.com,2022-10-24 23:29:14+08:00,noreply@github.com,2022-10-24 23:29:14+08:00,"Support CLI options for kvrocks server (#1037)

* Support CLI options for kvrocks server

* read from stdin

* fix usage

* fix

* remove header",unstable,True,False,7,cli_options_test.go,go,39,0,39
c09cb8c4054efadd3958046ee5f92b88a477eabf,twice.mliu@gmail.com,2022-10-24 23:29:14+08:00,noreply@github.com,2022-10-24 23:29:14+08:00,"Support CLI options for kvrocks server (#1037)

* Support CLI options for kvrocks server

* read from stdin

* fix usage

* fix

* remove header",unstable,True,False,7,server.go,go,5,0,5
6e89f980e1c8e0fc68ddafafe4b11cab395a54b1,twice.mliu@gmail.com,2022-10-24 23:31:46+08:00,noreply@github.com,2022-10-24 23:31:46+08:00,Add cpp unittest to x.py (#1036),unstable,True,False,1,x.py,py,16,1,17
a1bb45d72b3db7784f1f214fdcaba6705417b29e,wander4096@gmail.com,2022-10-25 10:47:19+08:00,noreply@github.com,2022-10-25 10:47:19+08:00,"ci: make use of new command (#1039)

Dogfeeding and preventing regressions.

Signed-off-by: tison <wander4096@gmail.com>

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,kvrocks.yaml,yaml,1,1,2
e0fc53203126eb031667a78fa9ea90dea197016e,wander4096@gmail.com,2022-10-25 20:37:52+08:00,noreply@github.com,2022-10-25 20:37:52+08:00,"fix: properly parse cmake version (#1043)

This closes #1042.

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,x.py,py,1,1,2
91ef4a9d3c44a0fa728083ce47dc2de71bbaf6c8,twice.mliu@gmail.com,2022-10-26 12:47:09+08:00,noreply@github.com,2022-10-26 12:47:09+08:00,Fix missing dependency and add license files in Dockerfile (#1041),unstable,True,False,1,Dockerfile,None,5,0,5
edb85fe8aff90aa44f7d205d63c68ace63c26723,AntiTopQuark1350@outlook.com,2022-10-26 13:15:53+08:00,noreply@github.com,2022-10-26 13:15:53+08:00,Add support  of showing `used_memory_startup` (#1044),unstable,True,False,2,server.cc,cc,2,1,3
edb85fe8aff90aa44f7d205d63c68ace63c26723,AntiTopQuark1350@outlook.com,2022-10-26 13:15:53+08:00,noreply@github.com,2022-10-26 13:15:53+08:00,Add support  of showing `used_memory_startup` (#1044),unstable,True,False,2,server.h,h,3,0,3
bf15c984d7045a86412e1bce52bd0a583de92d35,664737951@qq.com,2022-10-27 12:49:19+08:00,noreply@github.com,2022-10-27 12:49:19+08:00,Remove the duplicate open function (#1046),unstable,True,False,3,storage.cc,cc,0,4,4
bf15c984d7045a86412e1bce52bd0a583de92d35,664737951@qq.com,2022-10-27 12:49:19+08:00,noreply@github.com,2022-10-27 12:49:19+08:00,Remove the duplicate open function (#1046),unstable,True,False,3,storage.h,h,1,3,4
bf15c984d7045a86412e1bce52bd0a583de92d35,664737951@qq.com,2022-10-27 12:49:19+08:00,noreply@github.com,2022-10-27 12:49:19+08:00,Remove the duplicate open function (#1046),unstable,True,False,3,main.cc,cc,1,1,2
c7bf911a2fe515d963aa21d20ee46f8a8cb90d27,52393536+xiaobiaozhao@users.noreply.github.com,2022-10-28 10:04:27+08:00,noreply@github.com,2022-10-28 10:04:27+08:00,"Rewrite *write function (#1045)

Co-authored-by: Ruixiang Tan <819464715@qq.com>",unstable,True,False,10,replication.cc,cc,1,1,2
c7bf911a2fe515d963aa21d20ee46f8a8cb90d27,52393536+xiaobiaozhao@users.noreply.github.com,2022-10-28 10:04:27+08:00,noreply@github.com,2022-10-28 10:04:27+08:00,"Rewrite *write function (#1045)

Co-authored-by: Ruixiang Tan <819464715@qq.com>",unstable,True,False,10,redis_cmd.cc,cc,2,3,5
c7bf911a2fe515d963aa21d20ee46f8a8cb90d27,52393536+xiaobiaozhao@users.noreply.github.com,2022-10-28 10:04:27+08:00,noreply@github.com,2022-10-28 10:04:27+08:00,"Rewrite *write function (#1045)

Co-authored-by: Ruixiang Tan <819464715@qq.com>",unstable,True,False,10,util.cc,cc,24,0,24
c7bf911a2fe515d963aa21d20ee46f8a8cb90d27,52393536+xiaobiaozhao@users.noreply.github.com,2022-10-28 10:04:27+08:00,noreply@github.com,2022-10-28 10:04:27+08:00,"Rewrite *write function (#1045)

Co-authored-by: Ruixiang Tan <819464715@qq.com>",unstable,True,False,10,util.h,h,3,1,4
c7bf911a2fe515d963aa21d20ee46f8a8cb90d27,52393536+xiaobiaozhao@users.noreply.github.com,2022-10-28 10:04:27+08:00,noreply@github.com,2022-10-28 10:04:27+08:00,"Rewrite *write function (#1045)

Co-authored-by: Ruixiang Tan <819464715@qq.com>",unstable,True,False,10,main.cc,cc,1,1,2
c7bf911a2fe515d963aa21d20ee46f8a8cb90d27,52393536+xiaobiaozhao@users.noreply.github.com,2022-10-28 10:04:27+08:00,noreply@github.com,2022-10-28 10:04:27+08:00,"Rewrite *write function (#1045)

Co-authored-by: Ruixiang Tan <819464715@qq.com>",unstable,True,False,10,worker.cc,cc,2,2,4
c7bf911a2fe515d963aa21d20ee46f8a8cb90d27,52393536+xiaobiaozhao@users.noreply.github.com,2022-10-28 10:04:27+08:00,noreply@github.com,2022-10-28 10:04:27+08:00,"Rewrite *write function (#1045)

Co-authored-by: Ruixiang Tan <819464715@qq.com>",unstable,True,False,10,main.cc,cc,1,1,2
c7bf911a2fe515d963aa21d20ee46f8a8cb90d27,52393536+xiaobiaozhao@users.noreply.github.com,2022-10-28 10:04:27+08:00,noreply@github.com,2022-10-28 10:04:27+08:00,"Rewrite *write function (#1045)

Co-authored-by: Ruixiang Tan <819464715@qq.com>",unstable,True,False,10,redis_writer.cc,cc,1,1,2
c7bf911a2fe515d963aa21d20ee46f8a8cb90d27,52393536+xiaobiaozhao@users.noreply.github.com,2022-10-28 10:04:27+08:00,noreply@github.com,2022-10-28 10:04:27+08:00,"Rewrite *write function (#1045)

Co-authored-by: Ruixiang Tan <819464715@qq.com>",unstable,True,False,10,sync.cc,cc,1,1,2
c7bf911a2fe515d963aa21d20ee46f8a8cb90d27,52393536+xiaobiaozhao@users.noreply.github.com,2022-10-28 10:04:27+08:00,noreply@github.com,2022-10-28 10:04:27+08:00,"Rewrite *write function (#1045)

Co-authored-by: Ruixiang Tan <819464715@qq.com>",unstable,True,False,10,writer.cc,cc,4,2,6
30a0348636a79034c464e2f8cbda2d10dec49ce8,82277001+manchurio@users.noreply.github.com,2022-10-28 13:53:37+08:00,noreply@github.com,2022-10-28 13:53:37+08:00,"Implement the ZADD options (#1022)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,redis_cmd.cc,cc,58,6,64
30a0348636a79034c464e2f8cbda2d10dec49ce8,82277001+manchurio@users.noreply.github.com,2022-10-28 13:53:37+08:00,noreply@github.com,2022-10-28 13:53:37+08:00,"Implement the ZADD options (#1022)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,redis_geo.cc,cc,2,2,4
30a0348636a79034c464e2f8cbda2d10dec49ce8,82277001+manchurio@users.noreply.github.com,2022-10-28 13:53:37+08:00,noreply@github.com,2022-10-28 13:53:37+08:00,"Implement the ZADD options (#1022)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,redis_zset.cc,cc,21,3,24
30a0348636a79034c464e2f8cbda2d10dec49ce8,82277001+manchurio@users.noreply.github.com,2022-10-28 13:53:37+08:00,noreply@github.com,2022-10-28 13:53:37+08:00,"Implement the ZADD options (#1022)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,redis_zset.h,h,26,1,27
30a0348636a79034c464e2f8cbda2d10dec49ce8,82277001+manchurio@users.noreply.github.com,2022-10-28 13:53:37+08:00,noreply@github.com,2022-10-28 13:53:37+08:00,"Implement the ZADD options (#1022)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,compact_test.cc,cc,1,1,2
30a0348636a79034c464e2f8cbda2d10dec49ce8,82277001+manchurio@users.noreply.github.com,2022-10-28 13:53:37+08:00,noreply@github.com,2022-10-28 13:53:37+08:00,"Implement the ZADD options (#1022)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,disk_test.cc,cc,1,1,2
30a0348636a79034c464e2f8cbda2d10dec49ce8,82277001+manchurio@users.noreply.github.com,2022-10-28 13:53:37+08:00,noreply@github.com,2022-10-28 13:53:37+08:00,"Implement the ZADD options (#1022)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,t_zset_test.cc,cc,15,15,30
30a0348636a79034c464e2f8cbda2d10dec49ce8,82277001+manchurio@users.noreply.github.com,2022-10-28 13:53:37+08:00,noreply@github.com,2022-10-28 13:53:37+08:00,"Implement the ZADD options (#1022)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,zset_test.go,go,76,0,76
29d5a9528baa0db14ac6715e64e8f1bd1a08d5db,819464715@qq.com,2022-10-28 16:40:54+08:00,noreply@github.com,2022-10-28 16:40:54+08:00,Fix rename-command only the first one works(#1047),unstable,True,False,5,config.cc,cc,30,20,50
29d5a9528baa0db14ac6715e64e8f1bd1a08d5db,819464715@qq.com,2022-10-28 16:40:54+08:00,noreply@github.com,2022-10-28 16:40:54+08:00,Fix rename-command only the first one works(#1047),unstable,True,False,5,config.h,h,1,1,2
29d5a9528baa0db14ac6715e64e8f1bd1a08d5db,819464715@qq.com,2022-10-28 16:40:54+08:00,noreply@github.com,2022-10-28 16:40:54+08:00,Fix rename-command only the first one works(#1047),unstable,True,False,5,config_type.h,h,30,0,30
29d5a9528baa0db14ac6715e64e8f1bd1a08d5db,819464715@qq.com,2022-10-28 16:40:54+08:00,noreply@github.com,2022-10-28 16:40:54+08:00,Fix rename-command only the first one works(#1047),unstable,True,False,5,config_test.cc,cc,33,9,42
29d5a9528baa0db14ac6715e64e8f1bd1a08d5db,819464715@qq.com,2022-10-28 16:40:54+08:00,noreply@github.com,2022-10-28 16:40:54+08:00,Fix rename-command only the first one works(#1047),unstable,True,False,5,config_test.go,go,16,5,21
30a7eb5a4e799bcdec6525201b74c9411fc3642a,hulk.website@gmail.com,2022-10-29 09:48:24+08:00,noreply@github.com,2022-10-29 09:48:24+08:00,Fix the anonymous typedef struct compile warnings (#1048),unstable,True,False,1,geohash.h,h,10,10,20
60f9c1dcfdf14dcbd4de917c761155addbed7f58,twice.mliu@gmail.com,2022-10-29 15:45:49+08:00,noreply@github.com,2022-10-29 15:45:49+08:00,Update testing instructions in README (#1051),unstable,True,False,1,README.md,md,2,2,4
76585d40f2cd1d347c9b138ed64c0f6bc71a2356,twice.mliu@gmail.com,2022-10-29 16:00:19+08:00,noreply@github.com,2022-10-29 16:00:19+08:00,"Update the docker image in README (#1050)

* Update the docker image in README

* Update README.md

Co-authored-by: tison <wander4096@gmail.com>

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,1,README.md,md,3,1,4
5e5d7beeb8d7ef60561af80b69c37041eb635bb8,twice.mliu@gmail.com,2022-10-29 23:42:21+08:00,noreply@github.com,2022-10-29 23:42:21+08:00,Replace ADD_CMD macro with template (#1054),unstable,True,False,1,redis_cmd.cc,cc,210,207,417
8946859babfe140191beff7aa1649ef109cc3c77,twice.mliu@gmail.com,2022-10-30 00:10:47+08:00,noreply@github.com,2022-10-30 00:10:47+08:00,Improve stacktrace format and clean main.cc (#1053),unstable,True,False,2,main.cc,cc,28,27,55
8946859babfe140191beff7aa1649ef109cc3c77,twice.mliu@gmail.com,2022-10-30 00:10:47+08:00,noreply@github.com,2022-10-30 00:10:47+08:00,Improve stacktrace format and clean main.cc (#1053),unstable,True,False,2,server.h,h,0,1,1
b83212ee73a9369b27412813a2d22a787d33c94a,twice.mliu@gmail.com,2022-10-30 22:20:22+08:00,noreply@github.com,2022-10-30 22:20:22+08:00,"Add command parser (#1032)

* init command parser

* fix errors

* remove not-in-use method

* more commands

* fix

* add unit test

* fix

* fix error

* add parse move unittest",unstable,True,False,11,CMakeLists.txt,txt,1,1,2
b83212ee73a9369b27412813a2d22a787d33c94a,twice.mliu@gmail.com,2022-10-30 22:20:22+08:00,noreply@github.com,2022-10-30 22:20:22+08:00,"Add command parser (#1032)

* init command parser

* fix errors

* remove not-in-use method

* more commands

* fix

* add unit test

* fix

* fix error

* add parse move unittest",unstable,True,False,11,command_parser.h,h,120,0,120
b83212ee73a9369b27412813a2d22a787d33c94a,twice.mliu@gmail.com,2022-10-30 22:20:22+08:00,noreply@github.com,2022-10-30 22:20:22+08:00,"Add command parser (#1032)

* init command parser

* fix errors

* remove not-in-use method

* more commands

* fix

* add unit test

* fix

* fix error

* add parse move unittest",unstable,True,False,11,redis_cmd.cc,cc,84,148,232
b83212ee73a9369b27412813a2d22a787d33c94a,twice.mliu@gmail.com,2022-10-30 22:20:22+08:00,noreply@github.com,2022-10-30 22:20:22+08:00,"Add command parser (#1032)

* init command parser

* fix errors

* remove not-in-use method

* more commands

* fix

* add unit test

* fix

* fix error

* add parse move unittest",unstable,True,False,11,redis_cmd.h,h,7,1,8
b83212ee73a9369b27412813a2d22a787d33c94a,twice.mliu@gmail.com,2022-10-30 22:20:22+08:00,noreply@github.com,2022-10-30 22:20:22+08:00,"Add command parser (#1032)

* init command parser

* fix errors

* remove not-in-use method

* more commands

* fix

* add unit test

* fix

* fix error

* add parse move unittest",unstable,True,False,11,status.h,h,18,14,32
b83212ee73a9369b27412813a2d22a787d33c94a,twice.mliu@gmail.com,2022-10-30 22:20:22+08:00,noreply@github.com,2022-10-30 22:20:22+08:00,"Add command parser (#1032)

* init command parser

* fix errors

* remove not-in-use method

* more commands

* fix

* add unit test

* fix

* fix error

* add parse move unittest",unstable,True,False,11,util.cc,cc,1,1,2
b83212ee73a9369b27412813a2d22a787d33c94a,twice.mliu@gmail.com,2022-10-30 22:20:22+08:00,noreply@github.com,2022-10-30 22:20:22+08:00,"Add command parser (#1032)

* init command parser

* fix errors

* remove not-in-use method

* more commands

* fix

* add unit test

* fix

* fix error

* add parse move unittest",unstable,True,False,11,util.h,h,1,1,2
b83212ee73a9369b27412813a2d22a787d33c94a,twice.mliu@gmail.com,2022-10-30 22:20:22+08:00,noreply@github.com,2022-10-30 22:20:22+08:00,"Add command parser (#1032)

* init command parser

* fix errors

* remove not-in-use method

* more commands

* fix

* add unit test

* fix

* fix error

* add parse move unittest",unstable,True,False,11,redis_connection.cc,cc,2,2,4
b83212ee73a9369b27412813a2d22a787d33c94a,twice.mliu@gmail.com,2022-10-30 22:20:22+08:00,noreply@github.com,2022-10-30 22:20:22+08:00,"Add command parser (#1032)

* init command parser

* fix errors

* remove not-in-use method

* more commands

* fix

* add unit test

* fix

* fix error

* add parse move unittest",unstable,True,False,11,command_parser_test.cc,cc,118,0,118
b83212ee73a9369b27412813a2d22a787d33c94a,twice.mliu@gmail.com,2022-10-30 22:20:22+08:00,noreply@github.com,2022-10-30 22:20:22+08:00,"Add command parser (#1032)

* init command parser

* fix errors

* remove not-in-use method

* more commands

* fix

* add unit test

* fix

* fix error

* add parse move unittest",unstable,True,False,11,expire_test.go,go,1,1,2
b83212ee73a9369b27412813a2d22a787d33c94a,twice.mliu@gmail.com,2022-10-30 22:20:22+08:00,noreply@github.com,2022-10-30 22:20:22+08:00,"Add command parser (#1032)

* init command parser

* fix errors

* remove not-in-use method

* more commands

* fix

* add unit test

* fix

* fix error

* add parse move unittest",unstable,True,False,11,strings_test.go,go,7,7,14
04809611843ee12ecc9efd3f6086cc2ffc7003e3,twice.mliu@gmail.com,2022-10-30 23:39:31+08:00,noreply@github.com,2022-10-30 23:39:31+08:00,Make compile flags more precise in CMakeLists (#1057),unstable,True,False,1,CMakeLists.txt,txt,6,3,9
0a1a9fc5f40c514a2cc412317e731d04865bea5a,torwigua@gmail.com,2022-10-31 10:21:24+02:00,noreply@github.com,2022-10-31 16:21:24+08:00,Fix CAS and CAD return statuses (#1055),unstable,True,False,2,redis_string.cc,cc,2,3,5
0a1a9fc5f40c514a2cc412317e731d04865bea5a,torwigua@gmail.com,2022-10-31 10:21:24+02:00,noreply@github.com,2022-10-31 16:21:24+08:00,Fix CAS and CAD return statuses (#1055),unstable,True,False,2,redis_string.h,h,2,2,4
f8dbd0f74d6ab3c9863ee26f0cdb8f494dcf072b,twice.mliu@gmail.com,2022-10-31 18:28:28+08:00,noreply@github.com,2022-10-31 18:28:28+08:00,"Remove PopulateCommands and InitCommandTable (#1058)

* Remove PopulateCommands and InitCommandTable

* fix

* fix

* fix",unstable,True,False,4,redis_cmd.cc,cc,37,36,73
f8dbd0f74d6ab3c9863ee26f0cdb8f494dcf072b,twice.mliu@gmail.com,2022-10-31 18:28:28+08:00,noreply@github.com,2022-10-31 18:28:28+08:00,"Remove PopulateCommands and InitCommandTable (#1058)

* Remove PopulateCommands and InitCommandTable

* fix

* fix

* fix",unstable,True,False,4,redis_cmd.h,h,5,4,9
f8dbd0f74d6ab3c9863ee26f0cdb8f494dcf072b,twice.mliu@gmail.com,2022-10-31 18:28:28+08:00,noreply@github.com,2022-10-31 18:28:28+08:00,"Remove PopulateCommands and InitCommandTable (#1058)

* Remove PopulateCommands and InitCommandTable

* fix

* fix

* fix",unstable,True,False,4,main.cc,cc,0,3,3
f8dbd0f74d6ab3c9863ee26f0cdb8f494dcf072b,twice.mliu@gmail.com,2022-10-31 18:28:28+08:00,noreply@github.com,2022-10-31 18:28:28+08:00,"Remove PopulateCommands and InitCommandTable (#1058)

* Remove PopulateCommands and InitCommandTable

* fix

* fix

* fix",unstable,True,False,4,config_test.cc,cc,4,7,11
684bcc6ce7060ab507627b8299b8326e9ffbf133,52393536+xiaobiaozhao@users.noreply.github.com,2022-11-01 15:08:20+08:00,noreply@github.com,2022-11-01 15:08:20+08:00,✨ feat: use rocksdb v7 (#1056),unstable,True,False,3,rocksdb.cmake,cmake,2,2,4
684bcc6ce7060ab507627b8299b8326e9ffbf133,52393536+xiaobiaozhao@users.noreply.github.com,2022-11-01 15:08:20+08:00,noreply@github.com,2022-11-01 15:08:20+08:00,✨ feat: use rocksdb v7 (#1056),unstable,True,False,3,disk_stats.h,h,1,1,2
684bcc6ce7060ab507627b8299b8326e9ffbf133,52393536+xiaobiaozhao@users.noreply.github.com,2022-11-01 15:08:20+08:00,noreply@github.com,2022-11-01 15:08:20+08:00,✨ feat: use rocksdb v7 (#1056),unstable,True,False,3,storage.cc,cc,1,1,2
7bdde8ae07f1f4690a701c36f98cd5ebcefad52c,torwigua@gmail.com,2022-11-02 08:08:44+02:00,noreply@github.com,2022-11-02 14:08:44+08:00,"Remove duplicate ERR word in some error responses (#1063)

If an error message is starting with ERR while returning from Command::Parse
or Command::Execute, the resulting message from Kvrocks contains
""ERR ERR xxx""

Also, made a few changes according to clang-tidy hints and fixed some typos.",unstable,True,False,1,redis_cmd.cc,cc,87,67,154
7105ba15e0dab132761527715c5110ec54806017,twice.mliu@gmail.com,2022-11-03 17:29:25+08:00,noreply@github.com,2022-11-03 17:29:25+08:00,Dump stacktrace for crashed instance started by go test in CI (#1065),unstable,True,False,1,kvrocks.yaml,yaml,31,3,34
62c7b51faf0ec332dca1d65080597c270272d84a,twice.mliu@gmail.com,2022-11-03 20:35:42+08:00,noreply@github.com,2022-11-03 20:35:42+08:00,Fix dangling reference in ReplicationThread::ParseWriteBatch (#1067),unstable,True,False,1,replication.cc,cc,2,1,3
2d8a2d6bbfc5b1bcdf5b3748a48eba8d93383248,hulk.website@gmail.com,2022-11-04 09:43:17+08:00,noreply@github.com,2022-11-04 09:43:17+08:00,Fix random crash in the migration test case (#1068),unstable,True,False,2,replication.cc,cc,1,0,1
2d8a2d6bbfc5b1bcdf5b3748a48eba8d93383248,hulk.website@gmail.com,2022-11-04 09:43:17+08:00,noreply@github.com,2022-11-04 09:43:17+08:00,Fix random crash in the migration test case (#1068),unstable,True,False,2,replication.h,h,3,2,5
64d9fa47e66b0bebe2f4f54b9a23bd897ed7555f,wander4096@gmail.com,2022-11-04 09:46:34+08:00,noreply@github.com,2022-11-04 09:46:34+08:00,ci: update actions to address warnings (#1070),unstable,True,False,1,kvrocks.yaml,yaml,1,1,2
06e029b5744d8f91acc1462a0a083b45fe3e506d,maplewish117@gmail.com,2022-11-04 10:35:52+08:00,noreply@github.com,2022-11-04 10:35:52+08:00,[BugFix] Fixing logging initialized before loaded (#1061),unstable,True,False,1,config.cc,cc,3,2,5
9665bbfd72f32a32a2bdde90ee48f84998d5e8cb,hulk.website@gmail.com,2022-11-04 14:22:42+08:00,noreply@github.com,2022-11-04 14:22:42+08:00,Change the nightly docker image organization to the apache (#1073),unstable,True,False,1,.travis.yml,yml,3,3,6
fe0746faf06e2145df8a1dd22152c14659f5c532,twice.mliu@gmail.com,2022-11-04 17:40:54+08:00,noreply@github.com,2022-11-04 17:40:54+08:00,Fix the nightly image in README (#1074),unstable,True,False,1,README.md,md,2,2,4
138d8c7051253defdc2fa2629743a6cafbae6d58,torwigua@gmail.com,2022-11-04 14:22:55+02:00,noreply@github.com,2022-11-04 20:22:55+08:00,Require redis-cli for testing in x.py (#1062),unstable,True,False,1,x.py,py,63,26,89
900e0f44781d9459649e9864ba09abe6000ce987,819464715@qq.com,2022-11-05 00:05:09+08:00,noreply@github.com,2022-11-05 00:05:09+08:00,Fix part of the clang-tidy warning in `cluster` and `common` (#1075),unstable,True,False,9,cluster.cc,cc,22,17,39
900e0f44781d9459649e9864ba09abe6000ce987,819464715@qq.com,2022-11-05 00:05:09+08:00,noreply@github.com,2022-11-05 00:05:09+08:00,Fix part of the clang-tidy warning in `cluster` and `common` (#1075),unstable,True,False,9,cluster.h,h,3,3,6
900e0f44781d9459649e9864ba09abe6000ce987,819464715@qq.com,2022-11-05 00:05:09+08:00,noreply@github.com,2022-11-05 00:05:09+08:00,Fix part of the clang-tidy warning in `cluster` and `common` (#1075),unstable,True,False,9,redis_slot.cc,cc,3,3,6
900e0f44781d9459649e9864ba09abe6000ce987,819464715@qq.com,2022-11-05 00:05:09+08:00,noreply@github.com,2022-11-05 00:05:09+08:00,Fix part of the clang-tidy warning in `cluster` and `common` (#1075),unstable,True,False,9,replication.cc,cc,11,11,22
900e0f44781d9459649e9864ba09abe6000ce987,819464715@qq.com,2022-11-05 00:05:09+08:00,noreply@github.com,2022-11-05 00:05:09+08:00,Fix part of the clang-tidy warning in `cluster` and `common` (#1075),unstable,True,False,9,replication.h,h,3,3,6
900e0f44781d9459649e9864ba09abe6000ce987,819464715@qq.com,2022-11-05 00:05:09+08:00,noreply@github.com,2022-11-05 00:05:09+08:00,Fix part of the clang-tidy warning in `cluster` and `common` (#1075),unstable,True,False,9,slot_migrate.cc,cc,13,13,26
900e0f44781d9459649e9864ba09abe6000ce987,819464715@qq.com,2022-11-05 00:05:09+08:00,noreply@github.com,2022-11-05 00:05:09+08:00,Fix part of the clang-tidy warning in `cluster` and `common` (#1075),unstable,True,False,9,slot_migrate.h,h,2,2,4
900e0f44781d9459649e9864ba09abe6000ce987,819464715@qq.com,2022-11-05 00:05:09+08:00,noreply@github.com,2022-11-05 00:05:09+08:00,Fix part of the clang-tidy warning in `cluster` and `common` (#1075),unstable,True,False,9,encoding.cc,cc,23,23,46
900e0f44781d9459649e9864ba09abe6000ce987,819464715@qq.com,2022-11-05 00:05:09+08:00,noreply@github.com,2022-11-05 00:05:09+08:00,Fix part of the clang-tidy warning in `cluster` and `common` (#1075),unstable,True,False,9,rand.cc,cc,64,34,98
19c6e9504548ce66ed2f6a8d2940010cba61e699,maplewish117@gmail.com,2022-11-05 16:01:26+08:00,noreply@github.com,2022-11-05 16:01:26+08:00,util: Add WriteBatchInspector to inspect WriteBatch (#1069),unstable,True,False,2,replication.cc,cc,2,1,3
19c6e9504548ce66ed2f6a8d2940010cba61e699,maplewish117@gmail.com,2022-11-05 16:01:26+08:00,noreply@github.com,2022-11-05 16:01:26+08:00,util: Add WriteBatchInspector to inspect WriteBatch (#1069),unstable,True,False,2,batch_debugger.h,h,137,0,137
707a5c4014de17dc26744b6acba79294be6ebd1a,twice.mliu@gmail.com,2022-11-05 22:35:37+08:00,noreply@github.com,2022-11-05 22:35:37+08:00,Fix compiler warning in replication (#1076),unstable,True,False,1,replication.cc,cc,4,1,5
c3a25993209fddbe391ada2d3309c3c6a89f6e79,twice.mliu@gmail.com,2022-11-05 22:38:04+08:00,noreply@github.com,2022-11-05 22:38:04+08:00,Remove useless string array in scripting (#1077),unstable,True,False,1,scripting.cc,cc,22,27,49
4bb276462396f9afb2506873783aa81fdaef6d22,twice.mliu@gmail.com,2022-11-05 23:43:54+08:00,noreply@github.com,2022-11-05 23:43:54+08:00,Improve libunwind linking in CMake (#1079),unstable,True,False,2,CMakeLists.txt,txt,1,5,6
4bb276462396f9afb2506873783aa81fdaef6d22,twice.mliu@gmail.com,2022-11-05 23:43:54+08:00,noreply@github.com,2022-11-05 23:43:54+08:00,Improve libunwind linking in CMake (#1079),unstable,True,False,2,glog.cmake,cmake,1,0,1
552bd4dc3e835f6eed01cb7019bad9b3ed89a46f,twice.mliu@gmail.com,2022-11-06 10:39:35+08:00,noreply@github.com,2022-11-06 10:39:35+08:00,Add ZLIB dependency for compression in rocksdb (#1078),unstable,True,False,7,CMakeLists.txt,txt,2,0,2
552bd4dc3e835f6eed01cb7019bad9b3ed89a46f,twice.mliu@gmail.com,2022-11-06 10:39:35+08:00,noreply@github.com,2022-11-06 10:39:35+08:00,Add ZLIB dependency for compression in rocksdb (#1078),unstable,True,False,7,NOTICE,None,26,4,30
552bd4dc3e835f6eed01cb7019bad9b3ed89a46f,twice.mliu@gmail.com,2022-11-06 10:39:35+08:00,noreply@github.com,2022-11-06 10:39:35+08:00,Add ZLIB dependency for compression in rocksdb (#1078),unstable,True,False,7,FindZLIB.cmake,cmake,28,0,28
552bd4dc3e835f6eed01cb7019bad9b3ed89a46f,twice.mliu@gmail.com,2022-11-06 10:39:35+08:00,noreply@github.com,2022-11-06 10:39:35+08:00,Add ZLIB dependency for compression in rocksdb (#1078),unstable,True,False,7,rocksdb.cmake,cmake,1,0,1
552bd4dc3e835f6eed01cb7019bad9b3ed89a46f,twice.mliu@gmail.com,2022-11-06 10:39:35+08:00,noreply@github.com,2022-11-06 10:39:35+08:00,Add ZLIB dependency for compression in rocksdb (#1078),unstable,True,False,7,zlib.cmake,cmake,27,0,27
552bd4dc3e835f6eed01cb7019bad9b3ed89a46f,twice.mliu@gmail.com,2022-11-06 10:39:35+08:00,noreply@github.com,2022-11-06 10:39:35+08:00,Add ZLIB dependency for compression in rocksdb (#1078),unstable,True,False,7,kvrocks.conf,conf,1,1,2
552bd4dc3e835f6eed01cb7019bad9b3ed89a46f,twice.mliu@gmail.com,2022-11-06 10:39:35+08:00,noreply@github.com,2022-11-06 10:39:35+08:00,Add ZLIB dependency for compression in rocksdb (#1078),unstable,True,False,7,config.cc,cc,4,5,9
f80d4285b04527f7706e35841baed7df96c10156,twice.mliu@gmail.com,2022-11-12 11:06:16+08:00,noreply@github.com,2022-11-12 11:06:16+08:00,Unify write-like syscall wrappers in util.cc (#1086),unstable,True,False,1,util.cc,cc,9,26,35
dc28d120a73a1a47bbcd5779bc83a5919f37da8c,twice.mliu@gmail.com,2022-11-12 11:07:51+08:00,noreply@github.com,2022-11-12 11:07:51+08:00,Clean code in redis_reply (#1085),unstable,True,False,1,redis_reply.cc,cc,6,14,20
8f1dabee126b6f0c794548b55fdabe4b8b54d013,twice.mliu@gmail.com,2022-11-12 11:17:12+08:00,noreply@github.com,2022-11-12 11:17:12+08:00,Fix modernize-use-emplace and performance-unnecessary-copy-initialization reported by clang-tidy (#1084),unstable,True,False,7,slot_import.h,h,1,1,2
8f1dabee126b6f0c794548b55fdabe4b8b54d013,twice.mliu@gmail.com,2022-11-12 11:17:12+08:00,noreply@github.com,2022-11-12 11:17:12+08:00,Fix modernize-use-emplace and performance-unnecessary-copy-initialization reported by clang-tidy (#1084),unstable,True,False,7,redis_cmd.cc,cc,5,5,10
8f1dabee126b6f0c794548b55fdabe4b8b54d013,twice.mliu@gmail.com,2022-11-12 11:17:12+08:00,noreply@github.com,2022-11-12 11:17:12+08:00,Fix modernize-use-emplace and performance-unnecessary-copy-initialization reported by clang-tidy (#1084),unstable,True,False,7,server.cc,cc,1,1,2
8f1dabee126b6f0c794548b55fdabe4b8b54d013,twice.mliu@gmail.com,2022-11-12 11:17:12+08:00,noreply@github.com,2022-11-12 11:17:12+08:00,Fix modernize-use-emplace and performance-unnecessary-copy-initialization reported by clang-tidy (#1084),unstable,True,False,7,worker.cc,cc,1,1,2
8f1dabee126b6f0c794548b55fdabe4b8b54d013,twice.mliu@gmail.com,2022-11-12 11:17:12+08:00,noreply@github.com,2022-11-12 11:17:12+08:00,Fix modernize-use-emplace and performance-unnecessary-copy-initialization reported by clang-tidy (#1084),unstable,True,False,7,scripting.cc,cc,1,1,2
8f1dabee126b6f0c794548b55fdabe4b8b54d013,twice.mliu@gmail.com,2022-11-12 11:17:12+08:00,noreply@github.com,2022-11-12 11:17:12+08:00,Fix modernize-use-emplace and performance-unnecessary-copy-initialization reported by clang-tidy (#1084),unstable,True,False,7,storage.cc,cc,6,6,12
8f1dabee126b6f0c794548b55fdabe4b8b54d013,twice.mliu@gmail.com,2022-11-12 11:17:12+08:00,noreply@github.com,2022-11-12 11:17:12+08:00,Fix modernize-use-emplace and performance-unnecessary-copy-initialization reported by clang-tidy (#1084),unstable,True,False,7,redis_bitmap.cc,cc,1,1,2
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,.clang-tidy,clang-tidy,1,1,2
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,redis_cmd.cc,cc,2,2,4
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,config.cc,cc,1,1,2
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,config.h,h,1,1,2
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,redis_connection.cc,cc,2,2,4
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,redis_connection.h,h,2,2,4
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,server.cc,cc,3,3,6
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,server.h,h,4,3,7
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,worker.cc,cc,1,1,2
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,worker.h,h,2,1,3
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,redis_db.cc,cc,1,1,2
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,redis_db.h,h,1,1,2
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,redis_list.cc,cc,1,1,2
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,redis_list.h,h,2,1,3
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,redis_sortedint.cc,cc,3,3,6
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,redis_sortedint.h,h,3,3,6
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,redis_zset.cc,cc,1,1,2
2fb9a22218d4e607bf9a674822187ae46f0f9dc6,819464715@qq.com,2022-11-14 11:00:13+08:00,noreply@github.com,2022-11-14 11:00:13+08:00,Fix performance-unnecessary-value-param warning reported by clang-tidy (#1106),unstable,True,False,18,redis_zset.h,h,2,1,3
96e9f375ad314bc7e8cff213463ec7d4a26a87b7,mithridatus@mail.ru,2022-11-14 06:53:26+03:00,noreply@github.com,2022-11-14 11:53:26+08:00,Fix modernize-use-bool-literals warning reported by clang-tidy (#1107),unstable,True,False,2,.clang-tidy,clang-tidy,1,1,2
96e9f375ad314bc7e8cff213463ec7d4a26a87b7,mithridatus@mail.ru,2022-11-14 06:53:26+03:00,noreply@github.com,2022-11-14 11:53:26+08:00,Fix modernize-use-bool-literals warning reported by clang-tidy (#1107),unstable,True,False,2,util.cc,cc,1,1,2
da7e369bc190855700cb76cb0dfb86caf0c90902,jeremydeng012@gmail.com,2022-11-13 23:40:00-06:00,noreply@github.com,2022-11-14 13:40:00+08:00,Fix modernize-make-unique warning reported by clang-tidy (#1113),unstable,True,False,3,.clang-tidy,clang-tidy,1,1,2
da7e369bc190855700cb76cb0dfb86caf0c90902,jeremydeng012@gmail.com,2022-11-13 23:40:00-06:00,noreply@github.com,2022-11-14 13:40:00+08:00,Fix modernize-make-unique warning reported by clang-tidy (#1113),unstable,True,False,3,server.cc,cc,1,1,2
da7e369bc190855700cb76cb0dfb86caf0c90902,jeremydeng012@gmail.com,2022-11-13 23:40:00-06:00,noreply@github.com,2022-11-14 13:40:00+08:00,Fix modernize-make-unique warning reported by clang-tidy (#1113),unstable,True,False,3,storage.cc,cc,1,2,3
50290e836eb2e28b4a0095f2bb3963899e85f5a6,mithridatus@mail.ru,2022-11-14 11:17:18+03:00,noreply@github.com,2022-11-14 16:17:18+08:00,Fix performance-for-range-copy warning reported by clang-tidy (#1108),unstable,True,False,2,.clang-tidy,clang-tidy,1,1,2
50290e836eb2e28b4a0095f2bb3963899e85f5a6,mithridatus@mail.ru,2022-11-14 11:17:18+03:00,noreply@github.com,2022-11-14 16:17:18+08:00,Fix performance-for-range-copy warning reported by clang-tidy (#1108),unstable,True,False,2,storage.cc,cc,2,2,4
6393cf6fcbc1ba86de1c763efcd325f9d6cf0172,mithridatus@mail.ru,2022-11-14 12:46:25+03:00,noreply@github.com,2022-11-14 17:46:25+08:00,Fix performance-faster-string-find warning reported by clang-tidy (#1109),unstable,True,False,2,.clang-tidy,clang-tidy,1,1,2
6393cf6fcbc1ba86de1c763efcd325f9d6cf0172,mithridatus@mail.ru,2022-11-14 12:46:25+03:00,noreply@github.com,2022-11-14 17:46:25+08:00,Fix performance-faster-string-find warning reported by clang-tidy (#1109),unstable,True,False,2,redis_stream_base.cc,cc,3,3,6
428f6e67ff9da4c2dfcf406a62ba5e7ac49ee16f,mithridatus@mail.ru,2022-11-14 13:55:31+03:00,noreply@github.com,2022-11-14 18:55:31+08:00,Fix modernize-redundant-void-arg warning reported by clang-tidy (#1110),unstable,True,False,3,.clang-tidy,clang-tidy,1,1,2
428f6e67ff9da4c2dfcf406a62ba5e7ac49ee16f,mithridatus@mail.ru,2022-11-14 13:55:31+03:00,noreply@github.com,2022-11-14 18:55:31+08:00,Fix modernize-redundant-void-arg warning reported by clang-tidy (#1110),unstable,True,False,3,storage.cc,cc,5,5,10
428f6e67ff9da4c2dfcf406a62ba5e7ac49ee16f,mithridatus@mail.ru,2022-11-14 13:55:31+03:00,noreply@github.com,2022-11-14 18:55:31+08:00,Fix modernize-redundant-void-arg warning reported by clang-tidy (#1110),unstable,True,False,3,storage.h,h,4,4,8
52cbfd4086a1a01cdfe9b380f62ea8139e2de444,phoeniwx@outlook.com,2022-11-14 20:49:06+08:00,noreply@github.com,2022-11-14 20:49:06+08:00,"Fix `modernize-avoid-bind` warning reported by clang-tidy (#1121)

Co-authored-by: Twice <twice@apache.org>

Co-authored-by: wshi8 <wshi8@trip.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,3,.clang-tidy,clang-tidy,1,1,2
52cbfd4086a1a01cdfe9b380f62ea8139e2de444,phoeniwx@outlook.com,2022-11-14 20:49:06+08:00,noreply@github.com,2022-11-14 20:49:06+08:00,"Fix `modernize-avoid-bind` warning reported by clang-tidy (#1121)

Co-authored-by: Twice <twice@apache.org>

Co-authored-by: wshi8 <wshi8@trip.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,3,cluster.cc,cc,3,1,4
52cbfd4086a1a01cdfe9b380f62ea8139e2de444,phoeniwx@outlook.com,2022-11-14 20:49:06+08:00,noreply@github.com,2022-11-14 20:49:06+08:00,"Fix `modernize-avoid-bind` warning reported by clang-tidy (#1121)

Co-authored-by: Twice <twice@apache.org>

Co-authored-by: wshi8 <wshi8@trip.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,3,redis_cmd.cc,cc,6,4,10
7fb3d64479e47d19b7e894b8aff4c4046b277c90,mithridatus@mail.ru,2022-11-15 06:35:28+03:00,noreply@github.com,2022-11-15 11:35:28+08:00,Fix modernize-use-auto warning reported by clang-tidy (#1111),unstable,True,False,4,.clang-tidy,clang-tidy,1,1,2
7fb3d64479e47d19b7e894b8aff4c4046b277c90,mithridatus@mail.ru,2022-11-15 06:35:28+03:00,noreply@github.com,2022-11-15 11:35:28+08:00,Fix modernize-use-auto warning reported by clang-tidy (#1111),unstable,True,False,4,redis_cmd.cc,cc,1,2,3
7fb3d64479e47d19b7e894b8aff4c4046b277c90,mithridatus@mail.ru,2022-11-15 06:35:28+03:00,noreply@github.com,2022-11-15 11:35:28+08:00,Fix modernize-use-auto warning reported by clang-tidy (#1111),unstable,True,False,4,batch_extractor.cc,cc,4,4,8
7fb3d64479e47d19b7e894b8aff4c4046b277c90,mithridatus@mail.ru,2022-11-15 06:35:28+03:00,noreply@github.com,2022-11-15 11:35:28+08:00,Fix modernize-use-auto warning reported by clang-tidy (#1111),unstable,True,False,4,redis_bitmap.cc,cc,5,5,10
9bebd6b81c170facc79f3e26dff3e5bd038c5f7b,819464715@qq.com,2022-11-15 14:42:47+08:00,noreply@github.com,2022-11-15 14:42:47+08:00,"Fix modernize-use-using warning reported by clang-tidy (#1114)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,.clang-tidy,clang-tidy,1,1,2
9bebd6b81c170facc79f3e26dff3e5bd038c5f7b,819464715@qq.com,2022-11-15 14:42:47+08:00,noreply@github.com,2022-11-15 14:42:47+08:00,"Fix modernize-use-using warning reported by clang-tidy (#1114)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,sha1.cc,cc,2,2,4
4cd34dc8e7f5182feacf50013bee0d26e315df8a,819464715@qq.com,2022-11-15 20:35:02+08:00,noreply@github.com,2022-11-15 20:35:02+08:00,"Fix performance-inefficient-vector-operation warning reported by clang-tidy (#1115)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,.clang-tidy,clang-tidy,1,1,2
4cd34dc8e7f5182feacf50013bee0d26e315df8a,819464715@qq.com,2022-11-15 20:35:02+08:00,noreply@github.com,2022-11-15 20:35:02+08:00,"Fix performance-inefficient-vector-operation warning reported by clang-tidy (#1115)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,redis_cmd.cc,cc,4,0,4
4cd34dc8e7f5182feacf50013bee0d26e315df8a,819464715@qq.com,2022-11-15 20:35:02+08:00,noreply@github.com,2022-11-15 20:35:02+08:00,"Fix performance-inefficient-vector-operation warning reported by clang-tidy (#1115)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,redis_string.cc,cc,1,0,1
4cd34dc8e7f5182feacf50013bee0d26e315df8a,819464715@qq.com,2022-11-15 20:35:02+08:00,noreply@github.com,2022-11-15 20:35:02+08:00,"Fix performance-inefficient-vector-operation warning reported by clang-tidy (#1115)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,redis_zset.cc,cc,1,0,1
a93fba93f360782bf11427476a287fa85baa9a7a,maochongxin@gmail.com,2022-11-15 23:40:04+08:00,noreply@github.com,2022-11-15 23:40:04+08:00,"Fix cppcoreguidelines-special-member-functions warning reported by cl… (#1124)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,.clang-tidy,clang-tidy,1,1,2
a93fba93f360782bf11427476a287fa85baa9a7a,maochongxin@gmail.com,2022-11-15 23:40:04+08:00,noreply@github.com,2022-11-15 23:40:04+08:00,"Fix cppcoreguidelines-special-member-functions warning reported by cl… (#1124)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,redis_cmd.cc,cc,4,0,4
a93fba93f360782bf11427476a287fa85baa9a7a,maochongxin@gmail.com,2022-11-15 23:40:04+08:00,noreply@github.com,2022-11-15 23:40:04+08:00,"Fix cppcoreguidelines-special-member-functions warning reported by cl… (#1124)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,log_collector.h,h,3,0,3
0c4d4b7ccdc41b6f4dfdac63899f1c0f83ed4927,mithridatus@mail.ru,2022-11-16 06:31:44+03:00,noreply@github.com,2022-11-16 11:31:44+08:00,Fix modernize-loop-convert warning reported by clang-tidy (#1112),unstable,True,False,6,.clang-tidy,clang-tidy,1,1,2
0c4d4b7ccdc41b6f4dfdac63899f1c0f83ed4927,mithridatus@mail.ru,2022-11-16 06:31:44+03:00,noreply@github.com,2022-11-16 11:31:44+08:00,Fix modernize-loop-convert warning reported by clang-tidy (#1112),unstable,True,False,6,task_runner.cc,cc,2,2,4
0c4d4b7ccdc41b6f4dfdac63899f1c0f83ed4927,mithridatus@mail.ru,2022-11-16 06:31:44+03:00,noreply@github.com,2022-11-16 11:31:44+08:00,Fix modernize-loop-convert warning reported by clang-tidy (#1112),unstable,True,False,6,stats.cc,cc,3,3,6
0c4d4b7ccdc41b6f4dfdac63899f1c0f83ed4927,mithridatus@mail.ru,2022-11-16 06:31:44+03:00,noreply@github.com,2022-11-16 11:31:44+08:00,Fix modernize-loop-convert warning reported by clang-tidy (#1112),unstable,True,False,6,redis_db.cc,cc,2,2,4
0c4d4b7ccdc41b6f4dfdac63899f1c0f83ed4927,mithridatus@mail.ru,2022-11-16 06:31:44+03:00,noreply@github.com,2022-11-16 11:31:44+08:00,Fix modernize-loop-convert warning reported by clang-tidy (#1112),unstable,True,False,6,redis_set.cc,cc,2,2,4
0c4d4b7ccdc41b6f4dfdac63899f1c0f83ed4927,mithridatus@mail.ru,2022-11-16 06:31:44+03:00,noreply@github.com,2022-11-16 11:31:44+08:00,Fix modernize-loop-convert warning reported by clang-tidy (#1112),unstable,True,False,6,redis_string.cc,cc,2,5,7
bf13335a3ef1aa295c66c3c07d2430fff4741768,wanghenshui@qq.com,2022-11-20 20:38:37+08:00,noreply@github.com,2022-11-20 20:38:37+08:00,"Add LTO/IPO compile support (#764)

Co-authored-by: PragmaTwice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,1,CMakeLists.txt,txt,15,0,15
9daa6b3aaeb58621bdbf051ac6b22e80712e27d4,hulk.website@gmail.com,2022-11-20 20:52:46+08:00,noreply@github.com,2022-11-20 20:52:46+08:00,"Fix redis cli test will fail if cannot read response at once (#1129)

For the current read implementation, it will return the string after
reading the response, so it may only read parts of the response.
We simply fix it by checking whether the response string has the
newline('\r\n') or not.",unstable,True,False,1,cli_test.go,go,14,1,15
074d7caf9549ffe6b13f89321883576a5cc4c135,wander4096@gmail.com,2022-11-22 11:41:20+08:00,noreply@github.com,2022-11-22 11:41:20+08:00,"Remove default value of parallelism in x.py (#1130)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,x.py,py,16,8,24
6f2def24c6043c51415dcef75d3c385748a3d471,hulk.website@gmail.com,2022-11-23 23:53:16+08:00,noreply@github.com,2022-11-23 23:53:16+08:00,Fix the script load should return SHA as the bulk string (#1133),unstable,True,False,2,redis_cmd.cc,cc,1,1,2
6f2def24c6043c51415dcef75d3c385748a3d471,hulk.website@gmail.com,2022-11-23 23:53:16+08:00,noreply@github.com,2022-11-23 23:53:16+08:00,Fix the script load should return SHA as the bulk string (#1133),unstable,True,False,2,scripting_test.go,go,8,0,8
f185bef38f3c25be0916fca04bf46ef2c08a4322,wander4096@gmail.com,2022-11-24 17:04:46+08:00,noreply@github.com,2022-11-24 17:04:46+08:00,"Improve files structure (#1134)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,25,kvrocks.yaml,yaml,1,1,2
f185bef38f3c25be0916fca04bf46ef2c08a4322,wander4096@gmail.com,2022-11-24 17:04:46+08:00,noreply@github.com,2022-11-24 17:04:46+08:00,"Improve files structure (#1134)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,25,CMakeLists.txt,txt,1,1,2
f185bef38f3c25be0916fca04bf46ef2c08a4322,wander4096@gmail.com,2022-11-24 17:04:46+08:00,noreply@github.com,2022-11-24 17:04:46+08:00,"Improve files structure (#1134)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,25,README.md,md,20,0,20
f185bef38f3c25be0916fca04bf46ef2c08a4322,wander4096@gmail.com,2022-11-24 17:04:46+08:00,noreply@github.com,2022-11-24 17:04:46+08:00,"Improve files structure (#1134)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,25,x.py,py,2,2,4
272c9ef7a7fe0da4a4bdb6162fea163830a87a9c,torwigua@gmail.com,2022-11-25 03:57:35+02:00,noreply@github.com,2022-11-25 09:57:35+08:00,"Tidy src/commands (#1137)

Edit files according to clang-tidy tips and narrowing conversion
were left untouched.",unstable,True,False,3,cluster.h,h,1,1,2
272c9ef7a7fe0da4a4bdb6162fea163830a87a9c,torwigua@gmail.com,2022-11-25 03:57:35+02:00,noreply@github.com,2022-11-25 09:57:35+08:00,"Tidy src/commands (#1137)

Edit files according to clang-tidy tips and narrowing conversion
were left untouched.",unstable,True,False,3,redis_cmd.cc,cc,932,566,1498
272c9ef7a7fe0da4a4bdb6162fea163830a87a9c,torwigua@gmail.com,2022-11-25 03:57:35+02:00,noreply@github.com,2022-11-25 09:57:35+08:00,"Tidy src/commands (#1137)

Edit files according to clang-tidy tips and narrowing conversion
were left untouched.",unstable,True,False,3,redis_cmd.h,h,3,1,4
7b3b6dcabcb05e5bff21c45334eafe3930589712,twice.mliu@gmail.com,2022-11-25 19:07:48+08:00,noreply@github.com,2022-11-25 19:07:48+08:00,Introduce fmt dependency to simplify string formatting (#1139),unstable,True,False,15,CMakeLists.txt,txt,2,0,2
7b3b6dcabcb05e5bff21c45334eafe3930589712,twice.mliu@gmail.com,2022-11-25 19:07:48+08:00,noreply@github.com,2022-11-25 19:07:48+08:00,Introduce fmt dependency to simplify string formatting (#1139),unstable,True,False,15,NOTICE,None,33,0,33
7b3b6dcabcb05e5bff21c45334eafe3930589712,twice.mliu@gmail.com,2022-11-25 19:07:48+08:00,noreply@github.com,2022-11-25 19:07:48+08:00,Introduce fmt dependency to simplify string formatting (#1139),unstable,True,False,15,fmt.cmake,cmake,27,0,27
7b3b6dcabcb05e5bff21c45334eafe3930589712,twice.mliu@gmail.com,2022-11-25 19:07:48+08:00,noreply@github.com,2022-11-25 19:07:48+08:00,Introduce fmt dependency to simplify string formatting (#1139),unstable,True,False,15,cluster.cc,cc,15,16,31
7b3b6dcabcb05e5bff21c45334eafe3930589712,twice.mliu@gmail.com,2022-11-25 19:07:48+08:00,noreply@github.com,2022-11-25 19:07:48+08:00,Introduce fmt dependency to simplify string formatting (#1139),unstable,True,False,15,replication.cc,cc,7,8,15
7b3b6dcabcb05e5bff21c45334eafe3930589712,twice.mliu@gmail.com,2022-11-25 19:07:48+08:00,noreply@github.com,2022-11-25 19:07:48+08:00,Introduce fmt dependency to simplify string formatting (#1139),unstable,True,False,15,slot_import.cc,cc,1,1,2
7b3b6dcabcb05e5bff21c45334eafe3930589712,twice.mliu@gmail.com,2022-11-25 19:07:48+08:00,noreply@github.com,2022-11-25 19:07:48+08:00,Introduce fmt dependency to simplify string formatting (#1139),unstable,True,False,15,slot_migrate.cc,cc,5,5,10
7b3b6dcabcb05e5bff21c45334eafe3930589712,twice.mliu@gmail.com,2022-11-25 19:07:48+08:00,noreply@github.com,2022-11-25 19:07:48+08:00,Introduce fmt dependency to simplify string formatting (#1139),unstable,True,False,15,util.cc,cc,24,33,57
7b3b6dcabcb05e5bff21c45334eafe3930589712,twice.mliu@gmail.com,2022-11-25 19:07:48+08:00,noreply@github.com,2022-11-25 19:07:48+08:00,Introduce fmt dependency to simplify string formatting (#1139),unstable,True,False,15,config.cc,cc,18,15,33
7b3b6dcabcb05e5bff21c45334eafe3930589712,twice.mliu@gmail.com,2022-11-25 19:07:48+08:00,noreply@github.com,2022-11-25 19:07:48+08:00,Introduce fmt dependency to simplify string formatting (#1139),unstable,True,False,15,redis_connection.cc,cc,5,6,11
7b3b6dcabcb05e5bff21c45334eafe3930589712,twice.mliu@gmail.com,2022-11-25 19:07:48+08:00,noreply@github.com,2022-11-25 19:07:48+08:00,Introduce fmt dependency to simplify string formatting (#1139),unstable,True,False,15,server.cc,cc,8,9,17
7b3b6dcabcb05e5bff21c45334eafe3930589712,twice.mliu@gmail.com,2022-11-25 19:07:48+08:00,noreply@github.com,2022-11-25 19:07:48+08:00,Introduce fmt dependency to simplify string formatting (#1139),unstable,True,False,15,worker.cc,cc,3,3,6
7b3b6dcabcb05e5bff21c45334eafe3930589712,twice.mliu@gmail.com,2022-11-25 19:07:48+08:00,noreply@github.com,2022-11-25 19:07:48+08:00,Introduce fmt dependency to simplify string formatting (#1139),unstable,True,False,15,stats.cc,cc,3,3,6
7b3b6dcabcb05e5bff21c45334eafe3930589712,twice.mliu@gmail.com,2022-11-25 19:07:48+08:00,noreply@github.com,2022-11-25 19:07:48+08:00,Introduce fmt dependency to simplify string formatting (#1139),unstable,True,False,15,scripting.cc,cc,4,6,10
7b3b6dcabcb05e5bff21c45334eafe3930589712,twice.mliu@gmail.com,2022-11-25 19:07:48+08:00,noreply@github.com,2022-11-25 19:07:48+08:00,Introduce fmt dependency to simplify string formatting (#1139),unstable,True,False,15,redis_stream_base.h,h,2,1,3
4b25ddb30b70f2a2d6266a69fcd0f5b12108850d,wander4096@gmail.com,2022-11-25 22:13:47+08:00,noreply@github.com,2022-11-25 22:13:47+08:00,"Harden list_test.go (#1141)

TCPClient can have malformed inflight bytes. Always use a new instance for each subtest.

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,list_test.go,go,24,2,26
20186941f0fe1d53f4d395d41802fda5e564ac4c,twice.mliu@gmail.com,2022-11-25 22:18:16+08:00,noreply@github.com,2022-11-25 22:18:16+08:00,Fix format output in Server::GetRocksDBStatsJson (#1142),unstable,True,False,1,server.cc,cc,2,3,5
f79e86a66362745b151d149a455403f2f85dd70f,twice.mliu@gmail.com,2022-11-26 17:01:49+08:00,noreply@github.com,2022-11-26 17:01:49+08:00,Replace c-style typedef with direct definition or using (#1143),unstable,True,False,10,cluster.h,h,1,1,2
f79e86a66362745b151d149a455403f2f85dd70f,twice.mliu@gmail.com,2022-11-26 17:01:49+08:00,noreply@github.com,2022-11-26 17:01:49+08:00,Replace c-style typedef with direct definition or using (#1143),unstable,True,False,10,replication.h,h,1,1,2
f79e86a66362745b151d149a455403f2f85dd70f,twice.mliu@gmail.com,2022-11-26 17:01:49+08:00,noreply@github.com,2022-11-26 17:01:49+08:00,Replace c-style typedef with direct definition or using (#1143),unstable,True,False,10,sha1.h,h,2,2,4
f79e86a66362745b151d149a455403f2f85dd70f,twice.mliu@gmail.com,2022-11-26 17:01:49+08:00,noreply@github.com,2022-11-26 17:01:49+08:00,Replace c-style typedef with direct definition or using (#1143),unstable,True,False,10,redis_connection.h,h,1,1,2
f79e86a66362745b151d149a455403f2f85dd70f,twice.mliu@gmail.com,2022-11-26 17:01:49+08:00,noreply@github.com,2022-11-26 17:01:49+08:00,Replace c-style typedef with direct definition or using (#1143),unstable,True,False,10,server.h,h,2,2,4
f79e86a66362745b151d149a455403f2f85dd70f,twice.mliu@gmail.com,2022-11-26 17:01:49+08:00,noreply@github.com,2022-11-26 17:01:49+08:00,Replace c-style typedef with direct definition or using (#1143),unstable,True,False,10,geohash.h,h,3,3,6
f79e86a66362745b151d149a455403f2f85dd70f,twice.mliu@gmail.com,2022-11-26 17:01:49+08:00,noreply@github.com,2022-11-26 17:01:49+08:00,Replace c-style typedef with direct definition or using (#1143),unstable,True,False,10,redis_geo.h,h,2,2,4
f79e86a66362745b151d149a455403f2f85dd70f,twice.mliu@gmail.com,2022-11-26 17:01:49+08:00,noreply@github.com,2022-11-26 17:01:49+08:00,Replace c-style typedef with direct definition or using (#1143),unstable,True,False,10,redis_hash.h,h,2,2,4
f79e86a66362745b151d149a455403f2f85dd70f,twice.mliu@gmail.com,2022-11-26 17:01:49+08:00,noreply@github.com,2022-11-26 17:01:49+08:00,Replace c-style typedef with direct definition or using (#1143),unstable,True,False,10,redis_sortedint.h,h,7,14,21
f79e86a66362745b151d149a455403f2f85dd70f,twice.mliu@gmail.com,2022-11-26 17:01:49+08:00,noreply@github.com,2022-11-26 17:01:49+08:00,Replace c-style typedef with direct definition or using (#1143),unstable,True,False,10,redis_zset.h,h,20,34,54
5467b02b5bf1f0d0e19382e9d410571b033f384f,hulk.website@gmail.com,2022-11-26 17:02:46+08:00,noreply@github.com,2022-11-26 17:02:46+08:00,"Increase blocking timeout to harden the blocking pop test case (#1128)

Currently, the blocking pop with the empty argument may fail if took a long time(more than 1s) to execute the RPUSH command, then the previous brpop command would get the empty bulk string(`$-1\r\n`) instead of the element array.",unstable,True,False,1,list_test.go,go,1,1,2
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,cluster.cc,cc,2,1,3
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,redis_slot.cc,cc,0,2,2
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,replication.cc,cc,2,1,3
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,slot_migrate.cc,cc,3,0,3
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,slot_migrate.h,h,0,1,1
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,command_parser.h,h,1,1,2
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,redis_cmd.cc,cc,3,1,4
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,io_util.cc,cc,9,326,335
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,io_util.h,h,47,0,47
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,string_util.cc,cc,322,0,322
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,string_util.h,h,0,39,39
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,task_runner.cc,cc,1,1,2
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,thread_util.cc,cc,35,0,35
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,thread_util.h,h,27,0,27
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,time_util.h,h,34,0,34
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,config.cc,cc,0,1,1
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,config_type.h,h,1,1,2
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,config_util.cc,cc,1,1,2
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,main.cc,cc,2,1,3
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,redis_request.cc,cc,0,1,1
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,server.cc,cc,2,1,3
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,worker.cc,cc,4,1,5
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,stats.cc,cc,1,1,2
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,compaction_checker.cc,cc,1,0,1
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,redis_db.cc,cc,0,1,1
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,redis_metadata.cc,cc,1,1,2
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,scripting.cc,cc,0,1,1
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,storage.cc,cc,1,0,1
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,redis_geo.cc,cc,0,2,2
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,redis_stream_base.cc,cc,1,1,2
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,redis_string.cc,cc,1,0,1
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,redis_zset.cc,cc,0,1,1
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,cluster_test.cc,cc,0,1,1
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,cron_test.cc,cc,0,2,2
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,string_util_test.cc,cc,2,2,4
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,t_stream_test.cc,cc,1,0,1
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,config.cc,cc,0,1,1
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,main.cc,cc,1,0,1
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,redis_writer.cc,cc,2,1,3
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,sync.cc,cc,1,1,2
c439f3af9d5c7ccb97ff4c7bdab088287acd73cc,twice.mliu@gmail.com,2022-11-26 20:42:49+08:00,noreply@github.com,2022-11-26 20:42:49+08:00,Split util.h to more concrete util headers (#1144),unstable,True,False,41,writer.cc,cc,1,1,2
d54e4cf387309e306367d9c596d521734d405f8c,twice.mliu@gmail.com,2022-11-26 22:57:35+08:00,noreply@github.com,2022-11-26 22:57:35+08:00,Introduce command register mechanism to allow splitting command definition to multiple TUs (#1140),unstable,True,False,2,redis_cmd.cc,cc,36,84,120
d54e4cf387309e306367d9c596d521734d405f8c,twice.mliu@gmail.com,2022-11-26 22:57:35+08:00,noreply@github.com,2022-11-26 22:57:35+08:00,Introduce command register mechanism to allow splitting command definition to multiple TUs (#1140),unstable,True,False,2,redis_cmd.h,h,49,0,49
c13cba26b9d133d4295e7fb72061616c7439703b,twice.mliu@gmail.com,2022-11-26 23:58:01+08:00,noreply@github.com,2022-11-26 23:58:01+08:00,Fix wrong include in redis_cmd.cc (#1145),unstable,True,False,1,redis_cmd.h,h,1,1,2
a8bf8cdfe169bac563e9b2db8072d1386669b94c,cn_lhc@qq.com,2022-12-02 12:07:30+08:00,noreply@github.com,2022-12-02 12:07:30+08:00,refactor: move VERSION to src folder (#1149),unstable,True,False,3,CMakeLists.txt,txt,1,1,2
a8bf8cdfe169bac563e9b2db8072d1386669b94c,cn_lhc@qq.com,2022-12-02 12:07:30+08:00,noreply@github.com,2022-12-02 12:07:30+08:00,refactor: move VERSION to src folder (#1149),unstable,True,False,3,x.py,py,1,1,2
606ac90352a20dbcef94405930213834beb378ea,twice.mliu@gmail.com,2022-12-02 15:08:27+08:00,noreply@github.com,2022-12-02 15:08:27+08:00,Fix inconsistency between Set and ToString in OctalField (#1151),unstable,True,False,1,config_type.h,h,3,1,4
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,.clang-tidy,clang-tidy,1,1,2
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,io_util.cc,cc,4,4,8
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,sha1.cc,cc,4,4,8
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,string_util.cc,cc,2,2,4
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,config.cc,cc,2,2,4
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,config_util.cc,cc,1,1,2
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,redis_connection.cc,cc,3,3,6
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,server.cc,cc,6,6,12
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,worker.cc,cc,4,4,8
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,log_collector.cc,cc,2,2,4
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,redis_db.cc,cc,1,1,2
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,redis_metadata.cc,cc,5,5,10
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,scripting.cc,cc,12,12,24
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,storage.cc,cc,4,4,8
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,table_properties_collector.cc,cc,4,4,8
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,geohash.cc,cc,3,3,6
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,redis_bitmap.cc,cc,4,4,8
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,redis_bitmap_string.cc,cc,6,6,12
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,redis_geo.cc,cc,6,6,12
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,redis_list.cc,cc,4,4,8
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,redis_set.cc,cc,1,1,2
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,redis_sortedint.cc,cc,2,2,4
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,redis_stream_base.cc,cc,1,1,2
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,redis_string.cc,cc,3,3,6
ac3cf3c47f43cbd112189843ae4604301618d96d,mithridatus@mail.ru,2022-12-03 18:03:11+03:00,noreply@github.com,2022-12-03 23:03:11+08:00,"Fix cppcoreguidelines-init-variables warning reported by clang-tidy (#1153)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,25,redis_zset.cc,cc,5,5,10
71ead5de3a5606a76242fff77908cb1cefaa811c,twice.mliu@gmail.com,2022-12-03 23:04:06+08:00,noreply@github.com,2022-12-03 23:04:06+08:00,Re-enable require branches to be up-to-date (#1154),unstable,True,False,1,.asf.yaml,yaml,1,0,1
3c49cb5af39ee6fadb1063f0e3484985b6266906,mithridatus@mail.ru,2022-12-04 05:03:01+03:00,noreply@github.com,2022-12-04 10:03:01+08:00,Fix modernize-use-nullptr warning reported by clang-tidy (#1156),unstable,True,False,4,.clang-tidy,clang-tidy,1,1,2
3c49cb5af39ee6fadb1063f0e3484985b6266906,mithridatus@mail.ru,2022-12-04 05:03:01+03:00,noreply@github.com,2022-12-04 10:03:01+08:00,Fix modernize-use-nullptr warning reported by clang-tidy (#1156),unstable,True,False,4,redis_db.cc,cc,1,1,2
3c49cb5af39ee6fadb1063f0e3484985b6266906,mithridatus@mail.ru,2022-12-04 05:03:01+03:00,noreply@github.com,2022-12-04 10:03:01+08:00,Fix modernize-use-nullptr warning reported by clang-tidy (#1156),unstable,True,False,4,storage.cc,cc,2,2,4
3c49cb5af39ee6fadb1063f0e3484985b6266906,mithridatus@mail.ru,2022-12-04 05:03:01+03:00,noreply@github.com,2022-12-04 10:03:01+08:00,Fix modernize-use-nullptr warning reported by clang-tidy (#1156),unstable,True,False,4,geohash.cc,cc,2,2,4
f7638e656720979a3fbbdf0705f3196bcd486f3d,twice.mliu@gmail.com,2022-12-04 20:30:16+08:00,noreply@github.com,2022-12-04 20:30:16+08:00,Fix cppcoreguidelines-macro-usage warning reported by clang-tidy (#1155),unstable,True,False,8,.clang-tidy,clang-tidy,1,1,2
f7638e656720979a3fbbdf0705f3196bcd486f3d,twice.mliu@gmail.com,2022-12-04 20:30:16+08:00,noreply@github.com,2022-12-04 20:30:16+08:00,Fix cppcoreguidelines-macro-usage warning reported by clang-tidy (#1155),unstable,True,False,8,io_util.cc,cc,4,4,8
f7638e656720979a3fbbdf0705f3196bcd486f3d,twice.mliu@gmail.com,2022-12-04 20:30:16+08:00,noreply@github.com,2022-12-04 20:30:16+08:00,Fix cppcoreguidelines-macro-usage warning reported by clang-tidy (#1155),unstable,True,False,8,sha1.cc,cc,9,0,9
f7638e656720979a3fbbdf0705f3196bcd486f3d,twice.mliu@gmail.com,2022-12-04 20:30:16+08:00,noreply@github.com,2022-12-04 20:30:16+08:00,Fix cppcoreguidelines-macro-usage warning reported by clang-tidy (#1155),unstable,True,False,8,status.h,h,7,6,13
f7638e656720979a3fbbdf0705f3196bcd486f3d,twice.mliu@gmail.com,2022-12-04 20:30:16+08:00,noreply@github.com,2022-12-04 20:30:16+08:00,Fix cppcoreguidelines-macro-usage warning reported by clang-tidy (#1155),unstable,True,False,8,main.cc,cc,1,1,2
f7638e656720979a3fbbdf0705f3196bcd486f3d,twice.mliu@gmail.com,2022-12-04 20:30:16+08:00,noreply@github.com,2022-12-04 20:30:16+08:00,Fix cppcoreguidelines-macro-usage warning reported by clang-tidy (#1155),unstable,True,False,8,scripting.cc,cc,8,8,16
f7638e656720979a3fbbdf0705f3196bcd486f3d,twice.mliu@gmail.com,2022-12-04 20:30:16+08:00,noreply@github.com,2022-12-04 20:30:16+08:00,Fix cppcoreguidelines-macro-usage warning reported by clang-tidy (#1155),unstable,True,False,8,geohash.cc,cc,1,6,7
f7638e656720979a3fbbdf0705f3196bcd486f3d,twice.mliu@gmail.com,2022-12-04 20:30:16+08:00,noreply@github.com,2022-12-04 20:30:16+08:00,Fix cppcoreguidelines-macro-usage warning reported by clang-tidy (#1155),unstable,True,False,8,geohash.h,h,13,13,26
9e4bb2ca4ff03a5aa1514c383e5e152406ce4e3b,hulk.website@gmail.com,2022-12-06 09:53:38+08:00,noreply@github.com,2022-12-06 09:53:38+08:00,Fix wrongly append the ERR prefix in no script error (#1162),unstable,True,False,2,redis_cmd.cc,cc,9,14,23
9e4bb2ca4ff03a5aa1514c383e5e152406ce4e3b,hulk.website@gmail.com,2022-12-06 09:53:38+08:00,noreply@github.com,2022-12-06 09:53:38+08:00,Fix wrongly append the ERR prefix in no script error (#1162),unstable,True,False,2,scripting_test.go,go,3,3,6
38512b73bf25ca07de3c4341f60ca8ef3343414a,52393536+xiaobiaozhao@users.noreply.github.com,2022-12-07 00:48:35+08:00,noreply@github.com,2022-12-07 00:48:35+08:00,Add the compatible Redis version to the info command  (#1158),unstable,True,False,1,server.cc,cc,2,0,2
e4772a5314c8f6fd033b026aa1d51a6974a61633,shuguangzw@gmail.com,2022-12-10 00:11:12+08:00,noreply@github.com,2022-12-10 00:11:12+08:00,Fix StatusOr copy assignment (#1173),unstable,True,False,1,status.h,h,1,1,2
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,.clang-tidy,clang-tidy,1,1,2
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,redis_cmd.cc,cc,6,5,11
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,io_util.cc,cc,4,4,8
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,io_util.h,h,3,3,6
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,string_util.cc,cc,26,26,52
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,string_util.h,h,1,1,2
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,config.cc,cc,6,6,12
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,config.h,h,6,6,12
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,config_type.h,h,22,34,56
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,main.cc,cc,3,3,6
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,redis_connection.cc,cc,3,3,6
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,redis_connection.h,h,2,2,4
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,redis_reply.cc,cc,0,4,4
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,redis_reply.h,h,12,2,14
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,redis_request.cc,cc,1,1,2
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,server.cc,cc,5,3,8
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,worker.cc,cc,3,3,6
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,worker.h,h,1,1,2
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,log_collector.cc,cc,1,1,2
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,lock_manager.cc,cc,1,3,4
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,lock_manager.h,h,1,1,2
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,scripting.cc,cc,3,3,6
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,storage.cc,cc,8,7,15
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,storage.h,h,1,1,2
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,geohash.cc,cc,7,7,14
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,redis_bitmap.cc,cc,4,4,8
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,redis_bitmap_string.cc,cc,6,6,12
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,redis_geo.cc,cc,5,4,9
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,redis_hash.cc,cc,1,1,2
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,redis_list.cc,cc,6,6,12
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,redis_set.cc,cc,1,1,2
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,redis_sortedint.cc,cc,1,1,2
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,redis_string.cc,cc,10,10,20
e6aa8987950924821baf74ca912be4837d686032,mithridatus@mail.ru,2022-12-12 05:32:11+03:00,noreply@github.com,2022-12-12 10:32:11+08:00,Fix cppcoreguidelines-narrowing-conversions warning reported by clang-tidy (#1159),unstable,True,False,34,redis_zset.cc,cc,6,6,12
1de4e933c7024f0df97e6485a4271015420aa2ef,caipengbo@outlook.com,2022-12-12 22:30:12+08:00,noreply@github.com,2022-12-12 22:30:12+08:00,Add the connection timeout when connecting master (#1172),unstable,True,False,3,replication.cc,cc,10,3,13
1de4e933c7024f0df97e6485a4271015420aa2ef,caipengbo@outlook.com,2022-12-12 22:30:12+08:00,noreply@github.com,2022-12-12 22:30:12+08:00,Add the connection timeout when connecting master (#1172),unstable,True,False,3,io_util.cc,cc,1,3,4
1de4e933c7024f0df97e6485a4271015420aa2ef,caipengbo@outlook.com,2022-12-12 22:30:12+08:00,noreply@github.com,2022-12-12 22:30:12+08:00,Add the connection timeout when connecting master (#1172),unstable,True,False,3,scope_exit.h,h,2,2,4
d1eadda9a3d58f00722d2aadaf34930e5ee90c87,wander4096@gmail.com,2022-12-16 21:58:38+08:00,noreply@github.com,2022-12-16 21:58:38+08:00,"Delete docs directory (#1181)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,12,README.md,md,18,35,53
defcd1b46f1c25a443f134ce92b4b15bb32bacb3,twice.mliu@gmail.com,2022-12-17 17:09:51+08:00,noreply@github.com,2022-12-17 17:09:51+08:00,Refine words and add more social media in README (#1189),unstable,True,False,1,README.md,md,6,2,8
1dcd01cfae33c7b717e99fbbcbd1a62f8e8fda59,hulk.website@gmail.com,2022-12-17 18:27:25+08:00,noreply@github.com,2022-12-17 18:27:25+08:00,"Fix SockConect doesn't resolve domain before connecting (#1183)

Currently, Kvrocks supports connecting the server with a timeout
or not, but the behavior is a bit different between them.
The timeout version doesn't support resolving the domain before
connecting server, so it'll be broken if it connects with a timeout.

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,io_util.cc,cc,50,75,125
1dcd01cfae33c7b717e99fbbcbd1a62f8e8fda59,hulk.website@gmail.com,2022-12-17 18:27:25+08:00,noreply@github.com,2022-12-17 18:27:25+08:00,"Fix SockConect doesn't resolve domain before connecting (#1183)

Currently, Kvrocks supports connecting the server with a timeout
or not, but the behavior is a bit different between them.
The timeout version doesn't support resolving the domain before
connecting server, so it'll be broken if it connects with a timeout.

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,io_util.h,h,1,2,3
1dcd01cfae33c7b717e99fbbcbd1a62f8e8fda59,hulk.website@gmail.com,2022-12-17 18:27:25+08:00,noreply@github.com,2022-12-17 18:27:25+08:00,"Fix SockConect doesn't resolve domain before connecting (#1183)

Currently, Kvrocks supports connecting the server with a timeout
or not, but the behavior is a bit different between them.
The timeout version doesn't support resolving the domain before
connecting server, so it'll be broken if it connects with a timeout.

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,replication_test.go,go,26,0,26
29ba99e61dde49678d4f4b9fa2f11fa553aa7dff,twice.mliu@gmail.com,2022-12-17 21:06:11+08:00,noreply@github.com,2022-12-17 21:06:11+08:00,"Fix typo of document links in README (#1190)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,1,README.md,md,1,1,2
0d666264dda9a2273c129c8ee1a1e3e9dc061e71,twice.mliu@gmail.com,2022-12-18 13:41:21+08:00,noreply@github.com,2022-12-18 13:41:21+08:00,Remove old string parsing util and replace them by ParseInt (#1191),unstable,True,False,6,redis_cmd.cc,cc,7,13,20
0d666264dda9a2273c129c8ee1a1e3e9dc061e71,twice.mliu@gmail.com,2022-12-18 13:41:21+08:00,noreply@github.com,2022-12-18 13:41:21+08:00,Remove old string parsing util and replace them by ParseInt (#1191),unstable,True,False,6,string_util.cc,cc,0,18,18
0d666264dda9a2273c129c8ee1a1e3e9dc061e71,twice.mliu@gmail.com,2022-12-18 13:41:21+08:00,noreply@github.com,2022-12-18 13:41:21+08:00,Remove old string parsing util and replace them by ParseInt (#1191),unstable,True,False,6,string_util.h,h,0,2,2
0d666264dda9a2273c129c8ee1a1e3e9dc061e71,twice.mliu@gmail.com,2022-12-18 13:41:21+08:00,noreply@github.com,2022-12-18 13:41:21+08:00,Remove old string parsing util and replace them by ParseInt (#1191),unstable,True,False,6,config.cc,cc,6,9,15
0d666264dda9a2273c129c8ee1a1e3e9dc061e71,twice.mliu@gmail.com,2022-12-18 13:41:21+08:00,noreply@github.com,2022-12-18 13:41:21+08:00,Remove old string parsing util and replace them by ParseInt (#1191),unstable,True,False,6,config_type.h,h,4,3,7
0d666264dda9a2273c129c8ee1a1e3e9dc061e71,twice.mliu@gmail.com,2022-12-18 13:41:21+08:00,noreply@github.com,2022-12-18 13:41:21+08:00,Remove old string parsing util and replace them by ParseInt (#1191),unstable,True,False,6,scripting.cc,cc,11,17,28
582b0f666226204a7d8924125012067f1dcba891,hulk.website@gmail.com,2022-12-18 20:55:33+08:00,noreply@github.com,2022-12-18 20:55:33+08:00,Check if the thread is joinable before joining in replication thread (#1195),unstable,True,False,3,replication.cc,cc,1,1,2
582b0f666226204a7d8924125012067f1dcba891,hulk.website@gmail.com,2022-12-18 20:55:33+08:00,noreply@github.com,2022-12-18 20:55:33+08:00,Check if the thread is joinable before joining in replication thread (#1195),unstable,True,False,3,slot_migrate.cc,cc,1,1,2
582b0f666226204a7d8924125012067f1dcba891,hulk.website@gmail.com,2022-12-18 20:55:33+08:00,noreply@github.com,2022-12-18 20:55:33+08:00,Check if the thread is joinable before joining in replication thread (#1195),unstable,True,False,3,redis_writer.cc,cc,1,1,2
7ab8a190178f023c4c415f8232ebc27415e9b1ca,twice.mliu@gmail.com,2022-12-18 23:29:46+08:00,noreply@github.com,2022-12-18 23:29:46+08:00,Add nodiscard attribute to Status and StatusOr (#1193),unstable,True,False,3,CMakeLists.txt,txt,1,0,1
7ab8a190178f023c4c415f8232ebc27415e9b1ca,twice.mliu@gmail.com,2022-12-18 23:29:46+08:00,noreply@github.com,2022-12-18 23:29:46+08:00,Add nodiscard attribute to Status and StatusOr (#1193),unstable,True,False,3,status.h,h,2,2,4
7ab8a190178f023c4c415f8232ebc27415e9b1ca,twice.mliu@gmail.com,2022-12-18 23:29:46+08:00,noreply@github.com,2022-12-18 23:29:46+08:00,Add nodiscard attribute to Status and StatusOr (#1193),unstable,True,False,3,writer.cc,cc,3,9,12
87aee673f1c8749782159cb6705ebf751ab4b890,wei.kukey@gmail.com,2022-12-21 11:55:47+08:00,noreply@github.com,2022-12-21 11:55:47+08:00,Add new line for each info section (#1199),unstable,True,False,1,server.cc,cc,11,0,11
cb49bd5b8848abe5a8259d4503f2a2cb3ffe86f1,torwigua@gmail.com,2022-12-21 09:04:48+02:00,noreply@github.com,2022-12-21 15:04:48+08:00,"Add support of stream migration during slot migration process (#1197)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,15,cluster.cc,cc,75,47,122
cb49bd5b8848abe5a8259d4503f2a2cb3ffe86f1,torwigua@gmail.com,2022-12-21 09:04:48+02:00,noreply@github.com,2022-12-21 15:04:48+08:00,"Add support of stream migration during slot migration process (#1197)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,15,redis_slot.cc,cc,3,2,5
cb49bd5b8848abe5a8259d4503f2a2cb3ffe86f1,torwigua@gmail.com,2022-12-21 09:04:48+02:00,noreply@github.com,2022-12-21 15:04:48+08:00,"Add support of stream migration during slot migration process (#1197)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,15,slot_import.cc,cc,9,5,14
cb49bd5b8848abe5a8259d4503f2a2cb3ffe86f1,torwigua@gmail.com,2022-12-21 09:04:48+02:00,noreply@github.com,2022-12-21 15:04:48+08:00,"Add support of stream migration during slot migration process (#1197)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,15,slot_import.h,h,1,0,1
cb49bd5b8848abe5a8259d4503f2a2cb3ffe86f1,torwigua@gmail.com,2022-12-21 09:04:48+02:00,noreply@github.com,2022-12-21 15:04:48+08:00,"Add support of stream migration during slot migration process (#1197)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,15,slot_migrate.cc,cc,231,112,343
cb49bd5b8848abe5a8259d4503f2a2cb3ffe86f1,torwigua@gmail.com,2022-12-21 09:04:48+02:00,noreply@github.com,2022-12-21 15:04:48+08:00,"Add support of stream migration during slot migration process (#1197)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,15,slot_migrate.h,h,54,48,102
cb49bd5b8848abe5a8259d4503f2a2cb3ffe86f1,torwigua@gmail.com,2022-12-21 09:04:48+02:00,noreply@github.com,2022-12-21 15:04:48+08:00,"Add support of stream migration during slot migration process (#1197)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,15,redis_cmd.cc,cc,67,6,73
cb49bd5b8848abe5a8259d4503f2a2cb3ffe86f1,torwigua@gmail.com,2022-12-21 09:04:48+02:00,noreply@github.com,2022-12-21 15:04:48+08:00,"Add support of stream migration during slot migration process (#1197)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,15,server.h,h,7,4,11
cb49bd5b8848abe5a8259d4503f2a2cb3ffe86f1,torwigua@gmail.com,2022-12-21 09:04:48+02:00,noreply@github.com,2022-12-21 15:04:48+08:00,"Add support of stream migration during slot migration process (#1197)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,15,storage.h,h,1,0,1
cb49bd5b8848abe5a8259d4503f2a2cb3ffe86f1,torwigua@gmail.com,2022-12-21 09:04:48+02:00,noreply@github.com,2022-12-21 15:04:48+08:00,"Add support of stream migration during slot migration process (#1197)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,15,redis_stream.cc,cc,74,7,81
cb49bd5b8848abe5a8259d4503f2a2cb3ffe86f1,torwigua@gmail.com,2022-12-21 09:04:48+02:00,noreply@github.com,2022-12-21 15:04:48+08:00,"Add support of stream migration during slot migration process (#1197)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,15,redis_stream.h,h,3,0,3
cb49bd5b8848abe5a8259d4503f2a2cb3ffe86f1,torwigua@gmail.com,2022-12-21 09:04:48+02:00,noreply@github.com,2022-12-21 15:04:48+08:00,"Add support of stream migration during slot migration process (#1197)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,15,redis_stream_base.cc,cc,16,8,24
cb49bd5b8848abe5a8259d4503f2a2cb3ffe86f1,torwigua@gmail.com,2022-12-21 09:04:48+02:00,noreply@github.com,2022-12-21 15:04:48+08:00,"Add support of stream migration during slot migration process (#1197)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,15,redis_stream_base.h,h,1,1,2
cb49bd5b8848abe5a8259d4503f2a2cb3ffe86f1,torwigua@gmail.com,2022-12-21 09:04:48+02:00,noreply@github.com,2022-12-21 15:04:48+08:00,"Add support of stream migration during slot migration process (#1197)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,15,t_stream_test.cc,cc,190,35,225
cb49bd5b8848abe5a8259d4503f2a2cb3ffe86f1,torwigua@gmail.com,2022-12-21 09:04:48+02:00,noreply@github.com,2022-12-21 15:04:48+08:00,"Add support of stream migration during slot migration process (#1197)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,15,slotmigrate_test.go,go,112,6,118
4516b75b5e37dcc0cfa403b9feaab08b052baf33,twice.mliu@gmail.com,2022-12-21 16:01:32+08:00,noreply@github.com,2022-12-21 16:01:32+08:00,Inplace construct error message in StatusOr while data type is large enough (#1198),unstable,True,False,2,status.h,h,68,17,85
4516b75b5e37dcc0cfa403b9feaab08b052baf33,twice.mliu@gmail.com,2022-12-21 16:01:32+08:00,noreply@github.com,2022-12-21 16:01:32+08:00,Inplace construct error message in StatusOr while data type is large enough (#1198),unstable,True,False,2,status_test.cc,cc,29,0,29
5515ccc0e69f56f314048991b87033b45fa0b8b9,twice.mliu@gmail.com,2022-12-21 17:18:54+08:00,noreply@github.com,2022-12-21 17:18:54+08:00,"Make IO functions return StatusOr (#1192)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,9,replication.cc,cc,14,19,33
5515ccc0e69f56f314048991b87033b45fa0b8b9,twice.mliu@gmail.com,2022-12-21 17:18:54+08:00,noreply@github.com,2022-12-21 17:18:54+08:00,"Make IO functions return StatusOr (#1192)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,9,slot_migrate.cc,cc,2,1,3
5515ccc0e69f56f314048991b87033b45fa0b8b9,twice.mliu@gmail.com,2022-12-21 17:18:54+08:00,noreply@github.com,2022-12-21 17:18:54+08:00,"Make IO functions return StatusOr (#1192)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,9,cron.cc,cc,2,2,4
5515ccc0e69f56f314048991b87033b45fa0b8b9,twice.mliu@gmail.com,2022-12-21 17:18:54+08:00,noreply@github.com,2022-12-21 17:18:54+08:00,"Make IO functions return StatusOr (#1192)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,9,io_util.cc,cc,15,18,33
5515ccc0e69f56f314048991b87033b45fa0b8b9,twice.mliu@gmail.com,2022-12-21 17:18:54+08:00,noreply@github.com,2022-12-21 17:18:54+08:00,"Make IO functions return StatusOr (#1192)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,9,io_util.h,h,2,2,4
5515ccc0e69f56f314048991b87033b45fa0b8b9,twice.mliu@gmail.com,2022-12-21 17:18:54+08:00,noreply@github.com,2022-12-21 17:18:54+08:00,"Make IO functions return StatusOr (#1192)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,9,status.h,h,24,1,25
5515ccc0e69f56f314048991b87033b45fa0b8b9,twice.mliu@gmail.com,2022-12-21 17:18:54+08:00,noreply@github.com,2022-12-21 17:18:54+08:00,"Make IO functions return StatusOr (#1192)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,9,config.cc,cc,1,3,4
5515ccc0e69f56f314048991b87033b45fa0b8b9,twice.mliu@gmail.com,2022-12-21 17:18:54+08:00,noreply@github.com,2022-12-21 17:18:54+08:00,"Make IO functions return StatusOr (#1192)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,9,redis_writer.cc,cc,13,24,37
5515ccc0e69f56f314048991b87033b45fa0b8b9,twice.mliu@gmail.com,2022-12-21 17:18:54+08:00,noreply@github.com,2022-12-21 17:18:54+08:00,"Make IO functions return StatusOr (#1192)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,9,sync.cc,cc,9,16,25
8e14c5df245ac8f7a48e6dd6d4b21dc96f7a771a,39056297+IoCing@users.noreply.github.com,2022-12-21 18:49:10+08:00,noreply@github.com,2022-12-21 18:49:10+08:00,feat: add config for log cleaner (#1171),unstable,True,False,5,kvrocks.conf,conf,10,0,10
8e14c5df245ac8f7a48e6dd6d4b21dc96f7a771a,39056297+IoCing@users.noreply.github.com,2022-12-21 18:49:10+08:00,noreply@github.com,2022-12-21 18:49:10+08:00,feat: add config for log cleaner (#1171),unstable,True,False,5,config.cc,cc,15,0,15
8e14c5df245ac8f7a48e6dd6d4b21dc96f7a771a,39056297+IoCing@users.noreply.github.com,2022-12-21 18:49:10+08:00,noreply@github.com,2022-12-21 18:49:10+08:00,feat: add config for log cleaner (#1171),unstable,True,False,5,config.h,h,1,0,1
8e14c5df245ac8f7a48e6dd6d4b21dc96f7a771a,39056297+IoCing@users.noreply.github.com,2022-12-21 18:49:10+08:00,noreply@github.com,2022-12-21 18:49:10+08:00,feat: add config for log cleaner (#1171),unstable,True,False,5,main.cc,cc,4,1,5
8e14c5df245ac8f7a48e6dd6d4b21dc96f7a771a,39056297+IoCing@users.noreply.github.com,2022-12-21 18:49:10+08:00,noreply@github.com,2022-12-21 18:49:10+08:00,feat: add config for log cleaner (#1171),unstable,True,False,5,logclean_test.go,go,68,0,68
d94c7a35311845faf8d4766f5c385643deb105d5,twice.mliu@gmail.com,2022-12-21 21:34:18+08:00,noreply@github.com,2022-12-21 21:34:18+08:00,Refine Prefixed and add more test cases (#1200),unstable,True,False,2,status.h,h,3,8,11
d94c7a35311845faf8d4766f5c385643deb105d5,twice.mliu@gmail.com,2022-12-21 21:34:18+08:00,noreply@github.com,2022-12-21 21:34:18+08:00,Refine Prefixed and add more test cases (#1200),unstable,True,False,2,status_test.cc,cc,32,0,32
1cd7cfa72d9901f778d619fcba3006036277ab68,aleks.raiden@gmail.com,2022-12-23 12:24:09+02:00,noreply@github.com,2022-12-23 18:24:09+08:00,Bump rocksdb to 7.8.3 (#1203),unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
b59c58e1867f02bc9084fd3f0f038c31b5983406,torwigua@gmail.com,2022-12-26 13:52:20+02:00,noreply@github.com,2022-12-26 19:52:20+08:00,Refactor return value of functions that related to a slot migration (#1205),unstable,True,False,2,slot_migrate.cc,cc,174,192,366
b59c58e1867f02bc9084fd3f0f038c31b5983406,torwigua@gmail.com,2022-12-26 13:52:20+02:00,noreply@github.com,2022-12-26 19:52:20+08:00,Refactor return value of functions that related to a slot migration (#1205),unstable,True,False,2,slot_migrate.h,h,28,28,56
88bc407194fafc0e45ae26da227f8548571678c0,mithridatus@mail.ru,2022-12-27 06:19:19+03:00,noreply@github.com,2022-12-27 11:19:19+08:00,Check source code of kvrocks2redis by clang-tidy (#1209),unstable,True,False,7,config.cc,cc,3,3,6
88bc407194fafc0e45ae26da227f8548571678c0,mithridatus@mail.ru,2022-12-27 06:19:19+03:00,noreply@github.com,2022-12-27 11:19:19+08:00,Check source code of kvrocks2redis by clang-tidy (#1209),unstable,True,False,7,config.h,h,1,1,2
88bc407194fafc0e45ae26da227f8548571678c0,mithridatus@mail.ru,2022-12-27 06:19:19+03:00,noreply@github.com,2022-12-27 11:19:19+08:00,Check source code of kvrocks2redis by clang-tidy (#1209),unstable,True,False,7,main.cc,cc,2,2,4
88bc407194fafc0e45ae26da227f8548571678c0,mithridatus@mail.ru,2022-12-27 06:19:19+03:00,noreply@github.com,2022-12-27 11:19:19+08:00,Check source code of kvrocks2redis by clang-tidy (#1209),unstable,True,False,7,parser.cc,cc,1,1,2
88bc407194fafc0e45ae26da227f8548571678c0,mithridatus@mail.ru,2022-12-27 06:19:19+03:00,noreply@github.com,2022-12-27 11:19:19+08:00,Check source code of kvrocks2redis by clang-tidy (#1209),unstable,True,False,7,redis_writer.cc,cc,1,1,2
88bc407194fafc0e45ae26da227f8548571678c0,mithridatus@mail.ru,2022-12-27 06:19:19+03:00,noreply@github.com,2022-12-27 11:19:19+08:00,Check source code of kvrocks2redis by clang-tidy (#1209),unstable,True,False,7,sync.cc,cc,6,8,14
88bc407194fafc0e45ae26da227f8548571678c0,mithridatus@mail.ru,2022-12-27 06:19:19+03:00,noreply@github.com,2022-12-27 11:19:19+08:00,Check source code of kvrocks2redis by clang-tidy (#1209),unstable,True,False,7,x.py,py,1,1,2
06d5f6044e45e33dbae51fda751b1f2ac849566c,wander4096@gmail.com,2022-12-27 12:48:00+08:00,noreply@github.com,2022-12-27 12:48:00+08:00,"cleanup packaging fpm code (#1207)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,x.py,py,0,53,53
09d3d18dd9d4e2afebdda13560a8de392b0540d1,torwigua@gmail.com,2022-12-27 07:50:10+02:00,noreply@github.com,2022-12-27 13:50:10+08:00,Minor refactoring of slot migrate Go-tests (#1208),unstable,True,False,1,slotmigrate_test.go,go,166,132,298
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,CMakeLists.txt,txt,1,2,3
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,cluster.cc,cc,22,12,34
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,cluster.h,h,1,1,2
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,replication.cc,cc,28,10,38
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,replication.h,h,1,1,2
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,redis_cmd.cc,cc,59,34,93
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,config.cc,cc,8,2,10
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,main.cc,cc,4,1,5
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,server.cc,cc,28,18,46
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,server.h,h,3,3,6
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,worker.cc,cc,14,8,22
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,batch_extractor.cc,cc,3,1,4
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,scripting.cc,cc,1,2,3
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,storage.cc,cc,19,21,40
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,storage.h,h,5,4,9
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,config_test.cc,cc,34,22,56
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,cron_test.cc,cc,3,2,5
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,main.cc,cc,4,1,5
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,redis_writer.cc,cc,20,7,27
52b0a6102d83d006a0e1dfc55f9d054036cd6df4,torwigua@gmail.com,2023-01-02 20:43:14+02:00,noreply@github.com,2023-01-02 20:43:14+02:00,"Refactoring: check function return Status marked as [[nodiscard]] (#1214)

* Refactoring: if the function returns Status marked as [[nodiscard]], check it

* Add compiler option: treat unused-result warning as errors",unstable,True,False,20,sync.cc,cc,10,4,14
4ddee2fe8d688546f7f9bff184265d62d1730a1c,torwigua@gmail.com,2023-01-06 09:27:46+02:00,noreply@github.com,2023-01-06 09:27:46+02:00,"Make config load errors more friendly (#1217)

* Improve error messages on kvrocks configuration loading

* Improve error messages on kvrocks2redis configuration loading",unstable,True,False,8,config.cc,cc,58,63,121
4ddee2fe8d688546f7f9bff184265d62d1730a1c,torwigua@gmail.com,2023-01-06 09:27:46+02:00,noreply@github.com,2023-01-06 09:27:46+02:00,"Make config load errors more friendly (#1217)

* Improve error messages on kvrocks configuration loading

* Improve error messages on kvrocks2redis configuration loading",unstable,True,False,8,config_type.h,h,4,4,8
4ddee2fe8d688546f7f9bff184265d62d1730a1c,torwigua@gmail.com,2023-01-06 09:27:46+02:00,noreply@github.com,2023-01-06 09:27:46+02:00,"Make config load errors more friendly (#1217)

* Improve error messages on kvrocks configuration loading

* Improve error messages on kvrocks2redis configuration loading",unstable,True,False,8,main.cc,cc,2,1,3
4ddee2fe8d688546f7f9bff184265d62d1730a1c,torwigua@gmail.com,2023-01-06 09:27:46+02:00,noreply@github.com,2023-01-06 09:27:46+02:00,"Make config load errors more friendly (#1217)

* Improve error messages on kvrocks configuration loading

* Improve error messages on kvrocks2redis configuration loading",unstable,True,False,8,config.cc,cc,42,19,61
4ddee2fe8d688546f7f9bff184265d62d1730a1c,torwigua@gmail.com,2023-01-06 09:27:46+02:00,noreply@github.com,2023-01-06 09:27:46+02:00,"Make config load errors more friendly (#1217)

* Improve error messages on kvrocks configuration loading

* Improve error messages on kvrocks2redis configuration loading",unstable,True,False,8,config.h,h,1,0,1
4ddee2fe8d688546f7f9bff184265d62d1730a1c,torwigua@gmail.com,2023-01-06 09:27:46+02:00,noreply@github.com,2023-01-06 09:27:46+02:00,"Make config load errors more friendly (#1217)

* Improve error messages on kvrocks configuration loading

* Improve error messages on kvrocks2redis configuration loading",unstable,True,False,8,kvrocks2redis.conf,conf,9,3,12
4ddee2fe8d688546f7f9bff184265d62d1730a1c,torwigua@gmail.com,2023-01-06 09:27:46+02:00,noreply@github.com,2023-01-06 09:27:46+02:00,"Make config load errors more friendly (#1217)

* Improve error messages on kvrocks configuration loading

* Improve error messages on kvrocks2redis configuration loading",unstable,True,False,8,main.cc,cc,14,9,23
4ddee2fe8d688546f7f9bff184265d62d1730a1c,torwigua@gmail.com,2023-01-06 09:27:46+02:00,noreply@github.com,2023-01-06 09:27:46+02:00,"Make config load errors more friendly (#1217)

* Improve error messages on kvrocks configuration loading

* Improve error messages on kvrocks2redis configuration loading",unstable,True,False,8,sync.cc,cc,9,8,17
44ffb9a742792fd559b4147678fd1dbb1e5bc9d4,twice.mliu@gmail.com,2023-01-07 23:43:59+08:00,noreply@github.com,2023-01-07 23:43:59+08:00,Add integer parsing with unit support (#1218),unstable,True,False,6,parse_util.cc,cc,53,0,53
44ffb9a742792fd559b4147678fd1dbb1e5bc9d4,twice.mliu@gmail.com,2023-01-07 23:43:59+08:00,noreply@github.com,2023-01-07 23:43:59+08:00,Add integer parsing with unit support (#1218),unstable,True,False,6,parse_util.h,h,5,1,6
44ffb9a742792fd559b4147678fd1dbb1e5bc9d4,twice.mliu@gmail.com,2023-01-07 23:43:59+08:00,noreply@github.com,2023-01-07 23:43:59+08:00,Add integer parsing with unit support (#1218),unstable,True,False,6,string_util.cc,cc,11,9,20
44ffb9a742792fd559b4147678fd1dbb1e5bc9d4,twice.mliu@gmail.com,2023-01-07 23:43:59+08:00,noreply@github.com,2023-01-07 23:43:59+08:00,Add integer parsing with unit support (#1218),unstable,True,False,6,string_util.h,h,2,2,4
44ffb9a742792fd559b4147678fd1dbb1e5bc9d4,twice.mliu@gmail.com,2023-01-07 23:43:59+08:00,noreply@github.com,2023-01-07 23:43:59+08:00,Add integer parsing with unit support (#1218),unstable,True,False,6,server.cc,cc,3,3,6
44ffb9a742792fd559b4147678fd1dbb1e5bc9d4,twice.mliu@gmail.com,2023-01-07 23:43:59+08:00,noreply@github.com,2023-01-07 23:43:59+08:00,Add integer parsing with unit support (#1218),unstable,True,False,6,parse_util.cc,cc,15,0,15
12e5f2982db545261e12a36e1580df63c8608344,torwigua@gmail.com,2023-01-10 18:02:13+02:00,torwigua@gmail.com,2023-01-11 17:38:38+02:00,Set the slot_id_encoded config option if cluster mode is enabled,unstable,True,False,1,main.cc,cc,1,0,1
35bce1aec8e7358faaacf686ba81b77ab238af3c,torwigua@gmail.com,2023-01-10 19:05:37+02:00,torwigua@gmail.com,2023-01-11 17:38:38+02:00,Tidy some Kvrocks2Redis code,unstable,True,False,4,parser.cc,cc,47,33,80
35bce1aec8e7358faaacf686ba81b77ab238af3c,torwigua@gmail.com,2023-01-10 19:05:37+02:00,torwigua@gmail.com,2023-01-11 17:38:38+02:00,Tidy some Kvrocks2Redis code,unstable,True,False,4,parser.h,h,8,8,16
35bce1aec8e7358faaacf686ba81b77ab238af3c,torwigua@gmail.com,2023-01-10 19:05:37+02:00,torwigua@gmail.com,2023-01-11 17:38:38+02:00,Tidy some Kvrocks2Redis code,unstable,True,False,4,redis_writer.cc,cc,11,0,11
35bce1aec8e7358faaacf686ba81b77ab238af3c,torwigua@gmail.com,2023-01-10 19:05:37+02:00,torwigua@gmail.com,2023-01-11 17:38:38+02:00,Tidy some Kvrocks2Redis code,unstable,True,False,4,sync.cc,cc,7,3,10
2fd1aac6009760e6118d3c420c867b7cfa81efb8,twice.mliu@gmail.com,2023-01-12 12:17:11+08:00,noreply@github.com,2023-01-12 12:17:11+08:00,Refactor config parsing in kvrocks2redis (#1221),unstable,True,False,2,config.cc,cc,40,51,91
2fd1aac6009760e6118d3c420c867b7cfa81efb8,twice.mliu@gmail.com,2023-01-12 12:17:11+08:00,noreply@github.com,2023-01-12 12:17:11+08:00,Refactor config parsing in kvrocks2redis (#1221),unstable,True,False,2,config.h,h,1,1,2
f1f7c10a30dc3387f6ffd77fe3c6efe2f393ed38,hulk.website@gmail.com,2023-01-12 17:43:05+08:00,noreply@github.com,2023-01-12 17:43:05+08:00,Persist the cluster nodes info after applying the cluster topology (#1219),unstable,True,False,8,cluster.cc,cc,116,14,130
f1f7c10a30dc3387f6ffd77fe3c6efe2f393ed38,hulk.website@gmail.com,2023-01-12 17:43:05+08:00,noreply@github.com,2023-01-12 17:43:05+08:00,Persist the cluster nodes info after applying the cluster topology (#1219),unstable,True,False,8,cluster.h,h,4,0,4
f1f7c10a30dc3387f6ffd77fe3c6efe2f393ed38,hulk.website@gmail.com,2023-01-12 17:43:05+08:00,noreply@github.com,2023-01-12 17:43:05+08:00,Persist the cluster nodes info after applying the cluster topology (#1219),unstable,True,False,8,redis_cmd.cc,cc,7,0,7
f1f7c10a30dc3387f6ffd77fe3c6efe2f393ed38,hulk.website@gmail.com,2023-01-12 17:43:05+08:00,noreply@github.com,2023-01-12 17:43:05+08:00,Persist the cluster nodes info after applying the cluster topology (#1219),unstable,True,False,8,config.cc,cc,2,0,2
f1f7c10a30dc3387f6ffd77fe3c6efe2f393ed38,hulk.website@gmail.com,2023-01-12 17:43:05+08:00,noreply@github.com,2023-01-12 17:43:05+08:00,Persist the cluster nodes info after applying the cluster topology (#1219),unstable,True,False,8,config.h,h,1,0,1
f1f7c10a30dc3387f6ffd77fe3c6efe2f393ed38,hulk.website@gmail.com,2023-01-12 17:43:05+08:00,noreply@github.com,2023-01-12 17:43:05+08:00,Persist the cluster nodes info after applying the cluster topology (#1219),unstable,True,False,8,server.cc,cc,6,1,7
f1f7c10a30dc3387f6ffd77fe3c6efe2f393ed38,hulk.website@gmail.com,2023-01-12 17:43:05+08:00,noreply@github.com,2023-01-12 17:43:05+08:00,Persist the cluster nodes info after applying the cluster topology (#1219),unstable,True,False,8,cluster_test.cc,cc,39,0,39
f1f7c10a30dc3387f6ffd77fe3c6efe2f393ed38,hulk.website@gmail.com,2023-01-12 17:43:05+08:00,noreply@github.com,2023-01-12 17:43:05+08:00,Persist the cluster nodes info after applying the cluster topology (#1219),unstable,True,False,8,cluster_test.go,go,52,0,52
c01a5c1135e3182ca413fd836496edd391a86d27,twice.mliu@gmail.com,2023-01-15 11:45:01+08:00,noreply@github.com,2023-01-15 11:45:01+08:00,Fix error message passing in Server::Start (#1225),unstable,True,False,2,main.cc,cc,2,2,4
c01a5c1135e3182ca413fd836496edd391a86d27,twice.mliu@gmail.com,2023-01-15 11:45:01+08:00,noreply@github.com,2023-01-15 11:45:01+08:00,Fix error message passing in Server::Start (#1225),unstable,True,False,2,server.cc,cc,2,4,6
319e841f75cda99b55434ff3d04296cc0b059dab,torwigua@gmail.com,2023-01-17 04:44:40+02:00,noreply@github.com,2023-01-17 10:44:40+08:00,Fix deadlock when unblocking connection on stream (#1228),unstable,True,False,1,server.cc,cc,1,0,1
003d8fb19f84601e9da5e908b4a83092695eeaf8,819464715@qq.com,2023-01-17 11:42:24+08:00,noreply@github.com,2023-01-17 11:42:24+08:00,`HrangebyLex` supports specify intervals (#1120),unstable,True,False,10,redis_cmd.cc,cc,29,24,53
003d8fb19f84601e9da5e908b4a83092695eeaf8,819464715@qq.com,2023-01-17 11:42:24+08:00,noreply@github.com,2023-01-17 11:42:24+08:00,`HrangebyLex` supports specify intervals (#1120),unstable,True,False,10,range_spec.cc,cc,53,0,53
003d8fb19f84601e9da5e908b4a83092695eeaf8,819464715@qq.com,2023-01-17 11:42:24+08:00,noreply@github.com,2023-01-17 11:42:24+08:00,`HrangebyLex` supports specify intervals (#1120),unstable,True,False,10,range_spec.h,h,36,0,36
003d8fb19f84601e9da5e908b4a83092695eeaf8,819464715@qq.com,2023-01-17 11:42:24+08:00,noreply@github.com,2023-01-17 11:42:24+08:00,`HrangebyLex` supports specify intervals (#1120),unstable,True,False,10,redis_hash.cc,cc,39,11,50
003d8fb19f84601e9da5e908b4a83092695eeaf8,819464715@qq.com,2023-01-17 11:42:24+08:00,noreply@github.com,2023-01-17 11:42:24+08:00,`HrangebyLex` supports specify intervals (#1120),unstable,True,False,10,redis_hash.h,h,3,2,5
003d8fb19f84601e9da5e908b4a83092695eeaf8,819464715@qq.com,2023-01-17 11:42:24+08:00,noreply@github.com,2023-01-17 11:42:24+08:00,`HrangebyLex` supports specify intervals (#1120),unstable,True,False,10,redis_zset.cc,cc,3,36,39
003d8fb19f84601e9da5e908b4a83092695eeaf8,819464715@qq.com,2023-01-17 11:42:24+08:00,noreply@github.com,2023-01-17 11:42:24+08:00,`HrangebyLex` supports specify intervals (#1120),unstable,True,False,10,redis_zset.h,h,3,12,15
003d8fb19f84601e9da5e908b4a83092695eeaf8,819464715@qq.com,2023-01-17 11:42:24+08:00,noreply@github.com,2023-01-17 11:42:24+08:00,`HrangebyLex` supports specify intervals (#1120),unstable,True,False,10,t_hash_test.cc,cc,100,5,105
003d8fb19f84601e9da5e908b4a83092695eeaf8,819464715@qq.com,2023-01-17 11:42:24+08:00,noreply@github.com,2023-01-17 11:42:24+08:00,`HrangebyLex` supports specify intervals (#1120),unstable,True,False,10,t_zset_test.cc,cc,1,1,2
003d8fb19f84601e9da5e908b4a83092695eeaf8,819464715@qq.com,2023-01-17 11:42:24+08:00,noreply@github.com,2023-01-17 11:42:24+08:00,`HrangebyLex` supports specify intervals (#1120),unstable,True,False,10,hash_test.go,go,40,23,63
84776a63b18f108f670ad6a7f3cc27c31290f002,twice.mliu@gmail.com,2023-01-17 15:06:24+08:00,noreply@github.com,2023-01-17 15:06:24+08:00,Add ParseFloat and replace stod with it (#1227),unstable,True,False,6,redis_cmd.cc,cc,56,60,116
84776a63b18f108f670ad6a7f3cc27c31290f002,twice.mliu@gmail.com,2023-01-17 15:06:24+08:00,noreply@github.com,2023-01-17 15:06:24+08:00,Add ParseFloat and replace stod with it (#1227),unstable,True,False,6,parse_util.h,h,52,1,53
84776a63b18f108f670ad6a7f3cc27c31290f002,twice.mliu@gmail.com,2023-01-17 15:06:24+08:00,noreply@github.com,2023-01-17 15:06:24+08:00,Add ParseFloat and replace stod with it (#1227),unstable,True,False,6,redis_hash.cc,cc,4,8,12
84776a63b18f108f670ad6a7f3cc27c31290f002,twice.mliu@gmail.com,2023-01-17 15:06:24+08:00,noreply@github.com,2023-01-17 15:06:24+08:00,Add ParseFloat and replace stod with it (#1227),unstable,True,False,6,redis_string.cc,cc,4,8,12
84776a63b18f108f670ad6a7f3cc27c31290f002,twice.mliu@gmail.com,2023-01-17 15:06:24+08:00,noreply@github.com,2023-01-17 15:06:24+08:00,Add ParseFloat and replace stod with it (#1227),unstable,True,False,6,parse_util.cc,cc,21,0,21
84776a63b18f108f670ad6a7f3cc27c31290f002,twice.mliu@gmail.com,2023-01-17 15:06:24+08:00,noreply@github.com,2023-01-17 15:06:24+08:00,Add ParseFloat and replace stod with it (#1227),unstable,True,False,6,hash_test.go,go,2,2,4
26026590347bfab7690d1b6b8d2abe8af91b475f,aleks.raiden@gmail.com,2023-01-19 04:59:43+02:00,noreply@github.com,2023-01-19 10:59:43+08:00,"Update RocksDB to 7.9.2 & Google test to 1.13.0 (#1229)

Update google test up to 1.13.0
  - C++ 14 is now required
  - Fixed bugs

Update RocksDB to 7.9.2
  - Many bug fixed (e.g. relative to async_io support)
  - Performance Improvements
  - (new) Basic support for the wide-column data model
  - (new) Marked HyperClockCache as a production-ready alternative to LRUCache for the block cache. As much as 4.5x higher ops/sec vs. LRUCache has been seen in db_bench under high parallel load.",unstable,True,False,2,gtest.cmake,cmake,2,2,4
26026590347bfab7690d1b6b8d2abe8af91b475f,aleks.raiden@gmail.com,2023-01-19 04:59:43+02:00,noreply@github.com,2023-01-19 10:59:43+08:00,"Update RocksDB to 7.9.2 & Google test to 1.13.0 (#1229)

Update google test up to 1.13.0
  - C++ 14 is now required
  - Fixed bugs

Update RocksDB to 7.9.2
  - Many bug fixed (e.g. relative to async_io support)
  - Performance Improvements
  - (new) Basic support for the wide-column data model
  - (new) Marked HyperClockCache as a production-ready alternative to LRUCache for the block cache. As much as 4.5x higher ops/sec vs. LRUCache has been seen in db_bench under high parallel load.",unstable,True,False,2,rocksdb.cmake,cmake,2,2,4
c2cc8a218ec425d362eb3716c99661dd65427340,torwigua@gmail.com,2023-01-18 23:02:24+02:00,torwigua@gmail.com,2023-01-19 07:37:51+02:00,Add ability to set log level via config file,unstable,True,False,7,kvrocks.conf,conf,5,0,5
c2cc8a218ec425d362eb3716c99661dd65427340,torwigua@gmail.com,2023-01-18 23:02:24+02:00,torwigua@gmail.com,2023-01-19 07:37:51+02:00,Add ability to set log level via config file,unstable,True,False,7,config.cc,cc,16,8,24
c2cc8a218ec425d362eb3716c99661dd65427340,torwigua@gmail.com,2023-01-18 23:02:24+02:00,torwigua@gmail.com,2023-01-19 07:37:51+02:00,Add ability to set log level via config file,unstable,True,False,7,config.h,h,1,1,2
c2cc8a218ec425d362eb3716c99661dd65427340,torwigua@gmail.com,2023-01-18 23:02:24+02:00,torwigua@gmail.com,2023-01-19 07:37:51+02:00,Add ability to set log level via config file,unstable,True,False,7,main.cc,cc,1,1,2
c2cc8a218ec425d362eb3716c99661dd65427340,torwigua@gmail.com,2023-01-18 23:02:24+02:00,torwigua@gmail.com,2023-01-19 07:37:51+02:00,Add ability to set log level via config file,unstable,True,False,7,scripting.cc,cc,1,1,2
c2cc8a218ec425d362eb3716c99661dd65427340,torwigua@gmail.com,2023-01-18 23:02:24+02:00,torwigua@gmail.com,2023-01-19 07:37:51+02:00,Add ability to set log level via config file,unstable,True,False,7,config.cc,cc,1,1,2
c2cc8a218ec425d362eb3716c99661dd65427340,torwigua@gmail.com,2023-01-18 23:02:24+02:00,torwigua@gmail.com,2023-01-19 07:37:51+02:00,Add ability to set log level via config file,unstable,True,False,7,kvrocks2redis.conf,conf,1,1,2
0109c7215462ac8f67055d4834b7b460d442de19,twice.mliu@gmail.com,2023-01-22 11:33:47+08:00,noreply@github.com,2023-01-22 11:33:47+08:00,Add contributing section in README (#1231),unstable,True,False,1,README.md,md,8,7,15
d032f296a592f18848628a945b9b7c9dc9fec496,torwigua@gmail.com,2023-01-24 14:48:40+02:00,torwigua@gmail.com,2023-01-25 08:38:04+02:00,"XREAD returns dedicated status if it blocks

In order to be consistent with such blocking commands like BLPOP and BRPOP",unstable,True,False,2,redis_cmd.cc,cc,1,1,2
d032f296a592f18848628a945b9b7c9dc9fec496,torwigua@gmail.com,2023-01-24 14:48:40+02:00,torwigua@gmail.com,2023-01-25 08:38:04+02:00,"XREAD returns dedicated status if it blocks

In order to be consistent with such blocking commands like BLPOP and BRPOP",unstable,True,False,2,redis_connection.cc,cc,12,10,22
686a1e8ae0d0896822015c783b9f61bdb09ea928,twice.mliu@gmail.com,2023-01-28 11:15:30+08:00,noreply@github.com,2023-01-28 11:15:30+08:00,Make docker image more portable (#1233),unstable,True,False,3,CMakeLists.txt,txt,1,0,1
686a1e8ae0d0896822015c783b9f61bdb09ea928,twice.mliu@gmail.com,2023-01-28 11:15:30+08:00,noreply@github.com,2023-01-28 11:15:30+08:00,Make docker image more portable (#1233),unstable,True,False,3,Dockerfile,None,4,3,7
686a1e8ae0d0896822015c783b9f61bdb09ea928,twice.mliu@gmail.com,2023-01-28 11:15:30+08:00,noreply@github.com,2023-01-28 11:15:30+08:00,Make docker image more portable (#1233),unstable,True,False,3,rocksdb.cmake,cmake,1,0,1
c41bec89045c0c0c800296c6b1bcec48bf2a4461,52393536+xiaobiaozhao@users.noreply.github.com,2023-01-28 12:18:03+08:00,noreply@github.com,2023-01-28 12:18:03+08:00,"Allow to enable the async_io option to improve the performance (#1215)

Currently, RocksDB supports the async io to mitigate the impact of storage latency
to read asynchronously and in parallel as much as possible to hide IO latency. And it
only takes effect in MultiGet and Iterators:

In Iterators, it will prefetch data asynchronously in the background for each file being iterated on. 
In MultiGet, it will read the necessary data blocks from those files in parallel as much as possible.

For the current implementation, we only allow enabling the async io in Iterator, because the MultiGet
operation depends on the folly library and C++ 20 which it's NOT expected to introduce in Kvrocks.
---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,15,kvrocks.conf,conf,9,1,10
c41bec89045c0c0c800296c6b1bcec48bf2a4461,52393536+xiaobiaozhao@users.noreply.github.com,2023-01-28 12:18:03+08:00,noreply@github.com,2023-01-28 12:18:03+08:00,"Allow to enable the async_io option to improve the performance (#1215)

Currently, RocksDB supports the async io to mitigate the impact of storage latency
to read asynchronously and in parallel as much as possible to hide IO latency. And it
only takes effect in MultiGet and Iterators:

In Iterators, it will prefetch data asynchronously in the background for each file being iterated on. 
In MultiGet, it will read the necessary data blocks from those files in parallel as much as possible.

For the current implementation, we only allow enabling the async io in Iterator, because the MultiGet
operation depends on the folly library and C++ 20 which it's NOT expected to introduce in Kvrocks.
---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,15,slot_migrate.cc,cc,3,3,6
c41bec89045c0c0c800296c6b1bcec48bf2a4461,52393536+xiaobiaozhao@users.noreply.github.com,2023-01-28 12:18:03+08:00,noreply@github.com,2023-01-28 12:18:03+08:00,"Allow to enable the async_io option to improve the performance (#1215)

Currently, RocksDB supports the async io to mitigate the impact of storage latency
to read asynchronously and in parallel as much as possible to hide IO latency. And it
only takes effect in MultiGet and Iterators:

In Iterators, it will prefetch data asynchronously in the background for each file being iterated on. 
In MultiGet, it will read the necessary data blocks from those files in parallel as much as possible.

For the current implementation, we only allow enabling the async io in Iterator, because the MultiGet
operation depends on the folly library and C++ 20 which it's NOT expected to introduce in Kvrocks.
---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,15,config.cc,cc,3,0,3
c41bec89045c0c0c800296c6b1bcec48bf2a4461,52393536+xiaobiaozhao@users.noreply.github.com,2023-01-28 12:18:03+08:00,noreply@github.com,2023-01-28 12:18:03+08:00,"Allow to enable the async_io option to improve the performance (#1215)

Currently, RocksDB supports the async io to mitigate the impact of storage latency
to read asynchronously and in parallel as much as possible to hide IO latency. And it
only takes effect in MultiGet and Iterators:

In Iterators, it will prefetch data asynchronously in the background for each file being iterated on. 
In MultiGet, it will read the necessary data blocks from those files in parallel as much as possible.

For the current implementation, we only allow enabling the async io in Iterator, because the MultiGet
operation depends on the folly library and C++ 20 which it's NOT expected to introduce in Kvrocks.
---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,15,config.h,h,4,0,4
c41bec89045c0c0c800296c6b1bcec48bf2a4461,52393536+xiaobiaozhao@users.noreply.github.com,2023-01-28 12:18:03+08:00,noreply@github.com,2023-01-28 12:18:03+08:00,"Allow to enable the async_io option to improve the performance (#1215)

Currently, RocksDB supports the async io to mitigate the impact of storage latency
to read asynchronously and in parallel as much as possible to hide IO latency. And it
only takes effect in MultiGet and Iterators:

In Iterators, it will prefetch data asynchronously in the background for each file being iterated on. 
In MultiGet, it will read the necessary data blocks from those files in parallel as much as possible.

For the current implementation, we only allow enabling the async io in Iterator, because the MultiGet
operation depends on the folly library and C++ 20 which it's NOT expected to introduce in Kvrocks.
---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,15,redis_db.cc,cc,6,6,12
c41bec89045c0c0c800296c6b1bcec48bf2a4461,52393536+xiaobiaozhao@users.noreply.github.com,2023-01-28 12:18:03+08:00,noreply@github.com,2023-01-28 12:18:03+08:00,"Allow to enable the async_io option to improve the performance (#1215)

Currently, RocksDB supports the async io to mitigate the impact of storage latency
to read asynchronously and in parallel as much as possible to hide IO latency. And it
only takes effect in MultiGet and Iterators:

In Iterators, it will prefetch data asynchronously in the background for each file being iterated on. 
In MultiGet, it will read the necessary data blocks from those files in parallel as much as possible.

For the current implementation, we only allow enabling the async io in Iterator, because the MultiGet
operation depends on the folly library and C++ 20 which it's NOT expected to introduce in Kvrocks.
---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,15,storage.cc,cc,5,0,5
c41bec89045c0c0c800296c6b1bcec48bf2a4461,52393536+xiaobiaozhao@users.noreply.github.com,2023-01-28 12:18:03+08:00,noreply@github.com,2023-01-28 12:18:03+08:00,"Allow to enable the async_io option to improve the performance (#1215)

Currently, RocksDB supports the async io to mitigate the impact of storage latency
to read asynchronously and in parallel as much as possible to hide IO latency. And it
only takes effect in MultiGet and Iterators:

In Iterators, it will prefetch data asynchronously in the background for each file being iterated on. 
In MultiGet, it will read the necessary data blocks from those files in parallel as much as possible.

For the current implementation, we only allow enabling the async io in Iterator, because the MultiGet
operation depends on the folly library and C++ 20 which it's NOT expected to introduce in Kvrocks.
---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,15,storage.h,h,1,0,1
c41bec89045c0c0c800296c6b1bcec48bf2a4461,52393536+xiaobiaozhao@users.noreply.github.com,2023-01-28 12:18:03+08:00,noreply@github.com,2023-01-28 12:18:03+08:00,"Allow to enable the async_io option to improve the performance (#1215)

Currently, RocksDB supports the async io to mitigate the impact of storage latency
to read asynchronously and in parallel as much as possible to hide IO latency. And it
only takes effect in MultiGet and Iterators:

In Iterators, it will prefetch data asynchronously in the background for each file being iterated on. 
In MultiGet, it will read the necessary data blocks from those files in parallel as much as possible.

For the current implementation, we only allow enabling the async io in Iterator, because the MultiGet
operation depends on the folly library and C++ 20 which it's NOT expected to introduce in Kvrocks.
---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,15,redis_bitmap.cc,cc,1,1,2
c41bec89045c0c0c800296c6b1bcec48bf2a4461,52393536+xiaobiaozhao@users.noreply.github.com,2023-01-28 12:18:03+08:00,noreply@github.com,2023-01-28 12:18:03+08:00,"Allow to enable the async_io option to improve the performance (#1215)

Currently, RocksDB supports the async io to mitigate the impact of storage latency
to read asynchronously and in parallel as much as possible to hide IO latency. And it
only takes effect in MultiGet and Iterators:

In Iterators, it will prefetch data asynchronously in the background for each file being iterated on. 
In MultiGet, it will read the necessary data blocks from those files in parallel as much as possible.

For the current implementation, we only allow enabling the async io in Iterator, because the MultiGet
operation depends on the folly library and C++ 20 which it's NOT expected to introduce in Kvrocks.
---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,15,redis_hash.cc,cc,2,2,4
c41bec89045c0c0c800296c6b1bcec48bf2a4461,52393536+xiaobiaozhao@users.noreply.github.com,2023-01-28 12:18:03+08:00,noreply@github.com,2023-01-28 12:18:03+08:00,"Allow to enable the async_io option to improve the performance (#1215)

Currently, RocksDB supports the async io to mitigate the impact of storage latency
to read asynchronously and in parallel as much as possible to hide IO latency. And it
only takes effect in MultiGet and Iterators:

In Iterators, it will prefetch data asynchronously in the background for each file being iterated on. 
In MultiGet, it will read the necessary data blocks from those files in parallel as much as possible.

For the current implementation, we only allow enabling the async io in Iterator, because the MultiGet
operation depends on the folly library and C++ 20 which it's NOT expected to introduce in Kvrocks.
---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,15,redis_list.cc,cc,3,3,6
c41bec89045c0c0c800296c6b1bcec48bf2a4461,52393536+xiaobiaozhao@users.noreply.github.com,2023-01-28 12:18:03+08:00,noreply@github.com,2023-01-28 12:18:03+08:00,"Allow to enable the async_io option to improve the performance (#1215)

Currently, RocksDB supports the async io to mitigate the impact of storage latency
to read asynchronously and in parallel as much as possible to hide IO latency. And it
only takes effect in MultiGet and Iterators:

In Iterators, it will prefetch data asynchronously in the background for each file being iterated on. 
In MultiGet, it will read the necessary data blocks from those files in parallel as much as possible.

For the current implementation, we only allow enabling the async io in Iterator, because the MultiGet
operation depends on the folly library and C++ 20 which it's NOT expected to introduce in Kvrocks.
---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,15,redis_set.cc,cc,2,2,4
c41bec89045c0c0c800296c6b1bcec48bf2a4461,52393536+xiaobiaozhao@users.noreply.github.com,2023-01-28 12:18:03+08:00,noreply@github.com,2023-01-28 12:18:03+08:00,"Allow to enable the async_io option to improve the performance (#1215)

Currently, RocksDB supports the async io to mitigate the impact of storage latency
to read asynchronously and in parallel as much as possible to hide IO latency. And it
only takes effect in MultiGet and Iterators:

In Iterators, it will prefetch data asynchronously in the background for each file being iterated on. 
In MultiGet, it will read the necessary data blocks from those files in parallel as much as possible.

For the current implementation, we only allow enabling the async io in Iterator, because the MultiGet
operation depends on the folly library and C++ 20 which it's NOT expected to introduce in Kvrocks.
---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,15,redis_sortedint.cc,cc,2,2,4
c41bec89045c0c0c800296c6b1bcec48bf2a4461,52393536+xiaobiaozhao@users.noreply.github.com,2023-01-28 12:18:03+08:00,noreply@github.com,2023-01-28 12:18:03+08:00,"Allow to enable the async_io option to improve the performance (#1215)

Currently, RocksDB supports the async io to mitigate the impact of storage latency
to read asynchronously and in parallel as much as possible to hide IO latency. And it
only takes effect in MultiGet and Iterators:

In Iterators, it will prefetch data asynchronously in the background for each file being iterated on. 
In MultiGet, it will read the necessary data blocks from those files in parallel as much as possible.

For the current implementation, we only allow enabling the async io in Iterator, because the MultiGet
operation depends on the folly library and C++ 20 which it's NOT expected to introduce in Kvrocks.
---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,15,redis_stream.cc,cc,3,3,6
c41bec89045c0c0c800296c6b1bcec48bf2a4461,52393536+xiaobiaozhao@users.noreply.github.com,2023-01-28 12:18:03+08:00,noreply@github.com,2023-01-28 12:18:03+08:00,"Allow to enable the async_io option to improve the performance (#1215)

Currently, RocksDB supports the async io to mitigate the impact of storage latency
to read asynchronously and in parallel as much as possible to hide IO latency. And it
only takes effect in MultiGet and Iterators:

In Iterators, it will prefetch data asynchronously in the background for each file being iterated on. 
In MultiGet, it will read the necessary data blocks from those files in parallel as much as possible.

For the current implementation, we only allow enabling the async io in Iterator, because the MultiGet
operation depends on the folly library and C++ 20 which it's NOT expected to introduce in Kvrocks.
---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,15,redis_zset.cc,cc,5,5,10
c41bec89045c0c0c800296c6b1bcec48bf2a4461,52393536+xiaobiaozhao@users.noreply.github.com,2023-01-28 12:18:03+08:00,noreply@github.com,2023-01-28 12:18:03+08:00,"Allow to enable the async_io option to improve the performance (#1215)

Currently, RocksDB supports the async io to mitigate the impact of storage latency
to read asynchronously and in parallel as much as possible to hide IO latency. And it
only takes effect in MultiGet and Iterators:

In Iterators, it will prefetch data asynchronously in the background for each file being iterated on. 
In MultiGet, it will read the necessary data blocks from those files in parallel as much as possible.

For the current implementation, we only allow enabling the async io in Iterator, because the MultiGet
operation depends on the folly library and C++ 20 which it's NOT expected to introduce in Kvrocks.
---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,15,parser.cc,cc,1,1,2
e5c92a61179e6d3f4e5f80ee18842b873e37ffcd,twice.mliu@gmail.com,2023-01-30 21:23:33+08:00,noreply@github.com,2023-01-30 21:23:33+08:00,"Disable the rebase-merge button (#1238)

we disable the rebase-merge button, and just leave the squash-merge button to ensure that one commit (in the unstable branch) corresponds to one PR, so that the cherry-pick procedure can be more simple during releasing new versions.",unstable,True,False,1,.asf.yaml,yaml,1,1,2
2ef9523e989e94b36c444e6aeb28cb4f7fc86394,hulk.website@gmail.com,2023-01-31 09:56:03+08:00,noreply@github.com,2023-01-31 09:56:03+08:00,Add an option to turn on/off the persist cluster nodes in local file (#1239),unstable,True,False,6,kvrocks.conf,conf,10,0,10
2ef9523e989e94b36c444e6aeb28cb4f7fc86394,hulk.website@gmail.com,2023-01-31 09:56:03+08:00,noreply@github.com,2023-01-31 09:56:03+08:00,Add an option to turn on/off the persist cluster nodes in local file (#1239),unstable,True,False,6,redis_cmd.cc,cc,1,1,2
2ef9523e989e94b36c444e6aeb28cb4f7fc86394,hulk.website@gmail.com,2023-01-31 09:56:03+08:00,noreply@github.com,2023-01-31 09:56:03+08:00,Add an option to turn on/off the persist cluster nodes in local file (#1239),unstable,True,False,6,config.cc,cc,12,0,12
2ef9523e989e94b36c444e6aeb28cb4f7fc86394,hulk.website@gmail.com,2023-01-31 09:56:03+08:00,noreply@github.com,2023-01-31 09:56:03+08:00,Add an option to turn on/off the persist cluster nodes in local file (#1239),unstable,True,False,6,config.h,h,1,0,1
2ef9523e989e94b36c444e6aeb28cb4f7fc86394,hulk.website@gmail.com,2023-01-31 09:56:03+08:00,noreply@github.com,2023-01-31 09:56:03+08:00,Add an option to turn on/off the persist cluster nodes in local file (#1239),unstable,True,False,6,server.cc,cc,1,1,2
2ef9523e989e94b36c444e6aeb28cb4f7fc86394,hulk.website@gmail.com,2023-01-31 09:56:03+08:00,noreply@github.com,2023-01-31 09:56:03+08:00,Add an option to turn on/off the persist cluster nodes in local file (#1239),unstable,True,False,6,cluster_test.go,go,15,1,16
e3465f8255111e27469ab339fdbca97ae54c4f04,twice.mliu@gmail.com,2023-02-01 09:38:10+08:00,noreply@github.com,2023-02-01 09:38:10+08:00,"Add TRYAGAIN prefix to the error message for writing forbidden slot (#1240)

Refer to https://github.com/apache/incubator-kvrocks/issues/1235#issuecomment-1408933860, we add the `TRYAGAIN` prefix to the error message for writing forbidden slot to make it more simple to match and process for users, so users do not need to care about the specific error sentence.",unstable,True,False,1,cluster.cc,cc,1,1,2
676812d360697c8f1848e6df18e2ec2a793833aa,52393536+xiaobiaozhao@users.noreply.github.com,2023-02-02 17:51:49+08:00,noreply@github.com,2023-02-02 17:51:49+08:00,"Enable LuaJIT to improve the performance of scripts (#1241)

* feat: def use luajit

* ci: update ci

* docs: update readme for luajit

* ci: rename with_luajit to without_luajit

* Update README.md

Co-authored-by: Twice <twice@apache.org>

---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,3,kvrocks.yaml,yaml,9,9,18
676812d360697c8f1848e6df18e2ec2a793833aa,52393536+xiaobiaozhao@users.noreply.github.com,2023-02-02 17:51:49+08:00,noreply@github.com,2023-02-02 17:51:49+08:00,"Enable LuaJIT to improve the performance of scripts (#1241)

* feat: def use luajit

* ci: update ci

* docs: update readme for luajit

* ci: rename with_luajit to without_luajit

* Update README.md

Co-authored-by: Twice <twice@apache.org>

---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,3,CMakeLists.txt,txt,2,2,4
676812d360697c8f1848e6df18e2ec2a793833aa,52393536+xiaobiaozhao@users.noreply.github.com,2023-02-02 17:51:49+08:00,noreply@github.com,2023-02-02 17:51:49+08:00,"Enable LuaJIT to improve the performance of scripts (#1241)

* feat: def use luajit

* ci: update ci

* docs: update readme for luajit

* ci: rename with_luajit to without_luajit

* Update README.md

Co-authored-by: Twice <twice@apache.org>

---------

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,3,README.md,md,2,2,4
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cluster.cc,cc,1,1,2
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cluster.h,h,1,1,2
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cmd_bit.cc,cc,229,0,229
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cmd_cluster.cc,cc,261,0,261
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cmd_geo.cc,cc,401,0,401
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cmd_hash.cc,cc,382,0,382
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cmd_key.cc,cc,282,0,282
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cmd_list.cc,cc,576,0,576
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cmd_pubsub.cc,cc,181,0,181
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cmd_replication.cc,cc,337,0,337
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cmd_script.cc,cc,122,0,122
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cmd_server.cc,cc,948,0,948
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cmd_set.cc,cc,379,0,379
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cmd_sortedint.cc,cc,261,0,261
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cmd_stream.cc,cc,972,0,972
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cmd_string.cc,cc,614,0,614
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cmd_txn.cc,cc,85,0,85
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,cmd_zset.cc,cc,761,0,761
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,commander.cc,cc,107,0,107
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,error_constants.h,h,42,0,42
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,scan_base.h,h,135,0,135
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,ttl_util.h,h,62,0,62
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,range_spec.cc,cc,4,3,7
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,range_spec.h,h,1,0,1
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,redis_connection.h,h,1,1,2
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,scripting.cc,cc,1,1,2
db2860d2e217b4dcc774aad590d70570226c1819,twice.mliu@gmail.com,2023-02-05 11:01:42+08:00,noreply@github.com,2023-02-05 11:01:42+08:00,Split redis_cmd.cc to multiple files by category (#1244),unstable,True,False,29,config_test.cc,cc,1,1,2
9ef33b015053b73a69204044f74f770d12c50638,twice.mliu@gmail.com,2023-02-05 23:57:46+08:00,noreply@github.com,2023-02-05 23:57:46+08:00,Remove buf and prealloc field in InternalKey (#1245),unstable,True,False,2,redis_metadata.cc,cc,17,35,52
9ef33b015053b73a69204044f74f770d12c50638,twice.mliu@gmail.com,2023-02-05 23:57:46+08:00,noreply@github.com,2023-02-05 23:57:46+08:00,Remove buf and prealloc field in InternalKey (#1245),unstable,True,False,2,redis_metadata.h,h,1,3,4
fb4aa544255656641ba899bca72a9f8f359b44a2,hulk.website@gmail.com,2023-02-06 12:09:30+08:00,noreply@github.com,2023-02-06 12:09:30+08:00,"Automatically build and push the docker image when tagging a new version (#1247)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,1,release.yaml,yaml,58,0,58
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,event_util.h,h,1,1,2
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,rw_lock.h,h,6,0,6
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,scope_exit.h,h,2,0,2
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,redis_connection.cc,cc,1,2,3
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,redis_connection.h,h,4,1,5
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,redis_reply.h,h,1,1,2
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,redis_request.h,h,2,0,2
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,server.h,h,5,2,7
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,worker.cc,cc,3,3,6
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,worker.h,h,4,0,4
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,compact_filter.cc,cc,1,1,2
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,compact_filter.h,h,2,2,4
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,compaction_checker.h,h,1,1,2
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,lock_manager.cc,cc,1,2,3
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,lock_manager.h,h,9,0,9
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,redis_db.cc,cc,3,4,7
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,redis_db.h,h,5,2,7
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,table_properties_collector.h,h,4,4,8
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,geohash.h,h,1,1,2
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,parser.h,h,4,0,4
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,redis_writer.h,h,4,0,4
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,sync.h,h,4,0,4
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,writer.cc,cc,2,2,4
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,writer.h,h,4,0,4
c55934ac85c0de3be34ec9563b8a5c4036a011a7,twice.mliu@gmail.com,2023-02-07 14:38:10+08:00,noreply@github.com,2023-02-07 14:38:10+08:00,"Add header filter for clang-tidy checks (#1249)

Currently check-tidy reports from header files are ignored, which prevent us from evaluating the code quality of headers and forbidding error-prone code patterns.

In this PR, we make clang-tidy check all header files of kvrocks (except third-party headers), and fix all current reports in headers.",unstable,True,False,25,x.py,py,13,9,22
e0107d00ffce8a978e5e48d0954573b29ed85d2f,hulk.website@gmail.com,2023-02-08 10:02:42+08:00,noreply@github.com,2023-02-08 10:02:42+08:00,Automatically set the env MACOSX_DEPLOYMENT_TARGET to the current macOS version unless the env is already set (#1250),unstable,True,False,1,luajit.cmake,cmake,24,9,33
2c15fa40361a79d4ae12a5c51d97958ad84db673,torwigua@gmail.com,2023-02-08 15:58:09+02:00,noreply@github.com,2023-02-08 15:58:09+02:00,"Add optional args to XLEN to specify start ID and direction (#1251)

* Add an optional args to XLEN command to specify starting ID and direction

Syntax: `XLEN stream_name [entry_id] [direction]`.
Where direction can be '-' or '+' (special IDs mean respectively the first and the last elements in the stream). Default value: '+'.
If an optional entry ID is specified, the XLEN command returns the number of entries between that ID and the first/last element of the stream.
The element with the specified ID is not considered - it serves as an exclusive boundary.
If the stream doesn't contain an entry with the specified ID, the command starts counting from the closest entry to the first/last element in the stream.
If the specified ID is equal to or greater than the last entry ID and:
a) direction is '+' - the command returns 0
b) direction is '-' - the command returns stream's size
If the specified ID is equal to or less than the first entry ID and:
a) direction is '-' the command returns 0
b) direction is '+' the command returns stream's size
This feature is helpful in finding:
a) how many entries in the stream were processed so far
a) how many unprocessed (ahead of the current one) entries are in the stream
Complexity: O(n)

* Remove unused variable",unstable,True,False,6,cmd_stream.cc,cc,26,2,28
2c15fa40361a79d4ae12a5c51d97958ad84db673,torwigua@gmail.com,2023-02-08 15:58:09+02:00,noreply@github.com,2023-02-08 15:58:09+02:00,"Add optional args to XLEN to specify start ID and direction (#1251)

* Add an optional args to XLEN command to specify starting ID and direction

Syntax: `XLEN stream_name [entry_id] [direction]`.
Where direction can be '-' or '+' (special IDs mean respectively the first and the last elements in the stream). Default value: '+'.
If an optional entry ID is specified, the XLEN command returns the number of entries between that ID and the first/last element of the stream.
The element with the specified ID is not considered - it serves as an exclusive boundary.
If the stream doesn't contain an entry with the specified ID, the command starts counting from the closest entry to the first/last element in the stream.
If the specified ID is equal to or greater than the last entry ID and:
a) direction is '+' - the command returns 0
b) direction is '-' - the command returns stream's size
If the specified ID is equal to or less than the first entry ID and:
a) direction is '-' the command returns 0
b) direction is '+' the command returns stream's size
This feature is helpful in finding:
a) how many entries in the stream were processed so far
a) how many unprocessed (ahead of the current one) entries are in the stream
Complexity: O(n)

* Remove unused variable",unstable,True,False,6,redis_stream.cc,cc,61,2,63
2c15fa40361a79d4ae12a5c51d97958ad84db673,torwigua@gmail.com,2023-02-08 15:58:09+02:00,noreply@github.com,2023-02-08 15:58:09+02:00,"Add optional args to XLEN to specify start ID and direction (#1251)

* Add an optional args to XLEN command to specify starting ID and direction

Syntax: `XLEN stream_name [entry_id] [direction]`.
Where direction can be '-' or '+' (special IDs mean respectively the first and the last elements in the stream). Default value: '+'.
If an optional entry ID is specified, the XLEN command returns the number of entries between that ID and the first/last element of the stream.
The element with the specified ID is not considered - it serves as an exclusive boundary.
If the stream doesn't contain an entry with the specified ID, the command starts counting from the closest entry to the first/last element in the stream.
If the specified ID is equal to or greater than the last entry ID and:
a) direction is '+' - the command returns 0
b) direction is '-' - the command returns stream's size
If the specified ID is equal to or less than the first entry ID and:
a) direction is '-' the command returns 0
b) direction is '+' the command returns stream's size
This feature is helpful in finding:
a) how many entries in the stream were processed so far
a) how many unprocessed (ahead of the current one) entries are in the stream
Complexity: O(n)

* Remove unused variable",unstable,True,False,6,redis_stream.h,h,1,1,2
2c15fa40361a79d4ae12a5c51d97958ad84db673,torwigua@gmail.com,2023-02-08 15:58:09+02:00,noreply@github.com,2023-02-08 15:58:09+02:00,"Add optional args to XLEN to specify start ID and direction (#1251)

* Add an optional args to XLEN command to specify starting ID and direction

Syntax: `XLEN stream_name [entry_id] [direction]`.
Where direction can be '-' or '+' (special IDs mean respectively the first and the last elements in the stream). Default value: '+'.
If an optional entry ID is specified, the XLEN command returns the number of entries between that ID and the first/last element of the stream.
The element with the specified ID is not considered - it serves as an exclusive boundary.
If the stream doesn't contain an entry with the specified ID, the command starts counting from the closest entry to the first/last element in the stream.
If the specified ID is equal to or greater than the last entry ID and:
a) direction is '+' - the command returns 0
b) direction is '-' - the command returns stream's size
If the specified ID is equal to or less than the first entry ID and:
a) direction is '-' the command returns 0
b) direction is '+' the command returns stream's size
This feature is helpful in finding:
a) how many entries in the stream were processed so far
a) how many unprocessed (ahead of the current one) entries are in the stream
Complexity: O(n)

* Remove unused variable",unstable,True,False,6,redis_stream_base.h,h,6,0,6
2c15fa40361a79d4ae12a5c51d97958ad84db673,torwigua@gmail.com,2023-02-08 15:58:09+02:00,noreply@github.com,2023-02-08 15:58:09+02:00,"Add optional args to XLEN to specify start ID and direction (#1251)

* Add an optional args to XLEN command to specify starting ID and direction

Syntax: `XLEN stream_name [entry_id] [direction]`.
Where direction can be '-' or '+' (special IDs mean respectively the first and the last elements in the stream). Default value: '+'.
If an optional entry ID is specified, the XLEN command returns the number of entries between that ID and the first/last element of the stream.
The element with the specified ID is not considered - it serves as an exclusive boundary.
If the stream doesn't contain an entry with the specified ID, the command starts counting from the closest entry to the first/last element in the stream.
If the specified ID is equal to or greater than the last entry ID and:
a) direction is '+' - the command returns 0
b) direction is '-' - the command returns stream's size
If the specified ID is equal to or less than the first entry ID and:
a) direction is '-' the command returns 0
b) direction is '+' the command returns stream's size
This feature is helpful in finding:
a) how many entries in the stream were processed so far
a) how many unprocessed (ahead of the current one) entries are in the stream
Complexity: O(n)

* Remove unused variable",unstable,True,False,6,t_stream_test.cc,cc,183,5,188
2c15fa40361a79d4ae12a5c51d97958ad84db673,torwigua@gmail.com,2023-02-08 15:58:09+02:00,noreply@github.com,2023-02-08 15:58:09+02:00,"Add optional args to XLEN to specify start ID and direction (#1251)

* Add an optional args to XLEN command to specify starting ID and direction

Syntax: `XLEN stream_name [entry_id] [direction]`.
Where direction can be '-' or '+' (special IDs mean respectively the first and the last elements in the stream). Default value: '+'.
If an optional entry ID is specified, the XLEN command returns the number of entries between that ID and the first/last element of the stream.
The element with the specified ID is not considered - it serves as an exclusive boundary.
If the stream doesn't contain an entry with the specified ID, the command starts counting from the closest entry to the first/last element in the stream.
If the specified ID is equal to or greater than the last entry ID and:
a) direction is '+' - the command returns 0
b) direction is '-' - the command returns stream's size
If the specified ID is equal to or less than the first entry ID and:
a) direction is '-' the command returns 0
b) direction is '+' the command returns stream's size
This feature is helpful in finding:
a) how many entries in the stream were processed so far
a) how many unprocessed (ahead of the current one) entries are in the stream
Complexity: O(n)

* Remove unused variable",unstable,True,False,6,stream_test.go,go,107,1,108
8cb9cfadfaf9e1dc77e7df1f0dab716872a1ee17,twice.mliu@gmail.com,2023-02-08 23:28:56+08:00,noreply@github.com,2023-02-08 23:28:56+08:00,Show version and commit hash in a more pretty way (#1252),unstable,True,False,4,CMakeLists.txt,txt,3,0,3
8cb9cfadfaf9e1dc77e7df1f0dab716872a1ee17,twice.mliu@gmail.com,2023-02-08 23:28:56+08:00,noreply@github.com,2023-02-08 23:28:56+08:00,Show version and commit hash in a more pretty way (#1252),unstable,True,False,4,VERSION.txt,txt,1,1,2
8cb9cfadfaf9e1dc77e7df1f0dab716872a1ee17,twice.mliu@gmail.com,2023-02-08 23:28:56+08:00,noreply@github.com,2023-02-08 23:28:56+08:00,Show version and commit hash in a more pretty way (#1252),unstable,True,False,4,main.cc,cc,19,6,25
8cb9cfadfaf9e1dc77e7df1f0dab716872a1ee17,twice.mliu@gmail.com,2023-02-08 23:28:56+08:00,noreply@github.com,2023-02-08 23:28:56+08:00,Show version and commit hash in a more pretty way (#1252),unstable,True,False,4,version.h.in,in,4,2,6
0b00d923f9b562369d0c0f0914166d209cddc9f1,twice.mliu@gmail.com,2023-02-09 13:37:50+08:00,noreply@github.com,2023-02-09 13:37:50+08:00,Add more version detail in server info (#1253),unstable,True,False,1,server.cc,cc,6,2,8
bbccf27e22b865531a0d24fc2dfee9a9fc98079f,aleks.raiden@gmail.com,2023-02-10 15:22:09+02:00,noreply@github.com,2023-02-10 21:22:09+08:00,Bump zstd to version 1.5.4 (#1255),unstable,True,False,1,zstd.cmake,cmake,2,2,4
3f3bd5a083c7281afef77da356cd7476fa069cc3,wander4096@gmail.com,2023-02-14 12:30:18+08:00,noreply@github.com,2023-02-14 12:30:18+08:00,"fix: license headers in third-party code (#1259)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,8,licenserc.yml,yml,5,0,5
3f3bd5a083c7281afef77da356cd7476fa069cc3,wander4096@gmail.com,2023-02-14 12:30:18+08:00,noreply@github.com,2023-02-14 12:30:18+08:00,"fix: license headers in third-party code (#1259)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,8,rand.cc,cc,5,0,5
3f3bd5a083c7281afef77da356cd7476fa069cc3,wander4096@gmail.com,2023-02-14 12:30:18+08:00,noreply@github.com,2023-02-14 12:30:18+08:00,"fix: license headers in third-party code (#1259)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,8,rand.h,h,5,0,5
3f3bd5a083c7281afef77da356cd7476fa069cc3,wander4096@gmail.com,2023-02-14 12:30:18+08:00,noreply@github.com,2023-02-14 12:30:18+08:00,"fix: license headers in third-party code (#1259)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,8,sha1.cc,cc,0,22,22
3f3bd5a083c7281afef77da356cd7476fa069cc3,wander4096@gmail.com,2023-02-14 12:30:18+08:00,noreply@github.com,2023-02-14 12:30:18+08:00,"fix: license headers in third-party code (#1259)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,8,sha1.h,h,0,20,20
3f3bd5a083c7281afef77da356cd7476fa069cc3,wander4096@gmail.com,2023-02-14 12:30:18+08:00,noreply@github.com,2023-02-14 12:30:18+08:00,"fix: license headers in third-party code (#1259)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,8,scripting.cc,cc,0,29,29
3f3bd5a083c7281afef77da356cd7476fa069cc3,wander4096@gmail.com,2023-02-14 12:30:18+08:00,noreply@github.com,2023-02-14 12:30:18+08:00,"fix: license headers in third-party code (#1259)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,8,geohash.cc,cc,0,20,20
3f3bd5a083c7281afef77da356cd7476fa069cc3,wander4096@gmail.com,2023-02-14 12:30:18+08:00,noreply@github.com,2023-02-14 12:30:18+08:00,"fix: license headers in third-party code (#1259)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,8,geohash.h,h,0,20,20
e1cc7f68aeb6b649286157b5676631f41936bf27,wander4096@gmail.com,2023-02-14 20:32:07+08:00,noreply@github.com,2023-02-14 20:32:07+08:00,"build: Drop travis workflow (#1258)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,kvrocks.yaml,yaml,16,3,19
e1cc7f68aeb6b649286157b5676631f41936bf27,wander4096@gmail.com,2023-02-14 20:32:07+08:00,noreply@github.com,2023-02-14 20:32:07+08:00,"build: Drop travis workflow (#1258)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,3,nightly.yaml,yaml,66,0,66
c382232d6d4ce62959ceb87030eaa15e5ad6f420,hulk.website@gmail.com,2023-02-18 23:39:30+08:00,noreply@github.com,2023-02-18 23:39:30+08:00,"Move the kvrocks.conf into volume in Dockerfile (#1264)

We now store namespaces in kvrocks.conf, but it's NOT in the volume path in Docker and it will be lost after restarting.",unstable,True,False,1,Dockerfile,None,2,3,5
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,kvrocks.yaml,yaml,21,32,53
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,libevent.cmake,cmake,2,0,2
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,cluster.cc,cc,1,1,2
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,replication.cc,cc,20,17,37
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,replication.h,h,12,8,20
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,slot_migrate.cc,cc,2,0,2
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,slot_migrate.h,h,1,1,2
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,cmd_replication.cc,cc,11,6,17
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,main.cc,cc,0,3,3
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,redis_connection.cc,cc,7,4,11
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,redis_connection.h,h,5,5,10
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,server.cc,cc,32,19,51
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,server.h,h,3,3,6
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,worker.cc,cc,6,9,15
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,disk_stats.cc,cc,2,1,3
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,stats.cc,cc,3,2,5
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,disk_test.cc,cc,12,18,30
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,test_base.h,h,3,0,3
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,cli_test.go,go,2,1,3
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,bitmap_test.go,go,2,0,2
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,stream_test.go,go,2,1,3
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,strings_test.go,go,2,0,2
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,lsan-suppressions,None,26,0,26
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,tsan-suppressions,None,10,0,10
62d911318247b5e2ebec894bf1116b7b3e51f61d,twice.mliu@gmail.com,2023-02-19 14:50:02+08:00,noreply@github.com,2023-02-19 14:50:02+08:00,"Use append action instead of nargs for cmake defs in x.py (#1256)

Currently, we use `nargs=*` for parsing `-D` arguments, e.g. `-D X=1 Y=2` -> `[""X=1"", ""Y=2""]`, `-D X=1 -D Y=2` -> `[""Y=2""]`.
We need to change it to `action=append` to align the behavior with CMake, e.g. `-D X=1 -D Y=2` -> `[""X=1"", ""Y=2""]`.",unstable,True,False,25,x.py,py,2,2,4
a08a0ff23230dcd82d6d57639456b8c7cfa93a75,twice.mliu@gmail.com,2023-02-20 20:31:55+08:00,noreply@github.com,2023-02-20 20:31:55+08:00,Remove some new-delete patterns and refine LockManager hash function (#1268),unstable,True,False,8,redis_connection.cc,cc,2,2,4
a08a0ff23230dcd82d6d57639456b8c7cfa93a75,twice.mliu@gmail.com,2023-02-20 20:31:55+08:00,noreply@github.com,2023-02-20 20:31:55+08:00,Remove some new-delete patterns and refine LockManager hash function (#1268),unstable,True,False,8,server.cc,cc,14,18,32
a08a0ff23230dcd82d6d57639456b8c7cfa93a75,twice.mliu@gmail.com,2023-02-20 20:31:55+08:00,noreply@github.com,2023-02-20 20:31:55+08:00,Remove some new-delete patterns and refine LockManager hash function (#1268),unstable,True,False,8,server.h,h,1,1,2
a08a0ff23230dcd82d6d57639456b8c7cfa93a75,twice.mliu@gmail.com,2023-02-20 20:31:55+08:00,noreply@github.com,2023-02-20 20:31:55+08:00,Remove some new-delete patterns and refine LockManager hash function (#1268),unstable,True,False,8,log_collector.cc,cc,3,7,10
a08a0ff23230dcd82d6d57639456b8c7cfa93a75,twice.mliu@gmail.com,2023-02-20 20:31:55+08:00,noreply@github.com,2023-02-20 20:31:55+08:00,Remove some new-delete patterns and refine LockManager hash function (#1268),unstable,True,False,8,log_collector.h,h,4,3,7
a08a0ff23230dcd82d6d57639456b8c7cfa93a75,twice.mliu@gmail.com,2023-02-20 20:31:55+08:00,noreply@github.com,2023-02-20 20:31:55+08:00,Remove some new-delete patterns and refine LockManager hash function (#1268),unstable,True,False,8,lock_manager.cc,cc,6,10,16
a08a0ff23230dcd82d6d57639456b8c7cfa93a75,twice.mliu@gmail.com,2023-02-20 20:31:55+08:00,noreply@github.com,2023-02-20 20:31:55+08:00,Remove some new-delete patterns and refine LockManager hash function (#1268),unstable,True,False,8,lock_manager.h,h,2,2,4
a08a0ff23230dcd82d6d57639456b8c7cfa93a75,twice.mliu@gmail.com,2023-02-20 20:31:55+08:00,noreply@github.com,2023-02-20 20:31:55+08:00,Remove some new-delete patterns and refine LockManager hash function (#1268),unstable,True,False,8,log_collector_test.cc,cc,4,4,8
6a9a88c666cdada5c8ba6b4921385a63ad584ee5,hulk.website@gmail.com,2023-02-20 23:54:20+08:00,noreply@github.com,2023-02-20 23:54:20+08:00,"Fix inconsistent response format with Redis (#1269)

- For the type command, should return the simple string instead of the bulk string
- For the scan command, should return the empty string key instead of the nil string",unstable,True,False,5,cmd_key.cc,cc,1,1,2
6a9a88c666cdada5c8ba6b4921385a63ad584ee5,hulk.website@gmail.com,2023-02-20 23:54:20+08:00,noreply@github.com,2023-02-20 23:54:20+08:00,"Fix inconsistent response format with Redis (#1269)

- For the type command, should return the simple string instead of the bulk string
- For the scan command, should return the empty string key instead of the nil string",unstable,True,False,5,cmd_server.cc,cc,1,1,2
6a9a88c666cdada5c8ba6b4921385a63ad584ee5,hulk.website@gmail.com,2023-02-20 23:54:20+08:00,noreply@github.com,2023-02-20 23:54:20+08:00,"Fix inconsistent response format with Redis (#1269)

- For the type command, should return the simple string instead of the bulk string
- For the scan command, should return the empty string key instead of the nil string",unstable,True,False,5,scan_base.h,h,1,1,2
6a9a88c666cdada5c8ba6b4921385a63ad584ee5,hulk.website@gmail.com,2023-02-20 23:54:20+08:00,noreply@github.com,2023-02-20 23:54:20+08:00,"Fix inconsistent response format with Redis (#1269)

- For the type command, should return the simple string instead of the bulk string
- For the scan command, should return the empty string key instead of the nil string",unstable,True,False,5,protocol_test.go,go,9,0,9
6a9a88c666cdada5c8ba6b4921385a63ad584ee5,hulk.website@gmail.com,2023-02-20 23:54:20+08:00,noreply@github.com,2023-02-20 23:54:20+08:00,"Fix inconsistent response format with Redis (#1269)

- For the type command, should return the simple string instead of the bulk string
- For the scan command, should return the empty string key instead of the nil string",unstable,True,False,5,scan_test.go,go,20,0,20
da4dcfeca46da43b71f857c07bfed697f361e3f4,hulk.website@gmail.com,2023-02-21 11:20:05+08:00,noreply@github.com,2023-02-21 11:20:05+08:00,"Force disable the IPO option in macOS (#1271)

Enabling the IPO option will make the debug mode deactivated. The object
the file will become LLVM bitcode and cannot be recognized by the
lldb/gdb.",unstable,True,False,1,CMakeLists.txt,txt,1,0,1
69a9bdacb67c26f33fdfb5f18b48fedf42126b86,twice.mliu@gmail.com,2023-02-21 17:11:18+08:00,noreply@github.com,2023-02-21 17:11:18+08:00,Use nproc instead of default for job numbers in docker build to avoid timeout (#1272),unstable,True,False,2,kvrocks.yaml,yaml,4,0,4
69a9bdacb67c26f33fdfb5f18b48fedf42126b86,twice.mliu@gmail.com,2023-02-21 17:11:18+08:00,noreply@github.com,2023-02-21 17:11:18+08:00,Use nproc instead of default for job numbers in docker build to avoid timeout (#1272),unstable,True,False,2,nightly.yaml,yaml,5,0,5
a4e75902b9eba388f8a65d23f1fdf6178ee9adf8,twice.mliu@gmail.com,2023-02-22 15:07:17+08:00,noreply@github.com,2023-02-22 15:07:17+08:00,"Fix license issues in rand.h, rocksdb_crc32c.h and batch_debugger.h (#1274)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,licenserc.yml,yml,3,0,3
a4e75902b9eba388f8a65d23f1fdf6178ee9adf8,twice.mliu@gmail.com,2023-02-22 15:07:17+08:00,noreply@github.com,2023-02-22 15:07:17+08:00,"Fix license issues in rand.h, rocksdb_crc32c.h and batch_debugger.h (#1274)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,NOTICE,None,7,2,9
a4e75902b9eba388f8a65d23f1fdf6178ee9adf8,twice.mliu@gmail.com,2023-02-22 15:07:17+08:00,noreply@github.com,2023-02-22 15:07:17+08:00,"Fix license issues in rand.h, rocksdb_crc32c.h and batch_debugger.h (#1274)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,rand.h,h,5,25,30
a4e75902b9eba388f8a65d23f1fdf6178ee9adf8,twice.mliu@gmail.com,2023-02-22 15:07:17+08:00,noreply@github.com,2023-02-22 15:07:17+08:00,"Fix license issues in rand.h, rocksdb_crc32c.h and batch_debugger.h (#1274)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,rocksdb_crc32c.h,h,0,20,20
a4e75902b9eba388f8a65d23f1fdf6178ee9adf8,twice.mliu@gmail.com,2023-02-22 15:07:17+08:00,noreply@github.com,2023-02-22 15:07:17+08:00,"Fix license issues in rand.h, rocksdb_crc32c.h and batch_debugger.h (#1274)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,batch_debugger.h,h,0,20,20
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,cmd_list.cc,cc,2,2,4
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,cmd_pubsub.cc,cc,4,4,8
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,cmd_server.cc,cc,2,2,4
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,io_util.cc,cc,15,8,23
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,status.h,h,1,1,2
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,string_util.cc,cc,17,8,25
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,task_runner.cc,cc,8,4,12
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,task_runner.h,h,2,0,2
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,redis_connection.cc,cc,46,43,89
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,redis_connection.h,h,10,8,18
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,redis_reply.h,h,2,0,2
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,redis_request.cc,cc,17,6,23
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,server.cc,cc,187,98,285
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,server.h,h,13,14,27
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,worker.cc,cc,85,44,129
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,worker.h,h,1,1,2
3e17a0ec2bfb5ec2d0a8365311aac5a034867866,torwigua@gmail.com,2023-02-27 06:00:39+02:00,noreply@github.com,2023-02-27 12:00:39+08:00,"Minor refactoring of src/common, src/server (#1280)

- fix some typos
- rename a few methods
- move variables closer to the lines where they are used
- use `Util::GetTimeStamp()` instead of the `time()` call
- remove explicit test `!= nullptr`",unstable,True,False,17,table_properties_collector.cc,cc,1,1,2
3cea04515a3d9cf15cd9a968b38cd919f3c5ef8e,470623352@qq.com,2023-02-28 16:25:56+08:00,noreply@github.com,2023-02-28 16:25:56+08:00,"Fix outdated result in type command for expired keys (#1286)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,cmd_key.cc,cc,1,0,1
3cea04515a3d9cf15cd9a968b38cd919f3c5ef8e,470623352@qq.com,2023-02-28 16:25:56+08:00,noreply@github.com,2023-02-28 16:25:56+08:00,"Fix outdated result in type command for expired keys (#1286)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,redis_db.cc,cc,6,1,7
3cea04515a3d9cf15cd9a968b38cd919f3c5ef8e,470623352@qq.com,2023-02-28 16:25:56+08:00,noreply@github.com,2023-02-28 16:25:56+08:00,"Fix outdated result in type command for expired keys (#1286)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,keyspace_test.go,go,10,0,10
f3e391c63cc87c2c188ac704c7527acaa9f4c260,mzygdeaq@qq.com,2023-03-02 12:27:40+08:00,noreply@github.com,2023-03-02 12:27:40+08:00,feat: add explicit fallthrough in the replication state transmission (#1293),unstable,True,False,1,replication.cc,cc,1,0,1
7cd9a3869b5d0a6e3873e077f8dc346c0897eda6,aleks.raiden@gmail.com,2023-03-03 14:40:12+02:00,noreply@github.com,2023-03-03 20:40:12+08:00,Bump rocksdb to 7.10.2 (#1296),unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,slot_import.cc,cc,1,2,3
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,slot_migrate.cc,cc,6,5,11
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,cmd_txn.cc,cc,8,2,10
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,db_util.h,h,5,3,8
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,ptr_util.h,h,51,0,51
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,server.cc,cc,1,1,2
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,disk_stats.cc,cc,2,2,4
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,redis_db.cc,cc,28,29,57
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,redis_db.h,h,5,4,9
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,redis_pubsub.cc,cc,3,3,6
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,storage.cc,cc,88,14,102
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,storage.h,h,26,0,26
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,redis_bitmap.cc,cc,23,23,46
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,redis_bitmap_string.cc,cc,4,4,8
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,redis_hash.cc,cc,32,32,64
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,redis_list.cc,cc,60,60,120
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,redis_set.cc,cc,29,29,58
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,redis_sortedint.cc,cc,18,18,36
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,redis_stream.cc,cc,31,31,62
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,redis_string.cc,cc,20,24,44
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,redis_zset.cc,cc,61,61,122
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,ptr_util_test.cc,cc,45,0,45
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,multi_test.go,go,17,0,17
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,stream_test.go,go,4,4,8
be2a81d536dad02c849a9788a260f18e2c136fa8,hulk.website@gmail.com,2023-03-04 22:19:16+08:00,noreply@github.com,2023-03-04 22:19:16+08:00,"Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction (#1287)

By default, the writes cannot be seen as their own writes if the WriteBatch
wasn't committed in the transaction. To mitigate this issue, RocksDB offers
the WriteBatchWithIndex to make the uncommitted writes can be visited.

For more information can see: https://rocksdb.org/blog/2015/02/27/write-batch-with-index.html

- Add the global transaction batch to group and flush all writes at once

- Use WriteBatchBase to replace the WriteBatch

- Use the RocksDB WriteBatchWithIndex to implement the read-your-own-writes in transaction",unstable,True,False,25,parser.cc,cc,1,2,3
d913b4210b000dc6ed53522c2fb926d4c3a0b38e,denizpiri@hotmail.com,2023-03-06 03:54:42+01:00,noreply@github.com,2023-03-06 10:54:42+08:00,"Fix for execution timing of commands from lua (#1297)

Before this, the timing of the commands executed by lua scripts wasn't accounted for correctly. This should resolve that issue.",unstable,True,False,1,scripting.cc,cc,1,1,2
49c118ebae3969b8386361290aa522cc2e18bfe9,twice.mliu@gmail.com,2023-03-07 11:29:16+08:00,noreply@github.com,2023-03-07 11:29:16+08:00,Add move assign and reset for ObserverOrUnique (#1299),unstable,True,False,3,ptr_util.h,h,17,1,18
49c118ebae3969b8386361290aa522cc2e18bfe9,twice.mliu@gmail.com,2023-03-07 11:29:16+08:00,noreply@github.com,2023-03-07 11:29:16+08:00,Add move assign and reset for ObserverOrUnique (#1299),unstable,True,False,3,redis_db.cc,cc,4,5,9
49c118ebae3969b8386361290aa522cc2e18bfe9,twice.mliu@gmail.com,2023-03-07 11:29:16+08:00,noreply@github.com,2023-03-07 11:29:16+08:00,Add move assign and reset for ObserverOrUnique (#1299),unstable,True,False,3,ptr_util_test.cc,cc,12,5,17
dfe5733d37d6e640333b7e933c339daec1318381,twice.mliu@gmail.com,2023-03-07 23:06:19+08:00,noreply@github.com,2023-03-07 23:06:19+08:00,Support watch/unwatch commands (#1279),unstable,True,False,12,cmd_list.cc,cc,2,1,3
dfe5733d37d6e640333b7e933c339daec1318381,twice.mliu@gmail.com,2023-03-07 23:06:19+08:00,noreply@github.com,2023-03-07 23:06:19+08:00,Support watch/unwatch commands (#1279),unstable,True,False,12,cmd_script.cc,cc,13,4,17
dfe5733d37d6e640333b7e933c339daec1318381,twice.mliu@gmail.com,2023-03-07 23:06:19+08:00,noreply@github.com,2023-03-07 23:06:19+08:00,Support watch/unwatch commands (#1279),unstable,True,False,12,cmd_stream.cc,cc,1,1,2
dfe5733d37d6e640333b7e933c339daec1318381,twice.mliu@gmail.com,2023-03-07 23:06:19+08:00,noreply@github.com,2023-03-07 23:06:19+08:00,Support watch/unwatch commands (#1279),unstable,True,False,12,cmd_txn.cc,cc,39,3,42
dfe5733d37d6e640333b7e933c339daec1318381,twice.mliu@gmail.com,2023-03-07 23:06:19+08:00,noreply@github.com,2023-03-07 23:06:19+08:00,Support watch/unwatch commands (#1279),unstable,True,False,12,commander.cc,cc,10,6,16
dfe5733d37d6e640333b7e933c339daec1318381,twice.mliu@gmail.com,2023-03-07 23:06:19+08:00,noreply@github.com,2023-03-07 23:06:19+08:00,Support watch/unwatch commands (#1279),unstable,True,False,12,commander.h,h,102,29,131
dfe5733d37d6e640333b7e933c339daec1318381,twice.mliu@gmail.com,2023-03-07 23:06:19+08:00,noreply@github.com,2023-03-07 23:06:19+08:00,Support watch/unwatch commands (#1279),unstable,True,False,12,redis_connection.cc,cc,4,1,5
dfe5733d37d6e640333b7e933c339daec1318381,twice.mliu@gmail.com,2023-03-07 23:06:19+08:00,noreply@github.com,2023-03-07 23:06:19+08:00,Support watch/unwatch commands (#1279),unstable,True,False,12,redis_connection.h,h,4,0,4
dfe5733d37d6e640333b7e933c339daec1318381,twice.mliu@gmail.com,2023-03-07 23:06:19+08:00,noreply@github.com,2023-03-07 23:06:19+08:00,Support watch/unwatch commands (#1279),unstable,True,False,12,server.cc,cc,92,1,93
dfe5733d37d6e640333b7e933c339daec1318381,twice.mliu@gmail.com,2023-03-07 23:06:19+08:00,noreply@github.com,2023-03-07 23:06:19+08:00,Support watch/unwatch commands (#1279),unstable,True,False,12,server.h,h,16,1,17
dfe5733d37d6e640333b7e933c339daec1318381,twice.mliu@gmail.com,2023-03-07 23:06:19+08:00,noreply@github.com,2023-03-07 23:06:19+08:00,Support watch/unwatch commands (#1279),unstable,True,False,12,worker.cc,cc,3,3,6
dfe5733d37d6e640333b7e933c339daec1318381,twice.mliu@gmail.com,2023-03-07 23:06:19+08:00,noreply@github.com,2023-03-07 23:06:19+08:00,Support watch/unwatch commands (#1279),unstable,True,False,12,multi_test.go,go,120,0,120
d48edac7100bdc94e247b0aa8279335d39c80032,twice.mliu@gmail.com,2023-03-09 14:24:25+08:00,noreply@github.com,2023-03-09 14:24:25+08:00,Add CreateThread to avoid manual try-catch (#1302),unstable,True,False,8,replication.cc,cc,32,31,63
d48edac7100bdc94e247b0aa8279335d39c80032,twice.mliu@gmail.com,2023-03-09 14:24:25+08:00,noreply@github.com,2023-03-09 14:24:25+08:00,Add CreateThread to avoid manual try-catch (#1302),unstable,True,False,8,slot_migrate.cc,cc,7,10,17
d48edac7100bdc94e247b0aa8279335d39c80032,twice.mliu@gmail.com,2023-03-09 14:24:25+08:00,noreply@github.com,2023-03-09 14:24:25+08:00,Add CreateThread to avoid manual try-catch (#1302),unstable,True,False,8,cmd_replication.cc,cc,12,8,20
d48edac7100bdc94e247b0aa8279335d39c80032,twice.mliu@gmail.com,2023-03-09 14:24:25+08:00,noreply@github.com,2023-03-09 14:24:25+08:00,Add CreateThread to avoid manual try-catch (#1302),unstable,True,False,8,task_runner.cc,cc,4,2,6
d48edac7100bdc94e247b0aa8279335d39c80032,twice.mliu@gmail.com,2023-03-09 14:24:25+08:00,noreply@github.com,2023-03-09 14:24:25+08:00,Add CreateThread to avoid manual try-catch (#1302),unstable,True,False,8,thread_util.cc,cc,16,0,16
d48edac7100bdc94e247b0aa8279335d39c80032,twice.mliu@gmail.com,2023-03-09 14:24:25+08:00,noreply@github.com,2023-03-09 14:24:25+08:00,Add CreateThread to avoid manual try-catch (#1302),unstable,True,False,8,thread_util.h,h,21,0,21
d48edac7100bdc94e247b0aa8279335d39c80032,twice.mliu@gmail.com,2023-03-09 14:24:25+08:00,noreply@github.com,2023-03-09 14:24:25+08:00,Add CreateThread to avoid manual try-catch (#1302),unstable,True,False,8,server.cc,cc,9,9,18
d48edac7100bdc94e247b0aa8279335d39c80032,twice.mliu@gmail.com,2023-03-09 14:24:25+08:00,noreply@github.com,2023-03-09 14:24:25+08:00,Add CreateThread to avoid manual try-catch (#1302),unstable,True,False,8,worker.cc,cc,10,8,18
80260d7ac8a1d7834f72e9faf0fed1cda0e00b7b,31911894+paragor@users.noreply.github.com,2023-03-09 20:59:57+07:00,noreply@github.com,2023-03-09 21:59:57+08:00,Support replica-announce-ip and replica-announce-port (#1303),unstable,True,False,11,kvrocks.conf,conf,29,0,29
80260d7ac8a1d7834f72e9faf0fed1cda0e00b7b,31911894+paragor@users.noreply.github.com,2023-03-09 20:59:57+07:00,noreply@github.com,2023-03-09 21:59:57+08:00,Support replica-announce-ip and replica-announce-port (#1303),unstable,True,False,11,replication.cc,cc,20,2,22
80260d7ac8a1d7834f72e9faf0fed1cda0e00b7b,31911894+paragor@users.noreply.github.com,2023-03-09 20:59:57+07:00,noreply@github.com,2023-03-09 21:59:57+08:00,Support replica-announce-ip and replica-announce-port (#1303),unstable,True,False,11,replication.h,h,2,0,2
80260d7ac8a1d7834f72e9faf0fed1cda0e00b7b,31911894+paragor@users.noreply.github.com,2023-03-09 20:59:57+07:00,noreply@github.com,2023-03-09 21:59:57+08:00,Support replica-announce-ip and replica-announce-port (#1303),unstable,True,False,11,cmd_replication.cc,cc,15,13,28
80260d7ac8a1d7834f72e9faf0fed1cda0e00b7b,31911894+paragor@users.noreply.github.com,2023-03-09 20:59:57+07:00,noreply@github.com,2023-03-09 21:59:57+08:00,Support replica-announce-ip and replica-announce-port (#1303),unstable,True,False,11,error_constants.h,h,1,0,1
80260d7ac8a1d7834f72e9faf0fed1cda0e00b7b,31911894+paragor@users.noreply.github.com,2023-03-09 20:59:57+07:00,noreply@github.com,2023-03-09 21:59:57+08:00,Support replica-announce-ip and replica-announce-port (#1303),unstable,True,False,11,config.cc,cc,2,0,2
80260d7ac8a1d7834f72e9faf0fed1cda0e00b7b,31911894+paragor@users.noreply.github.com,2023-03-09 20:59:57+07:00,noreply@github.com,2023-03-09 21:59:57+08:00,Support replica-announce-ip and replica-announce-port (#1303),unstable,True,False,11,config.h,h,2,0,2
80260d7ac8a1d7834f72e9faf0fed1cda0e00b7b,31911894+paragor@users.noreply.github.com,2023-03-09 20:59:57+07:00,noreply@github.com,2023-03-09 21:59:57+08:00,Support replica-announce-ip and replica-announce-port (#1303),unstable,True,False,11,redis_connection.h,h,4,0,4
80260d7ac8a1d7834f72e9faf0fed1cda0e00b7b,31911894+paragor@users.noreply.github.com,2023-03-09 20:59:57+07:00,noreply@github.com,2023-03-09 21:59:57+08:00,Support replica-announce-ip and replica-announce-port (#1303),unstable,True,False,11,server.cc,cc,4,3,7
80260d7ac8a1d7834f72e9faf0fed1cda0e00b7b,31911894+paragor@users.noreply.github.com,2023-03-09 20:59:57+07:00,noreply@github.com,2023-03-09 21:59:57+08:00,Support replica-announce-ip and replica-announce-port (#1303),unstable,True,False,11,worker.cc,cc,2,1,3
80260d7ac8a1d7834f72e9faf0fed1cda0e00b7b,31911894+paragor@users.noreply.github.com,2023-03-09 20:59:57+07:00,noreply@github.com,2023-03-09 21:59:57+08:00,Support replica-announce-ip and replica-announce-port (#1303),unstable,True,False,11,replication_test.go,go,45,0,45
c0ba641778bac47dad9acb48c880473f4aed7aaf,torwigua@gmail.com,2023-03-10 04:55:07+02:00,noreply@github.com,2023-03-10 10:55:07+08:00,Allow HSETNX to receive multiple field-value pairs like HSET (#1310),unstable,True,False,5,cmd_hash.cc,cc,22,8,30
c0ba641778bac47dad9acb48c880473f4aed7aaf,torwigua@gmail.com,2023-03-10 04:55:07+02:00,noreply@github.com,2023-03-10 10:55:07+08:00,Allow HSETNX to receive multiple field-value pairs like HSET (#1310),unstable,True,False,5,redis_hash.cc,cc,21,21,42
c0ba641778bac47dad9acb48c880473f4aed7aaf,torwigua@gmail.com,2023-03-10 04:55:07+02:00,noreply@github.com,2023-03-10 10:55:07+08:00,Allow HSETNX to receive multiple field-value pairs like HSET (#1310),unstable,True,False,5,redis_hash.h,h,5,1,6
c0ba641778bac47dad9acb48c880473f4aed7aaf,torwigua@gmail.com,2023-03-10 04:55:07+02:00,noreply@github.com,2023-03-10 10:55:07+08:00,Allow HSETNX to receive multiple field-value pairs like HSET (#1310),unstable,True,False,5,t_hash_test.cc,cc,67,27,94
c0ba641778bac47dad9acb48c880473f4aed7aaf,torwigua@gmail.com,2023-03-10 04:55:07+02:00,noreply@github.com,2023-03-10 10:55:07+08:00,Allow HSETNX to receive multiple field-value pairs like HSET (#1310),unstable,True,False,5,hash_test.go,go,62,0,62
1ab1ae804938d933564a9af17114911561539a5f,twice.mliu@gmail.com,2023-03-11 01:35:27+08:00,noreply@github.com,2023-03-11 01:35:27+08:00,Improve code style and do some minor fix in scripting (#1312),unstable,True,False,4,cmd_script.cc,cc,1,1,2
1ab1ae804938d933564a9af17114911561539a5f,twice.mliu@gmail.com,2023-03-11 01:35:27+08:00,noreply@github.com,2023-03-11 01:35:27+08:00,Improve code style and do some minor fix in scripting (#1312),unstable,True,False,4,server.cc,cc,8,3,11
1ab1ae804938d933564a9af17114911561539a5f,twice.mliu@gmail.com,2023-03-11 01:35:27+08:00,noreply@github.com,2023-03-11 01:35:27+08:00,Improve code style and do some minor fix in scripting (#1312),unstable,True,False,4,scripting.cc,cc,63,69,132
1ab1ae804938d933564a9af17114911561539a5f,twice.mliu@gmail.com,2023-03-11 01:35:27+08:00,noreply@github.com,2023-03-11 01:35:27+08:00,Improve code style and do some minor fix in scripting (#1312),unstable,True,False,4,scripting.h,h,10,2,12
ec7ea2edb55cf66407d4cb80397ed6861c1d3479,twice.mliu@gmail.com,2023-03-11 15:15:43+08:00,noreply@github.com,2023-03-11 15:15:43+08:00,Refactor script commands (#1313),unstable,True,False,3,cmd_script.cc,cc,20,28,48
ec7ea2edb55cf66407d4cb80397ed6861c1d3479,twice.mliu@gmail.com,2023-03-11 15:15:43+08:00,noreply@github.com,2023-03-11 15:15:43+08:00,Refactor script commands (#1313),unstable,True,False,3,scripting.cc,cc,50,51,101
ec7ea2edb55cf66407d4cb80397ed6861c1d3479,twice.mliu@gmail.com,2023-03-11 15:15:43+08:00,noreply@github.com,2023-03-11 15:15:43+08:00,Refactor script commands (#1313),unstable,True,False,3,scripting.h,h,3,2,5
a65f6d75001c1ac5d462471d82ce8530639a11aa,twice.mliu@gmail.com,2023-03-12 11:28:08+08:00,noreply@github.com,2023-03-12 11:28:08+08:00,Use std::shared_mutex instead of our own ReadWriteLock implementation (#1314),unstable,True,False,11,cluster.h,h,0,1,1
a65f6d75001c1ac5d462471d82ce8530639a11aa,twice.mliu@gmail.com,2023-03-12 11:28:08+08:00,noreply@github.com,2023-03-12 11:28:08+08:00,Use std::shared_mutex instead of our own ReadWriteLock implementation (#1314),unstable,True,False,11,cron.cc,cc,3,3,6
a65f6d75001c1ac5d462471d82ce8530639a11aa,twice.mliu@gmail.com,2023-03-12 11:28:08+08:00,noreply@github.com,2023-03-12 11:28:08+08:00,Use std::shared_mutex instead of our own ReadWriteLock implementation (#1314),unstable,True,False,11,encoding.cc,cc,3,3,6
a65f6d75001c1ac5d462471d82ce8530639a11aa,twice.mliu@gmail.com,2023-03-12 11:28:08+08:00,noreply@github.com,2023-03-12 11:28:08+08:00,Use std::shared_mutex instead of our own ReadWriteLock implementation (#1314),unstable,True,False,11,task_runner.cc,cc,1,2,3
a65f6d75001c1ac5d462471d82ce8530639a11aa,twice.mliu@gmail.com,2023-03-12 11:28:08+08:00,noreply@github.com,2023-03-12 11:28:08+08:00,Use std::shared_mutex instead of our own ReadWriteLock implementation (#1314),unstable,True,False,11,redis_connection.cc,cc,5,2,7
a65f6d75001c1ac5d462471d82ce8530639a11aa,twice.mliu@gmail.com,2023-03-12 11:28:08+08:00,noreply@github.com,2023-03-12 11:28:08+08:00,Use std::shared_mutex instead of our own ReadWriteLock implementation (#1314),unstable,True,False,11,server.cc,cc,5,4,9
a65f6d75001c1ac5d462471d82ce8530639a11aa,twice.mliu@gmail.com,2023-03-12 11:28:08+08:00,noreply@github.com,2023-03-12 11:28:08+08:00,Use std::shared_mutex instead of our own ReadWriteLock implementation (#1314),unstable,True,False,11,server.h,h,3,4,7
a65f6d75001c1ac5d462471d82ce8530639a11aa,twice.mliu@gmail.com,2023-03-12 11:28:08+08:00,noreply@github.com,2023-03-12 11:28:08+08:00,Use std::shared_mutex instead of our own ReadWriteLock implementation (#1314),unstable,True,False,11,storage.cc,cc,2,4,6
a65f6d75001c1ac5d462471d82ce8530639a11aa,twice.mliu@gmail.com,2023-03-12 11:28:08+08:00,noreply@github.com,2023-03-12 11:28:08+08:00,Use std::shared_mutex instead of our own ReadWriteLock implementation (#1314),unstable,True,False,11,storage.h,h,4,4,8
85bb111d7fd2ac2315046cc8832a3185768b7d4f,torwigua@gmail.com,2023-03-12 07:43:24+02:00,noreply@github.com,2023-03-12 13:43:24+08:00,"Return empty string instead of nil in HGETALL, HVALS, HRANGEBYLEX responses (#1315)

Close #1311",unstable,True,False,2,cmd_hash.cc,cc,3,3,6
85bb111d7fd2ac2315046cc8832a3185768b7d4f,torwigua@gmail.com,2023-03-12 07:43:24+02:00,noreply@github.com,2023-03-12 13:43:24+08:00,"Return empty string instead of nil in HGETALL, HVALS, HRANGEBYLEX responses (#1315)

Close #1311",unstable,True,False,2,hash_test.go,go,27,0,27
0e28da2fbc77eee9f91160ff1fce0fe47feeb7e2,twice.mliu@gmail.com,2023-03-13 12:40:55+08:00,noreply@github.com,2023-03-13 12:40:55+08:00,Use inline specifier to replace extern global constants (#1316),unstable,True,False,7,config.cc,cc,3,4,7
0e28da2fbc77eee9f91160ff1fce0fe47feeb7e2,twice.mliu@gmail.com,2023-03-13 12:40:55+08:00,noreply@github.com,2023-03-13 12:40:55+08:00,Use inline specifier to replace extern global constants (#1316),unstable,True,False,7,config.h,h,1,1,2
0e28da2fbc77eee9f91160ff1fce0fe47feeb7e2,twice.mliu@gmail.com,2023-03-13 12:40:55+08:00,noreply@github.com,2023-03-13 12:40:55+08:00,Use inline specifier to replace extern global constants (#1316),unstable,True,False,7,redis_metadata.cc,cc,1,3,4
0e28da2fbc77eee9f91160ff1fce0fe47feeb7e2,twice.mliu@gmail.com,2023-03-13 12:40:55+08:00,noreply@github.com,2023-03-13 12:40:55+08:00,Use inline specifier to replace extern global constants (#1316),unstable,True,False,7,redis_metadata.h,h,2,2,4
0e28da2fbc77eee9f91160ff1fce0fe47feeb7e2,twice.mliu@gmail.com,2023-03-13 12:40:55+08:00,noreply@github.com,2023-03-13 12:40:55+08:00,Use inline specifier to replace extern global constants (#1316),unstable,True,False,7,storage.cc,cc,1,12,13
0e28da2fbc77eee9f91160ff1fce0fe47feeb7e2,twice.mliu@gmail.com,2023-03-13 12:40:55+08:00,noreply@github.com,2023-03-13 12:40:55+08:00,Use inline specifier to replace extern global constants (#1316),unstable,True,False,7,storage.h,h,8,8,16
0e28da2fbc77eee9f91160ff1fce0fe47feeb7e2,twice.mliu@gmail.com,2023-03-13 12:40:55+08:00,noreply@github.com,2023-03-13 12:40:55+08:00,Use inline specifier to replace extern global constants (#1316),unstable,True,False,7,table_properties_collector.h,h,1,1,2
cb7ae54b6b1b5b5c444e30cae069ceefa90882c0,twice.mliu@gmail.com,2023-03-13 21:56:21+08:00,noreply@github.com,2023-03-13 21:56:21+08:00,Refactor task runner for more robust runtime state (#1318),unstable,True,False,4,task_runner.cc,cc,14,12,26
cb7ae54b6b1b5b5c444e30cae069ceefa90882c0,twice.mliu@gmail.com,2023-03-13 21:56:21+08:00,noreply@github.com,2023-03-13 21:56:21+08:00,Refactor task runner for more robust runtime state (#1318),unstable,True,False,4,task_runner.h,h,4,5,9
cb7ae54b6b1b5b5c444e30cae069ceefa90882c0,twice.mliu@gmail.com,2023-03-13 21:56:21+08:00,noreply@github.com,2023-03-13 21:56:21+08:00,Refactor task runner for more robust runtime state (#1318),unstable,True,False,4,server.cc,cc,12,5,17
cb7ae54b6b1b5b5c444e30cae069ceefa90882c0,twice.mliu@gmail.com,2023-03-13 21:56:21+08:00,noreply@github.com,2023-03-13 21:56:21+08:00,Refactor task runner for more robust runtime state (#1318),unstable,True,False,4,task_runner_test.cc,cc,4,6,10
ac20b2ab0a74e7df5073011bbb252923786a0ca0,torwigua@gmail.com,2023-03-16 05:49:57+02:00,noreply@github.com,2023-03-16 11:49:57+08:00,"Minor refactoring of stc/storage/storage.cc (#1321)

Enhance error messages, tidy the code base, and a few functions are renamed.",unstable,True,False,8,replication.cc,cc,2,2,4
ac20b2ab0a74e7df5073011bbb252923786a0ca0,torwigua@gmail.com,2023-03-16 05:49:57+02:00,noreply@github.com,2023-03-16 11:49:57+08:00,"Minor refactoring of stc/storage/storage.cc (#1321)

Enhance error messages, tidy the code base, and a few functions are renamed.",unstable,True,False,8,cmd_replication.cc,cc,3,3,6
ac20b2ab0a74e7df5073011bbb252923786a0ca0,torwigua@gmail.com,2023-03-16 05:49:57+02:00,noreply@github.com,2023-03-16 11:49:57+08:00,"Minor refactoring of stc/storage/storage.cc (#1321)

Enhance error messages, tidy the code base, and a few functions are renamed.",unstable,True,False,8,config.cc,cc,15,14,29
ac20b2ab0a74e7df5073011bbb252923786a0ca0,torwigua@gmail.com,2023-03-16 05:49:57+02:00,noreply@github.com,2023-03-16 11:49:57+08:00,"Minor refactoring of stc/storage/storage.cc (#1321)

Enhance error messages, tidy the code base, and a few functions are renamed.",unstable,True,False,8,server.cc,cc,5,5,10
ac20b2ab0a74e7df5073011bbb252923786a0ca0,torwigua@gmail.com,2023-03-16 05:49:57+02:00,noreply@github.com,2023-03-16 11:49:57+08:00,"Minor refactoring of stc/storage/storage.cc (#1321)

Enhance error messages, tidy the code base, and a few functions are renamed.",unstable,True,False,8,storage.cc,cc,164,109,273
ac20b2ab0a74e7df5073011bbb252923786a0ca0,torwigua@gmail.com,2023-03-16 05:49:57+02:00,noreply@github.com,2023-03-16 11:49:57+08:00,"Minor refactoring of stc/storage/storage.cc (#1321)

Enhance error messages, tidy the code base, and a few functions are renamed.",unstable,True,False,8,storage.h,h,5,5,10
ac20b2ab0a74e7df5073011bbb252923786a0ca0,torwigua@gmail.com,2023-03-16 05:49:57+02:00,noreply@github.com,2023-03-16 11:49:57+08:00,"Minor refactoring of stc/storage/storage.cc (#1321)

Enhance error messages, tidy the code base, and a few functions are renamed.",unstable,True,False,8,replication_test.go,go,1,1,2
ac20b2ab0a74e7df5073011bbb252923786a0ca0,torwigua@gmail.com,2023-03-16 05:49:57+02:00,noreply@github.com,2023-03-16 11:49:57+08:00,"Minor refactoring of stc/storage/storage.cc (#1321)

Enhance error messages, tidy the code base, and a few functions are renamed.",unstable,True,False,8,sync.cc,cc,1,1,2
c5e4fe2bd7a3a2a5ecf9de68270c79b6f0eaac7d,twice.mliu@gmail.com,2023-03-16 15:48:23+08:00,noreply@github.com,2023-03-16 15:48:23+08:00,Replace list with other cache-friendly containers (#1322),unstable,True,False,2,server.cc,cc,4,10,14
c5e4fe2bd7a3a2a5ecf9de68270c79b6f0eaac7d,twice.mliu@gmail.com,2023-03-16 15:48:23+08:00,noreply@github.com,2023-03-16 15:48:23+08:00,Replace list with other cache-friendly containers (#1322),unstable,True,False,2,worker.cc,cc,5,2,7
1fda67385944834eb7538f95dc6a33a925f5b725,twice.mliu@gmail.com,2023-03-16 23:32:16+08:00,noreply@github.com,2023-03-16 23:32:16+08:00,"Move unit tests for redis types to a new directory (#1324)

We move `tests/cppunit/t_*.cc` to `tests/cppunit/types/*.cc`",unstable,True,False,13,CMakeLists.txt,txt,2,1,3
1fda67385944834eb7538f95dc6a33a925f5b725,twice.mliu@gmail.com,2023-03-16 23:32:16+08:00,noreply@github.com,2023-03-16 23:32:16+08:00,"Move unit tests for redis types to a new directory (#1324)

We move `tests/cppunit/t_*.cc` to `tests/cppunit/types/*.cc`",unstable,True,False,13,db_util.h,h,1,0,1
1fda67385944834eb7538f95dc6a33a925f5b725,twice.mliu@gmail.com,2023-03-16 23:32:16+08:00,noreply@github.com,2023-03-16 23:32:16+08:00,"Move unit tests for redis types to a new directory (#1324)

We move `tests/cppunit/t_*.cc` to `tests/cppunit/types/*.cc`",unstable,True,False,13,encoding_test.cc,cc,2,2,4
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,kvrocks.yaml,yaml,5,5,10
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,CMakeLists.txt,txt,2,1,3
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,NOTICE,None,5,0,5
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,FindTBB.cmake,cmake,23,0,23
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,rocksdb.cmake,cmake,4,0,4
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,tbb.cmake,cmake,32,0,32
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,cron.cc,cc,24,30,54
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,cron.h,h,3,3,6
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,observer_or_unique.h,h,2,2,4
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,status.h,h,2,2,4
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,task_runner.cc,cc,21,40,61
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,task_runner.h,h,43,16,59
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,server.cc,cc,10,17,27
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,storage.h,h,1,1,2
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,observer_or_unique_test.cc,cc,1,1,2
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,task_runner_test.cc,cc,58,19,77
211beb5ad67e5bb95f2b5051d18635eb98da8144,twice.mliu@gmail.com,2023-03-17 17:21:30+08:00,noreply@github.com,2023-03-17 17:21:30+08:00,"Introduce TBB to refactor task runners (#1323)

We refactor the TaskRunner class using blocking queues (tbb::concurrent_bounded_queue) in oneTBB (https://github.com/oneapi-src/oneTBB).

oneTBB provides more utilities about threads which can be used in kvrocks, like spin locks, rw mutex (more efficient), concurrent map, set, vector, and queue, concurrent algorithms, task arena, task scheduler (which has some difference than task runners), and task graphs.

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,17,x.py,py,1,7,8
6f722d9ec9df7d17e7d141a55e5d87103bcad1e0,hulk.website@gmail.com,2023-03-17 22:50:26+08:00,noreply@github.com,2023-03-17 22:50:26+08:00,Check if the checkpoint seq is in the WAL boundary before using (#1320),unstable,True,False,2,storage.cc,cc,24,5,29
6f722d9ec9df7d17e7d141a55e5d87103bcad1e0,hulk.website@gmail.com,2023-03-17 22:50:26+08:00,noreply@github.com,2023-03-17 22:50:26+08:00,Check if the checkpoint seq is in the WAL boundary before using (#1320),unstable,True,False,2,storage.h,h,4,4,8
41a93080ab85444b5efe07f7c79cf54d7e5adb5c,wander4096@gmail.com,2023-03-18 10:29:13+08:00,noreply@github.com,2023-03-18 10:29:13+08:00,Update README.md (#1326),unstable,True,False,1,README.md,md,3,3,6
2bc0d00e6ccf01145f87cce578561ac162e11595,twice.mliu@gmail.com,2023-03-18 17:34:14+08:00,noreply@github.com,2023-03-18 17:34:14+08:00,Relax the condition in unit tests of TaskRunner (#1329),unstable,True,False,1,task_runner_test.cc,cc,1,1,2
290beba13165877c893a0ea4fe7d207bd75b9439,wander4096@gmail.com,2023-03-18 19:22:53+08:00,noreply@github.com,2023-03-18 19:22:53+08:00,"test: Remove testdb and compactdb dirs on exit (#1327)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,.gitignore,gitignore,2,3,5
290beba13165877c893a0ea4fe7d207bd75b9439,wander4096@gmail.com,2023-03-18 19:22:53+08:00,noreply@github.com,2023-03-18 19:22:53+08:00,"test: Remove testdb and compactdb dirs on exit (#1327)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,compact_test.cc,cc,8,2,10
290beba13165877c893a0ea4fe7d207bd75b9439,wander4096@gmail.com,2023-03-18 19:22:53+08:00,noreply@github.com,2023-03-18 19:22:53+08:00,"test: Remove testdb and compactdb dirs on exit (#1327)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,test_base.h,h,10,5,15
c036303a2feeed56d59c3be0d7f0149d4a2b803b,wander4096@gmail.com,2023-03-18 21:52:08+08:00,noreply@github.com,2023-03-18 21:52:08+08:00,"build: package sources in a folder (#1332)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,1,x.py,py,6,8,14
6016768f47d59d01cfa0dec1e9a4d1dc5347a393,twice.mliu@gmail.com,2023-03-18 23:38:09+08:00,noreply@github.com,2023-03-18 23:38:09+08:00,Avoid crash due to task runner start failed (#1331),unstable,True,False,1,server.cc,cc,1,1,2
3b3ce24bf6f991155276093afb4bc7b4c3828265,aleks.raiden@gmail.com,2023-03-20 06:02:23+02:00,noreply@github.com,2023-03-20 12:02:23+08:00,"Bump RocksDB 8.0.0 (#1333)

A new version of RocksDB is arrived - the first release of the 8.х branch.

- Bug fixing (incl. bug with WAL restoring, Get/MultiGet with async_io, flushing, etc.)
- Remove deprecated file system functions
- Remove a lot of deprecated/obsolete statistics entity
- Added a subcode of Status::Corruption, Status::SubCode::kMergeOperatorFailed, for users to identify corruption failures originating in the merge operator
- Feature: a new MultiGetEntity API that enables batched wide-column point lookups

Full changelog: https://github.com/facebook/rocksdb/releases/tag/v8.0.0",unstable,True,False,2,rocksdb.cmake,cmake,2,2,4
3b3ce24bf6f991155276093afb4bc7b4c3828265,aleks.raiden@gmail.com,2023-03-20 06:02:23+02:00,noreply@github.com,2023-03-20 12:02:23+08:00,"Bump RocksDB 8.0.0 (#1333)

A new version of RocksDB is arrived - the first release of the 8.х branch.

- Bug fixing (incl. bug with WAL restoring, Get/MultiGet with async_io, flushing, etc.)
- Remove deprecated file system functions
- Remove a lot of deprecated/obsolete statistics entity
- Added a subcode of Status::Corruption, Status::SubCode::kMergeOperatorFailed, for users to identify corruption failures originating in the merge operator
- Feature: a new MultiGetEntity API that enables batched wide-column point lookups

Full changelog: https://github.com/facebook/rocksdb/releases/tag/v8.0.0",unstable,True,False,2,server.cc,cc,1,0,1
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,.clang-tidy,clang-tidy,1,1,2
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,main.cc,cc,3,1,4
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,disk_stats.cc,cc,0,6,6
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,stats.cc,cc,0,1,1
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,compact_filter.cc,cc,5,5,10
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,compact_filter.h,h,2,0,2
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,compaction_checker.cc,cc,2,2,4
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,redis_db.cc,cc,11,11,22
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,redis_metadata.cc,cc,2,3,5
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,redis_pubsub.cc,cc,2,0,2
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,scripting.cc,cc,1,0,1
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,table_properties_collector.cc,cc,1,2,3
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,geohash.cc,cc,1,2,3
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,redis_bitmap.cc,cc,9,12,21
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,redis_bitmap_string.cc,cc,11,14,25
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,redis_geo.cc,cc,2,2,4
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,redis_hash.cc,cc,1,2,3
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,redis_list.cc,cc,5,4,9
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,redis_set.cc,cc,1,2,3
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,redis_sortedint.cc,cc,6,8,14
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,redis_string.cc,cc,4,4,8
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,redis_zset.cc,cc,11,11,22
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,bitmap_test.cc,cc,6,5,11
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,encoding_test.cc,cc,1,1,2
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,geo_test.cc,cc,11,10,21
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,hash_test.cc,cc,3,3,6
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,list_test.cc,cc,75,71,146
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,metadata_test.cc,cc,8,8,16
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,set_test.cc,cc,23,17,40
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,sortedint_test.cc,cc,4,3,7
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,string_test.cc,cc,34,33,67
303384f6f2df676ae3802d6fbde8085c71b572c6,torwigua@gmail.com,2023-03-20 11:16:59+02:00,noreply@github.com,2023-03-20 17:16:59+08:00,Fix clang-tidy warnings (#1334),unstable,True,False,32,zset_test.cc,cc,33,31,64
81c7c3f2d1a4e560105dd293f843380a8e253058,hulk.website@gmail.com,2023-03-20 19:10:54+08:00,noreply@github.com,2023-03-20 19:10:54+08:00,Remove the test db dir after deleting the storage in CPP unittest (#1336),unstable,True,False,1,test_base.h,h,5,3,8
0df71180345c201737915ed1d0715c628d03e866,twice.mliu@gmail.com,2023-03-20 21:35:48+08:00,noreply@github.com,2023-03-20 21:35:48+08:00,Add clang-tidy checking for unit tests (#1337),unstable,True,False,12,.clang-tidy,clang-tidy,1,1,2
0df71180345c201737915ed1d0715c628d03e866,twice.mliu@gmail.com,2023-03-20 21:35:48+08:00,noreply@github.com,2023-03-20 21:35:48+08:00,Add clang-tidy checking for unit tests (#1337),unstable,True,False,12,tls_util.cc,cc,1,1,2
0df71180345c201737915ed1d0715c628d03e866,twice.mliu@gmail.com,2023-03-20 21:35:48+08:00,noreply@github.com,2023-03-20 21:35:48+08:00,Add clang-tidy checking for unit tests (#1337),unstable,True,False,12,cluster_test.cc,cc,2,2,4
0df71180345c201737915ed1d0715c628d03e866,twice.mliu@gmail.com,2023-03-20 21:35:48+08:00,noreply@github.com,2023-03-20 21:35:48+08:00,Add clang-tidy checking for unit tests (#1337),unstable,True,False,12,cron_test.cc,cc,1,1,2
0df71180345c201737915ed1d0715c628d03e866,twice.mliu@gmail.com,2023-03-20 21:35:48+08:00,noreply@github.com,2023-03-20 21:35:48+08:00,Add clang-tidy checking for unit tests (#1337),unstable,True,False,12,disk_test.cc,cc,4,4,8
0df71180345c201737915ed1d0715c628d03e866,twice.mliu@gmail.com,2023-03-20 21:35:48+08:00,noreply@github.com,2023-03-20 21:35:48+08:00,Add clang-tidy checking for unit tests (#1337),unstable,True,False,12,observer_or_unique_test.cc,cc,4,4,8
0df71180345c201737915ed1d0715c628d03e866,twice.mliu@gmail.com,2023-03-20 21:35:48+08:00,noreply@github.com,2023-03-20 21:35:48+08:00,Add clang-tidy checking for unit tests (#1337),unstable,True,False,12,parse_util.cc,cc,2,2,4
0df71180345c201737915ed1d0715c628d03e866,twice.mliu@gmail.com,2023-03-20 21:35:48+08:00,noreply@github.com,2023-03-20 21:35:48+08:00,Add clang-tidy checking for unit tests (#1337),unstable,True,False,12,status_test.cc,cc,4,4,8
0df71180345c201737915ed1d0715c628d03e866,twice.mliu@gmail.com,2023-03-20 21:35:48+08:00,noreply@github.com,2023-03-20 21:35:48+08:00,Add clang-tidy checking for unit tests (#1337),unstable,True,False,12,string_reply_test.cc,cc,2,2,4
0df71180345c201737915ed1d0715c628d03e866,twice.mliu@gmail.com,2023-03-20 21:35:48+08:00,noreply@github.com,2023-03-20 21:35:48+08:00,Add clang-tidy checking for unit tests (#1337),unstable,True,False,12,test_base.h,h,1,1,2
0df71180345c201737915ed1d0715c628d03e866,twice.mliu@gmail.com,2023-03-20 21:35:48+08:00,noreply@github.com,2023-03-20 21:35:48+08:00,Add clang-tidy checking for unit tests (#1337),unstable,True,False,12,stream_test.cc,cc,1,1,2
0df71180345c201737915ed1d0715c628d03e866,twice.mliu@gmail.com,2023-03-20 21:35:48+08:00,noreply@github.com,2023-03-20 21:35:48+08:00,Add clang-tidy checking for unit tests (#1337),unstable,True,False,12,x.py,py,1,1,2
47bb6f922382861064faa3a6f47c290832ed67cd,hulk.website@gmail.com,2023-03-20 23:09:25+08:00,noreply@github.com,2023-03-20 23:09:25+08:00,Use waitForImportState instead of the sleep in Go test case (#1339),unstable,True,False,1,slotmigrate_test.go,go,2,9,11
ea491498b7484c7a7c37d52615829891e1784ac4,binloveplay1314@qq.com,2023-03-21 09:19:43+08:00,noreply@github.com,2023-03-21 09:19:43+08:00,"Keep feature descriptions consistent with documentation (#1340)

Recently we refined feature words, see apache/incubator-kvrocks-website#66.
This PR makes the key features in the README consistent with the docs,
plus removed some extra spaces and # characters.",unstable,True,False,1,README.md,md,10,10,20
739e1cd9ceff353656f84c53b5622ada1f423342,85050932+dongdongwcpp@users.noreply.github.com,2023-03-21 10:54:06+08:00,noreply@github.com,2023-03-21 10:54:06+08:00,"Relax race condition between subkey compaction thread (#1335)

Co-authored-by: git-hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,4,compact_filter.cc,cc,8,1,9
739e1cd9ceff353656f84c53b5622ada1f423342,85050932+dongdongwcpp@users.noreply.github.com,2023-03-21 10:54:06+08:00,noreply@github.com,2023-03-21 10:54:06+08:00,"Relax race condition between subkey compaction thread (#1335)

Co-authored-by: git-hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,4,redis_metadata.cc,cc,4,5,9
739e1cd9ceff353656f84c53b5622ada1f423342,85050932+dongdongwcpp@users.noreply.github.com,2023-03-21 10:54:06+08:00,noreply@github.com,2023-03-21 10:54:06+08:00,"Relax race condition between subkey compaction thread (#1335)

Co-authored-by: git-hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,4,redis_metadata.h,h,1,0,1
739e1cd9ceff353656f84c53b5622ada1f423342,85050932+dongdongwcpp@users.noreply.github.com,2023-03-21 10:54:06+08:00,noreply@github.com,2023-03-21 10:54:06+08:00,"Relax race condition between subkey compaction thread (#1335)

Co-authored-by: git-hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,4,compact_test.cc,cc,23,1,24
9adc12800ab2e4fe5c85fa42428243db1eb451be,twice.mliu@gmail.com,2023-03-21 14:54:21+08:00,noreply@github.com,2023-03-21 14:54:21+08:00,Make Status::Code::cOK private to avoid access directly (#1341),unstable,True,False,3,status.h,h,9,9,18
9adc12800ab2e4fe5c85fa42428243db1eb451be,twice.mliu@gmail.com,2023-03-21 14:54:21+08:00,noreply@github.com,2023-03-21 14:54:21+08:00,Make Status::Code::cOK private to avoid access directly (#1341),unstable,True,False,3,storage.cc,cc,2,2,4
9adc12800ab2e4fe5c85fa42428243db1eb451be,twice.mliu@gmail.com,2023-03-21 14:54:21+08:00,noreply@github.com,2023-03-21 14:54:21+08:00,Make Status::Code::cOK private to avoid access directly (#1341),unstable,True,False,3,status_test.cc,cc,7,5,12
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,kvrocks.yaml,yaml,9,1,10
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,CMakeLists.txt,txt,5,0,5
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,slot_migrate.cc,cc,4,5,9
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,cmd_key.cc,cc,17,37,54
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,cmd_string.cc,cc,11,14,25
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,ttl_util.h,h,5,21,26
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,batch_extractor.cc,cc,3,3,6
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,compact_filter.cc,cc,2,2,4
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,redis_db.cc,cc,16,8,24
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,redis_db.h,h,2,2,4
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,redis_metadata.cc,cc,119,34,153
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,redis_metadata.h,h,41,8,49
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,redis_bitmap.cc,cc,7,7,14
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,redis_bitmap_string.cc,cc,7,5,12
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,redis_hash.cc,cc,1,4,5
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,redis_string.cc,cc,43,35,78
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,redis_string.h,h,10,11,21
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,hash_test.cc,cc,1,0,1
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,metadata_test.cc,cc,80,5,85
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,string_test.cc,cc,19,17,36
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,expire_test.go,go,16,16,32
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,parser.cc,cc,6,5,11
bfeb26cbd8ec0ee66b2c204f21eeebdc9fbc518f,twice.mliu@gmail.com,2023-03-23 17:23:55+08:00,noreply@github.com,2023-03-23 17:23:55+08:00,"Implement the new encoding with 64bit size and expire time in milliseconds (#1342)

See proposal in #1033, after this change, these old data can still be readable/writable, but all new data will be written via the new encoding if `ENABLE_NEW_ENCODING` is turned on (currently default OFF).

NOTE: Although the encoding now support 64bit size, maybe some place in code still use int32_t/int so it cannot work well in large number of items more than 32bit. We can fix them after this PR.

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,23,parser.h,h,1,1,2
8eb575cb7be757d5d2058c1f95f2970b118517e5,binloveplay1314@qq.com,2023-03-23 21:18:14+08:00,noreply@github.com,2023-03-23 21:18:14+08:00,"Add SUBSTR command as redis (#1347)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,cmd_string.cc,cc,6,0,6
8eb575cb7be757d5d2058c1f95f2970b118517e5,binloveplay1314@qq.com,2023-03-23 21:18:14+08:00,noreply@github.com,2023-03-23 21:18:14+08:00,"Add SUBSTR command as redis (#1347)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,strings_test.go,go,28,1,29
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,.clang-tidy,clang-tidy,2,2,4
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,cluster.cc,cc,1,6,7
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,cluster.h,h,2,2,4
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,slot_migrate.cc,cc,1,1,2
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,slot_migrate.h,h,1,2,3
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,cmd_cluster.cc,cc,3,3,6
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,cmd_geo.cc,cc,5,5,10
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,cmd_hash.cc,cc,1,1,2
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,cmd_replication.cc,cc,1,1,2
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,cmd_server.cc,cc,1,1,2
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,cmd_set.cc,cc,1,1,2
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,cmd_stream.cc,cc,1,1,2
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,cmd_zset.cc,cc,1,1,2
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,scan_base.h,h,1,1,2
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,cron.h,h,4,3,7
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,config.cc,cc,2,2,4
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,config.h,h,3,4,7
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,config_type.h,h,0,1,1
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,redis_connection.cc,cc,2,2,4
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,redis_connection.h,h,10,10,20
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,server.cc,cc,8,8,16
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,server.h,h,7,7,14
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,tls_util.h,h,1,1,2
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,log_collector.cc,cc,2,2,4
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,log_collector.h,h,2,4,6
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,stats.h,h,0,1,1
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,compact_filter.cc,cc,3,6,9
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,compact_filter.h,h,2,2,4
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,event_listener.cc,cc,3,3,6
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,lock_manager.cc,cc,2,2,4
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,lock_manager.h,h,3,2,5
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,redis_metadata.cc,cc,1,1,2
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,redis_metadata.h,h,2,4,6
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,storage.h,h,3,3,6
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,redis_bitmap.h,h,2,2,4
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,redis_bitmap_string.h,h,6,6,12
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,redis_geo.h,h,5,5,10
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,redis_stream.cc,cc,1,1,2
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,redis_stream.h,h,2,2,4
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,redis_zset.h,h,2,2,4
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,cron_test.cc,cc,0,1,1
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,test_base.h,h,0,1,1
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,bitmap_test.cc,cc,1,2,3
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,geo_test.cc,cc,1,2,3
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,hash_test.cc,cc,1,2,3
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,list_test.cc,cc,1,3,4
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,metadata_test.cc,cc,1,1,2
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,set_test.cc,cc,1,2,3
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,sortedint_test.cc,cc,1,4,5
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,stream_test.cc,cc,2,3,5
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,string_test.cc,cc,1,2,3
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,zset_test.cc,cc,1,2,3
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,config.h,h,1,2,3
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,sync.cc,cc,1,1,2
dbc8a24fd63f5c491e0c8c27ed4c1991ddff1114,twice.mliu@gmail.com,2023-03-23 23:42:13+08:00,noreply@github.com,2023-03-23 23:42:13+08:00,Add some readability checks and fix all report in current codebase (#1348),unstable,True,False,55,sync.h,h,2,2,4
76a80b5bb3ad887aabd137cf0db149b49b754ac0,hulk.website@gmail.com,2023-03-24 13:40:52+08:00,noreply@github.com,2023-03-24 13:40:52+08:00,"Fix missing stream increment batch in cluster migration (#1345)

Currently, the cluster slot migration will split into two stages: send
snapshots and sync WAL if the snapshot was sent. For the stream, we only
parsed the KVs from the snapshot and missed the WAL part.

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,slot_migrate.cc,cc,2,15,17
76a80b5bb3ad887aabd137cf0db149b49b754ac0,hulk.website@gmail.com,2023-03-24 13:40:52+08:00,noreply@github.com,2023-03-24 13:40:52+08:00,"Fix missing stream increment batch in cluster migration (#1345)

Currently, the cluster slot migration will split into two stages: send
snapshots and sync WAL if the snapshot was sent. For the stream, we only
parsed the KVs from the snapshot and missed the WAL part.

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,batch_extractor.cc,cc,52,3,55
76a80b5bb3ad887aabd137cf0db149b49b754ac0,hulk.website@gmail.com,2023-03-24 13:40:52+08:00,noreply@github.com,2023-03-24 13:40:52+08:00,"Fix missing stream increment batch in cluster migration (#1345)

Currently, the cluster slot migration will split into two stages: send
snapshots and sync WAL if the snapshot was sent. For the stream, we only
parsed the KVs from the snapshot and missed the WAL part.

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,batch_extractor.h,h,3,0,3
76a80b5bb3ad887aabd137cf0db149b49b754ac0,hulk.website@gmail.com,2023-03-24 13:40:52+08:00,noreply@github.com,2023-03-24 13:40:52+08:00,"Fix missing stream increment batch in cluster migration (#1345)

Currently, the cluster slot migration will split into two stages: send
snapshots and sync WAL if the snapshot was sent. For the stream, we only
parsed the KVs from the snapshot and missed the WAL part.

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,redis_stream.cc,cc,1,1,2
76a80b5bb3ad887aabd137cf0db149b49b754ac0,hulk.website@gmail.com,2023-03-24 13:40:52+08:00,noreply@github.com,2023-03-24 13:40:52+08:00,"Fix missing stream increment batch in cluster migration (#1345)

Currently, the cluster slot migration will split into two stages: send
snapshots and sync WAL if the snapshot was sent. For the stream, we only
parsed the KVs from the snapshot and missed the WAL part.

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,slotmigrate_test.go,go,44,0,44
6e16a4e9729a7bb4d451ed3ef3a6f701f64efa53,binloveplay1314@qq.com,2023-03-24 21:20:51+08:00,noreply@github.com,2023-03-24 21:20:51+08:00,"Fix stream_metadata enum -Wint-in-bool-context warning (#1349)

There is a warning in the code:
```
/incubator-kvrocks/src/storage/batch_extractor.cc:89:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   89 |       StreamMetadata stream_metadata(kRedisStream);
```

This was introduced in #1345",unstable,True,False,1,batch_extractor.cc,cc,1,1,2
95301c5a673af83ad85e6dfb63da4db41d83afb8,twice.mliu@gmail.com,2023-03-25 00:36:41+08:00,noreply@github.com,2023-03-25 00:36:41+08:00,Round expire time for seconds to improve precision for 32bit-common-field encoding (#1352),unstable,True,False,6,cmd_key.cc,cc,3,3,6
95301c5a673af83ad85e6dfb63da4db41d83afb8,twice.mliu@gmail.com,2023-03-25 00:36:41+08:00,noreply@github.com,2023-03-25 00:36:41+08:00,Round expire time for seconds to improve precision for 32bit-common-field encoding (#1352),unstable,True,False,6,redis_db.cc,cc,2,2,4
95301c5a673af83ad85e6dfb63da4db41d83afb8,twice.mliu@gmail.com,2023-03-25 00:36:41+08:00,noreply@github.com,2023-03-25 00:36:41+08:00,Round expire time for seconds to improve precision for 32bit-common-field encoding (#1352),unstable,True,False,6,redis_db.h,h,2,0,2
95301c5a673af83ad85e6dfb63da4db41d83afb8,twice.mliu@gmail.com,2023-03-25 00:36:41+08:00,noreply@github.com,2023-03-25 00:36:41+08:00,Round expire time for seconds to improve precision for 32bit-common-field encoding (#1352),unstable,True,False,6,redis_metadata.cc,cc,2,1,3
95301c5a673af83ad85e6dfb63da4db41d83afb8,twice.mliu@gmail.com,2023-03-25 00:36:41+08:00,noreply@github.com,2023-03-25 00:36:41+08:00,Round expire time for seconds to improve precision for 32bit-common-field encoding (#1352),unstable,True,False,6,string_test.cc,cc,4,4,8
95301c5a673af83ad85e6dfb63da4db41d83afb8,twice.mliu@gmail.com,2023-03-25 00:36:41+08:00,noreply@github.com,2023-03-25 00:36:41+08:00,Round expire time for seconds to improve precision for 32bit-common-field encoding (#1352),unstable,True,False,6,expire_test.go,go,1,1,2
a426fb6866fca7edaa9d60eca8b2753e9215fb05,twice.mliu@gmail.com,2023-03-25 08:52:18+08:00,noreply@github.com,2023-03-25 08:52:18+08:00,Unify time retrieving and remove srand call in metadata construction (#1351),unstable,True,False,7,replication.cc,cc,1,1,2
a426fb6866fca7edaa9d60eca8b2753e9215fb05,twice.mliu@gmail.com,2023-03-25 08:52:18+08:00,noreply@github.com,2023-03-25 08:52:18+08:00,Unify time retrieving and remove srand call in metadata construction (#1351),unstable,True,False,7,main.cc,cc,11,8,19
a426fb6866fca7edaa9d60eca8b2753e9215fb05,twice.mliu@gmail.com,2023-03-25 08:52:18+08:00,noreply@github.com,2023-03-25 08:52:18+08:00,Unify time retrieving and remove srand call in metadata construction (#1351),unstable,True,False,7,server.cc,cc,3,4,7
a426fb6866fca7edaa9d60eca8b2753e9215fb05,twice.mliu@gmail.com,2023-03-25 08:52:18+08:00,noreply@github.com,2023-03-25 08:52:18+08:00,Unify time retrieving and remove srand call in metadata construction (#1351),unstable,True,False,7,log_collector.cc,cc,2,1,3
a426fb6866fca7edaa9d60eca8b2753e9215fb05,twice.mliu@gmail.com,2023-03-25 08:52:18+08:00,noreply@github.com,2023-03-25 08:52:18+08:00,Unify time retrieving and remove srand call in metadata construction (#1351),unstable,True,False,7,redis_db.cc,cc,1,1,2
a426fb6866fca7edaa9d60eca8b2753e9215fb05,twice.mliu@gmail.com,2023-03-25 08:52:18+08:00,noreply@github.com,2023-03-25 08:52:18+08:00,Unify time retrieving and remove srand call in metadata construction (#1351),unstable,True,False,7,redis_metadata.cc,cc,0,1,1
a426fb6866fca7edaa9d60eca8b2753e9215fb05,twice.mliu@gmail.com,2023-03-25 08:52:18+08:00,noreply@github.com,2023-03-25 08:52:18+08:00,Unify time retrieving and remove srand call in metadata construction (#1351),unstable,True,False,7,storage.cc,cc,1,1,2
90395f0d72a25f3e0d07270f5d9e095ebfa411a6,binloveplay1314@qq.com,2023-03-25 15:54:28+08:00,noreply@github.com,2023-03-25 15:54:28+08:00,"Add CLIENT INFO command as Redis (#1354)

This PR adds the CLIENT INFO command as Redis, this command
returns information about the current client connection,
the output format is the same as the CLIENT LIST command.

CLIENT INFO was added since Redis 6.2.0",unstable,True,False,2,cmd_server.cc,cc,9,5,14
90395f0d72a25f3e0d07270f5d9e095ebfa411a6,binloveplay1314@qq.com,2023-03-25 15:54:28+08:00,noreply@github.com,2023-03-25 15:54:28+08:00,"Add CLIENT INFO command as Redis (#1354)

This PR adds the CLIENT INFO command as Redis, this command
returns information about the current client connection,
the output format is the same as the CLIENT LIST command.

CLIENT INFO was added since Redis 6.2.0",unstable,True,False,2,introspection_test.go,go,9,0,9
bd13b03241b7da5d2d0b5f4b78d2840794810cf2,impc53802956@163.com,2023-03-25 18:26:01+08:00,noreply@github.com,2023-03-25 18:26:01+08:00,Allow to configure the compaction checker policy (#1325),unstable,True,False,6,kvrocks.conf,conf,12,0,12
bd13b03241b7da5d2d0b5f4b78d2840794810cf2,impc53802956@163.com,2023-03-25 18:26:01+08:00,noreply@github.com,2023-03-25 18:26:01+08:00,Allow to configure the compaction checker policy (#1325),unstable,True,False,6,config.cc,cc,3,0,3
bd13b03241b7da5d2d0b5f4b78d2840794810cf2,impc53802956@163.com,2023-03-25 18:26:01+08:00,noreply@github.com,2023-03-25 18:26:01+08:00,Allow to configure the compaction checker policy (#1325),unstable,True,False,6,config.h,h,2,0,2
bd13b03241b7da5d2d0b5f4b78d2840794810cf2,impc53802956@163.com,2023-03-25 18:26:01+08:00,noreply@github.com,2023-03-25 18:26:01+08:00,Allow to configure the compaction checker policy (#1325),unstable,True,False,6,server.cc,cc,1,1,2
bd13b03241b7da5d2d0b5f4b78d2840794810cf2,impc53802956@163.com,2023-03-25 18:26:01+08:00,noreply@github.com,2023-03-25 18:26:01+08:00,Allow to configure the compaction checker policy (#1325),unstable,True,False,6,compaction_checker.cc,cc,18,9,27
bd13b03241b7da5d2d0b5f4b78d2840794810cf2,impc53802956@163.com,2023-03-25 18:26:01+08:00,noreply@github.com,2023-03-25 18:26:01+08:00,Allow to configure the compaction checker policy (#1325),unstable,True,False,6,storage.h,h,1,0,1
63c3a152acf2d473c87d7d0dcb7c3e2fa9c325c1,52393536+xiaobiaozhao@users.noreply.github.com,2023-03-27 08:41:37+08:00,noreply@github.com,2023-03-27 08:41:37+08:00,Make the create-cluster script robustness (#1356),unstable,True,False,1,create-cluster,None,13,2,15
3f86bec86e699952ee03f47f027776f25418eba3,twice.mliu@gmail.com,2023-03-28 00:13:09+08:00,noreply@github.com,2023-03-28 00:13:09+08:00,Rewrite encoding functions (#1358),unstable,True,False,2,encoding.cc,cc,33,54,87
3f86bec86e699952ee03f47f027776f25418eba3,twice.mliu@gmail.com,2023-03-28 00:13:09+08:00,noreply@github.com,2023-03-28 00:13:09+08:00,Rewrite encoding functions (#1358),unstable,True,False,2,encoding.h,h,0,2,2
a2b033f9ca82472116de0c2b3958f0013ad8ca4d,twice.mliu@gmail.com,2023-03-28 13:48:56+08:00,noreply@github.com,2023-03-28 13:48:56+08:00,Rewrite popcount and bitpos in redis bitmap (#1359),unstable,True,False,5,encoding.cc,cc,10,78,88
a2b033f9ca82472116de0c2b3958f0013ad8ca4d,twice.mliu@gmail.com,2023-03-28 13:48:56+08:00,noreply@github.com,2023-03-28 13:48:56+08:00,Rewrite popcount and bitpos in redis bitmap (#1359),unstable,True,False,5,encoding.h,h,10,0,10
a2b033f9ca82472116de0c2b3958f0013ad8ca4d,twice.mliu@gmail.com,2023-03-28 13:48:56+08:00,noreply@github.com,2023-03-28 13:48:56+08:00,Rewrite popcount and bitpos in redis bitmap (#1359),unstable,True,False,5,type_util.h,h,25,0,25
a2b033f9ca82472116de0c2b3958f0013ad8ca4d,twice.mliu@gmail.com,2023-03-28 13:48:56+08:00,noreply@github.com,2023-03-28 13:48:56+08:00,Rewrite popcount and bitpos in redis bitmap (#1359),unstable,True,False,5,redis_bitmap_string.cc,cc,56,127,183
a2b033f9ca82472116de0c2b3958f0013ad8ca4d,twice.mliu@gmail.com,2023-03-28 13:48:56+08:00,noreply@github.com,2023-03-28 13:48:56+08:00,Rewrite popcount and bitpos in redis bitmap (#1359),unstable,True,False,5,redis_bitmap_string.h,h,2,2,4
3289bc7e842cc7bb11cf6edaba7c9462243f9a3e,aleks.raiden@gmail.com,2023-03-30 04:43:27+03:00,noreply@github.com,2023-03-30 09:43:27+08:00,Systemd service file update (#1360),unstable,True,False,1,kvrocks.service,service,5,1,6
62d04c73302f351bf2a480f9135395ddb6c6c0b2,hulk.website@gmail.com,2023-03-31 15:46:01+08:00,noreply@github.com,2023-03-31 15:46:01+08:00,Fix redundant newline in eval command (#1361),unstable,True,False,1,scripting.cc,cc,2,2,4
54daf8d8ceb50273d2b6f9fca2f69b4893f33f4a,twice.mliu@gmail.com,2023-03-31 23:29:19+08:00,noreply@github.com,2023-03-31 23:29:19+08:00,Remove manual code concat in scripting (#1362),unstable,True,False,1,scripting.cc,cc,6,10,16
f36842c49ff7619c5bb3fbc927d62a0df9bc7b16,twice.mliu@gmail.com,2023-04-02 20:22:40+08:00,noreply@github.com,2023-04-02 20:22:40+08:00,Use more efficient popcount in Redis::Bitmap (#1363),unstable,True,False,3,redis_bitmap.cc,cc,3,13,16
f36842c49ff7619c5bb3fbc927d62a0df9bc7b16,twice.mliu@gmail.com,2023-04-02 20:22:40+08:00,noreply@github.com,2023-04-02 20:22:40+08:00,Use more efficient popcount in Redis::Bitmap (#1363),unstable,True,False,3,redis_bitmap_string.cc,cc,4,4,8
f36842c49ff7619c5bb3fbc927d62a0df9bc7b16,twice.mliu@gmail.com,2023-04-02 20:22:40+08:00,noreply@github.com,2023-04-02 20:22:40+08:00,Use more efficient popcount in Redis::Bitmap (#1363),unstable,True,False,3,redis_bitmap_string.h,h,2,3,5
115f354b91cca2f647c04a8c1eebcfed6b9dd4a9,torwigua@gmail.com,2023-04-03 06:35:49+03:00,noreply@github.com,2023-04-03 11:35:49+08:00,Add handling LMOVE in BatchExtractor (#1364),unstable,True,False,10,cluster.cc,cc,17,9,26
115f354b91cca2f647c04a8c1eebcfed6b9dd4a9,torwigua@gmail.com,2023-04-03 06:35:49+03:00,noreply@github.com,2023-04-03 11:35:49+08:00,Add handling LMOVE in BatchExtractor (#1364),unstable,True,False,10,redis_slot.cc,cc,1,1,2
115f354b91cca2f647c04a8c1eebcfed6b9dd4a9,torwigua@gmail.com,2023-04-03 06:35:49+03:00,noreply@github.com,2023-04-03 11:35:49+08:00,Add handling LMOVE in BatchExtractor (#1364),unstable,True,False,10,redis_slot.h,h,1,1,2
115f354b91cca2f647c04a8c1eebcfed6b9dd4a9,torwigua@gmail.com,2023-04-03 06:35:49+03:00,noreply@github.com,2023-04-03 11:35:49+08:00,Add handling LMOVE in BatchExtractor (#1364),unstable,True,False,10,cmd_cluster.cc,cc,1,1,2
115f354b91cca2f647c04a8c1eebcfed6b9dd4a9,torwigua@gmail.com,2023-04-03 06:35:49+03:00,noreply@github.com,2023-04-03 11:35:49+08:00,Add handling LMOVE in BatchExtractor (#1364),unstable,True,False,10,batch_extractor.cc,cc,131,56,187
115f354b91cca2f647c04a8c1eebcfed6b9dd4a9,torwigua@gmail.com,2023-04-03 06:35:49+03:00,noreply@github.com,2023-04-03 11:35:49+08:00,Add handling LMOVE in BatchExtractor (#1364),unstable,True,False,10,batch_extractor.h,h,8,7,15
115f354b91cca2f647c04a8c1eebcfed6b9dd4a9,torwigua@gmail.com,2023-04-03 06:35:49+03:00,noreply@github.com,2023-04-03 11:35:49+08:00,Add handling LMOVE in BatchExtractor (#1364),unstable,True,False,10,redis_db.cc,cc,1,1,2
115f354b91cca2f647c04a8c1eebcfed6b9dd4a9,torwigua@gmail.com,2023-04-03 06:35:49+03:00,noreply@github.com,2023-04-03 11:35:49+08:00,Add handling LMOVE in BatchExtractor (#1364),unstable,True,False,10,redis_metadata.cc,cc,1,1,2
115f354b91cca2f647c04a8c1eebcfed6b9dd4a9,torwigua@gmail.com,2023-04-03 06:35:49+03:00,noreply@github.com,2023-04-03 11:35:49+08:00,Add handling LMOVE in BatchExtractor (#1364),unstable,True,False,10,redis_list.cc,cc,4,2,6
115f354b91cca2f647c04a8c1eebcfed6b9dd4a9,torwigua@gmail.com,2023-04-03 06:35:49+03:00,noreply@github.com,2023-04-03 11:35:49+08:00,Add handling LMOVE in BatchExtractor (#1364),unstable,True,False,10,slotmigrate_test.go,go,69,0,69
d13dbfd2c0bab0cdc2bc4b3e8f512041b5173633,twice.mliu@gmail.com,2023-04-04 11:27:14+08:00,noreply@github.com,2023-04-04 11:27:14+08:00,Introduce JSONCONS for RedisJSON and rewrite Server::GetRocksDBStatsJson (#1366),unstable,True,False,5,kvrocks.yaml,yaml,6,0,6
d13dbfd2c0bab0cdc2bc4b3e8f512041b5173633,twice.mliu@gmail.com,2023-04-04 11:27:14+08:00,noreply@github.com,2023-04-04 11:27:14+08:00,Introduce JSONCONS for RedisJSON and rewrite Server::GetRocksDBStatsJson (#1366),unstable,True,False,5,CMakeLists.txt,txt,7,0,7
d13dbfd2c0bab0cdc2bc4b3e8f512041b5173633,twice.mliu@gmail.com,2023-04-04 11:27:14+08:00,noreply@github.com,2023-04-04 11:27:14+08:00,Introduce JSONCONS for RedisJSON and rewrite Server::GetRocksDBStatsJson (#1366),unstable,True,False,5,NOTICE,None,81,43,124
d13dbfd2c0bab0cdc2bc4b3e8f512041b5173633,twice.mliu@gmail.com,2023-04-04 11:27:14+08:00,noreply@github.com,2023-04-04 11:27:14+08:00,Introduce JSONCONS for RedisJSON and rewrite Server::GetRocksDBStatsJson (#1366),unstable,True,False,5,jsoncons.cmake,cmake,29,0,29
d13dbfd2c0bab0cdc2bc4b3e8f512041b5173633,twice.mliu@gmail.com,2023-04-04 11:27:14+08:00,noreply@github.com,2023-04-04 11:27:14+08:00,Introduce JSONCONS for RedisJSON and rewrite Server::GetRocksDBStatsJson (#1366),unstable,True,False,5,server.cc,cc,7,11,18
88127304f0e80e98bd8659f9d0247c1fb3b41a2d,twice.mliu@gmail.com,2023-04-05 11:14:28+08:00,noreply@github.com,2023-04-05 11:14:28+08:00,Refactor Status to avoid large stack size in happy path (#1368),unstable,True,False,1,status.h,h,29,12,41
523b70ef67454bee15d40c9689f31bea91bfd7f9,wander4096@gmail.com,2023-04-05 15:28:05+08:00,noreply@github.com,2023-04-05 15:28:05+08:00,"chore: tidy the NOTICE file (#1370)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,14,licenserc.yml,yml,1,0,1
523b70ef67454bee15d40c9689f31bea91bfd7f9,wander4096@gmail.com,2023-04-05 15:28:05+08:00,noreply@github.com,2023-04-05 15:28:05+08:00,"chore: tidy the NOTICE file (#1370)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,14,NOTICE,None,56,306,362
523b70ef67454bee15d40c9689f31bea91bfd7f9,wander4096@gmail.com,2023-04-05 15:28:05+08:00,noreply@github.com,2023-04-05 15:28:05+08:00,"chore: tidy the NOTICE file (#1370)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,14,LICENSE-LuaJIT.txt,txt,53,0,53
523b70ef67454bee15d40c9689f31bea91bfd7f9,wander4096@gmail.com,2023-04-05 15:28:05+08:00,noreply@github.com,2023-04-05 15:28:05+08:00,"chore: tidy the NOTICE file (#1370)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,14,LICENSE-fmt.txt,txt,27,0,27
523b70ef67454bee15d40c9689f31bea91bfd7f9,wander4096@gmail.com,2023-04-05 15:28:05+08:00,noreply@github.com,2023-04-05 15:28:05+08:00,"chore: tidy the NOTICE file (#1370)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,14,LICENSE-glog.txt,txt,28,0,28
523b70ef67454bee15d40c9689f31bea91bfd7f9,wander4096@gmail.com,2023-04-05 15:28:05+08:00,noreply@github.com,2023-04-05 15:28:05+08:00,"chore: tidy the NOTICE file (#1370)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,14,LICENSE-googletest.txt,txt,28,0,28
523b70ef67454bee15d40c9689f31bea91bfd7f9,wander4096@gmail.com,2023-04-05 15:28:05+08:00,noreply@github.com,2023-04-05 15:28:05+08:00,"chore: tidy the NOTICE file (#1370)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,14,LICENSE-jsoncons.txt,txt,28,0,28
523b70ef67454bee15d40c9689f31bea91bfd7f9,wander4096@gmail.com,2023-04-05 15:28:05+08:00,noreply@github.com,2023-04-05 15:28:05+08:00,"chore: tidy the NOTICE file (#1370)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,14,LICENSE-libevent.txt,txt,24,0,24
523b70ef67454bee15d40c9689f31bea91bfd7f9,wander4096@gmail.com,2023-04-05 15:28:05+08:00,noreply@github.com,2023-04-05 15:28:05+08:00,"chore: tidy the NOTICE file (#1370)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,14,LICENSE-lua.txt,txt,19,0,19
523b70ef67454bee15d40c9689f31bea91bfd7f9,wander4096@gmail.com,2023-04-05 15:28:05+08:00,noreply@github.com,2023-04-05 15:28:05+08:00,"chore: tidy the NOTICE file (#1370)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,14,LICENSE-lz4.txt,txt,24,0,24
523b70ef67454bee15d40c9689f31bea91bfd7f9,wander4096@gmail.com,2023-04-05 15:28:05+08:00,noreply@github.com,2023-04-05 15:28:05+08:00,"chore: tidy the NOTICE file (#1370)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,14,LICENSE-snappy.txt,txt,28,0,28
523b70ef67454bee15d40c9689f31bea91bfd7f9,wander4096@gmail.com,2023-04-05 15:28:05+08:00,noreply@github.com,2023-04-05 15:28:05+08:00,"chore: tidy the NOTICE file (#1370)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,14,LICENSE-zlib.txt,txt,17,0,17
523b70ef67454bee15d40c9689f31bea91bfd7f9,wander4096@gmail.com,2023-04-05 15:28:05+08:00,noreply@github.com,2023-04-05 15:28:05+08:00,"chore: tidy the NOTICE file (#1370)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,14,rand.cc,cc,5,25,30
4b5831e2fa5a55e07c98ef5a360158fbf91ae4c8,117198230+io55555@users.noreply.github.com,2023-04-05 16:31:04+08:00,noreply@github.com,2023-04-05 16:31:04+08:00,Update zstd version to 1.5.5 (#1369),unstable,True,False,1,zstd.cmake,cmake,2,2,4
8d5ccbc83e7eeaa4792ec5427079ba558a662fea,torwigua@gmail.com,2023-04-07 16:35:05+03:00,noreply@github.com,2023-04-07 21:35:05+08:00,Minor refactoring of slot migration source code (#1373),unstable,True,False,8,cluster.cc,cc,8,8,16
8d5ccbc83e7eeaa4792ec5427079ba558a662fea,torwigua@gmail.com,2023-04-07 16:35:05+03:00,noreply@github.com,2023-04-07 21:35:05+08:00,Minor refactoring of slot migration source code (#1373),unstable,True,False,8,slot_import.cc,cc,2,2,4
8d5ccbc83e7eeaa4792ec5427079ba558a662fea,torwigua@gmail.com,2023-04-07 16:35:05+03:00,noreply@github.com,2023-04-07 21:35:05+08:00,Minor refactoring of slot migration source code (#1373),unstable,True,False,8,slot_migrate.cc,cc,166,162,328
8d5ccbc83e7eeaa4792ec5427079ba558a662fea,torwigua@gmail.com,2023-04-07 16:35:05+03:00,noreply@github.com,2023-04-07 21:35:05+08:00,Minor refactoring of slot migration source code (#1373),unstable,True,False,8,slot_migrate.h,h,68,79,147
8d5ccbc83e7eeaa4792ec5427079ba558a662fea,torwigua@gmail.com,2023-04-07 16:35:05+03:00,noreply@github.com,2023-04-07 21:35:05+08:00,Minor refactoring of slot migration source code (#1373),unstable,True,False,8,cmd_server.cc,cc,6,6,12
8d5ccbc83e7eeaa4792ec5427079ba558a662fea,torwigua@gmail.com,2023-04-07 16:35:05+03:00,noreply@github.com,2023-04-07 21:35:05+08:00,Minor refactoring of slot migration source code (#1373),unstable,True,False,8,config.cc,cc,9,5,14
8d5ccbc83e7eeaa4792ec5427079ba558a662fea,torwigua@gmail.com,2023-04-07 16:35:05+03:00,noreply@github.com,2023-04-07 21:35:05+08:00,Minor refactoring of slot migration source code (#1373),unstable,True,False,8,server.cc,cc,7,7,14
8d5ccbc83e7eeaa4792ec5427079ba558a662fea,torwigua@gmail.com,2023-04-07 16:35:05+03:00,noreply@github.com,2023-04-07 21:35:05+08:00,Minor refactoring of slot migration source code (#1373),unstable,True,False,8,server.h,h,2,2,4
f0897583dd846e83b41a44fa050b1565080cb579,torwigua@gmail.com,2023-04-09 17:17:19+03:00,noreply@github.com,2023-04-09 22:17:19+08:00,Add MEMORY USAGE command as an alias to existing DISK USAGE command (#1375),unstable,True,False,2,cmd_server.cc,cc,4,2,6
f0897583dd846e83b41a44fa050b1565080cb579,torwigua@gmail.com,2023-04-09 17:17:19+03:00,noreply@github.com,2023-04-09 22:17:19+08:00,Add MEMORY USAGE command as an alias to existing DISK USAGE command (#1375),unstable,True,False,2,disk_test.go,go,12,0,12
db5d91defc5d7ecc56899505e6e295baa64fd14e,twice.mliu@gmail.com,2023-04-12 14:08:52+08:00,noreply@github.com,2023-04-12 14:08:52+08:00,Fix disordered stack pop in replyToRedisReply (#1380),unstable,True,False,1,scripting.cc,cc,4,3,7
d1e52d3d12cc3e66d8f82ac94f49f2895bfd9f91,binloveplay1314@qq.com,2023-04-12 15:48:32+08:00,noreply@github.com,2023-04-12 15:48:32+08:00,"Add cluster section into the info command (#1379)

Currently, the Redis Info cluster command only has cluster_enabled,
a value of 0 or 1 indicates whether the cluster mode is enabled.

---------

Co-authored-by: Yaroslav <torwigua@gmail.com>",unstable,True,False,3,server.cc,cc,16,0,16
d1e52d3d12cc3e66d8f82ac94f49f2895bfd9f91,binloveplay1314@qq.com,2023-04-12 15:48:32+08:00,noreply@github.com,2023-04-12 15:48:32+08:00,"Add cluster section into the info command (#1379)

Currently, the Redis Info cluster command only has cluster_enabled,
a value of 0 or 1 indicates whether the cluster mode is enabled.

---------

Co-authored-by: Yaroslav <torwigua@gmail.com>",unstable,True,False,3,server.h,h,1,0,1
d1e52d3d12cc3e66d8f82ac94f49f2895bfd9f91,binloveplay1314@qq.com,2023-04-12 15:48:32+08:00,noreply@github.com,2023-04-12 15:48:32+08:00,"Add cluster section into the info command (#1379)

Currently, the Redis Info cluster command only has cluster_enabled,
a value of 0 or 1 indicates whether the cluster mode is enabled.

---------

Co-authored-by: Yaroslav <torwigua@gmail.com>",unstable,True,False,3,info_test.go,go,13,0,13
060612aa21f0522cb9fc8361f95832bed4bddcaa,126678733+bruceqiwang@users.noreply.github.com,2023-04-13 05:34:34+00:00,noreply@github.com,2023-04-13 13:34:34+08:00,"Add max background jobs to configuration (#1374)

Co-authored-by: datavisorbiaoqi <biao.qi@datavisor.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,kvrocks.conf,conf,11,2,13
060612aa21f0522cb9fc8361f95832bed4bddcaa,126678733+bruceqiwang@users.noreply.github.com,2023-04-13 05:34:34+00:00,noreply@github.com,2023-04-13 13:34:34+08:00,"Add max background jobs to configuration (#1374)

Co-authored-by: datavisorbiaoqi <biao.qi@datavisor.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,config.cc,cc,4,2,6
060612aa21f0522cb9fc8361f95832bed4bddcaa,126678733+bruceqiwang@users.noreply.github.com,2023-04-13 05:34:34+00:00,noreply@github.com,2023-04-13 13:34:34+08:00,"Add max background jobs to configuration (#1374)

Co-authored-by: datavisorbiaoqi <biao.qi@datavisor.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,config.h,h,1,0,1
060612aa21f0522cb9fc8361f95832bed4bddcaa,126678733+bruceqiwang@users.noreply.github.com,2023-04-13 05:34:34+00:00,noreply@github.com,2023-04-13 13:34:34+08:00,"Add max background jobs to configuration (#1374)

Co-authored-by: datavisorbiaoqi <biao.qi@datavisor.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,storage.cc,cc,1,0,1
060612aa21f0522cb9fc8361f95832bed4bddcaa,126678733+bruceqiwang@users.noreply.github.com,2023-04-13 05:34:34+00:00,noreply@github.com,2023-04-13 13:34:34+08:00,"Add max background jobs to configuration (#1374)

Co-authored-by: datavisorbiaoqi <biao.qi@datavisor.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,config_test.cc,cc,3,2,5
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,.clang-tidy,clang-tidy,26,1,27
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,cluster.cc,cc,3,3,6
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,cmd_server.cc,cc,2,2,4
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,cron.cc,cc,3,3,6
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,sha1.h,h,1,1,2
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,config.cc,cc,10,10,20
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,config_type.h,h,5,5,10
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,redis_request.cc,cc,3,3,6
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,server.cc,cc,3,3,6
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,worker.cc,cc,6,6,12
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,stats.cc,cc,1,1,2
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,stats.h,h,4,4,8
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,compaction_checker.cc,cc,5,5,10
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,scripting.cc,cc,30,30,60
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,scripting.h,h,2,2,4
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,storage.cc,cc,2,2,4
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,redis_bitmap.cc,cc,3,3,6
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,redis_geo.cc,cc,6,6,12
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,redis_geo.h,h,1,1,2
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,redis_hash.cc,cc,3,3,6
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,redis_stream.cc,cc,3,3,6
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,redis_zset.h,h,1,1,2
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,compact_test.cc,cc,23,23,46
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,string_reply_test.cc,cc,7,7,14
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,geo_test.cc,cc,6,6,12
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,hash_test.cc,cc,3,3,6
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,config.h,h,2,2,4
0f7f0b201f5ac23002f2877229d4fc410b45aad5,twice.mliu@gmail.com,2023-04-14 00:33:52+08:00,noreply@github.com,2023-04-14 00:33:52+08:00,Enable readability-identifier-naming in clang-tidy (#1383),unstable,True,False,28,parser.cc,cc,4,4,8
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,.clang-tidy,clang-tidy,2,4,6
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cluster.cc,cc,5,5,10
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cluster.h,h,7,7,14
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,replication.cc,cc,28,28,56
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,replication.h,h,4,3,7
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,slot_migrate.cc,cc,15,15,30
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cmd_cluster.cc,cc,10,10,20
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cmd_geo.cc,cc,6,6,12
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cmd_hash.cc,cc,12,12,24
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cmd_list.cc,cc,1,1,2
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cmd_pubsub.cc,cc,2,2,4
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cmd_replication.cc,cc,17,17,34
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cmd_server.cc,cc,14,14,28
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cmd_set.cc,cc,1,1,2
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cmd_sortedint.cc,cc,4,4,8
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cmd_stream.cc,cc,72,72,144
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cmd_string.cc,cc,2,2,4
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cmd_zset.cc,cc,18,18,36
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,command_parser.h,h,9,9,18
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,commander.cc,cc,12,12,24
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,commander.h,h,15,15,30
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,scan_base.h,h,16,16,32
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cron.cc,cc,10,10,20
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cron.h,h,5,5,10
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,event_util.h,h,2,2,4
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,io_util.cc,cc,1,1,2
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,range_spec.cc,cc,8,8,16
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,range_spec.h,h,12,6,18
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,sha1.cc,cc,17,17,34
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,sha1.h,h,3,3,6
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,config.cc,cc,222,220,442
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,config.h,h,131,131,262
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,config_type.h,h,12,12,24
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,main.cc,cc,14,14,28
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_connection.cc,cc,19,19,38
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_reply.h,h,3,2,5
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_request.cc,cc,10,10,20
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,server.cc,cc,92,92,184
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,server.h,h,13,13,26
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,tls_util.cc,cc,18,17,35
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,worker.cc,cc,12,12,24
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,worker.h,h,1,1,2
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,disk_stats.cc,cc,3,3,6
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,log_collector.cc,cc,12,12,24
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,log_collector.h,h,10,10,20
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,stats.cc,cc,16,16,32
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,stats.h,h,19,19,38
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,batch_debugger.h,h,32,32,64
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,batch_extractor.cc,cc,11,11,22
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,compact_filter.cc,cc,1,1,2
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,compaction_checker.cc,cc,2,2,4
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_db.cc,cc,18,18,36
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_metadata.cc,cc,60,60,120
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_metadata.h,h,16,16,32
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,scripting.cc,cc,7,7,14
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,storage.cc,cc,90,90,180
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,storage.h,h,12,12,24
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,geohash.cc,cc,85,85,170
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,geohash.h,h,23,23,46
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_bitmap.cc,cc,23,23,46
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_geo.cc,cc,36,36,72
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_geo.h,h,5,5,10
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_hash.cc,cc,33,33,66
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_hash.h,h,3,3,6
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_list.cc,cc,88,88,176
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_set.cc,cc,14,14,28
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_sortedint.cc,cc,28,28,56
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_sortedint.h,h,4,4,8
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_stream.cc,cc,137,137,274
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_stream_base.cc,cc,23,23,46
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_stream_base.h,h,47,47,94
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_string.cc,cc,13,13,26
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_string.h,h,2,2,4
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_zset.cc,cc,121,121,242
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_zset.h,h,18,18,36
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cluster_test.cc,cc,15,15,30
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,compact_test.cc,cc,4,4,8
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,config_test.cc,cc,9,9,18
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,cron_test.cc,cc,6,6,12
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,disk_test.cc,cc,4,4,8
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,status_test.cc,cc,10,10,20
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,test_base.h,h,6,6,12
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,bitmap_test.cc,cc,16,16,32
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,geo_test.cc,cc,33,33,66
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,hash_test.cc,cc,113,113,226
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,list_test.cc,cc,124,124,248
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,metadata_test.cc,cc,30,30,60
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,set_test.cc,cc,64,64,128
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,sortedint_test.cc,cc,11,11,22
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,stream_test.cc,cc,969,969,1938
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,string_test.cc,cc,82,82,164
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,zset_test.cc,cc,102,102,204
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,config.cc,cc,26,26,52
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,config.h,h,18,18,36
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,main.cc,cc,15,15,30
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,parser.cc,cc,5,5,10
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,redis_writer.cc,cc,4,4,8
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,sync.cc,cc,8,8,16
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,writer.cc,cc,1,1,2
8d4c31ff501ba57ed4d0d1c74366c35fdd1b2372,twice.mliu@gmail.com,2023-04-14 11:30:01+08:00,noreply@github.com,2023-04-14 11:30:01+08:00,Fix member name convension for readability-identifier-naming (#1385),unstable,True,False,100,x.py,py,5,1,6
aa57a13b5febbf0b36dd8675c9cf0307bee35e2b,hulk.website@gmail.com,2023-04-14 12:37:09+08:00,noreply@github.com,2023-04-14 12:37:09+08:00,"Fix missing to set the cluster node id when loading (#1384)

We supported loading the cluster nodes from the local file,
but ignored the cluster node id after parsing. So it can't match the
cluster node since the local node id is empty, then it will fallback
to check if the listening IP and port are matched.",unstable,True,False,3,cluster.cc,cc,2,0,2
aa57a13b5febbf0b36dd8675c9cf0307bee35e2b,hulk.website@gmail.com,2023-04-14 12:37:09+08:00,noreply@github.com,2023-04-14 12:37:09+08:00,"Fix missing to set the cluster node id when loading (#1384)

We supported loading the cluster nodes from the local file,
but ignored the cluster node id after parsing. So it can't match the
cluster node since the local node id is empty, then it will fallback
to check if the listening IP and port are matched.",unstable,True,False,3,cluster_test.go,go,11,4,15
aa57a13b5febbf0b36dd8675c9cf0307bee35e2b,hulk.website@gmail.com,2023-04-14 12:37:09+08:00,noreply@github.com,2023-04-14 12:37:09+08:00,"Fix missing to set the cluster node id when loading (#1384)

We supported loading the cluster nodes from the local file,
but ignored the cluster node id after parsing. So it can't match the
cluster node since the local node id is empty, then it will fallback
to check if the listening IP and port are matched.",unstable,True,False,3,server.go,go,3,1,4
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,.clang-tidy,clang-tidy,2,0,2
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cluster.cc,cc,59,64,123
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cluster.h,h,15,15,30
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,replication.cc,cc,31,31,62
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,slot_import.cc,cc,2,2,4
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,slot_migrate.cc,cc,25,25,50
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,slot_migrate.h,h,12,12,24
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cmd_bit.cc,cc,5,5,10
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cmd_cluster.cc,cc,20,20,40
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cmd_geo.cc,cc,12,12,24
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cmd_hash.cc,cc,26,26,52
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cmd_key.cc,cc,11,11,22
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cmd_list.cc,cc,13,13,26
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cmd_pubsub.cc,cc,3,3,6
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cmd_replication.cc,cc,14,14,28
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cmd_server.cc,cc,26,26,52
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cmd_set.cc,cc,16,16,32
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cmd_sortedint.cc,cc,10,10,20
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cmd_stream.cc,cc,82,82,164
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cmd_string.cc,cc,26,26,52
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cmd_txn.cc,cc,1,1,2
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cmd_zset.cc,cc,36,36,72
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,commander.cc,cc,12,12,24
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,commander.h,h,15,15,30
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cron.cc,cc,10,10,20
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cron.h,h,5,5,10
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,event_util.h,h,2,2,4
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,io_util.cc,cc,1,1,2
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,range_spec.cc,cc,8,8,16
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,range_spec.h,h,6,12,18
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,scope_exit.h,h,8,8,16
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,sha1.cc,cc,17,17,34
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,sha1.h,h,3,3,6
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,status.h,h,26,26,52
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,config.cc,cc,233,235,468
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,config.h,h,127,127,254
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,config_type.h,h,12,12,24
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,main.cc,cc,14,14,28
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_connection.cc,cc,36,36,72
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_connection.h,h,4,4,8
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_request.cc,cc,11,11,22
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,server.cc,cc,171,171,342
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,server.h,h,19,19,38
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,tls_util.cc,cc,17,18,35
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,worker.cc,cc,24,24,48
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,worker.h,h,1,1,2
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,disk_stats.cc,cc,3,3,6
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,log_collector.cc,cc,12,12,24
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,log_collector.h,h,10,10,20
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,stats.cc,cc,16,16,32
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,stats.h,h,19,19,38
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,batch_debugger.h,h,32,32,64
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,batch_extractor.cc,cc,11,11,22
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,compact_filter.cc,cc,1,1,2
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,compaction_checker.cc,cc,2,2,4
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_db.cc,cc,18,18,36
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_metadata.cc,cc,60,60,120
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_metadata.h,h,16,16,32
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,scripting.cc,cc,10,10,20
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,storage.cc,cc,92,92,184
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,storage.h,h,12,12,24
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,geohash.cc,cc,85,85,170
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,geohash.h,h,23,23,46
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_bitmap.cc,cc,23,23,46
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_geo.cc,cc,36,36,72
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_geo.h,h,5,5,10
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_hash.cc,cc,33,33,66
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_hash.h,h,3,3,6
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_list.cc,cc,88,88,176
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_set.cc,cc,14,14,28
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_sortedint.cc,cc,28,28,56
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_sortedint.h,h,4,4,8
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_stream.cc,cc,137,137,274
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_stream_base.cc,cc,23,23,46
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_stream_base.h,h,47,47,94
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_string.cc,cc,13,13,26
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_string.h,h,2,2,4
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_zset.cc,cc,121,121,242
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_zset.h,h,8,8,16
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,cluster_test.cc,cc,15,15,30
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,compact_test.cc,cc,4,4,8
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,config_test.cc,cc,9,9,18
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,disk_test.cc,cc,4,4,8
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,observer_or_unique_test.cc,cc,3,3,6
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,status_test.cc,cc,10,10,20
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,test_base.h,h,6,6,12
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,geo_test.cc,cc,6,6,12
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,hash_test.cc,cc,58,58,116
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,metadata_test.cc,cc,19,19,38
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,stream_test.cc,cc,656,656,1312
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,string_test.cc,cc,15,15,30
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,zset_test.cc,cc,47,47,94
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,config.cc,cc,26,26,52
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,config.h,h,18,18,36
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,main.cc,cc,15,15,30
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,parser.cc,cc,5,5,10
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,redis_writer.cc,cc,4,4,8
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,sync.cc,cc,8,8,16
f40af52ea39fc5a34656b1bf6d6af862dde1ef0e,twice.mliu@gmail.com,2023-04-14 13:38:51+08:00,noreply@github.com,2023-04-14 13:38:51+08:00,"Remove underscore suffix for public member name (#1386)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,99,writer.cc,cc,1,1,2
fcfe561aeb4c69d37f69b3aa111a21a07e5b1c26,twice.mliu@gmail.com,2023-04-14 15:02:18+08:00,noreply@github.com,2023-04-14 15:02:18+08:00,Check static class member and type alias name in readability-identifier-naming (#1387),unstable,True,False,16,.clang-tidy,clang-tidy,14,2,16
fcfe561aeb4c69d37f69b3aa111a21a07e5b1c26,twice.mliu@gmail.com,2023-04-14 15:02:18+08:00,noreply@github.com,2023-04-14 15:02:18+08:00,Check static class member and type alias name in readability-identifier-naming (#1387),unstable,True,False,16,replication.cc,cc,4,4,8
fcfe561aeb4c69d37f69b3aa111a21a07e5b1c26,twice.mliu@gmail.com,2023-04-14 15:02:18+08:00,noreply@github.com,2023-04-14 15:02:18+08:00,Check static class member and type alias name in readability-identifier-naming (#1387),unstable,True,False,16,replication.h,h,3,3,6
fcfe561aeb4c69d37f69b3aa111a21a07e5b1c26,twice.mliu@gmail.com,2023-04-14 15:02:18+08:00,noreply@github.com,2023-04-14 15:02:18+08:00,Check static class member and type alias name in readability-identifier-naming (#1387),unstable,True,False,16,command_parser.h,h,2,2,4
fcfe561aeb4c69d37f69b3aa111a21a07e5b1c26,twice.mliu@gmail.com,2023-04-14 15:02:18+08:00,noreply@github.com,2023-04-14 15:02:18+08:00,Check static class member and type alias name in readability-identifier-naming (#1387),unstable,True,False,16,db_util.h,h,4,4,8
fcfe561aeb4c69d37f69b3aa111a21a07e5b1c26,twice.mliu@gmail.com,2023-04-14 15:02:18+08:00,noreply@github.com,2023-04-14 15:02:18+08:00,Check static class member and type alias name in readability-identifier-naming (#1387),unstable,True,False,16,event_util.h,h,5,5,10
fcfe561aeb4c69d37f69b3aa111a21a07e5b1c26,twice.mliu@gmail.com,2023-04-14 15:02:18+08:00,noreply@github.com,2023-04-14 15:02:18+08:00,Check static class member and type alias name in readability-identifier-naming (#1387),unstable,True,False,16,status.h,h,48,48,96
fcfe561aeb4c69d37f69b3aa111a21a07e5b1c26,twice.mliu@gmail.com,2023-04-14 15:02:18+08:00,noreply@github.com,2023-04-14 15:02:18+08:00,Check static class member and type alias name in readability-identifier-naming (#1387),unstable,True,False,16,config.cc,cc,2,2,4
fcfe561aeb4c69d37f69b3aa111a21a07e5b1c26,twice.mliu@gmail.com,2023-04-14 15:02:18+08:00,noreply@github.com,2023-04-14 15:02:18+08:00,Check static class member and type alias name in readability-identifier-naming (#1387),unstable,True,False,16,config_type.h,h,10,10,20
fcfe561aeb4c69d37f69b3aa111a21a07e5b1c26,twice.mliu@gmail.com,2023-04-14 15:02:18+08:00,noreply@github.com,2023-04-14 15:02:18+08:00,Check static class member and type alias name in readability-identifier-naming (#1387),unstable,True,False,16,redis_connection.cc,cc,2,2,4
fcfe561aeb4c69d37f69b3aa111a21a07e5b1c26,twice.mliu@gmail.com,2023-04-14 15:02:18+08:00,noreply@github.com,2023-04-14 15:02:18+08:00,Check static class member and type alias name in readability-identifier-naming (#1387),unstable,True,False,16,redis_connection.h,h,3,3,6
fcfe561aeb4c69d37f69b3aa111a21a07e5b1c26,twice.mliu@gmail.com,2023-04-14 15:02:18+08:00,noreply@github.com,2023-04-14 15:02:18+08:00,Check static class member and type alias name in readability-identifier-naming (#1387),unstable,True,False,16,server.cc,cc,4,5,9
fcfe561aeb4c69d37f69b3aa111a21a07e5b1c26,twice.mliu@gmail.com,2023-04-14 15:02:18+08:00,noreply@github.com,2023-04-14 15:02:18+08:00,Check static class member and type alias name in readability-identifier-naming (#1387),unstable,True,False,16,server.h,h,1,1,2
fcfe561aeb4c69d37f69b3aa111a21a07e5b1c26,twice.mliu@gmail.com,2023-04-14 15:02:18+08:00,noreply@github.com,2023-04-14 15:02:18+08:00,Check static class member and type alias name in readability-identifier-naming (#1387),unstable,True,False,16,tls_util.h,h,6,6,12
fcfe561aeb4c69d37f69b3aa111a21a07e5b1c26,twice.mliu@gmail.com,2023-04-14 15:02:18+08:00,noreply@github.com,2023-04-14 15:02:18+08:00,Check static class member and type alias name in readability-identifier-naming (#1387),unstable,True,False,16,status_test.cc,cc,4,4,8
fcfe561aeb4c69d37f69b3aa111a21a07e5b1c26,twice.mliu@gmail.com,2023-04-14 15:02:18+08:00,noreply@github.com,2023-04-14 15:02:18+08:00,Check static class member and type alias name in readability-identifier-naming (#1387),unstable,True,False,16,string_reply_test.cc,cc,7,7,14
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,.clang-tidy,clang-tidy,8,7,15
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cluster.cc,cc,21,21,42
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cluster.h,h,8,8,16
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,replication.cc,cc,41,41,82
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,replication.h,h,6,6,12
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,slot_import.h,h,1,1,2
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,slot_migrate.cc,cc,92,92,184
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,slot_migrate.h,h,28,28,56
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cmd_bit.cc,cc,13,13,26
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cmd_cluster.cc,cc,35,35,70
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cmd_geo.cc,cc,38,38,76
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cmd_hash.cc,cc,30,30,60
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cmd_key.cc,cc,34,34,68
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cmd_list.cc,cc,41,41,82
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cmd_pubsub.cc,cc,14,14,28
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cmd_replication.cc,cc,27,27,54
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cmd_script.cc,cc,12,12,24
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cmd_server.cc,cc,100,100,200
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cmd_set.cc,cc,36,36,72
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cmd_sortedint.cc,cc,21,21,42
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cmd_stream.cc,cc,120,120,240
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cmd_string.cc,cc,55,55,110
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cmd_txn.cc,cc,13,13,26
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cmd_zset.cc,cc,67,67,134
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,command_parser.h,h,1,1,2
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,commander.cc,cc,16,16,32
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,commander.h,h,8,8,16
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,error_constants.h,h,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,scan_base.h,h,12,12,24
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,ttl_util.h,h,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,db_util.h,h,4,4,8
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,io_util.cc,cc,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,io_util.h,h,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,parse_util.cc,cc,5,5,10
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,string_util.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,string_util.h,h,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,task_runner.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,thread_util.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,thread_util.h,h,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,time_util.h,h,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,config.cc,cc,19,19,38
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,config.h,h,1,1,2
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,config_util.cc,cc,1,1,2
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,main.cc,cc,5,5,10
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_connection.cc,cc,32,32,64
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_connection.h,h,6,6,12
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_reply.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_reply.h,h,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_request.cc,cc,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_request.h,h,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,server.cc,cc,77,77,154
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,server.h,h,28,28,56
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,tls_util.cc,cc,1,1,2
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,worker.cc,cc,37,37,74
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,worker.h,h,10,10,20
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,disk_stats.cc,cc,10,10,20
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,disk_stats.h,h,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,log_collector.cc,cc,14,14,28
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,stats.cc,cc,1,1,2
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,batch_extractor.cc,cc,10,10,20
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,batch_extractor.h,h,1,1,2
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,compact_filter.cc,cc,4,4,8
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,compact_filter.h,h,9,9,18
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,compaction_checker.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,compaction_checker.h,h,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,event_listener.h,h,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_db.cc,cc,11,11,22
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_db.h,h,8,8,16
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_metadata.cc,cc,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_metadata.h,h,5,5,10
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_pubsub.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_pubsub.h,h,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,scripting.cc,cc,20,20,40
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,scripting.h,h,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,storage.cc,cc,8,8,16
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,storage.h,h,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_bitmap.cc,cc,7,7,14
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_bitmap.h,h,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_bitmap_string.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_bitmap_string.h,h,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_geo.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_geo.h,h,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_hash.cc,cc,4,4,8
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_hash.h,h,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_list.cc,cc,5,5,10
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_list.h,h,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_set.cc,cc,4,4,8
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_set.h,h,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_sortedint.cc,cc,4,4,8
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_sortedint.h,h,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_stream.cc,cc,6,6,12
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_stream.h,h,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_stream_base.cc,cc,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_stream_base.h,h,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_string.cc,cc,8,8,16
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_string.h,h,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_zset.cc,cc,7,7,14
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_zset.h,h,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,cluster_test.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,compact_test.cc,cc,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,config_test.cc,cc,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,disk_test.cc,cc,18,18,36
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,string_reply_test.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,string_util_test.cc,cc,16,16,32
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,task_runner_test.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,test_base.h,h,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,bitmap_test.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,geo_test.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,hash_test.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,list_test.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,metadata_test.cc,cc,8,8,16
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,set_test.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,sortedint_test.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,stream_test.cc,cc,765,765,1530
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,string_test.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,zset_test.cc,cc,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,config.cc,cc,7,7,14
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,config.h,h,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,main.cc,cc,4,4,8
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,parser.cc,cc,11,11,22
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,parser.h,h,2,2,4
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_writer.cc,cc,11,11,22
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,redis_writer.h,h,1,1,2
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,sync.cc,cc,9,9,18
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,sync.h,h,3,3,6
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,writer.cc,cc,1,1,2
7be2af39b8ac996ea5d38ac1615bccfc2fbe4303,twice.mliu@gmail.com,2023-04-14 16:17:16+08:00,noreply@github.com,2023-04-14 16:17:16+08:00,Check method and namespace names in readability-identifier-naming (#1388),unstable,True,False,127,writer.h,h,2,2,4
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,.clang-tidy,clang-tidy,2,0,2
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,redis_slot.cc,cc,2,2,4
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,redis_slot.h,h,1,1,2
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,replication.cc,cc,7,7,14
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,cmd_bit.cc,cc,3,3,6
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,cmd_script.cc,cc,2,2,4
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,io_util.cc,cc,2,2,4
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,io_util.h,h,1,1,2
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,rand.cc,cc,17,13,30
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,rand.h,h,2,2,4
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,string_util.cc,cc,12,12,24
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,config.cc,cc,17,17,34
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,config_type.h,h,4,4,8
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,main.cc,cc,29,29,58
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,event_listener.cc,cc,9,9,18
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,scripting.cc,cc,84,84,168
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,scripting.h,h,32,32,64
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,geohash.cc,cc,61,61,122
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,geohash.h,h,10,10,20
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,redis_bitmap_string.cc,cc,5,5,10
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,redis_geo.cc,cc,3,3,6
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,main.cc,cc,16,16,32
5db4fadff232176c4945bc521696edbd6ee39bc7,twice.mliu@gmail.com,2023-04-14 23:26:41+08:00,noreply@github.com,2023-04-14 23:26:41+08:00,Check function names in readability-identifier-naming (#1390),unstable,True,False,23,sync.cc,cc,1,1,2
7214f6a113fec8b3db07f52a190bb4cdc4dc3baa,twice.mliu@gmail.com,2023-04-15 09:40:33+08:00,noreply@github.com,2023-04-15 09:40:33+08:00,Forbid goto statement and remove useless struct prefix (#1391),unstable,True,False,10,.clang-tidy,clang-tidy,1,1,2
7214f6a113fec8b3db07f52a190bb4cdc4dc3baa,twice.mliu@gmail.com,2023-04-15 09:40:33+08:00,noreply@github.com,2023-04-15 09:40:33+08:00,Forbid goto statement and remove useless struct prefix (#1391),unstable,True,False,10,replication.cc,cc,1,1,2
7214f6a113fec8b3db07f52a190bb4cdc4dc3baa,twice.mliu@gmail.com,2023-04-15 09:40:33+08:00,noreply@github.com,2023-04-15 09:40:33+08:00,Forbid goto statement and remove useless struct prefix (#1391),unstable,True,False,10,cron.h,h,1,1,2
7214f6a113fec8b3db07f52a190bb4cdc4dc3baa,twice.mliu@gmail.com,2023-04-15 09:40:33+08:00,noreply@github.com,2023-04-15 09:40:33+08:00,Forbid goto statement and remove useless struct prefix (#1391),unstable,True,False,10,io_util.cc,cc,2,3,5
7214f6a113fec8b3db07f52a190bb4cdc4dc3baa,twice.mliu@gmail.com,2023-04-15 09:40:33+08:00,noreply@github.com,2023-04-15 09:40:33+08:00,Forbid goto statement and remove useless struct prefix (#1391),unstable,True,False,10,main.cc,cc,3,3,6
7214f6a113fec8b3db07f52a190bb4cdc4dc3baa,twice.mliu@gmail.com,2023-04-15 09:40:33+08:00,noreply@github.com,2023-04-15 09:40:33+08:00,Forbid goto statement and remove useless struct prefix (#1391),unstable,True,False,10,server.cc,cc,2,2,4
7214f6a113fec8b3db07f52a190bb4cdc4dc3baa,twice.mliu@gmail.com,2023-04-15 09:40:33+08:00,noreply@github.com,2023-04-15 09:40:33+08:00,Forbid goto statement and remove useless struct prefix (#1391),unstable,True,False,10,worker.cc,cc,8,13,21
7214f6a113fec8b3db07f52a190bb4cdc4dc3baa,twice.mliu@gmail.com,2023-04-15 09:40:33+08:00,noreply@github.com,2023-04-15 09:40:33+08:00,Forbid goto statement and remove useless struct prefix (#1391),unstable,True,False,10,stats.cc,cc,2,2,4
7214f6a113fec8b3db07f52a190bb4cdc4dc3baa,twice.mliu@gmail.com,2023-04-15 09:40:33+08:00,noreply@github.com,2023-04-15 09:40:33+08:00,Forbid goto statement and remove useless struct prefix (#1391),unstable,True,False,10,redis_db.cc,cc,1,1,2
7214f6a113fec8b3db07f52a190bb4cdc4dc3baa,twice.mliu@gmail.com,2023-04-15 09:40:33+08:00,noreply@github.com,2023-04-15 09:40:33+08:00,Forbid goto statement and remove useless struct prefix (#1391),unstable,True,False,10,redis_metadata.cc,cc,1,3,4
d2aa7b5807c368d9b8066d466164a66fbff58085,binloveplay1314@qq.com,2023-04-19 14:48:18+08:00,noreply@github.com,2023-04-19 14:48:18+08:00,"Add TIME command as Redis (#1394)

This PR adds the TIME command. The TIME command returns the current
server time as a two items list: a Unix timestamp and the amount of
microseconds already elapsed in the current second.

Example:
```
127.0.0.1:6666> time
1) ""1681828105""
2) ""810037""
```",unstable,True,False,2,cmd_server.cc,cc,17,0,17
d2aa7b5807c368d9b8066d466164a66fbff58085,binloveplay1314@qq.com,2023-04-19 14:48:18+08:00,noreply@github.com,2023-04-19 14:48:18+08:00,"Add TIME command as Redis (#1394)

This PR adds the TIME command. The TIME command returns the current
server time as a two items list: a Unix timestamp and the amount of
microseconds already elapsed in the current second.

Example:
```
127.0.0.1:6666> time
1) ""1681828105""
2) ""810037""
```",unstable,True,False,2,introspection_test.go,go,18,0,18
13b828756d90288bc0fa6e7476392da27d2c7f0b,zevin9427@gmail.com,2023-04-20 17:22:02+08:00,noreply@github.com,2023-04-20 17:22:02+08:00,"Convert 0.0.0.0 to local ip addresses when  matching the cluster node (#1392)

Signed-off-by: Zewen Xu <zevin9427@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,5,cluster.cc,cc,3,3,6
13b828756d90288bc0fa6e7476392da27d2c7f0b,zevin9427@gmail.com,2023-04-20 17:22:02+08:00,noreply@github.com,2023-04-20 17:22:02+08:00,"Convert 0.0.0.0 to local ip addresses when  matching the cluster node (#1392)

Signed-off-by: Zewen Xu <zevin9427@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,5,cluster.h,h,1,0,1
13b828756d90288bc0fa6e7476392da27d2c7f0b,zevin9427@gmail.com,2023-04-20 17:22:02+08:00,noreply@github.com,2023-04-20 17:22:02+08:00,"Convert 0.0.0.0 to local ip addresses when  matching the cluster node (#1392)

Signed-off-by: Zewen Xu <zevin9427@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,5,io_util.cc,cc,48,0,48
13b828756d90288bc0fa6e7476392da27d2c7f0b,zevin9427@gmail.com,2023-04-20 17:22:02+08:00,noreply@github.com,2023-04-20 17:22:02+08:00,"Convert 0.0.0.0 to local ip addresses when  matching the cluster node (#1392)

Signed-off-by: Zewen Xu <zevin9427@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,5,io_util.h,h,3,1,4
13b828756d90288bc0fa6e7476392da27d2c7f0b,zevin9427@gmail.com,2023-04-20 17:22:02+08:00,noreply@github.com,2023-04-20 17:22:02+08:00,"Convert 0.0.0.0 to local ip addresses when  matching the cluster node (#1392)

Signed-off-by: Zewen Xu <zevin9427@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,5,io_util_test.cc,cc,28,0,28
1f8fa1ac584847f6146ebdd20ac51285976bd89c,binloveplay1314@qq.com,2023-04-20 20:58:23+08:00,noreply@github.com,2023-04-20 20:58:23+08:00,"Fix CONFIG REWRITE append duplicate newlines (#1397)

In the old code, every time we perform a config rewrite, an
additional newline is appended, see #1396

Because iostream::eof will only return true after reading the
end of the stream. It does not indicate, that the next read will
be the end of the stream.

So every time config rewrite is performed, the old loop will
append a newline in `lines`, and then we will append it to the
conf file.

In addition, the same modification has been made to other similar
places. This PR fixes #1396",unstable,True,False,3,cluster.cc,cc,1,3,4
1f8fa1ac584847f6146ebdd20ac51285976bd89c,binloveplay1314@qq.com,2023-04-20 20:58:23+08:00,noreply@github.com,2023-04-20 20:58:23+08:00,"Fix CONFIG REWRITE append duplicate newlines (#1397)

In the old code, every time we perform a config rewrite, an
additional newline is appended, see #1396

Because iostream::eof will only return true after reading the
end of the stream. It does not indicate, that the next read will
be the end of the stream.

So every time config rewrite is performed, the old loop will
append a newline in `lines`, and then we will append it to the
conf file.

In addition, the same modification has been made to other similar
places. This PR fixes #1396",unstable,True,False,3,config.cc,cc,2,4,6
1f8fa1ac584847f6146ebdd20ac51285976bd89c,binloveplay1314@qq.com,2023-04-20 20:58:23+08:00,noreply@github.com,2023-04-20 20:58:23+08:00,"Fix CONFIG REWRITE append duplicate newlines (#1397)

In the old code, every time we perform a config rewrite, an
additional newline is appended, see #1396

Because iostream::eof will only return true after reading the
end of the stream. It does not indicate, that the next read will
be the end of the stream.

So every time config rewrite is performed, the old loop will
append a newline in `lines`, and then we will append it to the
conf file.

In addition, the same modification has been made to other similar
places. This PR fixes #1396",unstable,True,False,3,config.cc,cc,1,2,3
80fd23cd18c3a5fb7481178356e8675b9b77cafe,aleks.raiden@gmail.com,2023-04-22 06:59:26+03:00,noreply@github.com,2023-04-22 11:59:26+08:00,Bump RocksDB to version 8.1.1 (#1398),unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
94bc804903cec2e5baed3d46299598f6dab7d746,aleks.raiden@gmail.com,2023-04-23 17:56:17+03:00,noreply@github.com,2023-04-23 22:56:17+08:00,Update Snappy to 1.10.0 with compile bug fix (#1400),unstable,True,False,1,snappy.cmake,cmake,2,2,4
6423c99a3142d48cd47705defe5de99993e63527,torwigua@gmail.com,2023-04-24 15:29:02+03:00,noreply@github.com,2023-04-24 20:29:02+08:00,"Add a particular test case for HGETALL with async_io=true (#1401)

Was reproducible with RocksDB v8.0.0, large values in a hash set (>512 bytes).
After the COMPACT command was executed, HGETALL/HVALS/HKEYS couldn't ""see""
all the elements of the hash set. However, HGET could find those values.
It looked like the iterator via the snapshot didn't see them for some reason.
Since the version of the RocksDB was bumped to v8.0.1, the bug disappeared.",unstable,True,False,1,hash_test.go,go,61,12,73
6889b5916ab560ecd5eed79bb9786e36342f0e17,52393536+xiaobiaozhao@users.noreply.github.com,2023-04-25 07:44:47+08:00,noreply@github.com,2023-04-25 07:44:47+08:00,feat: upgrade luajit (#1399),unstable,True,False,1,luajit.cmake,cmake,2,2,4
8cd52915c2bd5c880d6eab66bfaf2081d6a6722e,torwigua@gmail.com,2023-04-29 06:19:07+03:00,noreply@github.com,2023-04-29 11:19:07+08:00,"Add the ability to use the '*-123' pattern to specify stream entry ID via XADD (#1405)

It allows Kvrocks server to set current timestamp as the first part of the
entry ID and provided by the client sequence number as the second part of it.",unstable,True,False,8,cmd_stream.cc,cc,13,19,32
8cd52915c2bd5c880d6eab66bfaf2081d6a6722e,torwigua@gmail.com,2023-04-29 06:19:07+03:00,noreply@github.com,2023-04-29 11:19:07+08:00,"Add the ability to use the '*-123' pattern to specify stream entry ID via XADD (#1405)

It allows Kvrocks server to set current timestamp as the first part of the
entry ID and provided by the client sequence number as the second part of it.",unstable,True,False,8,redis_stream.cc,cc,2,58,60
8cd52915c2bd5c880d6eab66bfaf2081d6a6722e,torwigua@gmail.com,2023-04-29 06:19:07+03:00,noreply@github.com,2023-04-29 11:19:07+08:00,"Add the ability to use the '*-123' pattern to specify stream entry ID via XADD (#1405)

It allows Kvrocks server to set current timestamp as the first part of the
entry ID and provided by the client sequence number as the second part of it.",unstable,True,False,8,redis_stream.h,h,0,2,2
8cd52915c2bd5c880d6eab66bfaf2081d6a6722e,torwigua@gmail.com,2023-04-29 06:19:07+03:00,noreply@github.com,2023-04-29 11:19:07+08:00,"Add the ability to use the '*-123' pattern to specify stream entry ID via XADD (#1405)

It allows Kvrocks server to set current timestamp as the first part of the
entry ID and provided by the client sequence number as the second part of it.",unstable,True,False,8,redis_stream_base.cc,cc,102,35,137
8cd52915c2bd5c880d6eab66bfaf2081d6a6722e,torwigua@gmail.com,2023-04-29 06:19:07+03:00,noreply@github.com,2023-04-29 11:19:07+08:00,"Add the ability to use the '*-123' pattern to specify stream entry ID via XADD (#1405)

It allows Kvrocks server to set current timestamp as the first part of the
entry ID and provided by the client sequence number as the second part of it.",unstable,True,False,8,redis_stream_base.h,h,55,18,73
8cd52915c2bd5c880d6eab66bfaf2081d6a6722e,torwigua@gmail.com,2023-04-29 06:19:07+03:00,noreply@github.com,2023-04-29 11:19:07+08:00,"Add the ability to use the '*-123' pattern to specify stream entry ID via XADD (#1405)

It allows Kvrocks server to set current timestamp as the first part of the
entry ID and provided by the client sequence number as the second part of it.",unstable,True,False,8,disk_test.cc,cc,1,1,2
8cd52915c2bd5c880d6eab66bfaf2081d6a6722e,torwigua@gmail.com,2023-04-29 06:19:07+03:00,noreply@github.com,2023-04-29 11:19:07+08:00,"Add the ability to use the '*-123' pattern to specify stream entry ID via XADD (#1405)

It allows Kvrocks server to set current timestamp as the first part of the
entry ID and provided by the client sequence number as the second part of it.",unstable,True,False,8,stream_test.cc,cc,397,276,673
8cd52915c2bd5c880d6eab66bfaf2081d6a6722e,torwigua@gmail.com,2023-04-29 06:19:07+03:00,noreply@github.com,2023-04-29 11:19:07+08:00,"Add the ability to use the '*-123' pattern to specify stream entry ID via XADD (#1405)

It allows Kvrocks server to set current timestamp as the first part of the
entry ID and provided by the client sequence number as the second part of it.",unstable,True,False,8,stream_test.go,go,29,0,29
c2c05647b161505cf721595647bfc776d9fb1a9f,rueiancsie@gmail.com,2023-04-29 14:11:16+08:00,noreply@github.com,2023-04-29 14:11:16+08:00,"Allow default username and fix case sensitive check in HELLO (#1406)

Signed-off-by: Rueian <rueiancsie@gmail.com>",unstable,True,False,2,cmd_server.cc,cc,13,3,16
c2c05647b161505cf721595647bfc776d9fb1a9f,rueiancsie@gmail.com,2023-04-29 14:11:16+08:00,noreply@github.com,2023-04-29 14:11:16+08:00,"Allow default username and fix case sensitive check in HELLO (#1406)

Signed-off-by: Rueian <rueiancsie@gmail.com>",unstable,True,False,2,hello_test.go,go,37,0,37
628fc2d858e40b6e5c2631978bbceabd65ceea13,twice.mliu@gmail.com,2023-04-29 19:01:31+08:00,noreply@github.com,2023-04-29 19:01:31+08:00,"Rename internal macro ENABLE_NEW_ENCODING to METADATA_ENCODING_VERSION (#1408)

As described in https://kvrocks.apache.org/community/data-structure-on-rocksdb, `KVROCKS_ENCODING_VERSION` seems to be a more scalable name than `ENABLE_NEW_ENCODING`, since the NEW encoding can become an OLD encoding, but the encoding version can be a definite number.",unstable,True,False,4,CMakeLists.txt,txt,3,1,4
628fc2d858e40b6e5c2631978bbceabd65ceea13,twice.mliu@gmail.com,2023-04-29 19:01:31+08:00,noreply@github.com,2023-04-29 19:01:31+08:00,"Rename internal macro ENABLE_NEW_ENCODING to METADATA_ENCODING_VERSION (#1408)

As described in https://kvrocks.apache.org/community/data-structure-on-rocksdb, `KVROCKS_ENCODING_VERSION` seems to be a more scalable name than `ENABLE_NEW_ENCODING`, since the NEW encoding can become an OLD encoding, but the encoding version can be a definite number.",unstable,True,False,4,redis_metadata.h,h,1,7,8
30e9fd788a4acb585566a008f4d5fff65ee06ce3,twice.mliu@gmail.com,2023-04-29 20:43:21+08:00,noreply@github.com,2023-04-29 20:43:21+08:00,Remove useless type cast in redis_slot.cc (#1409),unstable,True,False,2,redis_slot.cc,cc,4,5,9
30e9fd788a4acb585566a008f4d5fff65ee06ce3,twice.mliu@gmail.com,2023-04-29 20:43:21+08:00,noreply@github.com,2023-04-29 20:43:21+08:00,Remove useless type cast in redis_slot.cc (#1409),unstable,True,False,2,redis_slot.h,h,1,1,2
f4aa7e2fc511dc8c3d3034e4c021026191367a2d,43447882+ZENOTME@users.noreply.github.com,2023-05-05 15:46:00+08:00,noreply@github.com,2023-05-05 15:46:00+08:00,"Support specifying release candidate number in x.py (#1419)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,1,x.py,py,7,4,11
ff715c5d795f1433855ed71c7dd682f9d9081edb,twice.mliu@gmail.com,2023-05-05 20:01:50+08:00,noreply@github.com,2023-05-05 20:01:50+08:00,Introduce UniqueEvent and CallbackBase for more intuitive event handle (#1420),unstable,True,False,16,replication.cc,cc,9,10,19
ff715c5d795f1433855ed71c7dd682f9d9081edb,twice.mliu@gmail.com,2023-05-05 20:01:50+08:00,noreply@github.com,2023-05-05 20:01:50+08:00,Introduce UniqueEvent and CallbackBase for more intuitive event handle (#1420),unstable,True,False,16,replication.h,h,4,3,7
ff715c5d795f1433855ed71c7dd682f9d9081edb,twice.mliu@gmail.com,2023-05-05 20:01:50+08:00,noreply@github.com,2023-05-05 20:01:50+08:00,Introduce UniqueEvent and CallbackBase for more intuitive event handle (#1420),unstable,True,False,16,slot_migrate.h,h,1,1,2
ff715c5d795f1433855ed71c7dd682f9d9081edb,twice.mliu@gmail.com,2023-05-05 20:01:50+08:00,noreply@github.com,2023-05-05 20:01:50+08:00,Introduce UniqueEvent and CallbackBase for more intuitive event handle (#1420),unstable,True,False,16,cmd_list.cc,cc,26,36,62
ff715c5d795f1433855ed71c7dd682f9d9081edb,twice.mliu@gmail.com,2023-05-05 20:01:50+08:00,noreply@github.com,2023-05-05 20:01:50+08:00,Introduce UniqueEvent and CallbackBase for more intuitive event handle (#1420),unstable,True,False,16,cmd_replication.cc,cc,1,1,2
ff715c5d795f1433855ed71c7dd682f9d9081edb,twice.mliu@gmail.com,2023-05-05 20:01:50+08:00,noreply@github.com,2023-05-05 20:01:50+08:00,Introduce UniqueEvent and CallbackBase for more intuitive event handle (#1420),unstable,True,False,16,cmd_stream.cc,cc,36,45,81
ff715c5d795f1433855ed71c7dd682f9d9081edb,twice.mliu@gmail.com,2023-05-05 20:01:50+08:00,noreply@github.com,2023-05-05 20:01:50+08:00,Introduce UniqueEvent and CallbackBase for more intuitive event handle (#1420),unstable,True,False,16,event_util.h,h,68,0,68
ff715c5d795f1433855ed71c7dd682f9d9081edb,twice.mliu@gmail.com,2023-05-05 20:01:50+08:00,noreply@github.com,2023-05-05 20:01:50+08:00,Introduce UniqueEvent and CallbackBase for more intuitive event handle (#1420),unstable,True,False,16,io_util.cc,cc,1,1,2
ff715c5d795f1433855ed71c7dd682f9d9081edb,twice.mliu@gmail.com,2023-05-05 20:01:50+08:00,noreply@github.com,2023-05-05 20:01:50+08:00,Introduce UniqueEvent and CallbackBase for more intuitive event handle (#1420),unstable,True,False,16,main.cc,cc,1,1,2
ff715c5d795f1433855ed71c7dd682f9d9081edb,twice.mliu@gmail.com,2023-05-05 20:01:50+08:00,noreply@github.com,2023-05-05 20:01:50+08:00,Introduce UniqueEvent and CallbackBase for more intuitive event handle (#1420),unstable,True,False,16,redis_connection.cc,cc,17,20,37
ff715c5d795f1433855ed71c7dd682f9d9081edb,twice.mliu@gmail.com,2023-05-05 20:01:50+08:00,noreply@github.com,2023-05-05 20:01:50+08:00,Introduce UniqueEvent and CallbackBase for more intuitive event handle (#1420),unstable,True,False,16,redis_connection.h,h,5,4,9
ff715c5d795f1433855ed71c7dd682f9d9081edb,twice.mliu@gmail.com,2023-05-05 20:01:50+08:00,noreply@github.com,2023-05-05 20:01:50+08:00,Introduce UniqueEvent and CallbackBase for more intuitive event handle (#1420),unstable,True,False,16,worker.cc,cc,8,9,17
ff715c5d795f1433855ed71c7dd682f9d9081edb,twice.mliu@gmail.com,2023-05-05 20:01:50+08:00,noreply@github.com,2023-05-05 20:01:50+08:00,Introduce UniqueEvent and CallbackBase for more intuitive event handle (#1420),unstable,True,False,16,worker.h,h,5,3,8
ff715c5d795f1433855ed71c7dd682f9d9081edb,twice.mliu@gmail.com,2023-05-05 20:01:50+08:00,noreply@github.com,2023-05-05 20:01:50+08:00,Introduce UniqueEvent and CallbackBase for more intuitive event handle (#1420),unstable,True,False,16,stats.cc,cc,1,1,2
ff715c5d795f1433855ed71c7dd682f9d9081edb,twice.mliu@gmail.com,2023-05-05 20:01:50+08:00,noreply@github.com,2023-05-05 20:01:50+08:00,Introduce UniqueEvent and CallbackBase for more intuitive event handle (#1420),unstable,True,False,16,storage.cc,cc,1,1,2
f416fbb3966a9965611d0fd9aca4c32a26d0babc,95634254+ColinChamber@users.noreply.github.com,2023-05-05 21:12:19+08:00,noreply@github.com,2023-05-05 21:12:19+08:00,Add redis cli to the docker image (#1415),unstable,True,False,1,Dockerfile,None,11,1,12
70b12c6efa8e9c168bfe0e01d8cb2ede9fc6232f,wander4096@gmail.com,2023-05-06 17:49:15+08:00,noreply@github.com,2023-05-06 17:49:15+08:00,"ci: add path-filter (#1422)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,changes.yml,yml,29,0,29
70b12c6efa8e9c168bfe0e01d8cb2ede9fc6232f,wander4096@gmail.com,2023-05-06 17:49:15+08:00,noreply@github.com,2023-05-06 17:49:15+08:00,"ci: add path-filter (#1422)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,kvrocks.yaml,yaml,25,2,27
eaf0471494ee69a45f27b1abdcf5c47138d99355,wander4096@gmail.com,2023-05-06 19:04:21+08:00,noreply@github.com,2023-05-06 19:04:21+08:00,"ci: fix needs param (#1427)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,changes.yml,yml,1,1,2
eaf0471494ee69a45f27b1abdcf5c47138d99355,wander4096@gmail.com,2023-05-06 19:04:21+08:00,noreply@github.com,2023-05-06 19:04:21+08:00,"ci: fix needs param (#1427)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,kvrocks.yaml,yaml,4,3,7
1837f8fd760aa9e12df2dd72406144eaa1e415cd,aleks.raiden@gmail.com,2023-05-06 15:15:49+03:00,noreply@github.com,2023-05-06 20:15:49+08:00,build(dep): bump jsoncons to v0.170.1 (#1426),unstable,True,False,1,jsoncons.cmake,cmake,2,2,4
a66ad9ace318a25d3e13180d42fa491baf844573,wander4096@gmail.com,2023-05-07 16:23:09+08:00,noreply@github.com,2023-05-07 16:23:09+08:00,"feat: Catch up `ZRANGE` options (#1428)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,cmd_zset.cc,cc,153,142,295
a66ad9ace318a25d3e13180d42fa491baf844573,wander4096@gmail.com,2023-05-07 16:23:09+08:00,noreply@github.com,2023-05-07 16:23:09+08:00,"feat: Catch up `ZRANGE` options (#1428)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,range_spec.cc,cc,51,0,51
a66ad9ace318a25d3e13180d42fa491baf844573,wander4096@gmail.com,2023-05-07 16:23:09+08:00,noreply@github.com,2023-05-07 16:23:09+08:00,"feat: Catch up `ZRANGE` options (#1428)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,range_spec.h,h,28,6,34
a66ad9ace318a25d3e13180d42fa491baf844573,wander4096@gmail.com,2023-05-07 16:23:09+08:00,noreply@github.com,2023-05-07 16:23:09+08:00,"feat: Catch up `ZRANGE` options (#1428)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,redis_geo.cc,cc,1,1,2
a66ad9ace318a25d3e13180d42fa491baf844573,wander4096@gmail.com,2023-05-07 16:23:09+08:00,noreply@github.com,2023-05-07 16:23:09+08:00,"feat: Catch up `ZRANGE` options (#1428)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,redis_zset.cc,cc,25,58,83
a66ad9ace318a25d3e13180d42fa491baf844573,wander4096@gmail.com,2023-05-07 16:23:09+08:00,noreply@github.com,2023-05-07 16:23:09+08:00,"feat: Catch up `ZRANGE` options (#1428)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,redis_zset.h,h,22,23,45
a66ad9ace318a25d3e13180d42fa491baf844573,wander4096@gmail.com,2023-05-07 16:23:09+08:00,noreply@github.com,2023-05-07 16:23:09+08:00,"feat: Catch up `ZRANGE` options (#1428)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,zset_test.cc,cc,12,5,17
a66ad9ace318a25d3e13180d42fa491baf844573,wander4096@gmail.com,2023-05-07 16:23:09+08:00,noreply@github.com,2023-05-07 16:23:09+08:00,"feat: Catch up `ZRANGE` options (#1428)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,zset_test.go,go,112,0,112
a66ad9ace318a25d3e13180d42fa491baf844573,wander4096@gmail.com,2023-05-07 16:23:09+08:00,noreply@github.com,2023-05-07 16:23:09+08:00,"feat: Catch up `ZRANGE` options (#1428)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,9,x.py,py,2,2,4
c98513701f25e6de066a93a59da607bfc391330e,wander4096@gmail.com,2023-05-07 22:11:39+08:00,noreply@github.com,2023-05-07 22:11:39+08:00,"refactor: zset ranges (#1429)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,cmd_hash.cc,cc,1,1,2
c98513701f25e6de066a93a59da607bfc391330e,wander4096@gmail.com,2023-05-07 22:11:39+08:00,noreply@github.com,2023-05-07 22:11:39+08:00,"refactor: zset ranges (#1429)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,cmd_zset.cc,cc,60,69,129
c98513701f25e6de066a93a59da607bfc391330e,wander4096@gmail.com,2023-05-07 22:11:39+08:00,noreply@github.com,2023-05-07 22:11:39+08:00,"refactor: zset ranges (#1429)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,range_spec.cc,cc,3,3,6
c98513701f25e6de066a93a59da607bfc391330e,wander4096@gmail.com,2023-05-07 22:11:39+08:00,noreply@github.com,2023-05-07 22:11:39+08:00,"refactor: zset ranges (#1429)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,range_spec.h,h,13,13,26
c98513701f25e6de066a93a59da607bfc391330e,wander4096@gmail.com,2023-05-07 22:11:39+08:00,noreply@github.com,2023-05-07 22:11:39+08:00,"refactor: zset ranges (#1429)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,redis_geo.cc,cc,1,1,2
c98513701f25e6de066a93a59da607bfc391330e,wander4096@gmail.com,2023-05-07 22:11:39+08:00,noreply@github.com,2023-05-07 22:11:39+08:00,"refactor: zset ranges (#1429)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,redis_hash.cc,cc,1,1,2
c98513701f25e6de066a93a59da607bfc391330e,wander4096@gmail.com,2023-05-07 22:11:39+08:00,noreply@github.com,2023-05-07 22:11:39+08:00,"refactor: zset ranges (#1429)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,redis_hash.h,h,1,2,3
c98513701f25e6de066a93a59da607bfc391330e,wander4096@gmail.com,2023-05-07 22:11:39+08:00,noreply@github.com,2023-05-07 22:11:39+08:00,"refactor: zset ranges (#1429)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,redis_zset.cc,cc,42,54,96
c98513701f25e6de066a93a59da607bfc391330e,wander4096@gmail.com,2023-05-07 22:11:39+08:00,noreply@github.com,2023-05-07 22:11:39+08:00,"refactor: zset ranges (#1429)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,redis_zset.h,h,13,16,29
c98513701f25e6de066a93a59da607bfc391330e,wander4096@gmail.com,2023-05-07 22:11:39+08:00,noreply@github.com,2023-05-07 22:11:39+08:00,"refactor: zset ranges (#1429)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,hash_test.cc,cc,3,3,6
c98513701f25e6de066a93a59da607bfc391330e,wander4096@gmail.com,2023-05-07 22:11:39+08:00,noreply@github.com,2023-05-07 22:11:39+08:00,"refactor: zset ranges (#1429)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,11,zset_test.cc,cc,36,15,51
41b4273de68cbd0ad02864b629c780ec15cf5bbd,torwigua@gmail.com,2023-05-08 03:37:05+03:00,noreply@github.com,2023-05-08 08:37:05+08:00,Return error from CommandZRangeGeneric in case of unexpected range_type (#1430),unstable,True,False,1,cmd_zset.cc,cc,2,0,2
476c9c035fd432cb6a34691dbf317f8617624931,aleks.raiden@gmail.com,2023-05-08 06:42:05+03:00,noreply@github.com,2023-05-08 11:42:05+08:00,build(dep): Bump oneTBB v2021.9.0 (#1432),unstable,True,False,1,tbb.cmake,cmake,2,2,4
0494d2aab689c3fe8e26357aa0d735e6b06d1f75,aleks.raiden@gmail.com,2023-05-08 08:58:37+03:00,noreply@github.com,2023-05-08 13:58:37+08:00,"Replace header <sys/poll.h> to <poll.h> in io_util.cc

... any POSIX compliant system should support poll.h",unstable,True,False,1,io_util.cc,cc,1,1,2
53a8bd05d8ca4b89ffd6651520975a0d891e543c,aleks.raiden@gmail.com,2023-05-08 10:18:17+03:00,noreply@github.com,2023-05-08 15:18:17+08:00,Fix backtrace lib for musl building support (#1431),unstable,True,False,1,CMakeLists.txt,txt,4,1,5
9255a00fb2c9938718152122ed732f9af2b1c8b4,twice.mliu@gmail.com,2023-05-11 19:43:46+08:00,noreply@github.com,2023-05-11 19:43:46+08:00,Rename KvrocksLabs to RocksLabs in cmake (#1436),unstable,True,False,2,lua.cmake,cmake,1,1,2
9255a00fb2c9938718152122ed732f9af2b1c8b4,twice.mliu@gmail.com,2023-05-11 19:43:46+08:00,noreply@github.com,2023-05-11 19:43:46+08:00,Rename KvrocksLabs to RocksLabs in cmake (#1436),unstable,True,False,2,luajit.cmake,cmake,1,1,2
db4ff401cdf4512d9fc983ab607922d78b23b1cf,hulk.website@gmail.com,2023-05-12 22:16:48+08:00,noreply@github.com,2023-05-12 22:16:48+08:00,Relax the lower bound of the expiration test case to make tests more stable (#1437),unstable,True,False,1,metadata_test.cc,cc,3,2,5
255019c76f03c7b15bf83315fbbf663e255f5008,aleks.raiden@gmail.com,2023-05-13 05:18:43+03:00,noreply@github.com,2023-05-13 10:18:43+08:00,Bump fmtlib to 10.0.0 (#1435),unstable,True,False,2,fmt.cmake,cmake,2,2,4
255019c76f03c7b15bf83315fbbf663e255f5008,aleks.raiden@gmail.com,2023-05-13 05:18:43+03:00,noreply@github.com,2023-05-13 10:18:43+08:00,Bump fmtlib to 10.0.0 (#1435),unstable,True,False,2,slot_migrate.cc,cc,1,1,2
06c793be9a3ece3ee1d7e0ec42c25a0a5e3584fa,aleks.raiden@gmail.com,2023-05-14 05:44:58+03:00,noreply@github.com,2023-05-14 10:44:58+08:00,Upgrade jsoncons  to v170.0.2 (#1438),unstable,True,False,1,jsoncons.cmake,cmake,2,2,4
d2d10f7dd220992a2c7cf9f1b44a96a6c6ac80a7,infdahai@outlook.com,2023-05-14 19:53:31+08:00,noreply@github.com,2023-05-14 19:53:31+08:00,Add support of the slot batch for CLUSTERX SETSLOT (#1414),unstable,True,False,10,cluster.cc,cc,27,38,65
d2d10f7dd220992a2c7cf9f1b44a96a6c6ac80a7,infdahai@outlook.com,2023-05-14 19:53:31+08:00,noreply@github.com,2023-05-14 19:53:31+08:00,Add support of the slot batch for CLUSTERX SETSLOT (#1414),unstable,True,False,10,cluster.h,h,2,9,11
d2d10f7dd220992a2c7cf9f1b44a96a6c6ac80a7,infdahai@outlook.com,2023-05-14 19:53:31+08:00,noreply@github.com,2023-05-14 19:53:31+08:00,Add support of the slot batch for CLUSTERX SETSLOT (#1414),unstable,True,False,10,cluster_defs.h,h,43,0,43
d2d10f7dd220992a2c7cf9f1b44a96a6c6ac80a7,infdahai@outlook.com,2023-05-14 19:53:31+08:00,noreply@github.com,2023-05-14 19:53:31+08:00,Add support of the slot batch for CLUSTERX SETSLOT (#1414),unstable,True,False,10,redis_slot.h,h,1,0,1
d2d10f7dd220992a2c7cf9f1b44a96a6c6ac80a7,infdahai@outlook.com,2023-05-14 19:53:31+08:00,noreply@github.com,2023-05-14 19:53:31+08:00,Add support of the slot batch for CLUSTERX SETSLOT (#1414),unstable,True,False,10,cmd_cluster.cc,cc,6,11,17
d2d10f7dd220992a2c7cf9f1b44a96a6c6ac80a7,infdahai@outlook.com,2023-05-14 19:53:31+08:00,noreply@github.com,2023-05-14 19:53:31+08:00,Add support of the slot batch for CLUSTERX SETSLOT (#1414),unstable,True,False,10,commander.cc,cc,50,0,50
d2d10f7dd220992a2c7cf9f1b44a96a6c6ac80a7,infdahai@outlook.com,2023-05-14 19:53:31+08:00,noreply@github.com,2023-05-14 19:53:31+08:00,Add support of the slot batch for CLUSTERX SETSLOT (#1414),unstable,True,False,10,commander.h,h,7,0,7
d2d10f7dd220992a2c7cf9f1b44a96a6c6ac80a7,infdahai@outlook.com,2023-05-14 19:53:31+08:00,noreply@github.com,2023-05-14 19:53:31+08:00,Add support of the slot batch for CLUSTERX SETSLOT (#1414),unstable,True,False,10,encoding.h,h,1,0,1
d2d10f7dd220992a2c7cf9f1b44a96a6c6ac80a7,infdahai@outlook.com,2023-05-14 19:53:31+08:00,noreply@github.com,2023-05-14 19:53:31+08:00,Add support of the slot batch for CLUSTERX SETSLOT (#1414),unstable,True,False,10,cluster_test.cc,cc,130,0,130
d2d10f7dd220992a2c7cf9f1b44a96a6c6ac80a7,infdahai@outlook.com,2023-05-14 19:53:31+08:00,noreply@github.com,2023-05-14 19:53:31+08:00,Add support of the slot batch for CLUSTERX SETSLOT (#1414),unstable,True,False,10,cluster_test.go,go,6,6,12
75db3e42df8a715339abaf02d640f3c62d43304a,impc53802956@163.com,2023-05-15 09:07:51+08:00,noreply@github.com,2023-05-15 09:07:51+08:00,"Support blocking migration for the cluster migrate command (#1418)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,cluster.cc,cc,3,5,8
75db3e42df8a715339abaf02d640f3c62d43304a,impc53802956@163.com,2023-05-15 09:07:51+08:00,noreply@github.com,2023-05-15 09:07:51+08:00,"Support blocking migration for the cluster migrate command (#1418)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,cluster.h,h,2,1,3
75db3e42df8a715339abaf02d640f3c62d43304a,impc53802956@163.com,2023-05-15 09:07:51+08:00,noreply@github.com,2023-05-15 09:07:51+08:00,"Support blocking migration for the cluster migrate command (#1418)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,slot_migrate.cc,cc,31,1,32
75db3e42df8a715339abaf02d640f3c62d43304a,impc53802956@163.com,2023-05-15 09:07:51+08:00,noreply@github.com,2023-05-15 09:07:51+08:00,"Support blocking migration for the cluster migrate command (#1418)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,slot_migrate.h,h,11,2,13
75db3e42df8a715339abaf02d640f3c62d43304a,impc53802956@163.com,2023-05-15 09:07:51+08:00,noreply@github.com,2023-05-15 09:07:51+08:00,"Support blocking migration for the cluster migrate command (#1418)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,sync_migrate_context.cc,cc,81,0,81
75db3e42df8a715339abaf02d640f3c62d43304a,impc53802956@163.com,2023-05-15 09:07:51+08:00,noreply@github.com,2023-05-15 09:07:51+08:00,"Support blocking migration for the cluster migrate command (#1418)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,sync_migrate_context.h,h,43,0,43
75db3e42df8a715339abaf02d640f3c62d43304a,impc53802956@163.com,2023-05-15 09:07:51+08:00,noreply@github.com,2023-05-15 09:07:51+08:00,"Support blocking migration for the cluster migrate command (#1418)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,cmd_cluster.cc,cc,33,2,35
75db3e42df8a715339abaf02d640f3c62d43304a,impc53802956@163.com,2023-05-15 09:07:51+08:00,noreply@github.com,2023-05-15 09:07:51+08:00,"Support blocking migration for the cluster migrate command (#1418)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,slotmigrate_test.go,go,78,4,82
015ab4a0f6e906c8e9e76aa32a1fd6de0f6cb792,torwigua@gmail.com,2023-05-16 10:33:38+03:00,noreply@github.com,2023-05-16 15:33:38+08:00,Suppress error in TBB to make build failure for GCC 12 and above (#1440),unstable,True,False,1,tbb.cmake,cmake,4,0,4
27e843c5ee4e01bb0f4d083b362f22b61c285365,wanghenshui@qq.com,2023-05-17 12:00:11+08:00,noreply@github.com,2023-05-17 12:00:11+08:00,"Support RocksDB auto-tune rate limiter for the background IO (#1424)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,kvrocks.conf,conf,8,0,8
27e843c5ee4e01bb0f4d083b362f22b61c285365,wanghenshui@qq.com,2023-05-17 12:00:11+08:00,noreply@github.com,2023-05-17 12:00:11+08:00,"Support RocksDB auto-tune rate limiter for the background IO (#1424)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,config.cc,cc,1,0,1
27e843c5ee4e01bb0f4d083b362f22b61c285365,wanghenshui@qq.com,2023-05-17 12:00:11+08:00,noreply@github.com,2023-05-17 12:00:11+08:00,"Support RocksDB auto-tune rate limiter for the background IO (#1424)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,config.h,h,1,0,1
27e843c5ee4e01bb0f4d083b362f22b61c285365,wanghenshui@qq.com,2023-05-17 12:00:11+08:00,noreply@github.com,2023-05-17 12:00:11+08:00,"Support RocksDB auto-tune rate limiter for the background IO (#1424)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,storage.cc,cc,6,2,8
27e843c5ee4e01bb0f4d083b362f22b61c285365,wanghenshui@qq.com,2023-05-17 12:00:11+08:00,noreply@github.com,2023-05-17 12:00:11+08:00,"Support RocksDB auto-tune rate limiter for the background IO (#1424)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,config_test.cc,cc,1,0,1
a398c6f2e6c7e4efacdcf3d616413420799efdc0,aleks.raiden@gmail.com,2023-05-17 16:53:06+03:00,noreply@github.com,2023-05-17 21:53:06+08:00,"Docker image based on Alpine Linux (#1434)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,.dockerignore,dockerignore,4,0,4
a398c6f2e6c7e4efacdcf3d616413420799efdc0,aleks.raiden@gmail.com,2023-05-17 16:53:06+03:00,noreply@github.com,2023-05-17 21:53:06+08:00,"Docker image based on Alpine Linux (#1434)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,Dockerfile,None,24,15,39
640d32ed808f94a961d2eeefe06b1831e159f500,impc53802956@163.com,2023-05-19 18:18:27+08:00,noreply@github.com,2023-05-19 18:18:27+08:00,"Use constexpr to simplify the getXXX method in EvbufCallbackBase (#1443)

We used the conditional template to implement the getXXX method in the class EvbufCallbackBase
and need to create a function twice for the if-else condition. This can be simplified by using the constexpr.",unstable,True,False,1,event_util.h,h,16,22,38
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,go.mod,mod,9,9,18
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,go.sum,sum,21,19,40
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,cluster_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,replication_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,slotmigrate_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,tls_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,disk_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,geo_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,hello_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,introspection_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,multi_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,pubsub_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,scan_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,scripting_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,slowlog_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,bitmap_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,list_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,set_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,stream_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,strings_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,zset_test.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,client.go,go,1,1,2
62a0d1b651fdd8674a064f9457d01cbfb6207d38,infdahai@outlook.com,2023-05-19 22:41:55+08:00,noreply@github.com,2023-05-19 22:41:55+08:00,"Migrate go-redis/redis to redis/go-redis in Go tests(#1446)

What's changed and what's your intention?

- And more specifically, I want to use bzpop<max|min|null>, <z|s>intercard, zmpop go APIs to write some go-unit tests for supporting more commands from `zset` or `set` in `kvrocks`. These commands from redis(version >= 6.2) are not implemented in this project.

- Due to https://github.com/redis/go-redis/discussions/2560#discussioncomment-5720447, we should use `replace` in `go.mod` or change `""github.com/go-redis/redis/v9""` from import-blocks in go files.
The latter is more similar to https://github.com/contribsys/faktory/commit/4454c4a063a7818a1159f2ca5529db9e6094b135 and I prefer to try this based on https://github.com/golang-jwt/jwt/issues/37#issuecomment-892056084.",unstable,True,False,23,server.go,go,1,1,2
fb0e3d42031a6e0691c7a736711d0a01d72bdb1a,hulk.website@gmail.com,2023-05-19 23:58:01+08:00,noreply@github.com,2023-05-19 23:58:01+08:00,"Fix flaky test case in Go unit/type/list.go (#1449)

Currently, we use the list key 'l' in multiple test cases and they may interact with each other. So we fix it by using a dedicated key for each test case.

For failure logs can see: https://github.com/apache/incubator-kvrocks/actions/runs/5014908898/jobs/8991680649#step:12:104",unstable,True,False,1,list_test.go,go,2,2,4
60d13ef9c71a401b59a011f686a1b8e6024360e4,zevin9427@gmail.com,2023-05-22 13:27:41+08:00,noreply@github.com,2023-05-22 13:27:41+08:00,"Use the rocksdb mget to improve the performance (#1453)

DB::MultiGet pushes fields query to RocksDB, thus RocksDB can perform optimizations, such as async io by io uring.
Although this optimization is less than mget for strings, it is valuable 
because different fields may lies in different levels of the LSM Tree, thus async io can take effect.",unstable,True,False,1,redis_hash.cc,cc,18,7,25
635dd311e5d07007826ae5338eae4cefb88ccc55,hulk.website@gmail.com,2023-05-22 17:22:20+08:00,noreply@github.com,2023-05-22 17:22:20+08:00,"Don't use auto-retry in unit/type/list_test.go (#1463)

Currently, go-redis will auto-retry if the request was timeout and it may cause the duplicate push in the list test case. 

So we need to manually disable it to reduce the possibility of the CI test.",unstable,True,False,1,list_test.go,go,2,1,3
4fc44129f34a7e7a304a6ed71259d88daa61f44c,hulk.website@gmail.com,2023-05-24 08:08:54+08:00,noreply@github.com,2023-05-24 08:08:54+08:00,"Change the migration timeout type from float to int (#1464)

Currently, the migration timeout is a float and allows using 1.2 to represent
the 1.2s, but it's a bit inconsistent with other timeouts like BRPOP which requires
the timeout to be an integer. So to make the timeout more consistent, we would like
to change the migration timeout from the float to int as well.

This PR also fixed the flaky test since the previous migration timeout 0.5s was too short
and cause test case failure frequently.",unstable,True,False,4,sync_migrate_context.cc,cc,1,2,3
4fc44129f34a7e7a304a6ed71259d88daa61f44c,hulk.website@gmail.com,2023-05-24 08:08:54+08:00,noreply@github.com,2023-05-24 08:08:54+08:00,"Change the migration timeout type from float to int (#1464)

Currently, the migration timeout is a float and allows using 1.2 to represent
the 1.2s, but it's a bit inconsistent with other timeouts like BRPOP which requires
the timeout to be an integer. So to make the timeout more consistent, we would like
to change the migration timeout from the float to int as well.

This PR also fixed the flaky test since the previous migration timeout 0.5s was too short
and cause test case failure frequently.",unstable,True,False,4,sync_migrate_context.h,h,2,2,4
4fc44129f34a7e7a304a6ed71259d88daa61f44c,hulk.website@gmail.com,2023-05-24 08:08:54+08:00,noreply@github.com,2023-05-24 08:08:54+08:00,"Change the migration timeout type from float to int (#1464)

Currently, the migration timeout is a float and allows using 1.2 to represent
the 1.2s, but it's a bit inconsistent with other timeouts like BRPOP which requires
the timeout to be an integer. So to make the timeout more consistent, we would like
to change the migration timeout from the float to int as well.

This PR also fixed the flaky test since the previous migration timeout 0.5s was too short
and cause test case failure frequently.",unstable,True,False,4,cmd_cluster.cc,cc,9,2,11
4fc44129f34a7e7a304a6ed71259d88daa61f44c,hulk.website@gmail.com,2023-05-24 08:08:54+08:00,noreply@github.com,2023-05-24 08:08:54+08:00,"Change the migration timeout type from float to int (#1464)

Currently, the migration timeout is a float and allows using 1.2 to represent
the 1.2s, but it's a bit inconsistent with other timeouts like BRPOP which requires
the timeout to be an integer. So to make the timeout more consistent, we would like
to change the migration timeout from the float to int as well.

This PR also fixed the flaky test since the previous migration timeout 0.5s was too short
and cause test case failure frequently.",unstable,True,False,4,slotmigrate_test.go,go,22,21,43
b9cfbead58f68aa914bb35360f82c3f8e0ec8c90,zevin9427@gmail.com,2023-05-24 11:43:03+08:00,noreply@github.com,2023-05-24 11:43:03+08:00,"Add test case for the HMGET command (#1467)

Related comment: #1455",unstable,True,False,1,hash_test.go,go,6,0,6
4ac1423b658c35918aff188387000233ed644fbd,infdahai@outlook.com,2023-05-25 09:57:25+08:00,noreply@github.com,2023-05-25 09:57:25+08:00,"Print error when occurring the flaky test in TestBitmap (#1473)

Signed-off-by: clundro <infdahai@outlook.com>",unstable,True,False,1,bitmap_test.go,go,15,6,21
271c0dfa9d837f1ddd308445566f3c9786be9a4e,torwigua@gmail.com,2023-05-26 07:15:16+03:00,noreply@github.com,2023-05-26 12:15:16+08:00,"Add separate mutex that protects blocked stream consumers (#1471)

This separates blocking reads on streams from blocking reads on other data structures
(lists/sorted sets/etc) reducing lock contention on a single mutex for all the blocking keys.",unstable,True,False,2,server.cc,cc,3,6,9
271c0dfa9d837f1ddd308445566f3c9786be9a4e,torwigua@gmail.com,2023-05-26 07:15:16+03:00,noreply@github.com,2023-05-26 12:15:16+08:00,"Add separate mutex that protects blocked stream consumers (#1471)

This separates blocking reads on streams from blocking reads on other data structures
(lists/sorted sets/etc) reducing lock contention on a single mutex for all the blocking keys.",unstable,True,False,2,server.h,h,3,0,3
b719f0347612df407544e7e40e36af1db9ce1437,YuukaC@outlook.com,2023-05-26 16:10:05+08:00,noreply@github.com,2023-05-26 16:10:05+08:00,"Add the support of the ZMPOP command (#1468)

Syntax: ZMPOP num keys key [key ...] <MIN | MAX> [COUNT count]

Complexity: Worstly O(K) + O(M*log(N)):
  - K: num keys
  - N: the number of elements in the set
  - M: the number of elements popped
  - It returns nil if no elements popped",unstable,True,False,2,cmd_zset.cc,cc,68,0,68
b719f0347612df407544e7e40e36af1db9ce1437,YuukaC@outlook.com,2023-05-26 16:10:05+08:00,noreply@github.com,2023-05-26 16:10:05+08:00,"Add the support of the ZMPOP command (#1468)

Syntax: ZMPOP num keys key [key ...] <MIN | MAX> [COUNT count]

Complexity: Worstly O(K) + O(M*log(N)):
  - K: num keys
  - N: the number of elements in the set
  - M: the number of elements popped
  - It returns nil if no elements popped",unstable,True,False,2,zset_test.go,go,56,0,56
e0667812de2ce807cc10167e7c24e5dad4a94365,zncleon@gmail.com,2023-05-26 18:15:23+08:00,noreply@github.com,2023-05-26 18:15:23+08:00,Refine functions and add parsing test to set and zset  (#1475),unstable,True,False,4,cmd_set.cc,cc,9,0,9
e0667812de2ce807cc10167e7c24e5dad4a94365,zncleon@gmail.com,2023-05-26 18:15:23+08:00,noreply@github.com,2023-05-26 18:15:23+08:00,Refine functions and add parsing test to set and zset  (#1475),unstable,True,False,4,cmd_zset.cc,cc,5,1,6
e0667812de2ce807cc10167e7c24e5dad4a94365,zncleon@gmail.com,2023-05-26 18:15:23+08:00,noreply@github.com,2023-05-26 18:15:23+08:00,Refine functions and add parsing test to set and zset  (#1475),unstable,True,False,4,set_test.go,go,33,0,33
e0667812de2ce807cc10167e7c24e5dad4a94365,zncleon@gmail.com,2023-05-26 18:15:23+08:00,noreply@github.com,2023-05-26 18:15:23+08:00,Refine functions and add parsing test to set and zset  (#1475),unstable,True,False,4,zset_test.go,go,46,0,46
bb8c3c2a4d54975d8833516f8bee19c70a85b27a,wander4096@gmail.com,2023-05-28 07:47:32+08:00,noreply@github.com,2023-05-28 07:47:32+08:00,"build: tidy dockerfile (#1477)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,.dockerignore,dockerignore,54,5,59
bb8c3c2a4d54975d8833516f8bee19c70a85b27a,wander4096@gmail.com,2023-05-28 07:47:32+08:00,noreply@github.com,2023-05-28 07:47:32+08:00,"build: tidy dockerfile (#1477)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,2,Dockerfile,None,7,24,31
3db99f725b52ea56543d4aac14932161128c0605,wangyu_it@yeah.net,2023-05-30 15:18:41+08:00,noreply@github.com,2023-05-30 15:18:41+08:00,"Fix the monitor command didn't escape the special chars (#1476)

Currently, Kvrocks didn't escape the special chars like \r\n in the request
when forwarding to the monitor client. So it may cause the client cannot
correctly parse the response.",unstable,True,False,6,string_util.cc,cc,45,0,45
3db99f725b52ea56543d4aac14932161128c0605,wangyu_it@yeah.net,2023-05-30 15:18:41+08:00,noreply@github.com,2023-05-30 15:18:41+08:00,"Fix the monitor command didn't escape the special chars (#1476)

Currently, Kvrocks didn't escape the special chars like \r\n in the request
when forwarding to the monitor client. So it may cause the client cannot
correctly parse the response.",unstable,True,False,6,string_util.h,h,1,0,1
3db99f725b52ea56543d4aac14932161128c0605,wangyu_it@yeah.net,2023-05-30 15:18:41+08:00,noreply@github.com,2023-05-30 15:18:41+08:00,"Fix the monitor command didn't escape the special chars (#1476)

Currently, Kvrocks didn't escape the special chars like \r\n in the request
when forwarding to the monitor client. So it may cause the client cannot
correctly parse the response.",unstable,True,False,6,server.cc,cc,12,1,13
3db99f725b52ea56543d4aac14932161128c0605,wangyu_it@yeah.net,2023-05-30 15:18:41+08:00,noreply@github.com,2023-05-30 15:18:41+08:00,"Fix the monitor command didn't escape the special chars (#1476)

Currently, Kvrocks didn't escape the special chars like \r\n in the request
when forwarding to the monitor client. So it may cause the client cannot
correctly parse the response.",unstable,True,False,6,worker.cc,cc,2,11,13
3db99f725b52ea56543d4aac14932161128c0605,wangyu_it@yeah.net,2023-05-30 15:18:41+08:00,noreply@github.com,2023-05-30 15:18:41+08:00,"Fix the monitor command didn't escape the special chars (#1476)

Currently, Kvrocks didn't escape the special chars like \r\n in the request
when forwarding to the monitor client. So it may cause the client cannot
correctly parse the response.",unstable,True,False,6,worker.h,h,1,1,2
3db99f725b52ea56543d4aac14932161128c0605,wangyu_it@yeah.net,2023-05-30 15:18:41+08:00,noreply@github.com,2023-05-30 15:18:41+08:00,"Fix the monitor command didn't escape the special chars (#1476)

Currently, Kvrocks didn't escape the special chars like \r\n in the request
when forwarding to the monitor client. So it may cause the client cannot
correctly parse the response.",unstable,True,False,6,string_util_test.cc,cc,16,0,16
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,cmd_geo.cc,cc,1,1,2
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,cmd_hash.cc,cc,4,4,8
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,cmd_list.cc,cc,3,3,6
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,cmd_set.cc,cc,10,10,20
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,cmd_sortedint.cc,cc,3,3,6
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,cmd_string.cc,cc,7,7,14
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,cmd_zset.cc,cc,10,10,20
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,redis_geo.cc,cc,4,4,8
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,redis_geo.h,h,1,1,2
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,redis_hash.cc,cc,20,19,39
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,redis_hash.h,h,7,6,13
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,redis_list.cc,cc,18,18,36
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,redis_list.h,h,6,6,12
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,redis_set.cc,cc,33,29,62
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,redis_set.h,h,8,8,16
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,redis_sortedint.cc,cc,13,13,26
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,redis_sortedint.h,h,3,3,6
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,redis_stream.cc,cc,18,18,36
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,redis_stream.h,h,3,3,6
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,redis_string.cc,cc,27,26,53
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,redis_string.h,h,9,9,18
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,redis_zset.cc,cc,46,43,89
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,redis_zset.h,h,12,10,22
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,compact_test.cc,cc,1,1,2
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,disk_test.cc,cc,5,5,10
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,metadata_test.cc,cc,4,4,8
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,geo_test.cc,cc,8,8,16
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,hash_test.cc,cc,12,12,24
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,list_test.cc,cc,31,30,61
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,set_test.cc,cc,37,36,73
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,sortedint_test.cc,cc,7,7,14
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,string_test.cc,cc,22,22,44
4218a2b9e4e2e7167c2260e95e37f22b2bb9fd09,8042833@qq.com,2023-05-31 13:19:33+08:00,noreply@github.com,2023-05-31 13:19:33+08:00,Refactor the out parameters `int *ret`  with consistent type and meaning name (#1479),unstable,True,False,33,zset_test.cc,cc,19,19,38
58b9927213778553821621852c5999d22f69ca8f,hulk.website@gmail.com,2023-06-02 00:07:47+08:00,noreply@github.com,2023-06-02 00:07:47+08:00,"Fix crash when hitting the perflog command rule (#1481)

The root cause is that we didn't allow the entry when creating
the unique ptr. So it will be a null pointer when the command
was hitting the perflog rule.",unstable,True,False,2,redis_connection.cc,cc,1,1,2
58b9927213778553821621852c5999d22f69ca8f,hulk.website@gmail.com,2023-06-02 00:07:47+08:00,noreply@github.com,2023-06-02 00:07:47+08:00,"Fix crash when hitting the perflog command rule (#1481)

The root cause is that we didn't allow the entry when creating
the unique ptr. So it will be a null pointer when the command
was hitting the perflog rule.",unstable,True,False,2,perflog_test.go,go,48,0,48
7554a0dc3e0735d7968a5126cc81e060ff1a441b,8042833@qq.com,2023-06-05 11:57:58+08:00,noreply@github.com,2023-06-05 11:57:58+08:00,"Add the support of the ZRANGESTORE command  (#1482)

- Add the support of the ZRANGESTORE command
- Change RangeByLex function signature, make it return MemberScores instead of Member",unstable,True,False,5,cmd_zset.cc,cc,124,17,141
7554a0dc3e0735d7968a5126cc81e060ff1a441b,8042833@qq.com,2023-06-05 11:57:58+08:00,noreply@github.com,2023-06-05 11:57:58+08:00,"Add the support of the ZRANGESTORE command  (#1482)

- Add the support of the ZRANGESTORE command
- Change RangeByLex function signature, make it return MemberScores instead of Member",unstable,True,False,5,redis_zset.cc,cc,4,4,8
7554a0dc3e0735d7968a5126cc81e060ff1a441b,8042833@qq.com,2023-06-05 11:57:58+08:00,noreply@github.com,2023-06-05 11:57:58+08:00,"Add the support of the ZRANGESTORE command  (#1482)

- Add the support of the ZRANGESTORE command
- Change RangeByLex function signature, make it return MemberScores instead of Member",unstable,True,False,5,redis_zset.h,h,2,1,3
7554a0dc3e0735d7968a5126cc81e060ff1a441b,8042833@qq.com,2023-06-05 11:57:58+08:00,noreply@github.com,2023-06-05 11:57:58+08:00,"Add the support of the ZRANGESTORE command  (#1482)

- Add the support of the ZRANGESTORE command
- Change RangeByLex function signature, make it return MemberScores instead of Member",unstable,True,False,5,zset_test.cc,cc,27,22,49
7554a0dc3e0735d7968a5126cc81e060ff1a441b,8042833@qq.com,2023-06-05 11:57:58+08:00,noreply@github.com,2023-06-05 11:57:58+08:00,"Add the support of the ZRANGESTORE command  (#1482)

- Add the support of the ZRANGESTORE command
- Change RangeByLex function signature, make it return MemberScores instead of Member",unstable,True,False,5,zset_test.go,go,68,0,68
c471fa537d2fa67d6da9338dc93452900937d52d,twice.mliu@gmail.com,2023-06-06 18:47:22+08:00,noreply@github.com,2023-06-06 18:47:22+08:00,Remove global server ptr getter used in scripting (#1486),unstable,True,False,6,main.cc,cc,0,2,2
c471fa537d2fa67d6da9338dc93452900937d52d,twice.mliu@gmail.com,2023-06-06 18:47:22+08:00,noreply@github.com,2023-06-06 18:47:22+08:00,Remove global server ptr getter used in scripting (#1486),unstable,True,False,6,server.cc,cc,2,2,4
c471fa537d2fa67d6da9338dc93452900937d52d,twice.mliu@gmail.com,2023-06-06 18:47:22+08:00,noreply@github.com,2023-06-06 18:47:22+08:00,Remove global server ptr getter used in scripting (#1486),unstable,True,False,6,server.h,h,0,2,2
c471fa537d2fa67d6da9338dc93452900937d52d,twice.mliu@gmail.com,2023-06-06 18:47:22+08:00,noreply@github.com,2023-06-06 18:47:22+08:00,Remove global server ptr getter used in scripting (#1486),unstable,True,False,6,worker.cc,cc,1,1,2
c471fa537d2fa67d6da9338dc93452900937d52d,twice.mliu@gmail.com,2023-06-06 18:47:22+08:00,noreply@github.com,2023-06-06 18:47:22+08:00,Remove global server ptr getter used in scripting (#1486),unstable,True,False,6,scripting.cc,cc,11,3,14
c471fa537d2fa67d6da9338dc93452900937d52d,twice.mliu@gmail.com,2023-06-06 18:47:22+08:00,noreply@github.com,2023-06-06 18:47:22+08:00,Remove global server ptr getter used in scripting (#1486),unstable,True,False,6,scripting.h,h,1,1,2
f557255cec8d4f43cf63144b712c71026bc9320e,twice.mliu@gmail.com,2023-06-07 17:22:48+08:00,noreply@github.com,2023-06-07 17:22:48+08:00,Avoid manually releasing DB pointer via unique_ptr (#1487),unstable,True,False,4,db_util.h,h,63,0,63
f557255cec8d4f43cf63144b712c71026bc9320e,twice.mliu@gmail.com,2023-06-07 17:22:48+08:00,noreply@github.com,2023-06-07 17:22:48+08:00,Avoid manually releasing DB pointer via unique_ptr (#1487),unstable,True,False,4,storage.cc,cc,24,30,54
f557255cec8d4f43cf63144b712c71026bc9320e,twice.mliu@gmail.com,2023-06-07 17:22:48+08:00,noreply@github.com,2023-06-07 17:22:48+08:00,Avoid manually releasing DB pointer via unique_ptr (#1487),unstable,True,False,4,storage.h,h,2,2,4
f557255cec8d4f43cf63144b712c71026bc9320e,twice.mliu@gmail.com,2023-06-07 17:22:48+08:00,noreply@github.com,2023-06-07 17:22:48+08:00,Avoid manually releasing DB pointer via unique_ptr (#1487),unstable,True,False,4,set_test.cc,cc,1,1,2
517864adaa244d7477769bec526177c417b2e0f5,singhuddeshyaofficial@gmail.com,2023-06-12 16:37:16+05:30,noreply@github.com,2023-06-12 19:07:16+08:00,"Don't allow the instance replication of itself and it's own replicas (#1488)

Co-authored-by: git-hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,cmd_server.cc,cc,24,1,25
517864adaa244d7477769bec526177c417b2e0f5,singhuddeshyaofficial@gmail.com,2023-06-12 16:37:16+05:30,noreply@github.com,2023-06-12 19:07:16+08:00,"Don't allow the instance replication of itself and it's own replicas (#1488)

Co-authored-by: git-hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,io_util.cc,cc,27,0,27
517864adaa244d7477769bec526177c417b2e0f5,singhuddeshyaofficial@gmail.com,2023-06-12 16:37:16+05:30,noreply@github.com,2023-06-12 19:07:16+08:00,"Don't allow the instance replication of itself and it's own replicas (#1488)

Co-authored-by: git-hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,io_util.h,h,1,0,1
517864adaa244d7477769bec526177c417b2e0f5,singhuddeshyaofficial@gmail.com,2023-06-12 16:37:16+05:30,noreply@github.com,2023-06-12 19:07:16+08:00,"Don't allow the instance replication of itself and it's own replicas (#1488)

Co-authored-by: git-hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,server.cc,cc,13,0,13
517864adaa244d7477769bec526177c417b2e0f5,singhuddeshyaofficial@gmail.com,2023-06-12 16:37:16+05:30,noreply@github.com,2023-06-12 19:07:16+08:00,"Don't allow the instance replication of itself and it's own replicas (#1488)

Co-authored-by: git-hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,server.h,h,1,0,1
517864adaa244d7477769bec526177c417b2e0f5,singhuddeshyaofficial@gmail.com,2023-06-12 16:37:16+05:30,noreply@github.com,2023-06-12 19:07:16+08:00,"Don't allow the instance replication of itself and it's own replicas (#1488)

Co-authored-by: git-hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,replication_test.go,go,29,0,29
ad704f57311a9ca734171f0582fcfd67ca091baa,infdahai@outlook.com,2023-06-13 12:48:24+08:00,noreply@github.com,2023-06-13 12:48:24+08:00,Add support of the new command SINTERCARD(Redis 7) (#1444),unstable,True,False,6,cmd_set.cc,cc,69,0,69
ad704f57311a9ca734171f0582fcfd67ca091baa,infdahai@outlook.com,2023-06-13 12:48:24+08:00,noreply@github.com,2023-06-13 12:48:24+08:00,Add support of the new command SINTERCARD(Redis 7) (#1444),unstable,True,False,6,error_constants.h,h,1,0,1
ad704f57311a9ca734171f0582fcfd67ca091baa,infdahai@outlook.com,2023-06-13 12:48:24+08:00,noreply@github.com,2023-06-13 12:48:24+08:00,Add support of the new command SINTERCARD(Redis 7) (#1444),unstable,True,False,6,redis_set.cc,cc,46,0,46
ad704f57311a9ca734171f0582fcfd67ca091baa,infdahai@outlook.com,2023-06-13 12:48:24+08:00,noreply@github.com,2023-06-13 12:48:24+08:00,Add support of the new command SINTERCARD(Redis 7) (#1444),unstable,True,False,6,redis_set.h,h,1,0,1
ad704f57311a9ca734171f0582fcfd67ca091baa,infdahai@outlook.com,2023-06-13 12:48:24+08:00,noreply@github.com,2023-06-13 12:48:24+08:00,Add support of the new command SINTERCARD(Redis 7) (#1444),unstable,True,False,6,set_test.cc,cc,44,1,45
ad704f57311a9ca734171f0582fcfd67ca091baa,infdahai@outlook.com,2023-06-13 12:48:24+08:00,noreply@github.com,2023-06-13 12:48:24+08:00,Add support of the new command SINTERCARD(Redis 7) (#1444),unstable,True,False,6,set_test.go,go,69,0,69
e89af5289d5c3d12c47628394c72f0d67e652800,hulk.website@gmail.com,2023-06-13 16:21:10+08:00,noreply@github.com,2023-06-13 16:21:10+08:00,Fix data race when joining the task runner (#1493),unstable,True,False,3,task_runner.cc,cc,2,1,3
e89af5289d5c3d12c47628394c72f0d67e652800,hulk.website@gmail.com,2023-06-13 16:21:10+08:00,noreply@github.com,2023-06-13 16:21:10+08:00,Fix data race when joining the task runner (#1493),unstable,True,False,3,server.cc,cc,3,3,6
e89af5289d5c3d12c47628394c72f0d67e652800,hulk.website@gmail.com,2023-06-13 16:21:10+08:00,noreply@github.com,2023-06-13 16:21:10+08:00,Fix data race when joining the task runner (#1493),unstable,True,False,3,task_runner_test.cc,cc,2,0,2
940654a0716edaacfaf4f922114172908451eb29,torwigua@gmail.com,2023-06-15 04:57:21+03:00,noreply@github.com,2023-06-15 09:57:21+08:00,Fix a few typos in CMakeLists.txt (#1496),unstable,True,False,1,CMakeLists.txt,txt,5,5,10
46e7eaf428c3e4935cc73f70be3f8c9066d5cb3c,infdahai@outlook.com,2023-06-15 11:13:31+08:00,noreply@github.com,2023-06-15 11:13:31+08:00,"Fix ZRANGE command should return an empty array when count = 0 (#1492)

Currently, ZRANGE will return all matched members if the count = 0 which is not consistent
with the Redis behavior. For example:

```shell
127.0.0.1:6666> zadd zset11 1 a 2 b 3 c 4 d 5 e 6 f 7 g
(integer) 7
127.0.0.1:6666> zrange zset11 0 6 byscore limit 0 0
```

Redis will return an empty array:
```shell
127.0.0.1:6379> zadd zset11 1 a 2 b 3 c 4 d 5 e 6 f 7 g
(integer) 7
127.0.0.1:6379> zrange zset11 0 6 byscore limit 0 0
(empty array)
```

But we got all matched members in ZSET:
```shell
127.0.0.1:6666> zrange zset11 0 6 byscore limit 0 0
1) ""a""
2) ""b""
3) ""c""
4) ""d""
5) ""e""
6) ""f""
```",unstable,True,False,2,cmd_zset.cc,cc,15,1,16
46e7eaf428c3e4935cc73f70be3f8c9066d5cb3c,infdahai@outlook.com,2023-06-15 11:13:31+08:00,noreply@github.com,2023-06-15 11:13:31+08:00,"Fix ZRANGE command should return an empty array when count = 0 (#1492)

Currently, ZRANGE will return all matched members if the count = 0 which is not consistent
with the Redis behavior. For example:

```shell
127.0.0.1:6666> zadd zset11 1 a 2 b 3 c 4 d 5 e 6 f 7 g
(integer) 7
127.0.0.1:6666> zrange zset11 0 6 byscore limit 0 0
```

Redis will return an empty array:
```shell
127.0.0.1:6379> zadd zset11 1 a 2 b 3 c 4 d 5 e 6 f 7 g
(integer) 7
127.0.0.1:6379> zrange zset11 0 6 byscore limit 0 0
(empty array)
```

But we got all matched members in ZSET:
```shell
127.0.0.1:6666> zrange zset11 0 6 byscore limit 0 0
1) ""a""
2) ""b""
3) ""c""
4) ""d""
5) ""e""
6) ""f""
```",unstable,True,False,2,zset_test.go,go,29,0,29
1dc5e9bb861ccc155996a1e5402553ca509da9d5,twice.mliu@gmail.com,2023-06-18 11:46:21+08:00,noreply@github.com,2023-06-18 11:46:21+08:00,Remove ConnContext pointers to prevent manual allocation (#1499),unstable,True,False,2,server.cc,cc,17,28,45
1dc5e9bb861ccc155996a1e5402553ca509da9d5,twice.mliu@gmail.com,2023-06-18 11:46:21+08:00,noreply@github.com,2023-06-18 11:46:21+08:00,Remove ConnContext pointers to prevent manual allocation (#1499),unstable,True,False,2,server.h,h,15,5,20
7016bb6659a3484266acc0d21383bf0bf558e481,85615957+Yangsx-1@users.noreply.github.com,2023-06-19 00:28:52+08:00,noreply@github.com,2023-06-19 00:28:52+08:00,"Add the support of the BZMPOP command (#1490)

This PR adds support for bzmpop, bzpopmax, bzpopmin commands like Redis.
And I also add some tests for these three commands.",unstable,True,False,2,cmd_zset.cc,cc,340,8,348
7016bb6659a3484266acc0d21383bf0bf558e481,85615957+Yangsx-1@users.noreply.github.com,2023-06-19 00:28:52+08:00,noreply@github.com,2023-06-19 00:28:52+08:00,"Add the support of the BZMPOP command (#1490)

This PR adds support for bzmpop, bzpopmax, bzpopmin commands like Redis.
And I also add some tests for these three commands.",unstable,True,False,2,zset_test.go,go,91,2,93
9367b94075768ae431e21307485a83219d6aa683,twice.mliu@gmail.com,2023-06-20 11:27:27+08:00,noreply@github.com,2023-06-20 11:27:27+08:00,Add TakeFloat to Command Parser (#1505),unstable,True,False,2,command_parser.h,h,13,0,13
9367b94075768ae431e21307485a83219d6aa683,twice.mliu@gmail.com,2023-06-20 11:27:27+08:00,noreply@github.com,2023-06-20 11:27:27+08:00,Add TakeFloat to Command Parser (#1505),unstable,True,False,2,command_parser_test.cc,cc,12,0,12
e9ff47186e08e6e673119f1d2db0285276b885dc,aleks.raiden@gmail.com,2023-06-21 17:35:42+03:00,noreply@github.com,2023-06-21 22:35:42+08:00,Fix incorrect mount data in docker volume (#1507),unstable,True,False,1,Dockerfile,None,1,1,2
5d675d0f2a058df060d49ae358a2cb4646349eb8,singhuddeshyaofficial@gmail.com,2023-06-22 07:20:50+05:30,noreply@github.com,2023-06-22 09:50:50+08:00,Add support of the new command ZUNION (#1502),unstable,True,False,5,cmd_zset.cc,cc,79,1,80
5d675d0f2a058df060d49ae358a2cb4646349eb8,singhuddeshyaofficial@gmail.com,2023-06-22 07:20:50+05:30,noreply@github.com,2023-06-22 09:50:50+08:00,Add support of the new command ZUNION (#1502),unstable,True,False,5,redis_zset.cc,cc,14,7,21
5d675d0f2a058df060d49ae358a2cb4646349eb8,singhuddeshyaofficial@gmail.com,2023-06-22 07:20:50+05:30,noreply@github.com,2023-06-22 09:50:50+08:00,Add support of the new command ZUNION (#1502),unstable,True,False,5,redis_zset.h,h,2,0,2
5d675d0f2a058df060d49ae358a2cb4646349eb8,singhuddeshyaofficial@gmail.com,2023-06-22 07:20:50+05:30,noreply@github.com,2023-06-22 09:50:50+08:00,Add support of the new command ZUNION (#1502),unstable,True,False,5,command_parser_test.cc,cc,6,1,7
5d675d0f2a058df060d49ae358a2cb4646349eb8,singhuddeshyaofficial@gmail.com,2023-06-22 07:20:50+05:30,noreply@github.com,2023-06-22 09:50:50+08:00,Add support of the new command ZUNION (#1502),unstable,True,False,5,zset_test.go,go,80,0,80
0776295b0453f7c7230e170d17230adb23e5894e,twice.mliu@gmail.com,2023-06-22 23:18:22+08:00,noreply@github.com,2023-06-22 23:18:22+08:00,Remove incubator/incubating from README (#1514),unstable,True,False,1,README.md,md,7,7,14
02011859a07cbf839bf0c7047908a8131cca6030,aleks.raiden@gmail.com,2023-06-23 11:21:29+03:00,noreply@github.com,2023-06-23 16:21:29+08:00,Remove user and group from Docker (#1513),unstable,True,False,1,Dockerfile,None,1,4,5
590f087fcf696c4407e7636dfd928a26f9b675b8,hulk.website@gmail.com,2023-06-23 17:31:48+08:00,noreply@github.com,2023-06-23 17:31:48+08:00,"Remove incubating from the x.py and DISCLAIMER file (#1515)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,config.yml,yml,2,2,4
590f087fcf696c4407e7636dfd928a26f9b675b8,hulk.website@gmail.com,2023-06-23 17:31:48+08:00,noreply@github.com,2023-06-23 17:31:48+08:00,"Remove incubating from the x.py and DISCLAIMER file (#1515)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,Dockerfile,None,1,1,2
590f087fcf696c4407e7636dfd928a26f9b675b8,hulk.website@gmail.com,2023-06-23 17:31:48+08:00,noreply@github.com,2023-06-23 17:31:48+08:00,"Remove incubating from the x.py and DISCLAIMER file (#1515)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,NOTICE,None,1,1,2
590f087fcf696c4407e7636dfd928a26f9b675b8,hulk.website@gmail.com,2023-06-23 17:31:48+08:00,noreply@github.com,2023-06-23 17:31:48+08:00,"Remove incubating from the x.py and DISCLAIMER file (#1515)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,5,x.py,py,2,2,4
431277c786c32c049e464914b7e6a98a76d48867,8042833@qq.com,2023-06-25 19:54:03+08:00,noreply@github.com,2023-06-25 19:54:03+08:00,"Add Redis-compatible cursors for `SCAN` commands (#1489)

We have added the following steps to the processing of the `SCAN`, `ZSCAN`, `SSCAN`, `HSCAN` commands:
- Before processing the command, convert the `numeric cursor` sent by the client back to the `keyname cursor`.
- After processing the command, convert the `keyname cursor` back to a `numeric cursor` and return it to the client, And store the conversion dictionary in the `Server#cursor_dict_`.

Since those steps are non-intrusive to the internal implementation of the `SCAN` command, we can ensure that the behavior of commands such as `ZSCAN`, `SSCAN`, and `HSCAN` is consistent with that of the `SCAN` command.
In the following, I will only use the `SCAN` command as an example to describe the new design.

### Cursor design

We call the new cursor the `numeric cursor` and the old one the `keyname cursor`. 
The numeric cursor is composed of 3 parts: 
- 1-16 bit is counter，and the first bit always 1
- 17-32 bit is timestamp
- 33-64 bit is hash of keyname

The `counter` is a 16-bit unsigned integer that is incremented by 1 every time. When the `counter` overflows, it returns to 0 because it is an unsigned number. Since our `cursor_dict_size` is a power of 2, the `counter` is continuous mod `cursor_dict_size`.
`timestap` is a 16-bit timestamp in seconds, which can store up to 9 hours.
`hash` is a 32-bit hash value of the `keyname`.

### Cursor dictionary(`Server#cursor_dict_`)

The cursor dictionary is an array with a length of 16384(1024*16), which is determined at compile time, and occupies about 640KB of memory. Including the length of the referenced keyname strings, its size is about 1-2M.

During converting the `keyname cursor` back to a `numeric cursor`, a new cursor is generated based on the above rules, and the index for storing the dictionary is determined based on the counter value (index = counter % DICT_SIZE). 

During converting the `numeric cursor` back to a `keyname cursor`, we get the counter from the cursor and calculate the index of the cursor in the `cursor_dict_` based on the counter. We only need to compare the cursor value of the item at that index with the input cursor value to determine if they are the same.

### Other information about the cursor
This design guarantees the validity of the latest 16384(1024*16) cursors, while cursors that are older or not generated in our system are considered invalid cursors. For invalid cursors, we treat them as a 0 cursor, which means we will start iterating over the collection from the beginning.

Our cursor is globally visible, and we store index information in the cursor. As long as the cursor remains valid, using the same cursor in different connections will produce the same results.

We prevent other users from guessing the data traversed by adjacent cursors by adding the hash value of the `keyname` to the cursor. If a user tries to obtain adjacent cursor information by traversing the hash, the cursor will become an invalid cursor before the traversal is complete because the size of the 32-bit space is much larger than the length of the `cursor_dict_`.

We add a timestamp to the cursor to ensure that the same cursor does not appear within a short period of time before and after a restart.

Other behaviors are consistent with the original SCAN implementation.

### Configuration file
Added `redis-cursor-compatible` configuration item.
If enabled, the cursor will be an unsigned 64-bit integer.
If disabled, the cursor will be a string.

### Test file
Added tests for `redis-cli --bigkey` and `redis-cli --memkeys` commands. We only need to ensure that these commands run correctly, because their correctness is guaranteed by `redis-cli` on the premise that we ensure the correctness of the `scan` command.
Modified the scan command test to test for the cases where `redis-cursor-compatible` is set to `yes` or `no`.


### Other changes:
Fixed a bug where the cursor did not return 0 when `SCAN` commands return less than the number of elements.",unstable,True,False,13,kvrocks.conf,conf,6,0,6
431277c786c32c049e464914b7e6a98a76d48867,8042833@qq.com,2023-06-25 19:54:03+08:00,noreply@github.com,2023-06-25 19:54:03+08:00,"Add Redis-compatible cursors for `SCAN` commands (#1489)

We have added the following steps to the processing of the `SCAN`, `ZSCAN`, `SSCAN`, `HSCAN` commands:
- Before processing the command, convert the `numeric cursor` sent by the client back to the `keyname cursor`.
- After processing the command, convert the `keyname cursor` back to a `numeric cursor` and return it to the client, And store the conversion dictionary in the `Server#cursor_dict_`.

Since those steps are non-intrusive to the internal implementation of the `SCAN` command, we can ensure that the behavior of commands such as `ZSCAN`, `SSCAN`, and `HSCAN` is consistent with that of the `SCAN` command.
In the following, I will only use the `SCAN` command as an example to describe the new design.

### Cursor design

We call the new cursor the `numeric cursor` and the old one the `keyname cursor`. 
The numeric cursor is composed of 3 parts: 
- 1-16 bit is counter，and the first bit always 1
- 17-32 bit is timestamp
- 33-64 bit is hash of keyname

The `counter` is a 16-bit unsigned integer that is incremented by 1 every time. When the `counter` overflows, it returns to 0 because it is an unsigned number. Since our `cursor_dict_size` is a power of 2, the `counter` is continuous mod `cursor_dict_size`.
`timestap` is a 16-bit timestamp in seconds, which can store up to 9 hours.
`hash` is a 32-bit hash value of the `keyname`.

### Cursor dictionary(`Server#cursor_dict_`)

The cursor dictionary is an array with a length of 16384(1024*16), which is determined at compile time, and occupies about 640KB of memory. Including the length of the referenced keyname strings, its size is about 1-2M.

During converting the `keyname cursor` back to a `numeric cursor`, a new cursor is generated based on the above rules, and the index for storing the dictionary is determined based on the counter value (index = counter % DICT_SIZE). 

During converting the `numeric cursor` back to a `keyname cursor`, we get the counter from the cursor and calculate the index of the cursor in the `cursor_dict_` based on the counter. We only need to compare the cursor value of the item at that index with the input cursor value to determine if they are the same.

### Other information about the cursor
This design guarantees the validity of the latest 16384(1024*16) cursors, while cursors that are older or not generated in our system are considered invalid cursors. For invalid cursors, we treat them as a 0 cursor, which means we will start iterating over the collection from the beginning.

Our cursor is globally visible, and we store index information in the cursor. As long as the cursor remains valid, using the same cursor in different connections will produce the same results.

We prevent other users from guessing the data traversed by adjacent cursors by adding the hash value of the `keyname` to the cursor. If a user tries to obtain adjacent cursor information by traversing the hash, the cursor will become an invalid cursor before the traversal is complete because the size of the 32-bit space is much larger than the length of the `cursor_dict_`.

We add a timestamp to the cursor to ensure that the same cursor does not appear within a short period of time before and after a restart.

Other behaviors are consistent with the original SCAN implementation.

### Configuration file
Added `redis-cursor-compatible` configuration item.
If enabled, the cursor will be an unsigned 64-bit integer.
If disabled, the cursor will be a string.

### Test file
Added tests for `redis-cli --bigkey` and `redis-cli --memkeys` commands. We only need to ensure that these commands run correctly, because their correctness is guaranteed by `redis-cli` on the premise that we ensure the correctness of the `scan` command.
Modified the scan command test to test for the cases where `redis-cursor-compatible` is set to `yes` or `no`.


### Other changes:
Fixed a bug where the cursor did not return 0 when `SCAN` commands return less than the number of elements.",unstable,True,False,13,cmd_hash.cc,cc,3,2,5
431277c786c32c049e464914b7e6a98a76d48867,8042833@qq.com,2023-06-25 19:54:03+08:00,noreply@github.com,2023-06-25 19:54:03+08:00,"Add Redis-compatible cursors for `SCAN` commands (#1489)

We have added the following steps to the processing of the `SCAN`, `ZSCAN`, `SSCAN`, `HSCAN` commands:
- Before processing the command, convert the `numeric cursor` sent by the client back to the `keyname cursor`.
- After processing the command, convert the `keyname cursor` back to a `numeric cursor` and return it to the client, And store the conversion dictionary in the `Server#cursor_dict_`.

Since those steps are non-intrusive to the internal implementation of the `SCAN` command, we can ensure that the behavior of commands such as `ZSCAN`, `SSCAN`, and `HSCAN` is consistent with that of the `SCAN` command.
In the following, I will only use the `SCAN` command as an example to describe the new design.

### Cursor design

We call the new cursor the `numeric cursor` and the old one the `keyname cursor`. 
The numeric cursor is composed of 3 parts: 
- 1-16 bit is counter，and the first bit always 1
- 17-32 bit is timestamp
- 33-64 bit is hash of keyname

The `counter` is a 16-bit unsigned integer that is incremented by 1 every time. When the `counter` overflows, it returns to 0 because it is an unsigned number. Since our `cursor_dict_size` is a power of 2, the `counter` is continuous mod `cursor_dict_size`.
`timestap` is a 16-bit timestamp in seconds, which can store up to 9 hours.
`hash` is a 32-bit hash value of the `keyname`.

### Cursor dictionary(`Server#cursor_dict_`)

The cursor dictionary is an array with a length of 16384(1024*16), which is determined at compile time, and occupies about 640KB of memory. Including the length of the referenced keyname strings, its size is about 1-2M.

During converting the `keyname cursor` back to a `numeric cursor`, a new cursor is generated based on the above rules, and the index for storing the dictionary is determined based on the counter value (index = counter % DICT_SIZE). 

During converting the `numeric cursor` back to a `keyname cursor`, we get the counter from the cursor and calculate the index of the cursor in the `cursor_dict_` based on the counter. We only need to compare the cursor value of the item at that index with the input cursor value to determine if they are the same.

### Other information about the cursor
This design guarantees the validity of the latest 16384(1024*16) cursors, while cursors that are older or not generated in our system are considered invalid cursors. For invalid cursors, we treat them as a 0 cursor, which means we will start iterating over the collection from the beginning.

Our cursor is globally visible, and we store index information in the cursor. As long as the cursor remains valid, using the same cursor in different connections will produce the same results.

We prevent other users from guessing the data traversed by adjacent cursors by adding the hash value of the `keyname` to the cursor. If a user tries to obtain adjacent cursor information by traversing the hash, the cursor will become an invalid cursor before the traversal is complete because the size of the 32-bit space is much larger than the length of the `cursor_dict_`.

We add a timestamp to the cursor to ensure that the same cursor does not appear within a short period of time before and after a restart.

Other behaviors are consistent with the original SCAN implementation.

### Configuration file
Added `redis-cursor-compatible` configuration item.
If enabled, the cursor will be an unsigned 64-bit integer.
If disabled, the cursor will be a string.

### Test file
Added tests for `redis-cli --bigkey` and `redis-cli --memkeys` commands. We only need to ensure that these commands run correctly, because their correctness is guaranteed by `redis-cli` on the premise that we ensure the correctness of the `scan` command.
Modified the scan command test to test for the cases where `redis-cursor-compatible` is set to `yes` or `no`.


### Other changes:
Fixed a bug where the cursor did not return 0 when `SCAN` commands return less than the number of elements.",unstable,True,False,13,cmd_server.cc,cc,8,7,15
431277c786c32c049e464914b7e6a98a76d48867,8042833@qq.com,2023-06-25 19:54:03+08:00,noreply@github.com,2023-06-25 19:54:03+08:00,"Add Redis-compatible cursors for `SCAN` commands (#1489)

We have added the following steps to the processing of the `SCAN`, `ZSCAN`, `SSCAN`, `HSCAN` commands:
- Before processing the command, convert the `numeric cursor` sent by the client back to the `keyname cursor`.
- After processing the command, convert the `keyname cursor` back to a `numeric cursor` and return it to the client, And store the conversion dictionary in the `Server#cursor_dict_`.

Since those steps are non-intrusive to the internal implementation of the `SCAN` command, we can ensure that the behavior of commands such as `ZSCAN`, `SSCAN`, and `HSCAN` is consistent with that of the `SCAN` command.
In the following, I will only use the `SCAN` command as an example to describe the new design.

### Cursor design

We call the new cursor the `numeric cursor` and the old one the `keyname cursor`. 
The numeric cursor is composed of 3 parts: 
- 1-16 bit is counter，and the first bit always 1
- 17-32 bit is timestamp
- 33-64 bit is hash of keyname

The `counter` is a 16-bit unsigned integer that is incremented by 1 every time. When the `counter` overflows, it returns to 0 because it is an unsigned number. Since our `cursor_dict_size` is a power of 2, the `counter` is continuous mod `cursor_dict_size`.
`timestap` is a 16-bit timestamp in seconds, which can store up to 9 hours.
`hash` is a 32-bit hash value of the `keyname`.

### Cursor dictionary(`Server#cursor_dict_`)

The cursor dictionary is an array with a length of 16384(1024*16), which is determined at compile time, and occupies about 640KB of memory. Including the length of the referenced keyname strings, its size is about 1-2M.

During converting the `keyname cursor` back to a `numeric cursor`, a new cursor is generated based on the above rules, and the index for storing the dictionary is determined based on the counter value (index = counter % DICT_SIZE). 

During converting the `numeric cursor` back to a `keyname cursor`, we get the counter from the cursor and calculate the index of the cursor in the `cursor_dict_` based on the counter. We only need to compare the cursor value of the item at that index with the input cursor value to determine if they are the same.

### Other information about the cursor
This design guarantees the validity of the latest 16384(1024*16) cursors, while cursors that are older or not generated in our system are considered invalid cursors. For invalid cursors, we treat them as a 0 cursor, which means we will start iterating over the collection from the beginning.

Our cursor is globally visible, and we store index information in the cursor. As long as the cursor remains valid, using the same cursor in different connections will produce the same results.

We prevent other users from guessing the data traversed by adjacent cursors by adding the hash value of the `keyname` to the cursor. If a user tries to obtain adjacent cursor information by traversing the hash, the cursor will become an invalid cursor before the traversal is complete because the size of the 32-bit space is much larger than the length of the `cursor_dict_`.

We add a timestamp to the cursor to ensure that the same cursor does not appear within a short period of time before and after a restart.

Other behaviors are consistent with the original SCAN implementation.

### Configuration file
Added `redis-cursor-compatible` configuration item.
If enabled, the cursor will be an unsigned 64-bit integer.
If disabled, the cursor will be a string.

### Test file
Added tests for `redis-cli --bigkey` and `redis-cli --memkeys` commands. We only need to ensure that these commands run correctly, because their correctness is guaranteed by `redis-cli` on the premise that we ensure the correctness of the `scan` command.
Modified the scan command test to test for the cases where `redis-cursor-compatible` is set to `yes` or `no`.


### Other changes:
Fixed a bug where the cursor did not return 0 when `SCAN` commands return less than the number of elements.",unstable,True,False,13,cmd_set.cc,cc,3,2,5
431277c786c32c049e464914b7e6a98a76d48867,8042833@qq.com,2023-06-25 19:54:03+08:00,noreply@github.com,2023-06-25 19:54:03+08:00,"Add Redis-compatible cursors for `SCAN` commands (#1489)

We have added the following steps to the processing of the `SCAN`, `ZSCAN`, `SSCAN`, `HSCAN` commands:
- Before processing the command, convert the `numeric cursor` sent by the client back to the `keyname cursor`.
- After processing the command, convert the `keyname cursor` back to a `numeric cursor` and return it to the client, And store the conversion dictionary in the `Server#cursor_dict_`.

Since those steps are non-intrusive to the internal implementation of the `SCAN` command, we can ensure that the behavior of commands such as `ZSCAN`, `SSCAN`, and `HSCAN` is consistent with that of the `SCAN` command.
In the following, I will only use the `SCAN` command as an example to describe the new design.

### Cursor design

We call the new cursor the `numeric cursor` and the old one the `keyname cursor`. 
The numeric cursor is composed of 3 parts: 
- 1-16 bit is counter，and the first bit always 1
- 17-32 bit is timestamp
- 33-64 bit is hash of keyname

The `counter` is a 16-bit unsigned integer that is incremented by 1 every time. When the `counter` overflows, it returns to 0 because it is an unsigned number. Since our `cursor_dict_size` is a power of 2, the `counter` is continuous mod `cursor_dict_size`.
`timestap` is a 16-bit timestamp in seconds, which can store up to 9 hours.
`hash` is a 32-bit hash value of the `keyname`.

### Cursor dictionary(`Server#cursor_dict_`)

The cursor dictionary is an array with a length of 16384(1024*16), which is determined at compile time, and occupies about 640KB of memory. Including the length of the referenced keyname strings, its size is about 1-2M.

During converting the `keyname cursor` back to a `numeric cursor`, a new cursor is generated based on the above rules, and the index for storing the dictionary is determined based on the counter value (index = counter % DICT_SIZE). 

During converting the `numeric cursor` back to a `keyname cursor`, we get the counter from the cursor and calculate the index of the cursor in the `cursor_dict_` based on the counter. We only need to compare the cursor value of the item at that index with the input cursor value to determine if they are the same.

### Other information about the cursor
This design guarantees the validity of the latest 16384(1024*16) cursors, while cursors that are older or not generated in our system are considered invalid cursors. For invalid cursors, we treat them as a 0 cursor, which means we will start iterating over the collection from the beginning.

Our cursor is globally visible, and we store index information in the cursor. As long as the cursor remains valid, using the same cursor in different connections will produce the same results.

We prevent other users from guessing the data traversed by adjacent cursors by adding the hash value of the `keyname` to the cursor. If a user tries to obtain adjacent cursor information by traversing the hash, the cursor will become an invalid cursor before the traversal is complete because the size of the 32-bit space is much larger than the length of the `cursor_dict_`.

We add a timestamp to the cursor to ensure that the same cursor does not appear within a short period of time before and after a restart.

Other behaviors are consistent with the original SCAN implementation.

### Configuration file
Added `redis-cursor-compatible` configuration item.
If enabled, the cursor will be an unsigned 64-bit integer.
If disabled, the cursor will be a string.

### Test file
Added tests for `redis-cli --bigkey` and `redis-cli --memkeys` commands. We only need to ensure that these commands run correctly, because their correctness is guaranteed by `redis-cli` on the premise that we ensure the correctness of the `scan` command.
Modified the scan command test to test for the cases where `redis-cursor-compatible` is set to `yes` or `no`.


### Other changes:
Fixed a bug where the cursor did not return 0 when `SCAN` commands return less than the number of elements.",unstable,True,False,13,cmd_zset.cc,cc,3,2,5
431277c786c32c049e464914b7e6a98a76d48867,8042833@qq.com,2023-06-25 19:54:03+08:00,noreply@github.com,2023-06-25 19:54:03+08:00,"Add Redis-compatible cursors for `SCAN` commands (#1489)

We have added the following steps to the processing of the `SCAN`, `ZSCAN`, `SSCAN`, `HSCAN` commands:
- Before processing the command, convert the `numeric cursor` sent by the client back to the `keyname cursor`.
- After processing the command, convert the `keyname cursor` back to a `numeric cursor` and return it to the client, And store the conversion dictionary in the `Server#cursor_dict_`.

Since those steps are non-intrusive to the internal implementation of the `SCAN` command, we can ensure that the behavior of commands such as `ZSCAN`, `SSCAN`, and `HSCAN` is consistent with that of the `SCAN` command.
In the following, I will only use the `SCAN` command as an example to describe the new design.

### Cursor design

We call the new cursor the `numeric cursor` and the old one the `keyname cursor`. 
The numeric cursor is composed of 3 parts: 
- 1-16 bit is counter，and the first bit always 1
- 17-32 bit is timestamp
- 33-64 bit is hash of keyname

The `counter` is a 16-bit unsigned integer that is incremented by 1 every time. When the `counter` overflows, it returns to 0 because it is an unsigned number. Since our `cursor_dict_size` is a power of 2, the `counter` is continuous mod `cursor_dict_size`.
`timestap` is a 16-bit timestamp in seconds, which can store up to 9 hours.
`hash` is a 32-bit hash value of the `keyname`.

### Cursor dictionary(`Server#cursor_dict_`)

The cursor dictionary is an array with a length of 16384(1024*16), which is determined at compile time, and occupies about 640KB of memory. Including the length of the referenced keyname strings, its size is about 1-2M.

During converting the `keyname cursor` back to a `numeric cursor`, a new cursor is generated based on the above rules, and the index for storing the dictionary is determined based on the counter value (index = counter % DICT_SIZE). 

During converting the `numeric cursor` back to a `keyname cursor`, we get the counter from the cursor and calculate the index of the cursor in the `cursor_dict_` based on the counter. We only need to compare the cursor value of the item at that index with the input cursor value to determine if they are the same.

### Other information about the cursor
This design guarantees the validity of the latest 16384(1024*16) cursors, while cursors that are older or not generated in our system are considered invalid cursors. For invalid cursors, we treat them as a 0 cursor, which means we will start iterating over the collection from the beginning.

Our cursor is globally visible, and we store index information in the cursor. As long as the cursor remains valid, using the same cursor in different connections will produce the same results.

We prevent other users from guessing the data traversed by adjacent cursors by adding the hash value of the `keyname` to the cursor. If a user tries to obtain adjacent cursor information by traversing the hash, the cursor will become an invalid cursor before the traversal is complete because the size of the 32-bit space is much larger than the length of the `cursor_dict_`.

We add a timestamp to the cursor to ensure that the same cursor does not appear within a short period of time before and after a restart.

Other behaviors are consistent with the original SCAN implementation.

### Configuration file
Added `redis-cursor-compatible` configuration item.
If enabled, the cursor will be an unsigned 64-bit integer.
If disabled, the cursor will be a string.

### Test file
Added tests for `redis-cli --bigkey` and `redis-cli --memkeys` commands. We only need to ensure that these commands run correctly, because their correctness is guaranteed by `redis-cli` on the premise that we ensure the correctness of the `scan` command.
Modified the scan command test to test for the cases where `redis-cursor-compatible` is set to `yes` or `no`.


### Other changes:
Fixed a bug where the cursor did not return 0 when `SCAN` commands return less than the number of elements.",unstable,True,False,13,scan_base.h,h,8,4,12
431277c786c32c049e464914b7e6a98a76d48867,8042833@qq.com,2023-06-25 19:54:03+08:00,noreply@github.com,2023-06-25 19:54:03+08:00,"Add Redis-compatible cursors for `SCAN` commands (#1489)

We have added the following steps to the processing of the `SCAN`, `ZSCAN`, `SSCAN`, `HSCAN` commands:
- Before processing the command, convert the `numeric cursor` sent by the client back to the `keyname cursor`.
- After processing the command, convert the `keyname cursor` back to a `numeric cursor` and return it to the client, And store the conversion dictionary in the `Server#cursor_dict_`.

Since those steps are non-intrusive to the internal implementation of the `SCAN` command, we can ensure that the behavior of commands such as `ZSCAN`, `SSCAN`, and `HSCAN` is consistent with that of the `SCAN` command.
In the following, I will only use the `SCAN` command as an example to describe the new design.

### Cursor design

We call the new cursor the `numeric cursor` and the old one the `keyname cursor`. 
The numeric cursor is composed of 3 parts: 
- 1-16 bit is counter，and the first bit always 1
- 17-32 bit is timestamp
- 33-64 bit is hash of keyname

The `counter` is a 16-bit unsigned integer that is incremented by 1 every time. When the `counter` overflows, it returns to 0 because it is an unsigned number. Since our `cursor_dict_size` is a power of 2, the `counter` is continuous mod `cursor_dict_size`.
`timestap` is a 16-bit timestamp in seconds, which can store up to 9 hours.
`hash` is a 32-bit hash value of the `keyname`.

### Cursor dictionary(`Server#cursor_dict_`)

The cursor dictionary is an array with a length of 16384(1024*16), which is determined at compile time, and occupies about 640KB of memory. Including the length of the referenced keyname strings, its size is about 1-2M.

During converting the `keyname cursor` back to a `numeric cursor`, a new cursor is generated based on the above rules, and the index for storing the dictionary is determined based on the counter value (index = counter % DICT_SIZE). 

During converting the `numeric cursor` back to a `keyname cursor`, we get the counter from the cursor and calculate the index of the cursor in the `cursor_dict_` based on the counter. We only need to compare the cursor value of the item at that index with the input cursor value to determine if they are the same.

### Other information about the cursor
This design guarantees the validity of the latest 16384(1024*16) cursors, while cursors that are older or not generated in our system are considered invalid cursors. For invalid cursors, we treat them as a 0 cursor, which means we will start iterating over the collection from the beginning.

Our cursor is globally visible, and we store index information in the cursor. As long as the cursor remains valid, using the same cursor in different connections will produce the same results.

We prevent other users from guessing the data traversed by adjacent cursors by adding the hash value of the `keyname` to the cursor. If a user tries to obtain adjacent cursor information by traversing the hash, the cursor will become an invalid cursor before the traversal is complete because the size of the 32-bit space is much larger than the length of the `cursor_dict_`.

We add a timestamp to the cursor to ensure that the same cursor does not appear within a short period of time before and after a restart.

Other behaviors are consistent with the original SCAN implementation.

### Configuration file
Added `redis-cursor-compatible` configuration item.
If enabled, the cursor will be an unsigned 64-bit integer.
If disabled, the cursor will be a string.

### Test file
Added tests for `redis-cli --bigkey` and `redis-cli --memkeys` commands. We only need to ensure that these commands run correctly, because their correctness is guaranteed by `redis-cli` on the premise that we ensure the correctness of the `scan` command.
Modified the scan command test to test for the cases where `redis-cursor-compatible` is set to `yes` or `no`.


### Other changes:
Fixed a bug where the cursor did not return 0 when `SCAN` commands return less than the number of elements.",unstable,True,False,13,config.cc,cc,1,0,1
431277c786c32c049e464914b7e6a98a76d48867,8042833@qq.com,2023-06-25 19:54:03+08:00,noreply@github.com,2023-06-25 19:54:03+08:00,"Add Redis-compatible cursors for `SCAN` commands (#1489)

We have added the following steps to the processing of the `SCAN`, `ZSCAN`, `SSCAN`, `HSCAN` commands:
- Before processing the command, convert the `numeric cursor` sent by the client back to the `keyname cursor`.
- After processing the command, convert the `keyname cursor` back to a `numeric cursor` and return it to the client, And store the conversion dictionary in the `Server#cursor_dict_`.

Since those steps are non-intrusive to the internal implementation of the `SCAN` command, we can ensure that the behavior of commands such as `ZSCAN`, `SSCAN`, and `HSCAN` is consistent with that of the `SCAN` command.
In the following, I will only use the `SCAN` command as an example to describe the new design.

### Cursor design

We call the new cursor the `numeric cursor` and the old one the `keyname cursor`. 
The numeric cursor is composed of 3 parts: 
- 1-16 bit is counter，and the first bit always 1
- 17-32 bit is timestamp
- 33-64 bit is hash of keyname

The `counter` is a 16-bit unsigned integer that is incremented by 1 every time. When the `counter` overflows, it returns to 0 because it is an unsigned number. Since our `cursor_dict_size` is a power of 2, the `counter` is continuous mod `cursor_dict_size`.
`timestap` is a 16-bit timestamp in seconds, which can store up to 9 hours.
`hash` is a 32-bit hash value of the `keyname`.

### Cursor dictionary(`Server#cursor_dict_`)

The cursor dictionary is an array with a length of 16384(1024*16), which is determined at compile time, and occupies about 640KB of memory. Including the length of the referenced keyname strings, its size is about 1-2M.

During converting the `keyname cursor` back to a `numeric cursor`, a new cursor is generated based on the above rules, and the index for storing the dictionary is determined based on the counter value (index = counter % DICT_SIZE). 

During converting the `numeric cursor` back to a `keyname cursor`, we get the counter from the cursor and calculate the index of the cursor in the `cursor_dict_` based on the counter. We only need to compare the cursor value of the item at that index with the input cursor value to determine if they are the same.

### Other information about the cursor
This design guarantees the validity of the latest 16384(1024*16) cursors, while cursors that are older or not generated in our system are considered invalid cursors. For invalid cursors, we treat them as a 0 cursor, which means we will start iterating over the collection from the beginning.

Our cursor is globally visible, and we store index information in the cursor. As long as the cursor remains valid, using the same cursor in different connections will produce the same results.

We prevent other users from guessing the data traversed by adjacent cursors by adding the hash value of the `keyname` to the cursor. If a user tries to obtain adjacent cursor information by traversing the hash, the cursor will become an invalid cursor before the traversal is complete because the size of the 32-bit space is much larger than the length of the `cursor_dict_`.

We add a timestamp to the cursor to ensure that the same cursor does not appear within a short period of time before and after a restart.

Other behaviors are consistent with the original SCAN implementation.

### Configuration file
Added `redis-cursor-compatible` configuration item.
If enabled, the cursor will be an unsigned 64-bit integer.
If disabled, the cursor will be a string.

### Test file
Added tests for `redis-cli --bigkey` and `redis-cli --memkeys` commands. We only need to ensure that these commands run correctly, because their correctness is guaranteed by `redis-cli` on the premise that we ensure the correctness of the `scan` command.
Modified the scan command test to test for the cases where `redis-cursor-compatible` is set to `yes` or `no`.


### Other changes:
Fixed a bug where the cursor did not return 0 when `SCAN` commands return less than the number of elements.",unstable,True,False,13,config.h,h,1,0,1
431277c786c32c049e464914b7e6a98a76d48867,8042833@qq.com,2023-06-25 19:54:03+08:00,noreply@github.com,2023-06-25 19:54:03+08:00,"Add Redis-compatible cursors for `SCAN` commands (#1489)

We have added the following steps to the processing of the `SCAN`, `ZSCAN`, `SSCAN`, `HSCAN` commands:
- Before processing the command, convert the `numeric cursor` sent by the client back to the `keyname cursor`.
- After processing the command, convert the `keyname cursor` back to a `numeric cursor` and return it to the client, And store the conversion dictionary in the `Server#cursor_dict_`.

Since those steps are non-intrusive to the internal implementation of the `SCAN` command, we can ensure that the behavior of commands such as `ZSCAN`, `SSCAN`, and `HSCAN` is consistent with that of the `SCAN` command.
In the following, I will only use the `SCAN` command as an example to describe the new design.

### Cursor design

We call the new cursor the `numeric cursor` and the old one the `keyname cursor`. 
The numeric cursor is composed of 3 parts: 
- 1-16 bit is counter，and the first bit always 1
- 17-32 bit is timestamp
- 33-64 bit is hash of keyname

The `counter` is a 16-bit unsigned integer that is incremented by 1 every time. When the `counter` overflows, it returns to 0 because it is an unsigned number. Since our `cursor_dict_size` is a power of 2, the `counter` is continuous mod `cursor_dict_size`.
`timestap` is a 16-bit timestamp in seconds, which can store up to 9 hours.
`hash` is a 32-bit hash value of the `keyname`.

### Cursor dictionary(`Server#cursor_dict_`)

The cursor dictionary is an array with a length of 16384(1024*16), which is determined at compile time, and occupies about 640KB of memory. Including the length of the referenced keyname strings, its size is about 1-2M.

During converting the `keyname cursor` back to a `numeric cursor`, a new cursor is generated based on the above rules, and the index for storing the dictionary is determined based on the counter value (index = counter % DICT_SIZE). 

During converting the `numeric cursor` back to a `keyname cursor`, we get the counter from the cursor and calculate the index of the cursor in the `cursor_dict_` based on the counter. We only need to compare the cursor value of the item at that index with the input cursor value to determine if they are the same.

### Other information about the cursor
This design guarantees the validity of the latest 16384(1024*16) cursors, while cursors that are older or not generated in our system are considered invalid cursors. For invalid cursors, we treat them as a 0 cursor, which means we will start iterating over the collection from the beginning.

Our cursor is globally visible, and we store index information in the cursor. As long as the cursor remains valid, using the same cursor in different connections will produce the same results.

We prevent other users from guessing the data traversed by adjacent cursors by adding the hash value of the `keyname` to the cursor. If a user tries to obtain adjacent cursor information by traversing the hash, the cursor will become an invalid cursor before the traversal is complete because the size of the 32-bit space is much larger than the length of the `cursor_dict_`.

We add a timestamp to the cursor to ensure that the same cursor does not appear within a short period of time before and after a restart.

Other behaviors are consistent with the original SCAN implementation.

### Configuration file
Added `redis-cursor-compatible` configuration item.
If enabled, the cursor will be an unsigned 64-bit integer.
If disabled, the cursor will be a string.

### Test file
Added tests for `redis-cli --bigkey` and `redis-cli --memkeys` commands. We only need to ensure that these commands run correctly, because their correctness is guaranteed by `redis-cli` on the premise that we ensure the correctness of the `scan` command.
Modified the scan command test to test for the cases where `redis-cursor-compatible` is set to `yes` or `no`.


### Other changes:
Fixed a bug where the cursor did not return 0 when `SCAN` commands return less than the number of elements.",unstable,True,False,13,server.cc,cc,55,0,55
431277c786c32c049e464914b7e6a98a76d48867,8042833@qq.com,2023-06-25 19:54:03+08:00,noreply@github.com,2023-06-25 19:54:03+08:00,"Add Redis-compatible cursors for `SCAN` commands (#1489)

We have added the following steps to the processing of the `SCAN`, `ZSCAN`, `SSCAN`, `HSCAN` commands:
- Before processing the command, convert the `numeric cursor` sent by the client back to the `keyname cursor`.
- After processing the command, convert the `keyname cursor` back to a `numeric cursor` and return it to the client, And store the conversion dictionary in the `Server#cursor_dict_`.

Since those steps are non-intrusive to the internal implementation of the `SCAN` command, we can ensure that the behavior of commands such as `ZSCAN`, `SSCAN`, and `HSCAN` is consistent with that of the `SCAN` command.
In the following, I will only use the `SCAN` command as an example to describe the new design.

### Cursor design

We call the new cursor the `numeric cursor` and the old one the `keyname cursor`. 
The numeric cursor is composed of 3 parts: 
- 1-16 bit is counter，and the first bit always 1
- 17-32 bit is timestamp
- 33-64 bit is hash of keyname

The `counter` is a 16-bit unsigned integer that is incremented by 1 every time. When the `counter` overflows, it returns to 0 because it is an unsigned number. Since our `cursor_dict_size` is a power of 2, the `counter` is continuous mod `cursor_dict_size`.
`timestap` is a 16-bit timestamp in seconds, which can store up to 9 hours.
`hash` is a 32-bit hash value of the `keyname`.

### Cursor dictionary(`Server#cursor_dict_`)

The cursor dictionary is an array with a length of 16384(1024*16), which is determined at compile time, and occupies about 640KB of memory. Including the length of the referenced keyname strings, its size is about 1-2M.

During converting the `keyname cursor` back to a `numeric cursor`, a new cursor is generated based on the above rules, and the index for storing the dictionary is determined based on the counter value (index = counter % DICT_SIZE). 

During converting the `numeric cursor` back to a `keyname cursor`, we get the counter from the cursor and calculate the index of the cursor in the `cursor_dict_` based on the counter. We only need to compare the cursor value of the item at that index with the input cursor value to determine if they are the same.

### Other information about the cursor
This design guarantees the validity of the latest 16384(1024*16) cursors, while cursors that are older or not generated in our system are considered invalid cursors. For invalid cursors, we treat them as a 0 cursor, which means we will start iterating over the collection from the beginning.

Our cursor is globally visible, and we store index information in the cursor. As long as the cursor remains valid, using the same cursor in different connections will produce the same results.

We prevent other users from guessing the data traversed by adjacent cursors by adding the hash value of the `keyname` to the cursor. If a user tries to obtain adjacent cursor information by traversing the hash, the cursor will become an invalid cursor before the traversal is complete because the size of the 32-bit space is much larger than the length of the `cursor_dict_`.

We add a timestamp to the cursor to ensure that the same cursor does not appear within a short period of time before and after a restart.

Other behaviors are consistent with the original SCAN implementation.

### Configuration file
Added `redis-cursor-compatible` configuration item.
If enabled, the cursor will be an unsigned 64-bit integer.
If disabled, the cursor will be a string.

### Test file
Added tests for `redis-cli --bigkey` and `redis-cli --memkeys` commands. We only need to ensure that these commands run correctly, because their correctness is guaranteed by `redis-cli` on the premise that we ensure the correctness of the `scan` command.
Modified the scan command test to test for the cases where `redis-cursor-compatible` is set to `yes` or `no`.


### Other changes:
Fixed a bug where the cursor did not return 0 when `SCAN` commands return less than the number of elements.",unstable,True,False,13,server.h,h,45,0,45
431277c786c32c049e464914b7e6a98a76d48867,8042833@qq.com,2023-06-25 19:54:03+08:00,noreply@github.com,2023-06-25 19:54:03+08:00,"Add Redis-compatible cursors for `SCAN` commands (#1489)

We have added the following steps to the processing of the `SCAN`, `ZSCAN`, `SSCAN`, `HSCAN` commands:
- Before processing the command, convert the `numeric cursor` sent by the client back to the `keyname cursor`.
- After processing the command, convert the `keyname cursor` back to a `numeric cursor` and return it to the client, And store the conversion dictionary in the `Server#cursor_dict_`.

Since those steps are non-intrusive to the internal implementation of the `SCAN` command, we can ensure that the behavior of commands such as `ZSCAN`, `SSCAN`, and `HSCAN` is consistent with that of the `SCAN` command.
In the following, I will only use the `SCAN` command as an example to describe the new design.

### Cursor design

We call the new cursor the `numeric cursor` and the old one the `keyname cursor`. 
The numeric cursor is composed of 3 parts: 
- 1-16 bit is counter，and the first bit always 1
- 17-32 bit is timestamp
- 33-64 bit is hash of keyname

The `counter` is a 16-bit unsigned integer that is incremented by 1 every time. When the `counter` overflows, it returns to 0 because it is an unsigned number. Since our `cursor_dict_size` is a power of 2, the `counter` is continuous mod `cursor_dict_size`.
`timestap` is a 16-bit timestamp in seconds, which can store up to 9 hours.
`hash` is a 32-bit hash value of the `keyname`.

### Cursor dictionary(`Server#cursor_dict_`)

The cursor dictionary is an array with a length of 16384(1024*16), which is determined at compile time, and occupies about 640KB of memory. Including the length of the referenced keyname strings, its size is about 1-2M.

During converting the `keyname cursor` back to a `numeric cursor`, a new cursor is generated based on the above rules, and the index for storing the dictionary is determined based on the counter value (index = counter % DICT_SIZE). 

During converting the `numeric cursor` back to a `keyname cursor`, we get the counter from the cursor and calculate the index of the cursor in the `cursor_dict_` based on the counter. We only need to compare the cursor value of the item at that index with the input cursor value to determine if they are the same.

### Other information about the cursor
This design guarantees the validity of the latest 16384(1024*16) cursors, while cursors that are older or not generated in our system are considered invalid cursors. For invalid cursors, we treat them as a 0 cursor, which means we will start iterating over the collection from the beginning.

Our cursor is globally visible, and we store index information in the cursor. As long as the cursor remains valid, using the same cursor in different connections will produce the same results.

We prevent other users from guessing the data traversed by adjacent cursors by adding the hash value of the `keyname` to the cursor. If a user tries to obtain adjacent cursor information by traversing the hash, the cursor will become an invalid cursor before the traversal is complete because the size of the 32-bit space is much larger than the length of the `cursor_dict_`.

We add a timestamp to the cursor to ensure that the same cursor does not appear within a short period of time before and after a restart.

Other behaviors are consistent with the original SCAN implementation.

### Configuration file
Added `redis-cursor-compatible` configuration item.
If enabled, the cursor will be an unsigned 64-bit integer.
If disabled, the cursor will be a string.

### Test file
Added tests for `redis-cli --bigkey` and `redis-cli --memkeys` commands. We only need to ensure that these commands run correctly, because their correctness is guaranteed by `redis-cli` on the premise that we ensure the correctness of the `scan` command.
Modified the scan command test to test for the cases where `redis-cursor-compatible` is set to `yes` or `no`.


### Other changes:
Fixed a bug where the cursor did not return 0 when `SCAN` commands return less than the number of elements.",unstable,True,False,13,redis_db.cc,cc,1,2,3
431277c786c32c049e464914b7e6a98a76d48867,8042833@qq.com,2023-06-25 19:54:03+08:00,noreply@github.com,2023-06-25 19:54:03+08:00,"Add Redis-compatible cursors for `SCAN` commands (#1489)

We have added the following steps to the processing of the `SCAN`, `ZSCAN`, `SSCAN`, `HSCAN` commands:
- Before processing the command, convert the `numeric cursor` sent by the client back to the `keyname cursor`.
- After processing the command, convert the `keyname cursor` back to a `numeric cursor` and return it to the client, And store the conversion dictionary in the `Server#cursor_dict_`.

Since those steps are non-intrusive to the internal implementation of the `SCAN` command, we can ensure that the behavior of commands such as `ZSCAN`, `SSCAN`, and `HSCAN` is consistent with that of the `SCAN` command.
In the following, I will only use the `SCAN` command as an example to describe the new design.

### Cursor design

We call the new cursor the `numeric cursor` and the old one the `keyname cursor`. 
The numeric cursor is composed of 3 parts: 
- 1-16 bit is counter，and the first bit always 1
- 17-32 bit is timestamp
- 33-64 bit is hash of keyname

The `counter` is a 16-bit unsigned integer that is incremented by 1 every time. When the `counter` overflows, it returns to 0 because it is an unsigned number. Since our `cursor_dict_size` is a power of 2, the `counter` is continuous mod `cursor_dict_size`.
`timestap` is a 16-bit timestamp in seconds, which can store up to 9 hours.
`hash` is a 32-bit hash value of the `keyname`.

### Cursor dictionary(`Server#cursor_dict_`)

The cursor dictionary is an array with a length of 16384(1024*16), which is determined at compile time, and occupies about 640KB of memory. Including the length of the referenced keyname strings, its size is about 1-2M.

During converting the `keyname cursor` back to a `numeric cursor`, a new cursor is generated based on the above rules, and the index for storing the dictionary is determined based on the counter value (index = counter % DICT_SIZE). 

During converting the `numeric cursor` back to a `keyname cursor`, we get the counter from the cursor and calculate the index of the cursor in the `cursor_dict_` based on the counter. We only need to compare the cursor value of the item at that index with the input cursor value to determine if they are the same.

### Other information about the cursor
This design guarantees the validity of the latest 16384(1024*16) cursors, while cursors that are older or not generated in our system are considered invalid cursors. For invalid cursors, we treat them as a 0 cursor, which means we will start iterating over the collection from the beginning.

Our cursor is globally visible, and we store index information in the cursor. As long as the cursor remains valid, using the same cursor in different connections will produce the same results.

We prevent other users from guessing the data traversed by adjacent cursors by adding the hash value of the `keyname` to the cursor. If a user tries to obtain adjacent cursor information by traversing the hash, the cursor will become an invalid cursor before the traversal is complete because the size of the 32-bit space is much larger than the length of the `cursor_dict_`.

We add a timestamp to the cursor to ensure that the same cursor does not appear within a short period of time before and after a restart.

Other behaviors are consistent with the original SCAN implementation.

### Configuration file
Added `redis-cursor-compatible` configuration item.
If enabled, the cursor will be an unsigned 64-bit integer.
If disabled, the cursor will be a string.

### Test file
Added tests for `redis-cli --bigkey` and `redis-cli --memkeys` commands. We only need to ensure that these commands run correctly, because their correctness is guaranteed by `redis-cli` on the premise that we ensure the correctness of the `scan` command.
Modified the scan command test to test for the cases where `redis-cursor-compatible` is set to `yes` or `no`.


### Other changes:
Fixed a bug where the cursor did not return 0 when `SCAN` commands return less than the number of elements.",unstable,True,False,13,cli_test.go,go,17,0,17
431277c786c32c049e464914b7e6a98a76d48867,8042833@qq.com,2023-06-25 19:54:03+08:00,noreply@github.com,2023-06-25 19:54:03+08:00,"Add Redis-compatible cursors for `SCAN` commands (#1489)

We have added the following steps to the processing of the `SCAN`, `ZSCAN`, `SSCAN`, `HSCAN` commands:
- Before processing the command, convert the `numeric cursor` sent by the client back to the `keyname cursor`.
- After processing the command, convert the `keyname cursor` back to a `numeric cursor` and return it to the client, And store the conversion dictionary in the `Server#cursor_dict_`.

Since those steps are non-intrusive to the internal implementation of the `SCAN` command, we can ensure that the behavior of commands such as `ZSCAN`, `SSCAN`, and `HSCAN` is consistent with that of the `SCAN` command.
In the following, I will only use the `SCAN` command as an example to describe the new design.

### Cursor design

We call the new cursor the `numeric cursor` and the old one the `keyname cursor`. 
The numeric cursor is composed of 3 parts: 
- 1-16 bit is counter，and the first bit always 1
- 17-32 bit is timestamp
- 33-64 bit is hash of keyname

The `counter` is a 16-bit unsigned integer that is incremented by 1 every time. When the `counter` overflows, it returns to 0 because it is an unsigned number. Since our `cursor_dict_size` is a power of 2, the `counter` is continuous mod `cursor_dict_size`.
`timestap` is a 16-bit timestamp in seconds, which can store up to 9 hours.
`hash` is a 32-bit hash value of the `keyname`.

### Cursor dictionary(`Server#cursor_dict_`)

The cursor dictionary is an array with a length of 16384(1024*16), which is determined at compile time, and occupies about 640KB of memory. Including the length of the referenced keyname strings, its size is about 1-2M.

During converting the `keyname cursor` back to a `numeric cursor`, a new cursor is generated based on the above rules, and the index for storing the dictionary is determined based on the counter value (index = counter % DICT_SIZE). 

During converting the `numeric cursor` back to a `keyname cursor`, we get the counter from the cursor and calculate the index of the cursor in the `cursor_dict_` based on the counter. We only need to compare the cursor value of the item at that index with the input cursor value to determine if they are the same.

### Other information about the cursor
This design guarantees the validity of the latest 16384(1024*16) cursors, while cursors that are older or not generated in our system are considered invalid cursors. For invalid cursors, we treat them as a 0 cursor, which means we will start iterating over the collection from the beginning.

Our cursor is globally visible, and we store index information in the cursor. As long as the cursor remains valid, using the same cursor in different connections will produce the same results.

We prevent other users from guessing the data traversed by adjacent cursors by adding the hash value of the `keyname` to the cursor. If a user tries to obtain adjacent cursor information by traversing the hash, the cursor will become an invalid cursor before the traversal is complete because the size of the 32-bit space is much larger than the length of the `cursor_dict_`.

We add a timestamp to the cursor to ensure that the same cursor does not appear within a short period of time before and after a restart.

Other behaviors are consistent with the original SCAN implementation.

### Configuration file
Added `redis-cursor-compatible` configuration item.
If enabled, the cursor will be an unsigned 64-bit integer.
If disabled, the cursor will be a string.

### Test file
Added tests for `redis-cli --bigkey` and `redis-cli --memkeys` commands. We only need to ensure that these commands run correctly, because their correctness is guaranteed by `redis-cli` on the premise that we ensure the correctness of the `scan` command.
Modified the scan command test to test for the cases where `redis-cursor-compatible` is set to `yes` or `no`.


### Other changes:
Fixed a bug where the cursor did not return 0 when `SCAN` commands return less than the number of elements.",unstable,True,False,13,scan_test.go,go,14,1,15
230549052d73a76676572e9d332b58f716bdf1ad,aleks.raiden@gmail.com,2023-06-26 01:16:24+03:00,noreply@github.com,2023-06-26 06:16:24+08:00,build(deps): Bump rocksdb v8.3.2 (#1516),unstable,True,False,4,CMakeLists.txt,txt,1,1,2
230549052d73a76676572e9d332b58f716bdf1ad,aleks.raiden@gmail.com,2023-06-26 01:16:24+03:00,noreply@github.com,2023-06-26 06:16:24+08:00,build(deps): Bump rocksdb v8.3.2 (#1516),unstable,True,False,4,Dockerfile,None,1,1,2
230549052d73a76676572e9d332b58f716bdf1ad,aleks.raiden@gmail.com,2023-06-26 01:16:24+03:00,noreply@github.com,2023-06-26 06:16:24+08:00,build(deps): Bump rocksdb v8.3.2 (#1516),unstable,True,False,4,rocksdb.cmake,cmake,2,2,4
230549052d73a76676572e9d332b58f716bdf1ad,aleks.raiden@gmail.com,2023-06-26 01:16:24+03:00,noreply@github.com,2023-06-26 06:16:24+08:00,build(deps): Bump rocksdb v8.3.2 (#1516),unstable,True,False,4,x.py,py,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,bug-report.yml,yml,3,3,6
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,enhancement.yml,yml,2,2,4
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,cmd_list.cc,cc,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,cmd_zset.cc,cc,2,2,4
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,rand.cc,cc,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,rand.h,h,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,compact_filter.cc,cc,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,go.mod,mod,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,cli_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,cli_options_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,cluster_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,replication_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,rsid_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,slotimport_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,slotmigrate_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,tls_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,auth_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,command_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,config_test.go,go,2,3,5
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,disk_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,expire_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,geo_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,hello_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,info_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,introspection_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,keyspace_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,limits_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,logclean_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,multi_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,perflog_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,ping_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,protocol_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,regression_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,pubsub_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,quit_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,scan_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,scripting_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,slowlog_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,bitmap_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,hash_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,incr_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,list_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,set_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,sint_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,stream_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,strings_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,zset_test.go,go,1,1,2
1239dba421e47bc263e987b5dbc58df7cff033f5,hulk.website@gmail.com,2023-06-26 14:16:45+08:00,noreply@github.com,2023-06-26 14:16:45+08:00,"chore: Drop incubator- prefix from Go test files, as well as yaml files and comment lines (#1519)",unstable,True,False,48,kvrocks.service,service,1,1,2
66c1e898723dd5d5fa90ecc0cf0f73b4df0e5fd9,72412102+gloof11@users.noreply.github.com,2023-06-27 08:38:55+09:00,noreply@github.com,2023-06-27 07:38:55+08:00,"improve: warning message for invalid key in configuration file (#1498)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,1,config.cc,cc,4,0,4
2abf0ad1a25a6796e6a45e3d8a976a25e74c93ca,85615957+Yangsx-1@users.noreply.github.com,2023-06-27 19:19:12+08:00,noreply@github.com,2023-06-27 19:19:12+08:00,Parse the timeout parameter as double in the blocking command  (#1518),unstable,True,False,3,cmd_list.cc,cc,7,5,12
2abf0ad1a25a6796e6a45e3d8a976a25e74c93ca,85615957+Yangsx-1@users.noreply.github.com,2023-06-27 19:19:12+08:00,noreply@github.com,2023-06-27 19:19:12+08:00,Parse the timeout parameter as double in the blocking command  (#1518),unstable,True,False,3,cmd_zset.cc,cc,12,8,20
2abf0ad1a25a6796e6a45e3d8a976a25e74c93ca,85615957+Yangsx-1@users.noreply.github.com,2023-06-27 19:19:12+08:00,noreply@github.com,2023-06-27 19:19:12+08:00,Parse the timeout parameter as double in the blocking command  (#1518),unstable,True,False,3,error_constants.h,h,1,0,1
8539ee50c7ed74dfd35a396d138efbc8bde65542,infdahai@outlook.com,2023-06-28 18:17:59+08:00,noreply@github.com,2023-06-28 18:17:59+08:00,List each command on a separate line in list type (#1531),unstable,True,False,1,cmd_list.cc,cc,17,14,31
ed0f985fdeeb53d9b3d6fb3cda387bd65b114d3d,infdahai@outlook.com,2023-07-04 15:13:52+08:00,noreply@github.com,2023-07-04 15:13:52+08:00,"Automatically download the golangci-lint if not exists (#1491)

Signed-off-by: clundro <infdahai@outlook.com>",unstable,True,False,1,x.py,py,35,10,45
5bda1f67d464de1f8709885cca865f343761b616,binloveplay1314@qq.com,2023-07-04 17:49:08+08:00,noreply@github.com,2023-07-04 17:49:08+08:00,"Fix stdin usage text in PrintUsage (#1537)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,main.cc,cc,1,1,2
fbdc8adbf45764deba63282dbdead73ade9140b5,hulk.website@gmail.com,2023-07-05 12:47:09+08:00,noreply@github.com,2023-07-05 12:47:09+08:00,Fix the inconsistent response behavior with Redis in memory usage  command (#1539),unstable,True,False,2,cmd_server.cc,cc,8,1,9
fbdc8adbf45764deba63282dbdead73ade9140b5,hulk.website@gmail.com,2023-07-05 12:47:09+08:00,noreply@github.com,2023-07-05 12:47:09+08:00,Fix the inconsistent response behavior with Redis in memory usage  command (#1539),unstable,True,False,2,disk_test.go,go,5,2,7
49993a1b769edd573a953e6d100736b54928636d,hulk.website@gmail.com,2023-07-05 16:00:10+08:00,noreply@github.com,2023-07-05 16:00:10+08:00,Fix compile error after upgrading the rocksdb (#1542),unstable,True,False,1,rocksdb.cmake,cmake,4,0,4
74f710f6317ee8bb7c3a186b0593b0fcf668add8,binloveplay1314@qq.com,2023-07-05 18:35:57+08:00,noreply@github.com,2023-07-05 18:35:57+08:00,Fix ZMPOP/BZMPOP duplicate parameters (#1543),unstable,True,False,2,cmd_zset.cc,cc,10,8,18
74f710f6317ee8bb7c3a186b0593b0fcf668add8,binloveplay1314@qq.com,2023-07-05 18:35:57+08:00,noreply@github.com,2023-07-05 18:35:57+08:00,Fix ZMPOP/BZMPOP duplicate parameters (#1543),unstable,True,False,2,zset_test.go,go,27,0,27
9a9d218017c0c5b36e4ce1e1626863041730778c,wander4096@gmail.com,2023-07-05 19:56:08+08:00,noreply@github.com,2023-07-05 19:56:08+08:00,docs: show CI badge for unstable branch exactly (#1547),unstable,True,False,1,README.md,md,2,2,4
7e23c0bea1eb3d9c561af2dc110ebb803e0f32fe,binloveplay1314@qq.com,2023-07-05 22:51:07+08:00,noreply@github.com,2023-07-05 22:51:07+08:00,Fix GETEX not checking wrong type error causing key overwriting (#1546),unstable,True,False,2,redis_string.cc,cc,1,1,2
7e23c0bea1eb3d9c561af2dc110ebb803e0f32fe,binloveplay1314@qq.com,2023-07-05 22:51:07+08:00,noreply@github.com,2023-07-05 22:51:07+08:00,Fix GETEX not checking wrong type error causing key overwriting (#1546),unstable,True,False,2,strings_test.go,go,8,0,8
80913bc7712db8a0c06c03246e363d4747f835a2,binloveplay1314@qq.com,2023-07-06 20:00:37+08:00,noreply@github.com,2023-07-06 20:00:37+08:00,"LSET return no suck key instread of NotFound when key not exist (#1557)

The current code directly returns s.ToString() in
this case:
```
127.0.0.1:6666> lset nokey 0 1
(error) ERR NotFound:
```

NotFound might not be that friendly, and there's an
extra `:` after it. Modify it to return no such key:
```
127.0.0.1:6666> lset nokey 0 1
(error) ERR no such key
```

Note Redis also return the no such key error in this
case, so it should be fine to return this error.",unstable,True,False,2,cmd_list.cc,cc,5,1,6
80913bc7712db8a0c06c03246e363d4747f835a2,binloveplay1314@qq.com,2023-07-06 20:00:37+08:00,noreply@github.com,2023-07-06 20:00:37+08:00,"LSET return no suck key instread of NotFound when key not exist (#1557)

The current code directly returns s.ToString() in
this case:
```
127.0.0.1:6666> lset nokey 0 1
(error) ERR NotFound:
```

NotFound might not be that friendly, and there's an
extra `:` after it. Modify it to return no such key:
```
127.0.0.1:6666> lset nokey 0 1
(error) ERR no such key
```

Note Redis also return the no such key error in this
case, so it should be fine to return this error.",unstable,True,False,2,list_test.go,go,1,1,2
be8b9045d325883a5a64e72484f27b089696fc41,maplewish117@gmail.com,2023-07-06 22:31:39+08:00,noreply@github.com,2023-07-06 22:31:39+08:00,Disable `-static-libgcc` on MacOS building (#1555),unstable,True,False,1,CMakeLists.txt,txt,3,1,4
d39e198f8faff904905ea1ecf663858b83a41d7a,binloveplay1314@qq.com,2023-07-07 10:17:54+08:00,noreply@github.com,2023-07-07 10:17:54+08:00,"Fix ZUNION hang in syntax error (#1559)

The bug was introduced in #1502, without this return, when syntax
the error happens, the code will be stuck in the while loop and
result in a hang.",unstable,True,False,2,cmd_zset.cc,cc,2,0,2
d39e198f8faff904905ea1ecf663858b83a41d7a,binloveplay1314@qq.com,2023-07-07 10:17:54+08:00,noreply@github.com,2023-07-07 10:17:54+08:00,"Fix ZUNION hang in syntax error (#1559)

The bug was introduced in #1502, without this return, when syntax
the error happens, the code will be stuck in the while loop and
result in a hang.",unstable,True,False,2,zset_test.go,go,6,0,6
aa32c4658afea0466bb2aaeb8f0aee2ee62b68ca,hulk.website@gmail.com,2023-07-07 13:16:20+08:00,noreply@github.com,2023-07-07 13:16:20+08:00,Avoid printing the invalid configuration key when loading namespaces (#1558),unstable,True,False,1,config.cc,cc,1,0,1
75388101977744d974a32928b0fd1e6c66734573,binloveplay1314@qq.com,2023-07-07 14:24:34+08:00,noreply@github.com,2023-07-07 14:24:34+08:00,"Fix plain GETEX wrongly removing expiration time (#1548)

The plain GETEX will remove the expiration time since we
always do `metadata.expire = expire` and then write. In this
case, we will write expire = 0, causing the expiration time
to be erased.

Before:
```
127.0.0.1:6666> set foo bar ex 1000
OK
127.0.0.1:6666> ttl foo
(integer) 996
127.0.0.1:6666> getex foo
""bar""
127.0.0.1:6666> ttl foo
(integer) -1
```

After:
```
127.0.0.1:6666> set foo bar ex 1000
OK
127.0.0.1:6666> ttl foo
(integer) 998
127.0.0.1:6666> getex foo
""bar""
127.0.0.1:6666> ttl foo
(integer) 995
```",unstable,True,False,4,cmd_string.cc,cc,1,1,2
75388101977744d974a32928b0fd1e6c66734573,binloveplay1314@qq.com,2023-07-07 14:24:34+08:00,noreply@github.com,2023-07-07 14:24:34+08:00,"Fix plain GETEX wrongly removing expiration time (#1548)

The plain GETEX will remove the expiration time since we
always do `metadata.expire = expire` and then write. In this
case, we will write expire = 0, causing the expiration time
to be erased.

Before:
```
127.0.0.1:6666> set foo bar ex 1000
OK
127.0.0.1:6666> ttl foo
(integer) 996
127.0.0.1:6666> getex foo
""bar""
127.0.0.1:6666> ttl foo
(integer) -1
```

After:
```
127.0.0.1:6666> set foo bar ex 1000
OK
127.0.0.1:6666> ttl foo
(integer) 998
127.0.0.1:6666> getex foo
""bar""
127.0.0.1:6666> ttl foo
(integer) 995
```",unstable,True,False,4,redis_string.cc,cc,7,2,9
75388101977744d974a32928b0fd1e6c66734573,binloveplay1314@qq.com,2023-07-07 14:24:34+08:00,noreply@github.com,2023-07-07 14:24:34+08:00,"Fix plain GETEX wrongly removing expiration time (#1548)

The plain GETEX will remove the expiration time since we
always do `metadata.expire = expire` and then write. In this
case, we will write expire = 0, causing the expiration time
to be erased.

Before:
```
127.0.0.1:6666> set foo bar ex 1000
OK
127.0.0.1:6666> ttl foo
(integer) 996
127.0.0.1:6666> getex foo
""bar""
127.0.0.1:6666> ttl foo
(integer) -1
```

After:
```
127.0.0.1:6666> set foo bar ex 1000
OK
127.0.0.1:6666> ttl foo
(integer) 998
127.0.0.1:6666> getex foo
""bar""
127.0.0.1:6666> ttl foo
(integer) 995
```",unstable,True,False,4,redis_string.h,h,1,1,2
75388101977744d974a32928b0fd1e6c66734573,binloveplay1314@qq.com,2023-07-07 14:24:34+08:00,noreply@github.com,2023-07-07 14:24:34+08:00,"Fix plain GETEX wrongly removing expiration time (#1548)

The plain GETEX will remove the expiration time since we
always do `metadata.expire = expire` and then write. In this
case, we will write expire = 0, causing the expiration time
to be erased.

Before:
```
127.0.0.1:6666> set foo bar ex 1000
OK
127.0.0.1:6666> ttl foo
(integer) 996
127.0.0.1:6666> getex foo
""bar""
127.0.0.1:6666> ttl foo
(integer) -1
```

After:
```
127.0.0.1:6666> set foo bar ex 1000
OK
127.0.0.1:6666> ttl foo
(integer) 998
127.0.0.1:6666> getex foo
""bar""
127.0.0.1:6666> ttl foo
(integer) 995
```",unstable,True,False,4,strings_test.go,go,5,0,5
bf49e4fb0f7b62870de4ce864e67456e80f7c0aa,binloveplay1314@qq.com,2023-07-07 19:25:55+08:00,noreply@github.com,2023-07-07 19:25:55+08:00,Fix SCRIPT misleading error message (#1561),unstable,True,False,1,cmd_script.cc,cc,1,1,2
bfc2e78d0a3ebefcf254f5582caeafa1c9c7b8cb,aleks.raiden@gmail.com,2023-07-08 18:12:21+03:00,noreply@github.com,2023-07-08 23:12:21+08:00,Bump jsoncons to 0.171.0 (#1563),unstable,True,False,1,jsoncons.cmake,cmake,2,2,4
9294f8f78bb8d166672bf5b3fd7e2a0437f073b9,infdahai@outlook.com,2023-07-09 12:12:37+08:00,noreply@github.com,2023-07-09 12:12:37+08:00,"Add dynamic key range generator with multiple range output (#1541)

Signed-off-by: clundro <infdahai@outlook.com>",unstable,True,False,2,commander.h,h,23,7,30
9294f8f78bb8d166672bf5b3fd7e2a0437f073b9,infdahai@outlook.com,2023-07-09 12:12:37+08:00,noreply@github.com,2023-07-09 12:12:37+08:00,"Add dynamic key range generator with multiple range output (#1541)

Signed-off-by: clundro <infdahai@outlook.com>",unstable,True,False,2,server.cc,cc,10,1,11
2a927ce3f033d07e6c9b9467d88cba62fec569f4,85615957+Yangsx-1@users.noreply.github.com,2023-07-09 15:12:40+08:00,noreply@github.com,2023-07-09 15:12:40+08:00,Reduce the block cache configurations into a single one (#1549),unstable,True,False,4,kvrocks.conf,conf,4,16,20
2a927ce3f033d07e6c9b9467d88cba62fec569f4,85615957+Yangsx-1@users.noreply.github.com,2023-07-09 15:12:40+08:00,noreply@github.com,2023-07-09 15:12:40+08:00,Reduce the block cache configurations into a single one (#1549),unstable,True,False,4,config.cc,cc,1,0,1
2a927ce3f033d07e6c9b9467d88cba62fec569f4,85615957+Yangsx-1@users.noreply.github.com,2023-07-09 15:12:40+08:00,noreply@github.com,2023-07-09 15:12:40+08:00,Reduce the block cache configurations into a single one (#1549),unstable,True,False,4,config.h,h,1,0,1
2a927ce3f033d07e6c9b9467d88cba62fec569f4,85615957+Yangsx-1@users.noreply.github.com,2023-07-09 15:12:40+08:00,noreply@github.com,2023-07-09 15:12:40+08:00,Reduce the block cache configurations into a single one (#1549),unstable,True,False,4,storage.cc,cc,7,9,16
506f672742328870c1cf93b033593c6791abbcbe,binloveplay1314@qq.com,2023-07-09 16:49:36+08:00,noreply@github.com,2023-07-09 16:49:36+08:00,"Fix EVAL crashing server when numkeys is -1 (#1568)

The check allow we passing -1 is wrong, without
this fix, passing a -1 will crash the server.",unstable,True,False,2,cmd_script.cc,cc,1,1,2
506f672742328870c1cf93b033593c6791abbcbe,binloveplay1314@qq.com,2023-07-09 16:49:36+08:00,noreply@github.com,2023-07-09 16:49:36+08:00,"Fix EVAL crashing server when numkeys is -1 (#1568)

The check allow we passing -1 is wrong, without
this fix, passing a -1 will crash the server.",unstable,True,False,2,scripting_test.go,go,4,0,4
e2d637c0004d6eb217d7305f77e639c4bb31ced3,maplewish117@gmail.com,2023-07-10 11:31:37+08:00,noreply@github.com,2023-07-10 11:31:37+08:00,"Add used-after-move checking to clang-tidy (#1566)

clang-tidy has a `bugprone` checkings under: https://releases.llvm.org/14.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/list.html . I've checked all `bugprone-`, the result contains many style fixing.

This patch only adds a `bugprone-use-after-move` into clang-tidy. It detect a `used-after-move` in `src/storage/compaction_checker.cc`, moving `rocksdb::Slice` doesn't clear it contents.",unstable,True,False,2,.clang-tidy,clang-tidy,2,2,4
e2d637c0004d6eb217d7305f77e639c4bb31ced3,maplewish117@gmail.com,2023-07-10 11:31:37+08:00,noreply@github.com,2023-07-10 11:31:37+08:00,"Add used-after-move checking to clang-tidy (#1566)

clang-tidy has a `bugprone` checkings under: https://releases.llvm.org/14.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/list.html . I've checked all `bugprone-`, the result contains many style fixing.

This patch only adds a `bugprone-use-after-move` into clang-tidy. It detect a `used-after-move` in `src/storage/compaction_checker.cc`, moving `rocksdb::Slice` doesn't clear it contents.",unstable,True,False,2,compaction_checker.cc,cc,4,2,6
943af5c8b3066d6bb07b3e58520aeb352100aa33,twice.mliu@gmail.com,2023-07-10 13:00:50+08:00,noreply@github.com,2023-07-10 13:00:50+08:00,"Add container environment for building and testing in CI (#1569)

In this PR, we add a container environment (currently CentOS 7) for building and testing in CI.",unstable,True,False,1,kvrocks.yaml,yaml,65,0,65
d839d163284a7cda61127a285587a489d243812e,binloveplay1314@qq.com,2023-07-10 15:42:12+08:00,noreply@github.com,2023-07-10 15:42:12+08:00,"Make INFO command reject cases with arguments greater than 2 (#1570)

Passing info a b c is the same as passing plain info
since we only checked that args_.size() == 2, by default it
will output all.

In this PR, we will reject args_.size() > 2 and return a
syntax error. This is consistent with Redis 6.2 behavior,
however, it is inconsistent with Redis 7.0, Redis 7.0 supports
passing info server clients...

Because we don't plan to do such support for the time being,
we will first fix the problematic parts.",unstable,True,False,1,cmd_server.cc,cc,2,0,2
909d58788fb8194ae35e4d3a7defeed6add47486,binloveplay1314@qq.com,2023-07-10 17:07:57+08:00,noreply@github.com,2023-07-10 17:07:57+08:00,"Fix SCRIPT EXISTS arity (#1567)

This is a minor fix, SCRIPT EXISTS requires at least
three arguments.

Before the change, we can do this:

```
127.0.0.1:6666> script exists
(empty array)
```

After: we will return the wrong number of arguments error.",unstable,True,False,1,cmd_script.cc,cc,1,1,2
95be5eae0da2151c8b6e9b0f5ec5f9300f5ab35a,maplewish117@gmail.com,2023-07-11 11:56:46+08:00,noreply@github.com,2023-07-11 11:56:46+08:00,"Style: Change Storage::SetReadOptions to DefaultScanOptions (#1574)

Now kvrocks has `SetWriteOptions` and `SetReadOptions`.  However, their syntax wasn't consistent.
`SetWriteOptions` would set the `Storage` internal `rocksdb::WriteOptions` during initialize,
and the detail option can be got by `DefaultWriteOptions()`. So it'd be better to change the SetReadOptions
to DefaultScanOptions which is more precise.",unstable,True,False,12,slot_migrate.cc,cc,3,6,9
95be5eae0da2151c8b6e9b0f5ec5f9300f5ab35a,maplewish117@gmail.com,2023-07-11 11:56:46+08:00,noreply@github.com,2023-07-11 11:56:46+08:00,"Style: Change Storage::SetReadOptions to DefaultScanOptions (#1574)

Now kvrocks has `SetWriteOptions` and `SetReadOptions`.  However, their syntax wasn't consistent.
`SetWriteOptions` would set the `Storage` internal `rocksdb::WriteOptions` during initialize,
and the detail option can be got by `DefaultWriteOptions()`. So it'd be better to change the SetReadOptions
to DefaultScanOptions which is more precise.",unstable,True,False,12,redis_db.cc,cc,6,12,18
95be5eae0da2151c8b6e9b0f5ec5f9300f5ab35a,maplewish117@gmail.com,2023-07-11 11:56:46+08:00,noreply@github.com,2023-07-11 11:56:46+08:00,"Style: Change Storage::SetReadOptions to DefaultScanOptions (#1574)

Now kvrocks has `SetWriteOptions` and `SetReadOptions`.  However, their syntax wasn't consistent.
`SetWriteOptions` would set the `Storage` internal `rocksdb::WriteOptions` during initialize,
and the detail option can be got by `DefaultWriteOptions()`. So it'd be better to change the SetReadOptions
to DefaultScanOptions which is more precise.",unstable,True,False,12,storage.cc,cc,4,1,5
95be5eae0da2151c8b6e9b0f5ec5f9300f5ab35a,maplewish117@gmail.com,2023-07-11 11:56:46+08:00,noreply@github.com,2023-07-11 11:56:46+08:00,"Style: Change Storage::SetReadOptions to DefaultScanOptions (#1574)

Now kvrocks has `SetWriteOptions` and `SetReadOptions`.  However, their syntax wasn't consistent.
`SetWriteOptions` would set the `Storage` internal `rocksdb::WriteOptions` during initialize,
and the detail option can be got by `DefaultWriteOptions()`. So it'd be better to change the SetReadOptions
to DefaultScanOptions which is more precise.",unstable,True,False,12,storage.h,h,1,1,2
95be5eae0da2151c8b6e9b0f5ec5f9300f5ab35a,maplewish117@gmail.com,2023-07-11 11:56:46+08:00,noreply@github.com,2023-07-11 11:56:46+08:00,"Style: Change Storage::SetReadOptions to DefaultScanOptions (#1574)

Now kvrocks has `SetWriteOptions` and `SetReadOptions`.  However, their syntax wasn't consistent.
`SetWriteOptions` would set the `Storage` internal `rocksdb::WriteOptions` during initialize,
and the detail option can be got by `DefaultWriteOptions()`. So it'd be better to change the SetReadOptions
to DefaultScanOptions which is more precise.",unstable,True,False,12,redis_bitmap.cc,cc,1,2,3
95be5eae0da2151c8b6e9b0f5ec5f9300f5ab35a,maplewish117@gmail.com,2023-07-11 11:56:46+08:00,noreply@github.com,2023-07-11 11:56:46+08:00,"Style: Change Storage::SetReadOptions to DefaultScanOptions (#1574)

Now kvrocks has `SetWriteOptions` and `SetReadOptions`.  However, their syntax wasn't consistent.
`SetWriteOptions` would set the `Storage` internal `rocksdb::WriteOptions` during initialize,
and the detail option can be got by `DefaultWriteOptions()`. So it'd be better to change the SetReadOptions
to DefaultScanOptions which is more precise.",unstable,True,False,12,redis_hash.cc,cc,3,6,9
95be5eae0da2151c8b6e9b0f5ec5f9300f5ab35a,maplewish117@gmail.com,2023-07-11 11:56:46+08:00,noreply@github.com,2023-07-11 11:56:46+08:00,"Style: Change Storage::SetReadOptions to DefaultScanOptions (#1574)

Now kvrocks has `SetWriteOptions` and `SetReadOptions`.  However, their syntax wasn't consistent.
`SetWriteOptions` would set the `Storage` internal `rocksdb::WriteOptions` during initialize,
and the detail option can be got by `DefaultWriteOptions()`. So it'd be better to change the SetReadOptions
to DefaultScanOptions which is more precise.",unstable,True,False,12,redis_list.cc,cc,3,6,9
95be5eae0da2151c8b6e9b0f5ec5f9300f5ab35a,maplewish117@gmail.com,2023-07-11 11:56:46+08:00,noreply@github.com,2023-07-11 11:56:46+08:00,"Style: Change Storage::SetReadOptions to DefaultScanOptions (#1574)

Now kvrocks has `SetWriteOptions` and `SetReadOptions`.  However, their syntax wasn't consistent.
`SetWriteOptions` would set the `Storage` internal `rocksdb::WriteOptions` during initialize,
and the detail option can be got by `DefaultWriteOptions()`. So it'd be better to change the SetReadOptions
to DefaultScanOptions which is more precise.",unstable,True,False,12,redis_set.cc,cc,2,4,6
95be5eae0da2151c8b6e9b0f5ec5f9300f5ab35a,maplewish117@gmail.com,2023-07-11 11:56:46+08:00,noreply@github.com,2023-07-11 11:56:46+08:00,"Style: Change Storage::SetReadOptions to DefaultScanOptions (#1574)

Now kvrocks has `SetWriteOptions` and `SetReadOptions`.  However, their syntax wasn't consistent.
`SetWriteOptions` would set the `Storage` internal `rocksdb::WriteOptions` during initialize,
and the detail option can be got by `DefaultWriteOptions()`. So it'd be better to change the SetReadOptions
to DefaultScanOptions which is more precise.",unstable,True,False,12,redis_sortedint.cc,cc,2,4,6
95be5eae0da2151c8b6e9b0f5ec5f9300f5ab35a,maplewish117@gmail.com,2023-07-11 11:56:46+08:00,noreply@github.com,2023-07-11 11:56:46+08:00,"Style: Change Storage::SetReadOptions to DefaultScanOptions (#1574)

Now kvrocks has `SetWriteOptions` and `SetReadOptions`.  However, their syntax wasn't consistent.
`SetWriteOptions` would set the `Storage` internal `rocksdb::WriteOptions` during initialize,
and the detail option can be got by `DefaultWriteOptions()`. So it'd be better to change the SetReadOptions
to DefaultScanOptions which is more precise.",unstable,True,False,12,redis_stream.cc,cc,4,8,12
95be5eae0da2151c8b6e9b0f5ec5f9300f5ab35a,maplewish117@gmail.com,2023-07-11 11:56:46+08:00,noreply@github.com,2023-07-11 11:56:46+08:00,"Style: Change Storage::SetReadOptions to DefaultScanOptions (#1574)

Now kvrocks has `SetWriteOptions` and `SetReadOptions`.  However, their syntax wasn't consistent.
`SetWriteOptions` would set the `Storage` internal `rocksdb::WriteOptions` during initialize,
and the detail option can be got by `DefaultWriteOptions()`. So it'd be better to change the SetReadOptions
to DefaultScanOptions which is more precise.",unstable,True,False,12,redis_zset.cc,cc,5,10,15
95be5eae0da2151c8b6e9b0f5ec5f9300f5ab35a,maplewish117@gmail.com,2023-07-11 11:56:46+08:00,noreply@github.com,2023-07-11 11:56:46+08:00,"Style: Change Storage::SetReadOptions to DefaultScanOptions (#1574)

Now kvrocks has `SetWriteOptions` and `SetReadOptions`.  However, their syntax wasn't consistent.
`SetWriteOptions` would set the `Storage` internal `rocksdb::WriteOptions` during initialize,
and the detail option can be got by `DefaultWriteOptions()`. So it'd be better to change the SetReadOptions
to DefaultScanOptions which is more precise.",unstable,True,False,12,parser.cc,cc,1,2,3
2c3aed365a89794fc69e05c68d61011eea908206,binloveplay1314@qq.com,2023-07-11 19:43:52+08:00,noreply@github.com,2023-07-11 19:43:52+08:00,"Fix EXEC / DISCARD without MULTI wrongly reset watch (#1562)

The old code called ResetWatchedKeys before the error, and then
ResetWatchedKeys reset the watched_keys_modified flag which causes
the following inconsistencies (with Redis).

kvrocks output:
```
127.0.0.1:6666> watch a
OK
127.0.0.1:6666> watch b     ->>> other client touch a
OK
127.0.0.1:6666> exec
(error) ERR EXEC without MULTI
127.0.0.1:6666> multi
OK
127.0.0.1:6666(TX)> ping
QUEUED
127.0.0.1:6666(TX)> exec
1) PONG
```

redis output:
```
127.0.0.1:6379> watch a
OK
127.0.0.1:6379> watch b     ->>> other client touch a
OK
127.0.0.1:6379> exec
(error) ERR EXEC without MULTI
127.0.0.1:6379> multi
OK
127.0.0.1:6379(TX)> ping
QUEUED
127.0.0.1:6379(TX)> exec
(nil)
````

Introduced in #1279",unstable,True,False,2,cmd_txn.cc,cc,3,4,7
2c3aed365a89794fc69e05c68d61011eea908206,binloveplay1314@qq.com,2023-07-11 19:43:52+08:00,noreply@github.com,2023-07-11 19:43:52+08:00,"Fix EXEC / DISCARD without MULTI wrongly reset watch (#1562)

The old code called ResetWatchedKeys before the error, and then
ResetWatchedKeys reset the watched_keys_modified flag which causes
the following inconsistencies (with Redis).

kvrocks output:
```
127.0.0.1:6666> watch a
OK
127.0.0.1:6666> watch b     ->>> other client touch a
OK
127.0.0.1:6666> exec
(error) ERR EXEC without MULTI
127.0.0.1:6666> multi
OK
127.0.0.1:6666(TX)> ping
QUEUED
127.0.0.1:6666(TX)> exec
1) PONG
```

redis output:
```
127.0.0.1:6379> watch a
OK
127.0.0.1:6379> watch b     ->>> other client touch a
OK
127.0.0.1:6379> exec
(error) ERR EXEC without MULTI
127.0.0.1:6379> multi
OK
127.0.0.1:6379(TX)> ping
QUEUED
127.0.0.1:6379(TX)> exec
(nil)
````

Introduced in #1279",unstable,True,False,2,multi_test.go,go,32,0,32
46862ea559976d50ba6996942f2c962774dfc5e9,binloveplay1314@qq.com,2023-07-12 10:29:00+08:00,noreply@github.com,2023-07-12 10:29:00+08:00,"Avoid Write calls when SIADD added_cnt is 0 (#1577)

This may improve performance by 40% in certain cases.

Simple benchmarks:
```
src/redis-benchmark -p 6666 -P 100 -n 100000 siadd key 1 2 3
```

Before is 95057.03 requests per second.
After is 135135.14 requests per second.",unstable,True,False,1,redis_sortedint.cc,cc,7,6,13
03ceb6e8105656c2fc08ae47a820e3e37d3c56f3,binloveplay1314@qq.com,2023-07-12 12:12:50+08:00,noreply@github.com,2023-07-12 12:12:50+08:00,"Fix GEOHASH / GEOPOS should return nil array instead of error for non-existing key (#1573)

The current code GETHASH returns an error for a key
that doesn't exist:
```
127.0.0.1:6666> geohash mykey a b c
(error) ERR NotFound:
```

In Redis, this would return:
```
127.0.0.1:6379> geohash mykey a b c
1) (nil)
2) (nil)
3) (nil)
```

GEOPOS also has the same issue, this PR fixes these inconsistencies in this case.",unstable,True,False,2,cmd_geo.cc,cc,13,2,15
03ceb6e8105656c2fc08ae47a820e3e37d3c56f3,binloveplay1314@qq.com,2023-07-12 12:12:50+08:00,noreply@github.com,2023-07-12 12:12:50+08:00,"Fix GEOHASH / GEOPOS should return nil array instead of error for non-existing key (#1573)

The current code GETHASH returns an error for a key
that doesn't exist:
```
127.0.0.1:6666> geohash mykey a b c
(error) ERR NotFound:
```

In Redis, this would return:
```
127.0.0.1:6379> geohash mykey a b c
1) (nil)
2) (nil)
3) (nil)
```

GEOPOS also has the same issue, this PR fixes these inconsistencies in this case.",unstable,True,False,2,geo_test.go,go,10,0,10
9d49287f2c037a43e54b1f3fed605cf23a8062b2,binloveplay1314@qq.com,2023-07-12 19:55:27+08:00,noreply@github.com,2023-07-12 19:55:27+08:00,Fix flaky test TestZset ZRANGEBYSCORE_fuzzy_test (#1583),unstable,True,False,1,zset_test.go,go,13,13,26
7b6cd7a9459f97666e47c8be0e4ada3dcc66aba7,wander4096@gmail.com,2023-07-12 21:57:52+08:00,noreply@github.com,2023-07-12 21:57:52+08:00,ci: typos and needs (#1584),unstable,True,False,1,kvrocks.yaml,yaml,4,4,8
7af5bb508eef566643a1df1ecf1a178468727765,maplewish117@gmail.com,2023-07-13 11:33:46+08:00,noreply@github.com,2023-07-13 11:33:46+08:00,Storage: Extract an MultiGet Options for rocksdb::MultiGet (#1582),unstable,True,False,4,storage.cc,cc,7,0,7
7af5bb508eef566643a1df1ecf1a178468727765,maplewish117@gmail.com,2023-07-13 11:33:46+08:00,noreply@github.com,2023-07-13 11:33:46+08:00,Storage: Extract an MultiGet Options for rocksdb::MultiGet (#1582),unstable,True,False,4,storage.h,h,1,0,1
7af5bb508eef566643a1df1ecf1a178468727765,maplewish117@gmail.com,2023-07-13 11:33:46+08:00,noreply@github.com,2023-07-13 11:33:46+08:00,Storage: Extract an MultiGet Options for rocksdb::MultiGet (#1582),unstable,True,False,4,redis_hash.cc,cc,4,4,8
7af5bb508eef566643a1df1ecf1a178468727765,maplewish117@gmail.com,2023-07-13 11:33:46+08:00,noreply@github.com,2023-07-13 11:33:46+08:00,Storage: Extract an MultiGet Options for rocksdb::MultiGet (#1582),unstable,True,False,4,redis_string.cc,cc,1,1,2
53b7e879e395653651680f76e29c9e4a63b72f10,twice.mliu@gmail.com,2023-07-13 12:57:07+08:00,noreply@github.com,2023-07-13 12:57:07+08:00,Fix prerequisite install commands in README (#1590),unstable,True,False,1,README.md,md,12,8,20
94df83d7b90c339d89705e80c5133f784ec9f93d,binloveplay1314@qq.com,2023-07-13 14:33:38+08:00,noreply@github.com,2023-07-13 14:33:38+08:00,"Fix DECRBY LLONG_MIN caused an overflow (#1581)

Note that this may break compatibility since in the past
doing: `DECRBY key -9223372036854775808` would succeed
but create an invalid result. And now we will return an
error rejecting the request.

Before:
```
127.0.0.1:6666> set key 0
OK
127.0.0.1:6666> decrby key -9223372036854775807
(integer) 9223372036854775807
127.0.0.1:6666> get key
""9223372036854775807""

127.0.0.1:6666> set key 0
OK
127.0.0.1:6666> decrby key -9223372036854775808
(integer) -9223372036854775808
127.0.0.1:6666> get key
""-9223372036854775808""
```

After:
```
127.0.0.1:6666> decrby key -9223372036854775808
(error) ERR decrement would overflow
```",unstable,True,False,2,cmd_string.cc,cc,6,0,6
94df83d7b90c339d89705e80c5133f784ec9f93d,binloveplay1314@qq.com,2023-07-13 14:33:38+08:00,noreply@github.com,2023-07-13 14:33:38+08:00,"Fix DECRBY LLONG_MIN caused an overflow (#1581)

Note that this may break compatibility since in the past
doing: `DECRBY key -9223372036854775808` would succeed
but create an invalid result. And now we will return an
error rejecting the request.

Before:
```
127.0.0.1:6666> set key 0
OK
127.0.0.1:6666> decrby key -9223372036854775807
(integer) 9223372036854775807
127.0.0.1:6666> get key
""9223372036854775807""

127.0.0.1:6666> set key 0
OK
127.0.0.1:6666> decrby key -9223372036854775808
(integer) -9223372036854775808
127.0.0.1:6666> get key
""-9223372036854775808""
```

After:
```
127.0.0.1:6666> decrby key -9223372036854775808
(error) ERR decrement would overflow
```",unstable,True,False,2,incr_test.go,go,5,0,5
daece9e688d6bbd16ae402444caf8d31225cc795,binloveplay1314@qq.com,2023-07-13 18:13:31+08:00,noreply@github.com,2023-07-13 18:13:31+08:00,"ZUNION arity should be -3 instread of -4 (#1589)

before:
```
127.0.0.1:6666> zunion 1 zset
(error) ERR wrong number of arguments
```

after:
```
127.0.0.1:6666> zunion 1 zset
(empty array)

127.0.0.1:6666> zunion 1 zset
1) ""a""
2) ""b""
3) ""c""
```",unstable,True,False,2,cmd_zset.cc,cc,1,1,2
daece9e688d6bbd16ae402444caf8d31225cc795,binloveplay1314@qq.com,2023-07-13 18:13:31+08:00,noreply@github.com,2023-07-13 18:13:31+08:00,"ZUNION arity should be -3 instread of -4 (#1589)

before:
```
127.0.0.1:6666> zunion 1 zset
(error) ERR wrong number of arguments
```

after:
```
127.0.0.1:6666> zunion 1 zset
(empty array)

127.0.0.1:6666> zunion 1 zset
1) ""a""
2) ""b""
3) ""c""
```",unstable,True,False,2,zset_test.go,go,3,0,3
0d2304300b494898b1626a38dfc5fbafe523b5a3,binloveplay1314@qq.com,2023-07-13 20:02:41+08:00,noreply@github.com,2023-07-13 20:02:41+08:00,Fix version typo in variable name (#1591),unstable,True,False,1,redis_zset.cc,cc,6,6,12
31bcd8a62f2faf097a8558e97cea7fc085a08f11,binloveplay1314@qq.com,2023-07-14 16:30:45+08:00,noreply@github.com,2023-07-14 16:30:45+08:00,"Fix ZRANGESTORE arity -4 that crashes the server (#1593)

ZRANGESTORE arity should be -5, the code wrongtly sets it to -4,
when passing 4 arguments, server will trigger a Segmentation fault
and result a crash:
```
127.0.0.1:6666> zrangestore dstzset srczset 0
Error: Server closed the connection
not connected>
```",unstable,True,False,2,cmd_zset.cc,cc,1,1,2
31bcd8a62f2faf097a8558e97cea7fc085a08f11,binloveplay1314@qq.com,2023-07-14 16:30:45+08:00,noreply@github.com,2023-07-14 16:30:45+08:00,"Fix ZRANGESTORE arity -4 that crashes the server (#1593)

ZRANGESTORE arity should be -5, the code wrongtly sets it to -4,
when passing 4 arguments, server will trigger a Segmentation fault
and result a crash:
```
127.0.0.1:6666> zrangestore dstzset srczset 0
Error: Server closed the connection
not connected>
```",unstable,True,False,2,zset_test.go,go,8,0,8
fe73c35670da90c6b019a95388fda8aecc25cfda,85615957+Yangsx-1@users.noreply.github.com,2023-07-16 15:09:53+08:00,noreply@github.com,2023-07-16 15:09:53+08:00,Add the support of BLMOVE (#1592),unstable,True,False,2,cmd_list.cc,cc,128,0,128
fe73c35670da90c6b019a95388fda8aecc25cfda,85615957+Yangsx-1@users.noreply.github.com,2023-07-16 15:09:53+08:00,noreply@github.com,2023-07-16 15:09:53+08:00,Add the support of BLMOVE (#1592),unstable,True,False,2,list_test.go,go,56,0,56
b67f2680f3156bfc51f9a3e3174cea189ac6b64b,52393536+xiaobiaozhao@users.noreply.github.com,2023-07-16 18:28:58+08:00,noreply@github.com,2023-07-16 18:28:58+08:00,"Fix config set compression type didn't take effect (#1576)

Co-authored-by: git-hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,config.cc,cc,44,32,76
b67f2680f3156bfc51f9a3e3174cea189ac6b64b,52393536+xiaobiaozhao@users.noreply.github.com,2023-07-16 18:28:58+08:00,noreply@github.com,2023-07-16 18:28:58+08:00,"Fix config set compression type didn't take effect (#1576)

Co-authored-by: git-hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,config_type.h,h,20,12,32
b67f2680f3156bfc51f9a3e3174cea189ac6b64b,52393536+xiaobiaozhao@users.noreply.github.com,2023-07-16 18:28:58+08:00,noreply@github.com,2023-07-16 18:28:58+08:00,"Fix config set compression type didn't take effect (#1576)

Co-authored-by: git-hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,event_listener.cc,cc,5,15,20
b67f2680f3156bfc51f9a3e3174cea189ac6b64b,52393536+xiaobiaozhao@users.noreply.github.com,2023-07-16 18:28:58+08:00,noreply@github.com,2023-07-16 18:28:58+08:00,"Fix config set compression type didn't take effect (#1576)

Co-authored-by: git-hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,storage.h,h,14,0,14
b67f2680f3156bfc51f9a3e3174cea189ac6b64b,52393536+xiaobiaozhao@users.noreply.github.com,2023-07-16 18:28:58+08:00,noreply@github.com,2023-07-16 18:28:58+08:00,"Fix config set compression type didn't take effect (#1576)

Co-authored-by: git-hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,config_test.go,go,21,0,21
0a2dcee8bedfa6df23e5d78e002065a717bc1617,zevin9427@gmail.com,2023-07-16 21:37:52+08:00,noreply@github.com,2023-07-16 21:37:52+08:00,Add the support of the HRANDFIELD command (#1565),unstable,True,False,5,cmd_hash.cc,cc,52,1,53
0a2dcee8bedfa6df23e5d78e002065a717bc1617,zevin9427@gmail.com,2023-07-16 21:37:52+08:00,noreply@github.com,2023-07-16 21:37:52+08:00,Add the support of the HRANDFIELD command (#1565),unstable,True,False,5,redis_hash.cc,cc,54,0,54
0a2dcee8bedfa6df23e5d78e002065a717bc1617,zevin9427@gmail.com,2023-07-16 21:37:52+08:00,noreply@github.com,2023-07-16 21:37:52+08:00,Add the support of the HRANDFIELD command (#1565),unstable,True,False,5,redis_hash.h,h,2,0,2
0a2dcee8bedfa6df23e5d78e002065a717bc1617,zevin9427@gmail.com,2023-07-16 21:37:52+08:00,noreply@github.com,2023-07-16 21:37:52+08:00,Add the support of the HRANDFIELD command (#1565),unstable,True,False,5,hash_test.cc,cc,31,0,31
0a2dcee8bedfa6df23e5d78e002065a717bc1617,zevin9427@gmail.com,2023-07-16 21:37:52+08:00,noreply@github.com,2023-07-16 21:37:52+08:00,Add the support of the HRANDFIELD command (#1565),unstable,True,False,5,hash_test.go,go,49,0,49
82cc0a242e51fb41871429517ff8c363b6c1d844,binloveplay1314@qq.com,2023-07-18 12:08:11+08:00,noreply@github.com,2023-07-18 12:08:11+08:00,"Return an error when Stream::Range fails and remove some debug server logs (#1556)

This PR has two parts.

The first one, internally, both XREAD and XRANGE call the Stream::Range
function. When Range fails, we should return an error.

The second one is to remove the debug logs. These logs were there in the
earliest days, I guess they are for debugging, remove them now to avoid polluting
the server logs.

The blpop one is easy to reproduce:
```
Failed to execute redis command: blpop, err: Invalid argument: WRONGTYPE
Operation against a key holding the wrong kind of value
```",unstable,True,False,3,replication.cc,cc,1,1,2
82cc0a242e51fb41871429517ff8c363b6c1d844,binloveplay1314@qq.com,2023-07-18 12:08:11+08:00,noreply@github.com,2023-07-18 12:08:11+08:00,"Return an error when Stream::Range fails and remove some debug server logs (#1556)

This PR has two parts.

The first one, internally, both XREAD and XRANGE call the Stream::Range
function. When Range fails, we should return an error.

The second one is to remove the debug logs. These logs were there in the
earliest days, I guess they are for debugging, remove them now to avoid polluting
the server logs.

The blpop one is easy to reproduce:
```
Failed to execute redis command: blpop, err: Invalid argument: WRONGTYPE
Operation against a key holding the wrong kind of value
```",unstable,True,False,3,cmd_list.cc,cc,0,2,2
82cc0a242e51fb41871429517ff8c363b6c1d844,binloveplay1314@qq.com,2023-07-18 12:08:11+08:00,noreply@github.com,2023-07-18 12:08:11+08:00,"Return an error when Stream::Range fails and remove some debug server logs (#1556)

This PR has two parts.

The first one, internally, both XREAD and XRANGE call the Stream::Range
function. When Range fails, we should return an error.

The second one is to remove the debug logs. These logs were there in the
earliest days, I guess they are for debugging, remove them now to avoid polluting
the server logs.

The blpop one is easy to reproduce:
```
Failed to execute redis command: blpop, err: Invalid argument: WRONGTYPE
Operation against a key holding the wrong kind of value
```",unstable,True,False,3,cmd_stream.cc,cc,3,4,7
960c2f6d210844d3b093381f6120cdb1ab31fef1,binloveplay1314@qq.com,2023-07-19 03:52:24+08:00,noreply@github.com,2023-07-18 21:52:24+02:00,"Fix INFO used_memory_rss_human field name (#1595)

The name should be used_memory_rss_human according to
the context and Redis documentation.",unstable,True,False,1,server.cc,cc,1,1,2
f48c02f292fe3c4fc9f505ec507dbdb6e62b95ff,binloveplay1314@qq.com,2023-07-19 22:36:05+08:00,noreply@github.com,2023-07-19 22:36:05+08:00,"Use LMOVE logic to handle RPOPLPUSH (#1596)

RPOPLPUSH is actually LMOVE RIGHT LEFT, we can use
list_db.LMove to replace List::RPopLPush. In this way
we can enjoy the multi locks guard and operate multi
keys atomically.",unstable,True,False,4,cmd_list.cc,cc,1,1,2
f48c02f292fe3c4fc9f505ec507dbdb6e62b95ff,binloveplay1314@qq.com,2023-07-19 22:36:05+08:00,noreply@github.com,2023-07-19 22:36:05+08:00,"Use LMOVE logic to handle RPOPLPUSH (#1596)

RPOPLPUSH is actually LMOVE RIGHT LEFT, we can use
list_db.LMove to replace List::RPopLPush. In this way
we can enjoy the multi locks guard and operate multi
keys atomically.",unstable,True,False,4,redis_list.cc,cc,0,18,18
f48c02f292fe3c4fc9f505ec507dbdb6e62b95ff,binloveplay1314@qq.com,2023-07-19 22:36:05+08:00,noreply@github.com,2023-07-19 22:36:05+08:00,"Use LMOVE logic to handle RPOPLPUSH (#1596)

RPOPLPUSH is actually LMOVE RIGHT LEFT, we can use
list_db.LMove to replace List::RPopLPush. In this way
we can enjoy the multi locks guard and operate multi
keys atomically.",unstable,True,False,4,redis_list.h,h,0,1,1
f48c02f292fe3c4fc9f505ec507dbdb6e62b95ff,binloveplay1314@qq.com,2023-07-19 22:36:05+08:00,noreply@github.com,2023-07-19 22:36:05+08:00,"Use LMOVE logic to handle RPOPLPUSH (#1596)

RPOPLPUSH is actually LMOVE RIGHT LEFT, we can use
list_db.LMove to replace List::RPopLPush. In this way
we can enjoy the multi locks guard and operate multi
keys atomically.",unstable,True,False,4,list_test.cc,cc,0,19,19
841f4e01366a088645bf3d1f870032da731ca703,aleks.raiden@gmail.com,2023-07-20 16:09:07+03:00,noreply@github.com,2023-07-20 21:09:07+08:00,"Enable the jemalloc option --disable-cache-oblivious (#1575)

Inspired a Redis release notice, I add two options for optimizing jmalloc usages:

- disable-cache - Disable thread-specific caches for small objects.  Objects are cached and released in bulk, thus reducing the total number of mutex operations.
- disable-cache-oblivious - Disable cache-oblivious significant allocation alignment for large allocation requests with no alignment constraints.  If this feature is disabled, all large allocations are page-aligned as an implementation artifact, which can severely harm CPU cache utilization. For more info, please take a look at the conversations in Redis - https://github.com/redis/redis/pull/12315 where these options are available starting at 7.3-rc2.",unstable,True,False,1,jemalloc.cmake,cmake,7,1,8
5de3acca73d5bd99103dfd8346f51971c73b9415,ovaistariq@gmail.com,2023-07-21 08:21:53-07:00,noreply@github.com,2023-07-21 23:21:53+08:00,"Fix  Docker image may crash if running on the AMD platform (#1602)

RocksDB PORTABLE was set to 0 after #1516 and it may return an illegal instruction error
when running on the AMD platform. This PR fixes this issue by changing the default value
of PORTABLE to 1 so that it can compile the rocksdb without platform special instructions.",unstable,True,False,2,Dockerfile,None,1,1,2
5de3acca73d5bd99103dfd8346f51971c73b9415,ovaistariq@gmail.com,2023-07-21 08:21:53-07:00,noreply@github.com,2023-07-21 23:21:53+08:00,"Fix  Docker image may crash if running on the AMD platform (#1602)

RocksDB PORTABLE was set to 0 after #1516 and it may return an illegal instruction error
when running on the AMD platform. This PR fixes this issue by changing the default value
of PORTABLE to 1 so that it can compile the rocksdb without platform special instructions.",unstable,True,False,2,x.py,py,6,1,7
f9fc3402d8a6d012d92ca90ca9854654e509bcf1,binloveplay1314@qq.com,2023-07-22 16:57:47+08:00,noreply@github.com,2023-07-22 16:57:47+08:00,"Update error message and add the ERR error code (#1597)

We now have some error messages that do not return
an ERR error code:
```
127.0.0.1:6666> cluster nodes
Cluster mode is not enabled
```

As far as i know this doesn't affect the client libs,
and doesn't affect the users. But I think it's right
to add the error code.

Note that Redis will actually count error messages and
standardize the error codes, like:
```
127.0.0.1:6379> info Errorstats
 # Errorstats
errorstat_ERR:count=2
errorstat_EXECABORT:count=1
errorstat_WRONGTYPE:count=1
```

We mixed using the status message and error output in
some places, this PR checks all redis::Error calls and
use error status to replace it. (Only the ERR case is
handled, others are not handled yet.)

We like to have the ""ERR"" + some_error_message construction
only in one place as an implementation detail of the Redis
protocol. Maybe, inside redis::Error or so.

We will leave it for a future PR as a cleanup. (pull out 
the error code and error message)",unstable,True,False,5,cmd_cluster.cc,cc,14,18,32
f9fc3402d8a6d012d92ca90ca9854654e509bcf1,binloveplay1314@qq.com,2023-07-22 16:57:47+08:00,noreply@github.com,2023-07-22 16:57:47+08:00,"Update error message and add the ERR error code (#1597)

We now have some error messages that do not return
an ERR error code:
```
127.0.0.1:6666> cluster nodes
Cluster mode is not enabled
```

As far as i know this doesn't affect the client libs,
and doesn't affect the users. But I think it's right
to add the error code.

Note that Redis will actually count error messages and
standardize the error codes, like:
```
127.0.0.1:6379> info Errorstats
 # Errorstats
errorstat_ERR:count=2
errorstat_EXECABORT:count=1
errorstat_WRONGTYPE:count=1
```

We mixed using the status message and error output in
some places, this PR checks all redis::Error calls and
use error status to replace it. (Only the ERR case is
handled, others are not handled yet.)

We like to have the ""ERR"" + some_error_message construction
only in one place as an implementation detail of the Redis
protocol. Maybe, inside redis::Error or so.

We will leave it for a future PR as a cleanup. (pull out 
the error code and error message)",unstable,True,False,5,cmd_key.cc,cc,1,1,2
f9fc3402d8a6d012d92ca90ca9854654e509bcf1,binloveplay1314@qq.com,2023-07-22 16:57:47+08:00,noreply@github.com,2023-07-22 16:57:47+08:00,"Update error message and add the ERR error code (#1597)

We now have some error messages that do not return
an ERR error code:
```
127.0.0.1:6666> cluster nodes
Cluster mode is not enabled
```

As far as i know this doesn't affect the client libs,
and doesn't affect the users. But I think it's right
to add the error code.

Note that Redis will actually count error messages and
standardize the error codes, like:
```
127.0.0.1:6379> info Errorstats
 # Errorstats
errorstat_ERR:count=2
errorstat_EXECABORT:count=1
errorstat_WRONGTYPE:count=1
```

We mixed using the status message and error output in
some places, this PR checks all redis::Error calls and
use error status to replace it. (Only the ERR case is
handled, others are not handled yet.)

We like to have the ""ERR"" + some_error_message construction
only in one place as an implementation detail of the Redis
protocol. Maybe, inside redis::Error or so.

We will leave it for a future PR as a cleanup. (pull out 
the error code and error message)",unstable,True,False,5,cmd_server.cc,cc,24,38,62
f9fc3402d8a6d012d92ca90ca9854654e509bcf1,binloveplay1314@qq.com,2023-07-22 16:57:47+08:00,noreply@github.com,2023-07-22 16:57:47+08:00,"Update error message and add the ERR error code (#1597)

We now have some error messages that do not return
an ERR error code:
```
127.0.0.1:6666> cluster nodes
Cluster mode is not enabled
```

As far as i know this doesn't affect the client libs,
and doesn't affect the users. But I think it's right
to add the error code.

Note that Redis will actually count error messages and
standardize the error codes, like:
```
127.0.0.1:6379> info Errorstats
 # Errorstats
errorstat_ERR:count=2
errorstat_EXECABORT:count=1
errorstat_WRONGTYPE:count=1
```

We mixed using the status message and error output in
some places, this PR checks all redis::Error calls and
use error status to replace it. (Only the ERR case is
handled, others are not handled yet.)

We like to have the ""ERR"" + some_error_message construction
only in one place as an implementation detail of the Redis
protocol. Maybe, inside redis::Error or so.

We will leave it for a future PR as a cleanup. (pull out 
the error code and error message)",unstable,True,False,5,cmd_txn.cc,cc,4,8,12
f9fc3402d8a6d012d92ca90ca9854654e509bcf1,binloveplay1314@qq.com,2023-07-22 16:57:47+08:00,noreply@github.com,2023-07-22 16:57:47+08:00,"Update error message and add the ERR error code (#1597)

We now have some error messages that do not return
an ERR error code:
```
127.0.0.1:6666> cluster nodes
Cluster mode is not enabled
```

As far as i know this doesn't affect the client libs,
and doesn't affect the users. But I think it's right
to add the error code.

Note that Redis will actually count error messages and
standardize the error codes, like:
```
127.0.0.1:6379> info Errorstats
 # Errorstats
errorstat_ERR:count=2
errorstat_EXECABORT:count=1
errorstat_WRONGTYPE:count=1
```

We mixed using the status message and error output in
some places, this PR checks all redis::Error calls and
use error status to replace it. (Only the ERR case is
handled, others are not handled yet.)

We like to have the ""ERR"" + some_error_message construction
only in one place as an implementation detail of the Redis
protocol. Maybe, inside redis::Error or so.

We will leave it for a future PR as a cleanup. (pull out 
the error code and error message)",unstable,True,False,5,redis_connection.cc,cc,3,3,6
8cd6f59e46fb2aaf144514420dbcb1853ca97b7e,85615957+Yangsx-1@users.noreply.github.com,2023-07-22 23:41:03+08:00,noreply@github.com,2023-07-22 23:41:03+08:00,ci: add archlinux container case (#1601),unstable,True,False,1,kvrocks.yaml,yaml,13,3,16
99cb709773fe15dcf7d374adce412c8d9c0e1f1e,singhuddeshyaofficial@gmail.com,2023-07-24 12:42:07+05:30,noreply@github.com,2023-07-24 15:12:07+08:00,Add support for GEOSEARCH and GEOSEARCHSTORE (#1533),unstable,True,False,6,cmd_geo.cc,cc,254,4,258
99cb709773fe15dcf7d374adce412c8d9c0e1f1e,singhuddeshyaofficial@gmail.com,2023-07-24 12:42:07+05:30,noreply@github.com,2023-07-24 15:12:07+08:00,Add support for GEOSEARCH and GEOSEARCHSTORE (#1533),unstable,True,False,6,geohash.cc,cc,45,35,80
99cb709773fe15dcf7d374adce412c8d9c0e1f1e,singhuddeshyaofficial@gmail.com,2023-07-24 12:42:07+05:30,noreply@github.com,2023-07-24 15:12:07+08:00,Add support for GEOSEARCH and GEOSEARCHSTORE (#1533),unstable,True,False,6,geohash.h,h,17,3,20
99cb709773fe15dcf7d374adce412c8d9c0e1f1e,singhuddeshyaofficial@gmail.com,2023-07-24 12:42:07+05:30,noreply@github.com,2023-07-24 15:12:07+08:00,Add support for GEOSEARCH and GEOSEARCHSTORE (#1533),unstable,True,False,6,redis_geo.cc,cc,84,26,110
99cb709773fe15dcf7d374adce412c8d9c0e1f1e,singhuddeshyaofficial@gmail.com,2023-07-24 12:42:07+05:30,noreply@github.com,2023-07-24 15:12:07+08:00,Add support for GEOSEARCH and GEOSEARCHSTORE (#1533),unstable,True,False,6,redis_geo.h,h,14,6,20
99cb709773fe15dcf7d374adce412c8d9c0e1f1e,singhuddeshyaofficial@gmail.com,2023-07-24 12:42:07+05:30,noreply@github.com,2023-07-24 15:12:07+08:00,Add support for GEOSEARCH and GEOSEARCHSTORE (#1533),unstable,True,False,6,geo_test.go,go,64,0,64
03dedbcacb328f1c69b377e7afe84100cf2db943,binloveplay1314@qq.com,2023-07-24 17:01:54+08:00,noreply@github.com,2023-07-24 17:01:54+08:00,"Fix ZREMRANGEBYSCORE arity, should be 4 instead of -4 (#1604)

This doesn't matter, just a minor fix, zremrangebyscore
doesn't accept extra arguments.",unstable,True,False,1,cmd_zset.cc,cc,1,1,2
e00875520c81c55e47e34b5beca37ef5cae4ef00,aleks.raiden@gmail.com,2023-07-25 05:28:00+03:00,noreply@github.com,2023-07-25 10:28:00+08:00,build(deps): Bump oneTBB 2021.10.0 (#1606),unstable,True,False,1,tbb.cmake,cmake,2,2,4
acf2e9c1c68e236b581829c99de09072931d969e,binloveplay1314@qq.com,2023-07-25 14:19:33+08:00,noreply@github.com,2023-07-25 14:19:33+08:00,"Remove deprecated golangci linters: structcheck, deadcode and varcheck (#1608)

Ci resulted in the following warnings:
```
level=warning msg=""[runner] The linter 'structcheck' is deprecated
(since v1.49.0) due to: The owner seems to have abandoned the linter.
Replaced by unused.""
level=warning msg=""[runner] The linter 'deadcode' is deprecated (since
v1.49.0) due to: The owner seems to have abandoned the linter.  Replaced
by unused.""
level=warning msg=""[runner] The linter 'varcheck' is deprecated (since
v1.49.0) due to: The owner seems to have abandoned the linter.  Replaced
by unused.""
```

The deadcode, structcheck and varcheck linters are deprecated by
golangci-lint. It is recommended to use unused instead. And we are
already using it, so this PR just removes the deprecated linters.",unstable,True,False,1,.golangci.yml,yml,0,3,3
0e28daca80f22cd7193c903ff9b8c91bef2c8f28,binloveplay1314@qq.com,2023-07-26 00:01:39+08:00,noreply@github.com,2023-07-26 00:01:39+08:00,"Fix ZRANGESTORE not overwrite the dst key (#1609)

When the code is doing `store`, it calls the add method,
which leads us to perform zadd dst xxx in disguise. And
this result the following two issues.

The first one is we do a type check against dst:
```
127.0.0.1:6379> set dst value
OK
127.0.0.1:6379> zrangestore dst non 0 -1
(integer) 0
127.0.0.1:6379> get dst
(nil)

127.0.0.1:6666> set dst value
OK
127.0.0.1:6666> zrangestore dst non 0 -1
(error) ERR Invalid argument: WRONGTYPE Operation against a key holding
the wrong kind of value
```

The second one is when dst has members, we are doing zadd:
```
127.0.0.1:6379> zadd dst 1 a 2 b
(integer) 2
127.0.0.1:6379> zadd src 3 c 4 d
(integer) 2
127.0.0.1:6379> zrangestore dst src 0 -1
(integer) 2
127.0.0.1:6379> zrange dst 0 -1
1) ""c""
2) ""d""

127.0.0.1:6666> zadd dst 1 a 2 b
(integer) 2
127.0.0.1:6666> zadd src 3 c 4 d
(integer) 2
127.0.0.1:6666> zrangestore dst src 0 -1
(integer) 2
127.0.0.1:6666> zrange dst 0 -1
1) ""a""
2) ""b""
3) ""c""
4) ""d""
```

ZRANGESTORE was added in #1482",unstable,True,False,2,cmd_zset.cc,cc,2,2,4
0e28daca80f22cd7193c903ff9b8c91bef2c8f28,binloveplay1314@qq.com,2023-07-26 00:01:39+08:00,noreply@github.com,2023-07-26 00:01:39+08:00,"Fix ZRANGESTORE not overwrite the dst key (#1609)

When the code is doing `store`, it calls the add method,
which leads us to perform zadd dst xxx in disguise. And
this result the following two issues.

The first one is we do a type check against dst:
```
127.0.0.1:6379> set dst value
OK
127.0.0.1:6379> zrangestore dst non 0 -1
(integer) 0
127.0.0.1:6379> get dst
(nil)

127.0.0.1:6666> set dst value
OK
127.0.0.1:6666> zrangestore dst non 0 -1
(error) ERR Invalid argument: WRONGTYPE Operation against a key holding
the wrong kind of value
```

The second one is when dst has members, we are doing zadd:
```
127.0.0.1:6379> zadd dst 1 a 2 b
(integer) 2
127.0.0.1:6379> zadd src 3 c 4 d
(integer) 2
127.0.0.1:6379> zrangestore dst src 0 -1
(integer) 2
127.0.0.1:6379> zrange dst 0 -1
1) ""c""
2) ""d""

127.0.0.1:6666> zadd dst 1 a 2 b
(integer) 2
127.0.0.1:6666> zadd src 3 c 4 d
(integer) 2
127.0.0.1:6666> zrangestore dst src 0 -1
(integer) 2
127.0.0.1:6666> zrange dst 0 -1
1) ""a""
2) ""b""
3) ""c""
4) ""d""
```

ZRANGESTORE was added in #1482",unstable,True,False,2,zset_test.go,go,26,1,27
509220c066b3a75291be014b62646889ce031b2a,binloveplay1314@qq.com,2023-07-26 16:42:24+08:00,noreply@github.com,2023-07-26 16:42:24+08:00,"Support change log-level in runtime (#1611)

Now we support config set log-level xxx to modify log-level
in runtime.

This closes #1610.",unstable,True,False,2,config.cc,cc,7,1,8
509220c066b3a75291be014b62646889ce031b2a,binloveplay1314@qq.com,2023-07-26 16:42:24+08:00,noreply@github.com,2023-07-26 16:42:24+08:00,"Support change log-level in runtime (#1611)

Now we support config set log-level xxx to modify log-level
in runtime.

This closes #1610.",unstable,True,False,2,config_test.cc,cc,1,0,1
e0577c5fa4721316f86101c3720a826e682dffea,85615957+Yangsx-1@users.noreply.github.com,2023-07-28 16:03:14+08:00,noreply@github.com,2023-07-28 16:03:14+08:00,build: Fix make warning on GCC (#1605),unstable,True,False,6,CMakeLists.txt,txt,6,0,6
e0577c5fa4721316f86101c3720a826e682dffea,85615957+Yangsx-1@users.noreply.github.com,2023-07-28 16:03:14+08:00,noreply@github.com,2023-07-28 16:03:14+08:00,build: Fix make warning on GCC (#1605),unstable,True,False,6,jemalloc.cmake,cmake,1,1,2
e0577c5fa4721316f86101c3720a826e682dffea,85615957+Yangsx-1@users.noreply.github.com,2023-07-28 16:03:14+08:00,noreply@github.com,2023-07-28 16:03:14+08:00,build: Fix make warning on GCC (#1605),unstable,True,False,6,lua.cmake,cmake,1,1,2
e0577c5fa4721316f86101c3720a826e682dffea,85615957+Yangsx-1@users.noreply.github.com,2023-07-28 16:03:14+08:00,noreply@github.com,2023-07-28 16:03:14+08:00,build: Fix make warning on GCC (#1605),unstable,True,False,6,luajit.cmake,cmake,1,1,2
e0577c5fa4721316f86101c3720a826e682dffea,85615957+Yangsx-1@users.noreply.github.com,2023-07-28 16:03:14+08:00,noreply@github.com,2023-07-28 16:03:14+08:00,build: Fix make warning on GCC (#1605),unstable,True,False,6,lz4.cmake,cmake,1,1,2
e0577c5fa4721316f86101c3720a826e682dffea,85615957+Yangsx-1@users.noreply.github.com,2023-07-28 16:03:14+08:00,noreply@github.com,2023-07-28 16:03:14+08:00,build: Fix make warning on GCC (#1605),unstable,True,False,6,zstd.cmake,cmake,1,1,2
f3d3105b5ad1a6b276cfc305a57e7cc5233e4fed,hulk.website@gmail.com,2023-07-29 11:37:38+08:00,noreply@github.com,2023-07-29 11:37:38+08:00,"Fix data race when updating the slots_info string (#1615)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,2,cluster.cc,cc,20,17,37
f3d3105b5ad1a6b276cfc305a57e7cc5233e4fed,hulk.website@gmail.com,2023-07-29 11:37:38+08:00,noreply@github.com,2023-07-29 11:37:38+08:00,"Fix data race when updating the slots_info string (#1615)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,2,cluster.h,h,1,2,3
758ce2192a5a9d3bd8bc4dbd8bd8ce9475d4df66,binloveplay1314@qq.com,2023-07-29 14:27:43+08:00,noreply@github.com,2023-07-29 14:27:43+08:00,"Skip WATCH if connection is already dirty (#1612)

If a conn is already marked as watched_keys_modified,
we can skip the watch. It is a cleanup and in some situations
it may save us some memory and performance gains.",unstable,True,False,1,cmd_txn.cc,cc,6,0,6
77aeec2e5ae0441e0354aa30a6684fff21f15cfd,twice.mliu@gmail.com,2023-07-29 16:52:41+08:00,noreply@github.com,2023-07-29 16:52:41+08:00,Remove .git in dockerignore (#1616),unstable,True,False,1,.dockerignore,dockerignore,0,2,2
e52352064d2b13017131aeb5e19c3c67ef22a0cc,twice.mliu@gmail.com,2023-07-29 18:16:48+08:00,noreply@github.com,2023-07-29 18:16:48+08:00,Simply test the built docker image in CI (#1617),unstable,True,False,1,kvrocks.yaml,yaml,5,0,5
6521198f9eb46deb2919306181781be5b3a57437,binloveplay1314@qq.com,2023-07-29 21:16:28+08:00,noreply@github.com,2023-07-29 21:16:28+08:00,"ZRANGE / ZREVRANK add withscore option support (#1607)

Add an option ""withscores"" to ZRANK and ZREVRANK.
The syntax are:
```
zrank key member [WITHSCORE]
zrevrank key member [WITHSCORE]
```

With this option, will additionally return the member's score,
in the form of an array.
```
127.0.0.1:6666> zadd zset 1 a 2 b 3 c
(integer) 3
127.0.0.1:6666> zrank zset b withscore
1) (integer) 1
2) ""2""
127.0.0.1:6666> zrevrank zset c withscore
1) (integer) 0
2) ""3""
```

This option was added in Redis 7.2",unstable,True,False,5,cmd_zset.cc,cc,36,5,41
6521198f9eb46deb2919306181781be5b3a57437,binloveplay1314@qq.com,2023-07-29 21:16:28+08:00,noreply@github.com,2023-07-29 21:16:28+08:00,"ZRANGE / ZREVRANK add withscore option support (#1607)

Add an option ""withscores"" to ZRANK and ZREVRANK.
The syntax are:
```
zrank key member [WITHSCORE]
zrevrank key member [WITHSCORE]
```

With this option, will additionally return the member's score,
in the form of an array.
```
127.0.0.1:6666> zadd zset 1 a 2 b 3 c
(integer) 3
127.0.0.1:6666> zrank zset b withscore
1) (integer) 1
2) ""2""
127.0.0.1:6666> zrevrank zset c withscore
1) (integer) 0
2) ""3""
```

This option was added in Redis 7.2",unstable,True,False,5,redis_zset.cc,cc,4,1,5
6521198f9eb46deb2919306181781be5b3a57437,binloveplay1314@qq.com,2023-07-29 21:16:28+08:00,noreply@github.com,2023-07-29 21:16:28+08:00,"ZRANGE / ZREVRANK add withscore option support (#1607)

Add an option ""withscores"" to ZRANK and ZREVRANK.
The syntax are:
```
zrank key member [WITHSCORE]
zrevrank key member [WITHSCORE]
```

With this option, will additionally return the member's score,
in the form of an array.
```
127.0.0.1:6666> zadd zset 1 a 2 b 3 c
(integer) 3
127.0.0.1:6666> zrank zset b withscore
1) (integer) 1
2) ""2""
127.0.0.1:6666> zrevrank zset c withscore
1) (integer) 0
2) ""3""
```

This option was added in Redis 7.2",unstable,True,False,5,redis_zset.h,h,2,1,3
6521198f9eb46deb2919306181781be5b3a57437,binloveplay1314@qq.com,2023-07-29 21:16:28+08:00,noreply@github.com,2023-07-29 21:16:28+08:00,"ZRANGE / ZREVRANK add withscore option support (#1607)

Add an option ""withscores"" to ZRANK and ZREVRANK.
The syntax are:
```
zrank key member [WITHSCORE]
zrevrank key member [WITHSCORE]
```

With this option, will additionally return the member's score,
in the form of an array.
```
127.0.0.1:6666> zadd zset 1 a 2 b 3 c
(integer) 3
127.0.0.1:6666> zrank zset b withscore
1) (integer) 1
2) ""2""
127.0.0.1:6666> zrevrank zset c withscore
1) (integer) 0
2) ""3""
```

This option was added in Redis 7.2",unstable,True,False,5,zset_test.cc,cc,9,3,12
6521198f9eb46deb2919306181781be5b3a57437,binloveplay1314@qq.com,2023-07-29 21:16:28+08:00,noreply@github.com,2023-07-29 21:16:28+08:00,"ZRANGE / ZREVRANK add withscore option support (#1607)

Add an option ""withscores"" to ZRANK and ZREVRANK.
The syntax are:
```
zrank key member [WITHSCORE]
zrevrank key member [WITHSCORE]
```

With this option, will additionally return the member's score,
in the form of an array.
```
127.0.0.1:6666> zadd zset 1 a 2 b 3 c
(integer) 3
127.0.0.1:6666> zrank zset b withscore
1) (integer) 1
2) ""2""
127.0.0.1:6666> zrevrank zset c withscore
1) (integer) 0
2) ""3""
```

This option was added in Redis 7.2",unstable,True,False,5,zset_test.go,go,25,3,28
3cfc72747d4c3e92ffaf365f5be3705cc08f3741,twice.mliu@gmail.com,2023-07-31 09:55:59+08:00,noreply@github.com,2023-07-31 09:55:59+08:00,Add kvrocks controller to README (#1623),unstable,True,False,1,README.md,md,4,3,7
35bc9838637b7d25bcb5229a8fc136b4e346a377,binloveplay1314@qq.com,2023-08-01 10:05:22+08:00,noreply@github.com,2023-08-01 10:05:22+08:00,"Fix GEOSEARCH/GEOSEARCHSTORE FROMMEMBER against non existing src key reply (#1625)

The new GEOSEARCH and GEOSEARCHSTORE commands were added
in #1533. When typing the FROMMEMBER option against non-existing
src key, an IsNotFound error is returned and resulting in the
following inconsistency:
```
127.0.0.1:6666> GEOSEARCH src FROMMEMBER Shenzhen BYBOX 88 88 m
(error) ERR NotFound:
127.0.0.1:6666> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen BYBOX 88 88 m
(error) ERR NotFound:

127.0.0.1:6379> GEOSEARCH src FROMMEMBER Shenzhen BYBOX 88 88 m
(empty array)
127.0.0.1:6379> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen BYBOX 88 88 m
(integer) 0
```",unstable,True,False,2,redis_geo.cc,cc,1,1,2
35bc9838637b7d25bcb5229a8fc136b4e346a377,binloveplay1314@qq.com,2023-08-01 10:05:22+08:00,noreply@github.com,2023-08-01 10:05:22+08:00,"Fix GEOSEARCH/GEOSEARCHSTORE FROMMEMBER against non existing src key reply (#1625)

The new GEOSEARCH and GEOSEARCHSTORE commands were added
in #1533. When typing the FROMMEMBER option against non-existing
src key, an IsNotFound error is returned and resulting in the
following inconsistency:
```
127.0.0.1:6666> GEOSEARCH src FROMMEMBER Shenzhen BYBOX 88 88 m
(error) ERR NotFound:
127.0.0.1:6666> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen BYBOX 88 88 m
(error) ERR NotFound:

127.0.0.1:6379> GEOSEARCH src FROMMEMBER Shenzhen BYBOX 88 88 m
(empty array)
127.0.0.1:6379> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen BYBOX 88 88 m
(integer) 0
```",unstable,True,False,2,geo_test.go,go,10,0,10
f96c5359c3a522da048f5717c097b39049320252,binloveplay1314@qq.com,2023-08-01 12:19:09+08:00,noreply@github.com,2023-08-01 12:19:09+08:00,Enable rebase merge in enabled_merge_buttons (#1624),unstable,True,False,1,.asf.yaml,yaml,1,1,2
2c5a57a57b2aacc1b8a46fa6ffd98e059596bb8a,twice.mliu@gmail.com,2023-08-01 19:48:01+08:00,noreply@github.com,2023-08-01 19:48:01+08:00,"Fix missing pop in ScriptExists (#1626)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,server.cc,cc,1,4,5
2c5a57a57b2aacc1b8a46fa6ffd98e059596bb8a,twice.mliu@gmail.com,2023-08-01 19:48:01+08:00,noreply@github.com,2023-08-01 19:48:01+08:00,"Fix missing pop in ScriptExists (#1626)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,scripting.cc,cc,7,0,7
2c5a57a57b2aacc1b8a46fa6ffd98e059596bb8a,twice.mliu@gmail.com,2023-08-01 19:48:01+08:00,noreply@github.com,2023-08-01 19:48:01+08:00,"Fix missing pop in ScriptExists (#1626)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,scripting.h,h,2,0,2
72cc95634f189350207652db80891ceba7cacd8b,twice.mliu@gmail.com,2023-08-02 10:19:02+08:00,noreply@github.com,2023-08-02 10:19:02+08:00,Fix PORTABLE variable in CMake (#1627),unstable,True,False,5,kvrocks.yaml,yaml,3,3,6
72cc95634f189350207652db80891ceba7cacd8b,twice.mliu@gmail.com,2023-08-02 10:19:02+08:00,noreply@github.com,2023-08-02 10:19:02+08:00,Fix PORTABLE variable in CMake (#1627),unstable,True,False,5,CMakeLists.txt,txt,4,4,8
72cc95634f189350207652db80891ceba7cacd8b,twice.mliu@gmail.com,2023-08-02 10:19:02+08:00,noreply@github.com,2023-08-02 10:19:02+08:00,Fix PORTABLE variable in CMake (#1627),unstable,True,False,5,README.md,md,1,1,2
72cc95634f189350207652db80891ceba7cacd8b,twice.mliu@gmail.com,2023-08-02 10:19:02+08:00,noreply@github.com,2023-08-02 10:19:02+08:00,Fix PORTABLE variable in CMake (#1627),unstable,True,False,5,rocksdb.cmake,cmake,0,4,4
72cc95634f189350207652db80891ceba7cacd8b,twice.mliu@gmail.com,2023-08-02 10:19:02+08:00,noreply@github.com,2023-08-02 10:19:02+08:00,Fix PORTABLE variable in CMake (#1627),unstable,True,False,5,x.py,py,0,4,4
24a1354d60083ee7ff25d9ce44f18d9b98211444,aleks.raiden@gmail.com,2023-08-04 04:11:42+03:00,noreply@github.com,2023-08-04 09:11:42+08:00,Bump GoogleTest to v1.14.0 (#1629),unstable,True,False,1,gtest.cmake,cmake,2,2,4
af4d68cb7a667d1c5e5d2d6416cfd847e5f24da0,twice.mliu@gmail.com,2023-08-04 11:02:01+08:00,noreply@github.com,2023-08-04 11:02:01+08:00,Fix GLIBC link issue in archlinux CI (#1633),unstable,True,False,1,kvrocks.yaml,yaml,3,1,4
36ce907b1f259243f05d0b523c012d9541e84f3e,binloveplay1314@qq.com,2023-08-04 23:04:04+08:00,noreply@github.com,2023-08-04 23:04:04+08:00,"Fix MSETNX not allow overriding the same key (#1631)

The changes in #337 causing this issue:
```
127.0.0.1:6379> flushall
OK
127.0.0.1:6379> msetnx k v1 k v2
(integer) 1
127.0.0.1:6379> get k
""v2

127.0.0.1:6666> flushall
OK
127.0.0.1:6666> msetnx k v1 k v2
(integer) 0
127.0.0.1:6666> get k
""v1""
```

Redis allow we overriding the same key but kvrocks will
fail in this case. The way to handle it is to revert the
changes in #337.

So this PR is based on that, after reverting the changes
of #337, we can reuse the logic of MSet. And hulk mentions
that MSETNX is an exclusive command and we better to lock
those keys and then remove the exclusive flag from the command.

So we use MultiLockGuard before Exists call to lock multi
keys. And change MSet to support non-lock calls. And also
remove the exclusive flag from MSETNX command.",unstable,True,False,4,cmd_string.cc,cc,1,1,2
36ce907b1f259243f05d0b523c012d9541e84f3e,binloveplay1314@qq.com,2023-08-04 23:04:04+08:00,noreply@github.com,2023-08-04 23:04:04+08:00,"Fix MSETNX not allow overriding the same key (#1631)

The changes in #337 causing this issue:
```
127.0.0.1:6379> flushall
OK
127.0.0.1:6379> msetnx k v1 k v2
(integer) 1
127.0.0.1:6379> get k
""v2

127.0.0.1:6666> flushall
OK
127.0.0.1:6666> msetnx k v1 k v2
(integer) 0
127.0.0.1:6666> get k
""v1""
```

Redis allow we overriding the same key but kvrocks will
fail in this case. The way to handle it is to revert the
changes in #337.

So this PR is based on that, after reverting the changes
of #337, we can reuse the logic of MSet. And hulk mentions
that MSETNX is an exclusive command and we better to lock
those keys and then remove the exclusive flag from the command.

So we use MultiLockGuard before Exists call to lock multi
keys. And change MSet to support non-lock calls. And also
remove the exclusive flag from MSETNX command.",unstable,True,False,4,redis_string.cc,cc,21,29,50
36ce907b1f259243f05d0b523c012d9541e84f3e,binloveplay1314@qq.com,2023-08-04 23:04:04+08:00,noreply@github.com,2023-08-04 23:04:04+08:00,"Fix MSETNX not allow overriding the same key (#1631)

The changes in #337 causing this issue:
```
127.0.0.1:6379> flushall
OK
127.0.0.1:6379> msetnx k v1 k v2
(integer) 1
127.0.0.1:6379> get k
""v2

127.0.0.1:6666> flushall
OK
127.0.0.1:6666> msetnx k v1 k v2
(integer) 0
127.0.0.1:6666> get k
""v1""
```

Redis allow we overriding the same key but kvrocks will
fail in this case. The way to handle it is to revert the
changes in #337.

So this PR is based on that, after reverting the changes
of #337, we can reuse the logic of MSet. And hulk mentions
that MSETNX is an exclusive command and we better to lock
those keys and then remove the exclusive flag from the command.

So we use MultiLockGuard before Exists call to lock multi
keys. And change MSet to support non-lock calls. And also
remove the exclusive flag from MSETNX command.",unstable,True,False,4,redis_string.h,h,1,1,2
36ce907b1f259243f05d0b523c012d9541e84f3e,binloveplay1314@qq.com,2023-08-04 23:04:04+08:00,noreply@github.com,2023-08-04 23:04:04+08:00,"Fix MSETNX not allow overriding the same key (#1631)

The changes in #337 causing this issue:
```
127.0.0.1:6379> flushall
OK
127.0.0.1:6379> msetnx k v1 k v2
(integer) 1
127.0.0.1:6379> get k
""v2

127.0.0.1:6666> flushall
OK
127.0.0.1:6666> msetnx k v1 k v2
(integer) 0
127.0.0.1:6666> get k
""v1""
```

Redis allow we overriding the same key but kvrocks will
fail in this case. The way to handle it is to revert the
changes in #337.

So this PR is based on that, after reverting the changes
of #337, we can reuse the logic of MSet. And hulk mentions
that MSETNX is an exclusive command and we better to lock
those keys and then remove the exclusive flag from the command.

So we use MultiLockGuard before Exists call to lock multi
keys. And change MSet to support non-lock calls. And also
remove the exclusive flag from MSETNX command.",unstable,True,False,4,strings_test.go,go,15,0,15
04c5a922a71850d2e143297c30baf87d99e9e075,twice.mliu@gmail.com,2023-08-06 07:11:40+08:00,noreply@github.com,2023-08-06 07:11:40+08:00,Make lock guard movable & accept generalized arguments (#1636),unstable,True,False,6,.clang-tidy,clang-tidy,1,1,2
04c5a922a71850d2e143297c30baf87d99e9e075,twice.mliu@gmail.com,2023-08-06 07:11:40+08:00,noreply@github.com,2023-08-06 07:11:40+08:00,Make lock guard movable & accept generalized arguments (#1636),unstable,True,False,6,lock_manager.h,h,130,0,130
04c5a922a71850d2e143297c30baf87d99e9e075,twice.mliu@gmail.com,2023-08-06 07:11:40+08:00,noreply@github.com,2023-08-06 07:11:40+08:00,Make lock guard movable & accept generalized arguments (#1636),unstable,True,False,6,redis_set.cc,cc,3,2,5
04c5a922a71850d2e143297c30baf87d99e9e075,twice.mliu@gmail.com,2023-08-06 07:11:40+08:00,noreply@github.com,2023-08-06 07:11:40+08:00,Make lock guard movable & accept generalized arguments (#1636),unstable,True,False,6,redis_zset.cc,cc,7,6,13
f25469569c00aae1331a1a18407a7eb185e6d900,twice.mliu@gmail.com,2023-08-06 11:41:09+08:00,noreply@github.com,2023-08-06 11:41:09+08:00,Remove useless memory allocation & string field in lock manager & guard (#1637),unstable,True,False,1,lock_manager.h,h,23,29,52
dbd5f8d50bb6710bdfc4ea2950b0eadb7a333883,twice.mliu@gmail.com,2023-08-06 16:12:20+08:00,noreply@github.com,2023-08-06 16:12:20+08:00,Make special exclusive command check a function (#1638),unstable,True,False,1,redis_connection.cc,cc,9,4,13
dc4c249b7286066da7302e33ecee842182292306,twice.mliu@gmail.com,2023-08-06 17:12:35+08:00,noreply@github.com,2023-08-06 17:12:35+08:00,Make config enum error more clear for users (#1639),unstable,True,False,2,config.cc,cc,10,5,15
dc4c249b7286066da7302e33ecee842182292306,twice.mliu@gmail.com,2023-08-06 17:12:35+08:00,noreply@github.com,2023-08-06 17:12:35+08:00,Make config enum error more clear for users (#1639),unstable,True,False,2,config_type.h,h,11,4,15
6350d72902a48ce73f9d3fcd39ac795eb765385e,twice.mliu@gmail.com,2023-08-06 18:26:17+08:00,noreply@github.com,2023-08-06 18:26:17+08:00,Use EqualICase instead of strcasecmp in cluster (#1640),unstable,True,False,2,cluster.cc,cc,4,10,14
6350d72902a48ce73f9d3fcd39ac795eb765385e,twice.mliu@gmail.com,2023-08-06 18:26:17+08:00,noreply@github.com,2023-08-06 18:26:17+08:00,Use EqualICase instead of strcasecmp in cluster (#1640),unstable,True,False,2,cmd_cluster.cc,cc,2,2,4
06b5558ca6e5401388639ef9130256367dcef9de,twice.mliu@gmail.com,2023-08-07 06:06:48+08:00,noreply@github.com,2023-08-07 06:06:48+08:00,Add EvconnlistenerBase to avoid void* casts (#1641),unstable,True,False,3,event_util.h,h,16,0,16
06b5558ca6e5401388639ef9130256367dcef9de,twice.mliu@gmail.com,2023-08-07 06:06:48+08:00,noreply@github.com,2023-08-07 06:06:48+08:00,Add EvconnlistenerBase to avoid void* casts (#1641),unstable,True,False,3,worker.cc,cc,19,22,41
06b5558ca6e5401388639ef9130256367dcef9de,twice.mliu@gmail.com,2023-08-07 06:06:48+08:00,noreply@github.com,2023-08-07 06:06:48+08:00,Add EvconnlistenerBase to avoid void* casts (#1641),unstable,True,False,3,worker.h,h,3,4,7
1323001851a58a95df7789b3e661a6bc8596f7e6,twice.mliu@gmail.com,2023-08-07 12:29:30+08:00,noreply@github.com,2023-08-07 12:29:30+08:00,"Add SUSE environment to CI for building and testing kvrocks (#1642)

SUSE is a main linux distro branch, as well as Debian (Ubuntu), RHEL (CentOS).
So we can build and test kvrocks in a SUSE environment.

It is a successor to #1569. We can just implement the env based on it.
setup-go action in SUSE can trigger a failure, so it is replaced.

Closes #1578.",unstable,True,False,1,kvrocks.yaml,yaml,18,1,19
20b49b4f4d7f294158e640f5c5d6142b886aca6c,hulk.website@gmail.com,2023-08-07 14:38:22+08:00,noreply@github.com,2023-08-07 14:38:22+08:00,"Fix miscreating column families when opening with the readonly mode (#1645)

Currently, kvrocks2redis will read and parse data from the local DB
with opening in read-only mode, and it will be failed if the Kvrocks
is running on the same DB dir.

The root cause is the running Kvrocks would acquire the DB lock and
kvrocks2redis would try to acquire this DB lock as well when creating
column families.

Before applying this patch:
```shell
❯ ./kvrocks2redis -c kvrocks2redis.conf
Version: unstable @6350d72
E20230806 23:46:56.435000 18548092 main.cc:151] Failed to create pidfile './kvrocks2redis.pid': File exists
```

After applying this patch:
```shell
❯ ./kvrocks2redis -c kvrocks2redis.conf
Version: unstable @6350d72
Start parse increment batch ...
```

This fixes #1644.",unstable,True,False,1,storage.cc,cc,4,2,6
0e73fec8d1cab8ce21db9034b2f1bec42ebf3e27,binloveplay1314@qq.com,2023-08-07 16:24:57+08:00,noreply@github.com,2023-08-07 16:24:57+08:00,"MSET change it to batch write instead of batch per key (#1634)

The previous implementation which wrote the batch per key,
we should change it to a single batch. Also use the multi-key
lock before the write operations instead of inside the loop.

This is mention in #1631, found by hulk.

Co-authored-by: mwish <1506118561@qq.com>",unstable,True,False,1,redis_string.cc,cc,16,11,27
60bcc3fac32d0df45e9a06ca0616d9d8d36fa579,twice.mliu@gmail.com,2023-08-07 20:57:13+08:00,noreply@github.com,2023-08-07 20:57:13+08:00,Print version as kvrocks in kvrocks2redis (#1649),unstable,True,False,2,main.cc,cc,3,3,6
60bcc3fac32d0df45e9a06ca0616d9d8d36fa579,twice.mliu@gmail.com,2023-08-07 20:57:13+08:00,noreply@github.com,2023-08-07 20:57:13+08:00,Print version as kvrocks in kvrocks2redis (#1649),unstable,True,False,2,main.cc,cc,26,11,37
052234bdd687d4c9346c9a525c397762e08fe23f,binloveplay1314@qq.com,2023-08-07 22:18:05+08:00,noreply@github.com,2023-08-07 22:18:05+08:00,CAS command supports EXAT and PXAT options (#1650),unstable,True,False,2,cmd_string.cc,cc,2,4,6
052234bdd687d4c9346c9a525c397762e08fe23f,binloveplay1314@qq.com,2023-08-07 22:18:05+08:00,noreply@github.com,2023-08-07 22:18:05+08:00,CAS command supports EXAT and PXAT options (#1650),unstable,True,False,2,strings_test.go,go,48,1,49
610bb40ade146c74303b2db98599b1959cb0fbb5,twice.mliu@gmail.com,2023-08-08 05:22:29+08:00,noreply@github.com,2023-08-08 05:22:29+08:00,"Refactor replication callbacks via templates (#1646)

Co-authored-by: Binbin <binloveplay1314@qq.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,replication.cc,cc,110,127,237
610bb40ade146c74303b2db98599b1959cb0fbb5,twice.mliu@gmail.com,2023-08-08 05:22:29+08:00,noreply@github.com,2023-08-08 05:22:29+08:00,"Refactor replication callbacks via templates (#1646)

Co-authored-by: Binbin <binloveplay1314@qq.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,replication.h,h,23,20,43
610bb40ade146c74303b2db98599b1959cb0fbb5,twice.mliu@gmail.com,2023-08-08 05:22:29+08:00,noreply@github.com,2023-08-08 05:22:29+08:00,"Refactor replication callbacks via templates (#1646)

Co-authored-by: Binbin <binloveplay1314@qq.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,event_util.h,h,23,0,23
a6ed21982fdaf1dd7e19d8eea742cb9c2ba78d08,hulk.website@gmail.com,2023-08-09 09:57:59+08:00,noreply@github.com,2023-08-09 09:57:59+08:00,Fix missing exclusive flag in the namespace command (#1653),unstable,True,False,2,cmd_server.cc,cc,1,1,2
a6ed21982fdaf1dd7e19d8eea742cb9c2ba78d08,hulk.website@gmail.com,2023-08-09 09:57:59+08:00,noreply@github.com,2023-08-09 09:57:59+08:00,Fix missing exclusive flag in the namespace command (#1653),unstable,True,False,2,namespace_test.go,go,103,0,103
c85daaca9b44ca66c97c36f663470526549bb9e0,twice.mliu@gmail.com,2023-08-09 13:01:50+08:00,noreply@github.com,2023-08-09 13:01:50+08:00,"Add dynamic flag generator to replace adhoc logic in ExecuteCommands (#1655)

We add dynamic flag generator regarding to command arguments to replace adhoc exclusive check logic in Connection::ExecuteCommands().

And we also fix and refactor GetKeysFromCommand() in this PR.",unstable,True,False,9,cluster.cc,cc,3,3,6
c85daaca9b44ca66c97c36f663470526549bb9e0,twice.mliu@gmail.com,2023-08-09 13:01:50+08:00,noreply@github.com,2023-08-09 13:01:50+08:00,"Add dynamic flag generator to replace adhoc logic in ExecuteCommands (#1655)

We add dynamic flag generator regarding to command arguments to replace adhoc exclusive check logic in Connection::ExecuteCommands().

And we also fix and refactor GetKeysFromCommand() in this PR.",unstable,True,False,9,cmd_cluster.cc,cc,11,2,13
c85daaca9b44ca66c97c36f663470526549bb9e0,twice.mliu@gmail.com,2023-08-09 13:01:50+08:00,noreply@github.com,2023-08-09 13:01:50+08:00,"Add dynamic flag generator to replace adhoc logic in ExecuteCommands (#1655)

We add dynamic flag generator regarding to command arguments to replace adhoc exclusive check logic in Connection::ExecuteCommands().

And we also fix and refactor GetKeysFromCommand() in this PR.",unstable,True,False,9,cmd_geo.cc,cc,1,1,2
c85daaca9b44ca66c97c36f663470526549bb9e0,twice.mliu@gmail.com,2023-08-09 13:01:50+08:00,noreply@github.com,2023-08-09 13:01:50+08:00,"Add dynamic flag generator to replace adhoc logic in ExecuteCommands (#1655)

We add dynamic flag generator regarding to command arguments to replace adhoc exclusive check logic in Connection::ExecuteCommands().

And we also fix and refactor GetKeysFromCommand() in this PR.",unstable,True,False,9,cmd_server.cc,cc,17,2,19
c85daaca9b44ca66c97c36f663470526549bb9e0,twice.mliu@gmail.com,2023-08-09 13:01:50+08:00,noreply@github.com,2023-08-09 13:01:50+08:00,"Add dynamic flag generator to replace adhoc logic in ExecuteCommands (#1655)

We add dynamic flag generator regarding to command arguments to replace adhoc exclusive check logic in Connection::ExecuteCommands().

And we also fix and refactor GetKeysFromCommand() in this PR.",unstable,True,False,9,commander.cc,cc,23,16,39
c85daaca9b44ca66c97c36f663470526549bb9e0,twice.mliu@gmail.com,2023-08-09 13:01:50+08:00,noreply@github.com,2023-08-09 13:01:50+08:00,"Add dynamic flag generator to replace adhoc logic in ExecuteCommands (#1655)

We add dynamic flag generator regarding to command arguments to replace adhoc exclusive check logic in Connection::ExecuteCommands().

And we also fix and refactor GetKeysFromCommand() in this PR.",unstable,True,False,9,commander.h,h,42,20,62
c85daaca9b44ca66c97c36f663470526549bb9e0,twice.mliu@gmail.com,2023-08-09 13:01:50+08:00,noreply@github.com,2023-08-09 13:01:50+08:00,"Add dynamic flag generator to replace adhoc logic in ExecuteCommands (#1655)

We add dynamic flag generator regarding to command arguments to replace adhoc exclusive check logic in Connection::ExecuteCommands().

And we also fix and refactor GetKeysFromCommand() in this PR.",unstable,True,False,9,redis_connection.cc,cc,15,20,35
c85daaca9b44ca66c97c36f663470526549bb9e0,twice.mliu@gmail.com,2023-08-09 13:01:50+08:00,noreply@github.com,2023-08-09 13:01:50+08:00,"Add dynamic flag generator to replace adhoc logic in ExecuteCommands (#1655)

We add dynamic flag generator regarding to command arguments to replace adhoc exclusive check logic in Connection::ExecuteCommands().

And we also fix and refactor GetKeysFromCommand() in this PR.",unstable,True,False,9,server.cc,cc,1,1,2
c85daaca9b44ca66c97c36f663470526549bb9e0,twice.mliu@gmail.com,2023-08-09 13:01:50+08:00,noreply@github.com,2023-08-09 13:01:50+08:00,"Add dynamic flag generator to replace adhoc logic in ExecuteCommands (#1655)

We add dynamic flag generator regarding to command arguments to replace adhoc exclusive check logic in Connection::ExecuteCommands().

And we also fix and refactor GetKeysFromCommand() in this PR.",unstable,True,False,9,scripting.cc,cc,3,2,5
4fe7fb067a16366286c3087a3667a6cc926c8500,binloveplay1314@qq.com,2023-08-09 15:50:45+08:00,noreply@github.com,2023-08-09 15:50:45+08:00,"GEOSEARCH* from is not optional, FROMLONLAT or FROMMEMBER must require (#1656)

Fix that FROMLONLAT or FROMMEMBER is required, otherwise we would
have the following inconsistency:
```
127.0.0.1:6379> GEOSEARCH src BYBOX 88 88 m asc
(error) ERR exactly one of FROMMEMBER or FROMLONLAT can be specified for GEOSEARCH
127.0.0.1:6379> GEOSEARCHSTORE dst src BYBOX 88 88 m asc
(error) ERR exactly one of FROMMEMBER or FROMLONLAT can be specified for GEOSEARCHSTORE

127.0.0.1:6666> GEOSEARCH src BYBOX 88 88 m asc
(empty array)
127.0.0.1:6666> GEOSEARCHSTORE dst src BYBOX 88 88 m asc
(integer) 0
```

Minor fix to minor bug.",unstable,True,False,2,cmd_geo.cc,cc,8,0,8
4fe7fb067a16366286c3087a3667a6cc926c8500,binloveplay1314@qq.com,2023-08-09 15:50:45+08:00,noreply@github.com,2023-08-09 15:50:45+08:00,"GEOSEARCH* from is not optional, FROMLONLAT or FROMMEMBER must require (#1656)

Fix that FROMLONLAT or FROMMEMBER is required, otherwise we would
have the following inconsistency:
```
127.0.0.1:6379> GEOSEARCH src BYBOX 88 88 m asc
(error) ERR exactly one of FROMMEMBER or FROMLONLAT can be specified for GEOSEARCH
127.0.0.1:6379> GEOSEARCHSTORE dst src BYBOX 88 88 m asc
(error) ERR exactly one of FROMMEMBER or FROMLONLAT can be specified for GEOSEARCHSTORE

127.0.0.1:6666> GEOSEARCH src BYBOX 88 88 m asc
(empty array)
127.0.0.1:6666> GEOSEARCHSTORE dst src BYBOX 88 88 m asc
(integer) 0
```

Minor fix to minor bug.",unstable,True,False,2,geo_test.go,go,13,0,13
5d0f6f52ddf2b796b033e5e98437d6267eb65e44,hulk.website@gmail.com,2023-08-11 13:58:24+08:00,noreply@github.com,2023-08-11 13:58:24+08:00,"ci: tentatively comment out GCC TSAN in CI to avoid blocking PRs (#1668)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,1,kvrocks.yaml,yaml,7,6,13
f432e6cf5b61eed778751677cc71ce56fc94491a,wander4096@gmail.com,2023-08-11 15:13:43+08:00,noreply@github.com,2023-08-11 15:13:43+08:00,"ci: add typos check  (#1663)

This PR adds a typo checker CI action that will fail
future PRs if they introduce typos and spelling mistakes.

This supersedes and thus closes #1660.

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Viktor Szépe <viktor@szepe.net>",unstable,True,False,15,typos.toml,toml,32,0,32
f432e6cf5b61eed778751677cc71ce56fc94491a,wander4096@gmail.com,2023-08-11 15:13:43+08:00,noreply@github.com,2023-08-11 15:13:43+08:00,"ci: add typos check  (#1663)

This PR adds a typo checker CI action that will fail
future PRs if they introduce typos and spelling mistakes.

This supersedes and thus closes #1660.

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Viktor Szépe <viktor@szepe.net>",unstable,True,False,15,kvrocks.yaml,yaml,15,3,18
f432e6cf5b61eed778751677cc71ce56fc94491a,wander4096@gmail.com,2023-08-11 15:13:43+08:00,noreply@github.com,2023-08-11 15:13:43+08:00,"ci: add typos check  (#1663)

This PR adds a typo checker CI action that will fail
future PRs if they introduce typos and spelling mistakes.

This supersedes and thus closes #1660.

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Viktor Szépe <viktor@szepe.net>",unstable,True,False,15,kvrocks.conf,conf,2,2,4
f432e6cf5b61eed778751677cc71ce56fc94491a,wander4096@gmail.com,2023-08-11 15:13:43+08:00,noreply@github.com,2023-08-11 15:13:43+08:00,"ci: add typos check  (#1663)

This PR adds a typo checker CI action that will fail
future PRs if they introduce typos and spelling mistakes.

This supersedes and thus closes #1660.

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Viktor Szépe <viktor@szepe.net>",unstable,True,False,15,slot_import.cc,cc,1,1,2
f432e6cf5b61eed778751677cc71ce56fc94491a,wander4096@gmail.com,2023-08-11 15:13:43+08:00,noreply@github.com,2023-08-11 15:13:43+08:00,"ci: add typos check  (#1663)

This PR adds a typo checker CI action that will fail
future PRs if they introduce typos and spelling mistakes.

This supersedes and thus closes #1660.

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Viktor Szépe <viktor@szepe.net>",unstable,True,False,15,slot_migrate.cc,cc,1,1,2
f432e6cf5b61eed778751677cc71ce56fc94491a,wander4096@gmail.com,2023-08-11 15:13:43+08:00,noreply@github.com,2023-08-11 15:13:43+08:00,"ci: add typos check  (#1663)

This PR adds a typo checker CI action that will fail
future PRs if they introduce typos and spelling mistakes.

This supersedes and thus closes #1660.

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Viktor Szépe <viktor@szepe.net>",unstable,True,False,15,cmd_cluster.cc,cc,2,2,4
f432e6cf5b61eed778751677cc71ce56fc94491a,wander4096@gmail.com,2023-08-11 15:13:43+08:00,noreply@github.com,2023-08-11 15:13:43+08:00,"ci: add typos check  (#1663)

This PR adds a typo checker CI action that will fail
future PRs if they introduce typos and spelling mistakes.

This supersedes and thus closes #1660.

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Viktor Szépe <viktor@szepe.net>",unstable,True,False,15,cmd_server.cc,cc,7,7,14
f432e6cf5b61eed778751677cc71ce56fc94491a,wander4096@gmail.com,2023-08-11 15:13:43+08:00,noreply@github.com,2023-08-11 15:13:43+08:00,"ci: add typos check  (#1663)

This PR adds a typo checker CI action that will fail
future PRs if they introduce typos and spelling mistakes.

This supersedes and thus closes #1660.

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Viktor Szépe <viktor@szepe.net>",unstable,True,False,15,commander.h,h,1,1,2
f432e6cf5b61eed778751677cc71ce56fc94491a,wander4096@gmail.com,2023-08-11 15:13:43+08:00,noreply@github.com,2023-08-11 15:13:43+08:00,"ci: add typos check  (#1663)

This PR adds a typo checker CI action that will fail
future PRs if they introduce typos and spelling mistakes.

This supersedes and thus closes #1660.

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Viktor Szépe <viktor@szepe.net>",unstable,True,False,15,error_constants.h,h,1,1,2
f432e6cf5b61eed778751677cc71ce56fc94491a,wander4096@gmail.com,2023-08-11 15:13:43+08:00,noreply@github.com,2023-08-11 15:13:43+08:00,"ci: add typos check  (#1663)

This PR adds a typo checker CI action that will fail
future PRs if they introduce typos and spelling mistakes.

This supersedes and thus closes #1660.

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Viktor Szépe <viktor@szepe.net>",unstable,True,False,15,geohash.cc,cc,2,2,4
f432e6cf5b61eed778751677cc71ce56fc94491a,wander4096@gmail.com,2023-08-11 15:13:43+08:00,noreply@github.com,2023-08-11 15:13:43+08:00,"ci: add typos check  (#1663)

This PR adds a typo checker CI action that will fail
future PRs if they introduce typos and spelling mistakes.

This supersedes and thus closes #1660.

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Viktor Szépe <viktor@szepe.net>",unstable,True,False,15,redis_geo.cc,cc,1,1,2
f432e6cf5b61eed778751677cc71ce56fc94491a,wander4096@gmail.com,2023-08-11 15:13:43+08:00,noreply@github.com,2023-08-11 15:13:43+08:00,"ci: add typos check  (#1663)

This PR adds a typo checker CI action that will fail
future PRs if they introduce typos and spelling mistakes.

This supersedes and thus closes #1660.

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Viktor Szépe <viktor@szepe.net>",unstable,True,False,15,metadata_test.cc,cc,1,1,2
f432e6cf5b61eed778751677cc71ce56fc94491a,wander4096@gmail.com,2023-08-11 15:13:43+08:00,noreply@github.com,2023-08-11 15:13:43+08:00,"ci: add typos check  (#1663)

This PR adds a typo checker CI action that will fail
future PRs if they introduce typos and spelling mistakes.

This supersedes and thus closes #1660.

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Viktor Szépe <viktor@szepe.net>",unstable,True,False,15,hash_test.cc,cc,1,1,2
f432e6cf5b61eed778751677cc71ce56fc94491a,wander4096@gmail.com,2023-08-11 15:13:43+08:00,noreply@github.com,2023-08-11 15:13:43+08:00,"ci: add typos check  (#1663)

This PR adds a typo checker CI action that will fail
future PRs if they introduce typos and spelling mistakes.

This supersedes and thus closes #1660.

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Viktor Szépe <viktor@szepe.net>",unstable,True,False,15,stream_test.cc,cc,4,4,8
f432e6cf5b61eed778751677cc71ce56fc94491a,wander4096@gmail.com,2023-08-11 15:13:43+08:00,noreply@github.com,2023-08-11 15:13:43+08:00,"ci: add typos check  (#1663)

This PR adds a typo checker CI action that will fail
future PRs if they introduce typos and spelling mistakes.

This supersedes and thus closes #1660.

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: Viktor Szépe <viktor@szepe.net>",unstable,True,False,15,multi_test.go,go,1,1,2
8d4abd4dd907b7c1b70e635786f821ea786a649f,binloveplay1314@qq.com,2023-08-11 17:44:11+08:00,noreply@github.com,2023-08-11 17:44:11+08:00,"Fix SISMEMBER should return 0 when key does not exist (#1661)

Because we didn't check for not found, causing SISMEMBER
to return an error instead of 0 when the key doesn't exist:
```
127.0.0.1:6379> SISMEMBER foo bar
(integer) 0

127.0.0.1:6666> SISMEMBER foo bar
(error) ERR NotFound:
```

I also checked smismember and it's ok.

Fixes #1659.",unstable,True,False,1,cmd_set.cc,cc,1,1,2
c9da1ea813afd5fa544bd2c3d6fcf42447b8148c,torwigua@gmail.com,2023-08-11 16:45:02+03:00,noreply@github.com,2023-08-11 21:45:02+08:00,"Add new MPUBLISH command (#1657)

The new `MPUBLISH` command allows publishing one or more messages to a channel. 
Syntax: `MPUBLISH channel-name message1 message2 ... messageN`",unstable,True,False,3,cmd_pubsub.cc,cc,34,5,39
c9da1ea813afd5fa544bd2c3d6fcf42447b8148c,torwigua@gmail.com,2023-08-11 16:45:02+03:00,noreply@github.com,2023-08-11 21:45:02+08:00,"Add new MPUBLISH command (#1657)

The new `MPUBLISH` command allows publishing one or more messages to a channel. 
Syntax: `MPUBLISH channel-name message1 message2 ... messageN`",unstable,True,False,3,error_constants.h,h,1,0,1
c9da1ea813afd5fa544bd2c3d6fcf42447b8148c,torwigua@gmail.com,2023-08-11 16:45:02+03:00,noreply@github.com,2023-08-11 21:45:02+08:00,"Add new MPUBLISH command (#1657)

The new `MPUBLISH` command allows publishing one or more messages to a channel. 
Syntax: `MPUBLISH channel-name message1 message2 ... messageN`",unstable,True,False,3,pubsub_test.go,go,57,0,57
e1781d1d1dbe488e7c007d88d4f70803b257569a,hulk.website@gmail.com,2023-08-12 00:45:41+08:00,noreply@github.com,2023-08-12 00:45:41+08:00,fix: data dace when closing the server close in Go tests (#1669),unstable,True,False,1,server.go,go,19,2,21
56d5fbee055aea6a18e2cd44a7e0d4548aab7559,aleks.raiden@gmail.com,2023-08-12 00:01:18+03:00,noreply@github.com,2023-08-12 05:01:18+08:00,Fix several mismatching default option values and their comments (#1664),unstable,True,False,2,kvrocks.conf,conf,4,4,8
56d5fbee055aea6a18e2cd44a7e0d4548aab7559,aleks.raiden@gmail.com,2023-08-12 00:01:18+03:00,noreply@github.com,2023-08-12 05:01:18+08:00,Fix several mismatching default option values and their comments (#1664),unstable,True,False,2,config.cc,cc,5,5,10
e52337ba82e7d3c6adb95af1acf641fbba8d3b06,ChrisZMF@163.com,2023-08-12 07:19:05+08:00,noreply@github.com,2023-08-12 07:19:05+08:00,"Fix add/delete repeated members error in zset/set/hash types (#1652)

Co-authored-by: mingfo.zou <mingfo.zou@shopee.com>
Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,6,redis_hash.cc,cc,12,5,17
e52337ba82e7d3c6adb95af1acf641fbba8d3b06,ChrisZMF@163.com,2023-08-12 07:19:05+08:00,noreply@github.com,2023-08-12 07:19:05+08:00,"Fix add/delete repeated members error in zset/set/hash types (#1652)

Co-authored-by: mingfo.zou <mingfo.zou@shopee.com>
Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,6,redis_set.cc,cc,8,0,8
e52337ba82e7d3c6adb95af1acf641fbba8d3b06,ChrisZMF@163.com,2023-08-12 07:19:05+08:00,noreply@github.com,2023-08-12 07:19:05+08:00,"Fix add/delete repeated members error in zset/set/hash types (#1652)

Co-authored-by: mingfo.zou <mingfo.zou@shopee.com>
Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,6,redis_zset.cc,cc,18,27,45
e52337ba82e7d3c6adb95af1acf641fbba8d3b06,ChrisZMF@163.com,2023-08-12 07:19:05+08:00,noreply@github.com,2023-08-12 07:19:05+08:00,"Fix add/delete repeated members error in zset/set/hash types (#1652)

Co-authored-by: mingfo.zou <mingfo.zou@shopee.com>
Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,6,hash_test.cc,cc,29,0,29
e52337ba82e7d3c6adb95af1acf641fbba8d3b06,ChrisZMF@163.com,2023-08-12 07:19:05+08:00,noreply@github.com,2023-08-12 07:19:05+08:00,"Fix add/delete repeated members error in zset/set/hash types (#1652)

Co-authored-by: mingfo.zou <mingfo.zou@shopee.com>
Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,6,set_test.cc,cc,18,0,18
e52337ba82e7d3c6adb95af1acf641fbba8d3b06,ChrisZMF@163.com,2023-08-12 07:19:05+08:00,noreply@github.com,2023-08-12 07:19:05+08:00,"Fix add/delete repeated members error in zset/set/hash types (#1652)

Co-authored-by: mingfo.zou <mingfo.zou@shopee.com>
Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,6,zset_test.cc,cc,29,0,29
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,redis_slot.cc,cc,2,2,4
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,redis_slot.h,h,2,2,4
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,slot_migrate.cc,cc,6,11,17
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,cmd_server.cc,cc,1,2,3
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,db_util.h,h,12,0,12
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,disk_stats.cc,cc,4,5,9
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,batch_extractor.cc,cc,2,2,4
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,compact_filter.cc,cc,4,5,9
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,redis_db.cc,cc,36,49,85
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,redis_db.h,h,1,1,2
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,redis_metadata.cc,cc,29,21,50
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,redis_metadata.h,h,5,4,9
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,storage.cc,cc,2,2,4
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,redis_bitmap.cc,cc,36,32,68
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,redis_geo.cc,cc,1,2,3
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,redis_hash.cc,cc,24,38,62
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,redis_list.cc,cc,43,62,105
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,redis_set.cc,cc,17,28,45
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,redis_sortedint.cc,cc,20,26,46
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,redis_stream.cc,cc,21,34,55
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,redis_string.cc,cc,19,29,48
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,redis_zset.cc,cc,57,70,127
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,compact_test.cc,cc,2,3,5
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,metadata_test.cc,cc,3,7,10
b5233c0e9a078316bd8c4b508c855819dde695a0,twice.mliu@gmail.com,2023-08-13 07:28:41+08:00,noreply@github.com,2023-08-13 07:28:41+08:00,Return string instead of output pointer in metadata (#1671),unstable,True,False,25,parser.cc,cc,4,8,12
24a9979f8be7c1ed6f758a4de5c098ff71ae71fe,aleks.raiden@gmail.com,2023-08-13 05:05:51+03:00,noreply@github.com,2023-08-13 10:05:51+08:00,Bump fmtlib to version 10.1.0 (#1672),unstable,True,False,1,fmt.cmake,cmake,2,2,4
34e7c57f8c5692157b92f9a29a2dbea475cca176,binloveplay1314@qq.com,2023-08-14 14:09:39+08:00,noreply@github.com,2023-08-14 14:09:39+08:00,Rename cluster-enable in kvrocks2redis to cluster-enabled (#1673),unstable,True,False,4,config.cc,cc,4,1,5
34e7c57f8c5692157b92f9a29a2dbea475cca176,binloveplay1314@qq.com,2023-08-14 14:09:39+08:00,noreply@github.com,2023-08-14 14:09:39+08:00,Rename cluster-enable in kvrocks2redis to cluster-enabled (#1673),unstable,True,False,4,config.h,h,1,1,2
34e7c57f8c5692157b92f9a29a2dbea475cca176,binloveplay1314@qq.com,2023-08-14 14:09:39+08:00,noreply@github.com,2023-08-14 14:09:39+08:00,Rename cluster-enable in kvrocks2redis to cluster-enabled (#1673),unstable,True,False,4,kvrocks2redis.conf,conf,1,1,2
34e7c57f8c5692157b92f9a29a2dbea475cca176,binloveplay1314@qq.com,2023-08-14 14:09:39+08:00,noreply@github.com,2023-08-14 14:09:39+08:00,Rename cluster-enable in kvrocks2redis to cluster-enabled (#1673),unstable,True,False,4,main.cc,cc,2,2,4
8542e9239665d4d495af12296def6e7c4f064763,hulk.website@gmail.com,2023-08-14 22:37:41+08:00,noreply@github.com,2023-08-14 22:37:41+08:00,Fix migrator and importer thread didn't start if `persist-cluster-nodes-enabled` was disabled (#1674),unstable,True,False,2,server.cc,cc,7,5,12
8542e9239665d4d495af12296def6e7c4f064763,hulk.website@gmail.com,2023-08-14 22:37:41+08:00,noreply@github.com,2023-08-14 22:37:41+08:00,Fix migrator and importer thread didn't start if `persist-cluster-nodes-enabled` was disabled (#1674),unstable,True,False,2,slotmigrate_test.go,go,45,0,45
5cdbb1954657ba387490adeef2af361b744b21be,caipengbo@outlook.com,2023-08-15 14:09:34+08:00,noreply@github.com,2023-08-15 14:09:34+08:00,"Try to recover automatically from  SST corruption background error(#1667)

When the SST file corrupts, which is an unrecoverable error for the rocksdb, then rocksdb will go into read-only mode(https://github.com/facebook/rocksdb/wiki/Background-Error-Handling). Only restart rocksdb to try to recover from the error.

When does sst file corruption occur? The error message looks like this:
```
1. Corruption: Corrupt or unsupported format_version: 1005 in /tmp/kvrocks/data/db/000038.sst
2. Corruption: Bad table magic number: expected 9863518390377041911, found 9863518390377041912 in /tmp/kvrocks_db/data/db/000038.sst
3. Corruption: block checksum mismatch: stored = 3308200672, computed = 51173877, type = 4 in /tmp/kvrocks_db/data/db/000038.sst offset 0 size 15715
```

The cause of the error is usually a hardware issue or a problem with the network or cloud disk (when using the cloud disk).

The most common place we see this error is when a file is generated by `Compaction` or `Flush` and the `Version` applies the result.

In this case, the result of the compaction is not actually applied, so we can ignore the error and avoid restarting the rocksdb.

Tikv introduces this check when sst file corruption occurs, you can refer to:
- https://github.com/tikv/tikv/issues/10578
- https://github.com/tikv/tikv/pull/10961


Let's try it on Kvrocks:
1. Extract the sst file from the background error message
2. Determine if it is a living file
3. If not, we ignore the error and force recovery from the background error

For the rocksdb error message, before the rocksdb v7.10.2, the error message was imperfect and we could only recover from a limited number of errors. Thanks to this PR https://github.com/facebook/rocksdb/pull/11009, the error message is enriched and we can recover from more scenarios.",unstable,True,False,4,string_util.cc,cc,14,0,14
5cdbb1954657ba387490adeef2af361b744b21be,caipengbo@outlook.com,2023-08-15 14:09:34+08:00,noreply@github.com,2023-08-15 14:09:34+08:00,"Try to recover automatically from  SST corruption background error(#1667)

When the SST file corrupts, which is an unrecoverable error for the rocksdb, then rocksdb will go into read-only mode(https://github.com/facebook/rocksdb/wiki/Background-Error-Handling). Only restart rocksdb to try to recover from the error.

When does sst file corruption occur? The error message looks like this:
```
1. Corruption: Corrupt or unsupported format_version: 1005 in /tmp/kvrocks/data/db/000038.sst
2. Corruption: Bad table magic number: expected 9863518390377041911, found 9863518390377041912 in /tmp/kvrocks_db/data/db/000038.sst
3. Corruption: block checksum mismatch: stored = 3308200672, computed = 51173877, type = 4 in /tmp/kvrocks_db/data/db/000038.sst offset 0 size 15715
```

The cause of the error is usually a hardware issue or a problem with the network or cloud disk (when using the cloud disk).

The most common place we see this error is when a file is generated by `Compaction` or `Flush` and the `Version` applies the result.

In this case, the result of the compaction is not actually applied, so we can ignore the error and avoid restarting the rocksdb.

Tikv introduces this check when sst file corruption occurs, you can refer to:
- https://github.com/tikv/tikv/issues/10578
- https://github.com/tikv/tikv/pull/10961


Let's try it on Kvrocks:
1. Extract the sst file from the background error message
2. Determine if it is a living file
3. If not, we ignore the error and force recovery from the background error

For the rocksdb error message, before the rocksdb v7.10.2, the error message was imperfect and we could only recover from a limited number of errors. Thanks to this PR https://github.com/facebook/rocksdb/pull/11009, the error message is enriched and we can recover from more scenarios.",unstable,True,False,4,string_util.h,h,1,0,1
5cdbb1954657ba387490adeef2af361b744b21be,caipengbo@outlook.com,2023-08-15 14:09:34+08:00,noreply@github.com,2023-08-15 14:09:34+08:00,"Try to recover automatically from  SST corruption background error(#1667)

When the SST file corrupts, which is an unrecoverable error for the rocksdb, then rocksdb will go into read-only mode(https://github.com/facebook/rocksdb/wiki/Background-Error-Handling). Only restart rocksdb to try to recover from the error.

When does sst file corruption occur? The error message looks like this:
```
1. Corruption: Corrupt or unsupported format_version: 1005 in /tmp/kvrocks/data/db/000038.sst
2. Corruption: Bad table magic number: expected 9863518390377041911, found 9863518390377041912 in /tmp/kvrocks_db/data/db/000038.sst
3. Corruption: block checksum mismatch: stored = 3308200672, computed = 51173877, type = 4 in /tmp/kvrocks_db/data/db/000038.sst offset 0 size 15715
```

The cause of the error is usually a hardware issue or a problem with the network or cloud disk (when using the cloud disk).

The most common place we see this error is when a file is generated by `Compaction` or `Flush` and the `Version` applies the result.

In this case, the result of the compaction is not actually applied, so we can ignore the error and avoid restarting the rocksdb.

Tikv introduces this check when sst file corruption occurs, you can refer to:
- https://github.com/tikv/tikv/issues/10578
- https://github.com/tikv/tikv/pull/10961


Let's try it on Kvrocks:
1. Extract the sst file from the background error message
2. Determine if it is a living file
3. If not, we ignore the error and force recovery from the background error

For the rocksdb error message, before the rocksdb v7.10.2, the error message was imperfect and we could only recover from a limited number of errors. Thanks to this PR https://github.com/facebook/rocksdb/pull/11009, the error message is enriched and we can recover from more scenarios.",unstable,True,False,4,event_listener.cc,cc,44,21,65
5cdbb1954657ba387490adeef2af361b744b21be,caipengbo@outlook.com,2023-08-15 14:09:34+08:00,noreply@github.com,2023-08-15 14:09:34+08:00,"Try to recover automatically from  SST corruption background error(#1667)

When the SST file corrupts, which is an unrecoverable error for the rocksdb, then rocksdb will go into read-only mode(https://github.com/facebook/rocksdb/wiki/Background-Error-Handling). Only restart rocksdb to try to recover from the error.

When does sst file corruption occur? The error message looks like this:
```
1. Corruption: Corrupt or unsupported format_version: 1005 in /tmp/kvrocks/data/db/000038.sst
2. Corruption: Bad table magic number: expected 9863518390377041911, found 9863518390377041912 in /tmp/kvrocks_db/data/db/000038.sst
3. Corruption: block checksum mismatch: stored = 3308200672, computed = 51173877, type = 4 in /tmp/kvrocks_db/data/db/000038.sst offset 0 size 15715
```

The cause of the error is usually a hardware issue or a problem with the network or cloud disk (when using the cloud disk).

The most common place we see this error is when a file is generated by `Compaction` or `Flush` and the `Version` applies the result.

In this case, the result of the compaction is not actually applied, so we can ignore the error and avoid restarting the rocksdb.

Tikv introduces this check when sst file corruption occurs, you can refer to:
- https://github.com/tikv/tikv/issues/10578
- https://github.com/tikv/tikv/pull/10961


Let's try it on Kvrocks:
1. Extract the sst file from the background error message
2. Determine if it is a living file
3. If not, we ignore the error and force recovery from the background error

For the rocksdb error message, before the rocksdb v7.10.2, the error message was imperfect and we could only recover from a limited number of errors. Thanks to this PR https://github.com/facebook/rocksdb/pull/11009, the error message is enriched and we can recover from more scenarios.",unstable,True,False,4,string_util_test.cc,cc,15,0,15
b1bc67802f5eb84ef1a8f5951ee31fa33ea97a30,twice.mliu@gmail.com,2023-08-15 15:32:44+08:00,noreply@github.com,2023-08-15 15:32:44+08:00,"Define variables more close to its use place in types (#1675)

Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,3,redis_bitmap.cc,cc,1,3,4
b1bc67802f5eb84ef1a8f5951ee31fa33ea97a30,twice.mliu@gmail.com,2023-08-15 15:32:44+08:00,noreply@github.com,2023-08-15 15:32:44+08:00,"Define variables more close to its use place in types (#1675)

Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,3,redis_list.cc,cc,2,3,5
b1bc67802f5eb84ef1a8f5951ee31fa33ea97a30,twice.mliu@gmail.com,2023-08-15 15:32:44+08:00,noreply@github.com,2023-08-15 15:32:44+08:00,"Define variables more close to its use place in types (#1675)

Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,3,redis_string.cc,cc,2,4,6
a738910da1f81e9e2922bd970e2559686d6cf3b8,twice.mliu@gmail.com,2023-08-15 16:48:45+08:00,noreply@github.com,2023-08-15 16:48:45+08:00,"Bind to localhost by default for security (#1676)

By default, it is more secure and common to bind to localhost instead of `0.0.0.0`.

Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,2,kvrocks.conf,conf,2,1,3
a738910da1f81e9e2922bd970e2559686d6cf3b8,twice.mliu@gmail.com,2023-08-15 16:48:45+08:00,noreply@github.com,2023-08-15 16:48:45+08:00,"Bind to localhost by default for security (#1676)

By default, it is more secure and common to bind to localhost instead of `0.0.0.0`.

Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,2,config.cc,cc,1,1,2
5efb8d3b41f9db26bd0bfa3f707159c787c8ad43,binloveplay1314@qq.com,2023-08-16 10:15:09+08:00,noreply@github.com,2023-08-16 10:15:09+08:00,"Fix GEOSEARCHSTORE not overwrite the dst key (#1677)

When doing store, we should call overwrite instead of add, when
doing add, which leads us to perform zadd dst xxx in disguise.
And this cause the following issues.

The first case is more common, it is a normal user case.
We always adding the member results in a incorrect zset:
```
127.0.0.1:6666> flushall
OK
127.0.0.1:6666> geoadd src 10 10 Shenzhen
(integer) 1
127.0.0.1:6666> geoadd src2 10 10 Beijing
(integer) 1
127.0.0.1:6666> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen BYBOX 88 88 m
(integer) 1
127.0.0.1:6666> GEOSEARCHSTORE dst src2 FROMMEMBER Beijing BYBOX 88 88 m
(integer) 1
127.0.0.1:6666> zcard dst
(integer) 2
127.0.0.1:6666> zrange dst 0 -1
1) ""Beijing""
2) ""Shenzhen""

127.0.0.1:6379> flushall
OK
127.0.0.1:6379> geoadd src 10 10 Shenzhen
(integer) 1
127.0.0.1:6379> geoadd src2 10 10 Beijing
(integer) 1
127.0.0.1:6379> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen BYBOX 88 88 m
(integer) 1
127.0.0.1:6379> GEOSEARCHSTORE dst src2 FROMMEMBER Beijing BYBOX 88 88 m
(integer) 1
127.0.0.1:6379> zcard dst
(integer) 1
127.0.0.1:6379> zrange dst 0 -1
1) ""Beijing""
```

The second one is a dst key with the wrong type, the add will
actually return an error (wrong type error) and take no effect
and the result is not actually written:
```
127.0.0.1:6666> flushall
OK
127.0.0.1:6666> geoadd src 10 10 Shenzhen
(integer) 1
127.0.0.1:6666> set dst string
OK
127.0.0.1:6666> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen BYBOX 88 88 m
(integer) 1
127.0.0.1:6666> type dst
string

127.0.0.1:6379> flushall
OK
127.0.0.1:6379> geoadd src 10 10 Shenzhen
(integer) 1
127.0.0.1:6379> set dst string
OK
127.0.0.1:6379> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen BYBOX 88 88 m
(integer) 1
127.0.0.1:6379> type dst
zset
```",unstable,True,False,2,redis_geo.cc,cc,1,2,3
5efb8d3b41f9db26bd0bfa3f707159c787c8ad43,binloveplay1314@qq.com,2023-08-16 10:15:09+08:00,noreply@github.com,2023-08-16 10:15:09+08:00,"Fix GEOSEARCHSTORE not overwrite the dst key (#1677)

When doing store, we should call overwrite instead of add, when
doing add, which leads us to perform zadd dst xxx in disguise.
And this cause the following issues.

The first case is more common, it is a normal user case.
We always adding the member results in a incorrect zset:
```
127.0.0.1:6666> flushall
OK
127.0.0.1:6666> geoadd src 10 10 Shenzhen
(integer) 1
127.0.0.1:6666> geoadd src2 10 10 Beijing
(integer) 1
127.0.0.1:6666> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen BYBOX 88 88 m
(integer) 1
127.0.0.1:6666> GEOSEARCHSTORE dst src2 FROMMEMBER Beijing BYBOX 88 88 m
(integer) 1
127.0.0.1:6666> zcard dst
(integer) 2
127.0.0.1:6666> zrange dst 0 -1
1) ""Beijing""
2) ""Shenzhen""

127.0.0.1:6379> flushall
OK
127.0.0.1:6379> geoadd src 10 10 Shenzhen
(integer) 1
127.0.0.1:6379> geoadd src2 10 10 Beijing
(integer) 1
127.0.0.1:6379> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen BYBOX 88 88 m
(integer) 1
127.0.0.1:6379> GEOSEARCHSTORE dst src2 FROMMEMBER Beijing BYBOX 88 88 m
(integer) 1
127.0.0.1:6379> zcard dst
(integer) 1
127.0.0.1:6379> zrange dst 0 -1
1) ""Beijing""
```

The second one is a dst key with the wrong type, the add will
actually return an error (wrong type error) and take no effect
and the result is not actually written:
```
127.0.0.1:6666> flushall
OK
127.0.0.1:6666> geoadd src 10 10 Shenzhen
(integer) 1
127.0.0.1:6666> set dst string
OK
127.0.0.1:6666> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen BYBOX 88 88 m
(integer) 1
127.0.0.1:6666> type dst
string

127.0.0.1:6379> flushall
OK
127.0.0.1:6379> geoadd src 10 10 Shenzhen
(integer) 1
127.0.0.1:6379> set dst string
OK
127.0.0.1:6379> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen BYBOX 88 88 m
(integer) 1
127.0.0.1:6379> type dst
zset
```",unstable,True,False,2,geo_test.go,go,20,0,20
cc2af38b03a46b6634ee3c3815668c3e343165cd,hulk.website@gmail.com,2023-08-18 23:03:25+08:00,noreply@github.com,2023-08-18 23:03:25+08:00,Fix flaky test failure in TestSlotMigrateSync (#1680),unstable,True,False,1,slotmigrate_test.go,go,6,3,9
695568f4ef14dd3495ea176bfe76f29ef500dd96,joverzh@gmail.com,2023-08-19 20:42:37+08:00,noreply@github.com,2023-08-19 20:42:37+08:00,Add the support of the LPOS command (#1681),unstable,True,False,5,cmd_list.cc,cc,69,0,69
695568f4ef14dd3495ea176bfe76f29ef500dd96,joverzh@gmail.com,2023-08-19 20:42:37+08:00,noreply@github.com,2023-08-19 20:42:37+08:00,Add the support of the LPOS command (#1681),unstable,True,False,5,redis_list.cc,cc,57,0,57
695568f4ef14dd3495ea176bfe76f29ef500dd96,joverzh@gmail.com,2023-08-19 20:42:37+08:00,noreply@github.com,2023-08-19 20:42:37+08:00,Add the support of the LPOS command (#1681),unstable,True,False,5,redis_list.h,h,9,0,9
695568f4ef14dd3495ea176bfe76f29ef500dd96,joverzh@gmail.com,2023-08-19 20:42:37+08:00,noreply@github.com,2023-08-19 20:42:37+08:00,Add the support of the LPOS command (#1681),unstable,True,False,5,list_test.cc,cc,89,0,89
695568f4ef14dd3495ea176bfe76f29ef500dd96,joverzh@gmail.com,2023-08-19 20:42:37+08:00,noreply@github.com,2023-08-19 20:42:37+08:00,Add the support of the LPOS command (#1681),unstable,True,False,5,list_test.go,go,54,0,54
9d0d9266231d7a982b7306056d288dcddcaf0b36,twice.mliu@gmail.com,2023-08-20 07:43:28+08:00,noreply@github.com,2023-08-20 07:43:28+08:00,"Refactor encoding via templates (#1683)

We refactor encoding utils via templates in this PR.
All existing interfaces remain unchanged, and some missing and generic interfaces are added.",unstable,True,False,5,encoding.cc,cc,20,124,144
9d0d9266231d7a982b7306056d288dcddcaf0b36,twice.mliu@gmail.com,2023-08-20 07:43:28+08:00,noreply@github.com,2023-08-20 07:43:28+08:00,"Refactor encoding via templates (#1683)

We refactor encoding utils via templates in this PR.
All existing interfaces remain unchanged, and some missing and generic interfaces are added.",unstable,True,False,5,encoding.h,h,64,19,83
9d0d9266231d7a982b7306056d288dcddcaf0b36,twice.mliu@gmail.com,2023-08-20 07:43:28+08:00,noreply@github.com,2023-08-20 07:43:28+08:00,"Refactor encoding via templates (#1683)

We refactor encoding utils via templates in this PR.
All existing interfaces remain unchanged, and some missing and generic interfaces are added.",unstable,True,False,5,event_util.h,h,1,8,9
9d0d9266231d7a982b7306056d288dcddcaf0b36,twice.mliu@gmail.com,2023-08-20 07:43:28+08:00,noreply@github.com,2023-08-20 07:43:28+08:00,"Refactor encoding via templates (#1683)

We refactor encoding utils via templates in this PR.
All existing interfaces remain unchanged, and some missing and generic interfaces are added.",unstable,True,False,5,status.h,h,8,16,24
9d0d9266231d7a982b7306056d288dcddcaf0b36,twice.mliu@gmail.com,2023-08-20 07:43:28+08:00,noreply@github.com,2023-08-20 07:43:28+08:00,"Refactor encoding via templates (#1683)

We refactor encoding utils via templates in this PR.
All existing interfaces remain unchanged, and some missing and generic interfaces are added.",unstable,True,False,5,type_util.h,h,16,0,16
b5f24e53792127b221c539ba22db6375b61bd131,twice.mliu@gmail.com,2023-08-20 10:21:46+08:00,noreply@github.com,2023-08-20 10:21:46+08:00,Add returned next pointer for EncodeFixed (#1685),unstable,True,False,3,encoding.cc,cc,1,1,2
b5f24e53792127b221c539ba22db6375b61bd131,twice.mliu@gmail.com,2023-08-20 10:21:46+08:00,noreply@github.com,2023-08-20 10:21:46+08:00,Add returned next pointer for EncodeFixed (#1685),unstable,True,False,3,encoding.h,h,13,6,19
b5f24e53792127b221c539ba22db6375b61bd131,twice.mliu@gmail.com,2023-08-20 10:21:46+08:00,noreply@github.com,2023-08-20 10:21:46+08:00,Add returned next pointer for EncodeFixed (#1685),unstable,True,False,3,redis_metadata.cc,cc,7,15,22
10861b09abf7b701e8f009864b4f419bc889f71c,aleks.raiden@gmail.com,2023-08-20 07:02:21+03:00,noreply@github.com,2023-08-20 12:02:21+08:00,Bump zlib to version 1.3 (#1682),unstable,True,False,1,zlib.cmake,cmake,2,2,4
54423b6a545ccdb849e2a6b038cbc559f58e3d4a,binloveplay1314@qq.com,2023-08-21 17:30:55+08:00,noreply@github.com,2023-08-21 17:30:55+08:00,"Fix LPOS rank passing LLONG_MIN overflow issue (#1687)

There is a minor overflow issue in RANK negation, passing LLONG_MIN
will overflow and is effectively be the same as passing -1.

This is the example before the fix:
```
127.0.0.1:6666> flushall
OK
127.0.0.1:6666> lpos mylist foo rank -9223372036854775808
(nil)
127.0.0.1:6666> lpush mylist foo foo foo foo foo
(integer) 5

127.0.0.1:6666> lpos mylist foo rank -1
(integer) 4
127.0.0.1:6666> lpos mylist foo rank -5
(integer) 0
127.0.0.1:6666> lpos mylist foo rank -6
(nil)
127.0.0.1:6666> lpos mylist foo rank -9223372036854775807
(nil)

-- this should return nil but it returned the last one because the overflow rank became -1
127.0.0.1:6666> lpos mylist foo rank -9223372036854775808
(integer) 4
```

Now we limit RANK to not be LLONG_MIN and will throw an error directly
(this is the behavior of Redis 7.2, but with different error words):
```
127.0.0.1:6666> lpos mylist foo rank -9223372036854775808
(error) ERR rank would overflow

127.0.0.1:6379> lpos mylist foo rank -9223372036854775808
(error) ERR value is out of range, value must between -9223372036854775807 and 9223372036854775807
```

Unrelated change: a small cleanup, return RedisParseErr instead of
RedisExecErr in Parse.",unstable,True,False,2,cmd_list.cc,cc,5,2,7
54423b6a545ccdb849e2a6b038cbc559f58e3d4a,binloveplay1314@qq.com,2023-08-21 17:30:55+08:00,noreply@github.com,2023-08-21 17:30:55+08:00,"Fix LPOS rank passing LLONG_MIN overflow issue (#1687)

There is a minor overflow issue in RANK negation, passing LLONG_MIN
will overflow and is effectively be the same as passing -1.

This is the example before the fix:
```
127.0.0.1:6666> flushall
OK
127.0.0.1:6666> lpos mylist foo rank -9223372036854775808
(nil)
127.0.0.1:6666> lpush mylist foo foo foo foo foo
(integer) 5

127.0.0.1:6666> lpos mylist foo rank -1
(integer) 4
127.0.0.1:6666> lpos mylist foo rank -5
(integer) 0
127.0.0.1:6666> lpos mylist foo rank -6
(nil)
127.0.0.1:6666> lpos mylist foo rank -9223372036854775807
(nil)

-- this should return nil but it returned the last one because the overflow rank became -1
127.0.0.1:6666> lpos mylist foo rank -9223372036854775808
(integer) 4
```

Now we limit RANK to not be LLONG_MIN and will throw an error directly
(this is the behavior of Redis 7.2, but with different error words):
```
127.0.0.1:6666> lpos mylist foo rank -9223372036854775808
(error) ERR rank would overflow

127.0.0.1:6379> lpos mylist foo rank -9223372036854775808
(error) ERR value is out of range, value must between -9223372036854775807 and 9223372036854775807
```

Unrelated change: a small cleanup, return RedisParseErr instead of
RedisExecErr in Parse.",unstable,True,False,2,list_test.go,go,5,0,5
f9f93fbbd8684d0d111c0624d41301c2ff669e30,twice.mliu@gmail.com,2023-08-22 11:22:57+08:00,noreply@github.com,2023-08-22 11:22:57+08:00,Use StatusOr in util::GetPeerAddr (#1688),unstable,True,False,3,io_util.cc,cc,7,10,17
f9f93fbbd8684d0d111c0624d41301c2ff669e30,twice.mliu@gmail.com,2023-08-22 11:22:57+08:00,noreply@github.com,2023-08-22 11:22:57+08:00,Use StatusOr in util::GetPeerAddr (#1688),unstable,True,False,3,io_util.h,h,1,1,2
f9f93fbbd8684d0d111c0624d41301c2ff669e30,twice.mliu@gmail.com,2023-08-22 11:22:57+08:00,noreply@github.com,2023-08-22 11:22:57+08:00,Use StatusOr in util::GetPeerAddr (#1688),unstable,True,False,3,worker.cc,cc,2,3,5
928f957d936c619b28d157a84a536bbea2441e00,twice.mliu@gmail.com,2023-08-22 13:01:41+08:00,noreply@github.com,2023-08-22 13:01:41+08:00,"Move sha1 and redis rand sources to vendor directory (#1689)

Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,8,licenserc.yml,yml,1,4,5
928f957d936c619b28d157a84a536bbea2441e00,twice.mliu@gmail.com,2023-08-22 13:01:41+08:00,noreply@github.com,2023-08-22 13:01:41+08:00,"Move sha1 and redis rand sources to vendor directory (#1689)

Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,8,typos.toml,toml,1,1,2
928f957d936c619b28d157a84a536bbea2441e00,twice.mliu@gmail.com,2023-08-22 13:01:41+08:00,noreply@github.com,2023-08-22 13:01:41+08:00,"Move sha1 and redis rand sources to vendor directory (#1689)

Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,8,CMakeLists.txt,txt,1,1,2
928f957d936c619b28d157a84a536bbea2441e00,twice.mliu@gmail.com,2023-08-22 13:01:41+08:00,noreply@github.com,2023-08-22 13:01:41+08:00,"Move sha1 and redis rand sources to vendor directory (#1689)

Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,8,NOTICE,None,2,2,4
a4269399db3dcf09728a8e7211560706fb773ffd,binloveplay1314@qq.com,2023-08-23 18:08:22+08:00,noreply@github.com,2023-08-23 18:08:22+08:00,"Fix GEORADIUSBYMEMBER against non existing key reply (#1691)

Current GEORADIUSBYMEMBER against non existing key will
a NotFound error, which is wrong:
```
127.0.0.1:6666> georadiusbymember non-existing member 1 km
(error) ERR NotFound:

127.0.0.1:6379> georadiusbymember non-existing member 1 km
(empty array)
```

georadiusbymember_ro is the same since they share the code.",unstable,True,False,2,redis_geo.cc,cc,1,1,2
a4269399db3dcf09728a8e7211560706fb773ffd,binloveplay1314@qq.com,2023-08-23 18:08:22+08:00,noreply@github.com,2023-08-23 18:08:22+08:00,"Fix GEORADIUSBYMEMBER against non existing key reply (#1691)

Current GEORADIUSBYMEMBER against non existing key will
a NotFound error, which is wrong:
```
127.0.0.1:6666> georadiusbymember non-existing member 1 km
(error) ERR NotFound:

127.0.0.1:6379> georadiusbymember non-existing member 1 km
(empty array)
```

georadiusbymember_ro is the same since they share the code.",unstable,True,False,2,geo_test.go,go,6,0,6
5ab57c3d29c105c4d193ad740f8c880ccdb0d146,twice.mliu@gmail.com,2023-08-24 10:12:20+08:00,noreply@github.com,2023-08-24 10:12:20+08:00,Introduce dependency xxhash for bloomfilter (#1694),unstable,True,False,3,CMakeLists.txt,txt,2,0,2
5ab57c3d29c105c4d193ad740f8c880ccdb0d146,twice.mliu@gmail.com,2023-08-24 10:12:20+08:00,noreply@github.com,2023-08-24 10:12:20+08:00,Introduce dependency xxhash for bloomfilter (#1694),unstable,True,False,3,utils.cmake,cmake,1,0,1
5ab57c3d29c105c4d193ad740f8c880ccdb0d146,twice.mliu@gmail.com,2023-08-24 10:12:20+08:00,noreply@github.com,2023-08-24 10:12:20+08:00,Introduce dependency xxhash for bloomfilter (#1694),unstable,True,False,3,xxhash.cmake,cmake,35,0,35
04dc335df0317976bab9b09cb48953a33a3804ee,jonahgaox@gmail.com,2023-08-24 12:48:40+08:00,noreply@github.com,2023-08-24 12:48:40+08:00,Disable building of the unused shared library for jemalloc (#1695),unstable,True,False,1,jemalloc.cmake,cmake,2,1,3
9592b5079b3b3c90d5998292cd5c1ba8274222d9,zncleon@gmail.com,2023-08-24 15:46:13+08:00,noreply@github.com,2023-08-24 15:46:13+08:00,"Add splited bloom filter for RedisBloom support  (#1693)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,bloom_filter.cc,cc,96,0,96
9592b5079b3b3c90d5998292cd5c1ba8274222d9,zncleon@gmail.com,2023-08-24 15:46:13+08:00,noreply@github.com,2023-08-24 15:46:13+08:00,"Add splited bloom filter for RedisBloom support  (#1693)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,bloom_filter.h,h,183,0,183
9592b5079b3b3c90d5998292cd5c1ba8274222d9,zncleon@gmail.com,2023-08-24 15:46:13+08:00,noreply@github.com,2023-08-24 15:46:13+08:00,"Add splited bloom filter for RedisBloom support  (#1693)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,bloom_filter_test.cc,cc,187,0,187
002feb554b05c2d05bf32aef509a748ee4850986,binloveplay1314@qq.com,2023-08-24 20:12:31+08:00,noreply@github.com,2023-08-24 20:12:31+08:00,Fix ZINTERSTORE command key range (#1697),unstable,True,False,1,cmd_zset.cc,cc,6,1,7
e0f4f6ea19cc73aef48ba9ea3b8c5330c3baa1f4,twice.mliu@gmail.com,2023-08-25 11:16:12+09:00,noreply@github.com,2023-08-25 11:16:12+09:00,Improve the cleanup order in the main function (#1698),unstable,True,False,2,main.cc,cc,4,1,5
e0f4f6ea19cc73aef48ba9ea3b8c5330c3baa1f4,twice.mliu@gmail.com,2023-08-25 11:16:12+09:00,noreply@github.com,2023-08-25 11:16:12+09:00,Improve the cleanup order in the main function (#1698),unstable,True,False,2,server.cc,cc,0,1,1
c9b1e8e65258a37bcdbdc24e74b4096976493327,binloveplay1314@qq.com,2023-08-26 13:37:40+08:00,noreply@github.com,2023-08-26 13:37:40+08:00,"Use MultiLockGuard to guarantee atomicity for multiple keys commands (#1700)

In kvrocks, for multiple key commands, we may break atomicity.
such as `ZUNION`, `ZUNIONSTORE`, `ZINTERSTOR`E, `SUNION`, `SUNIONSTORE`,
`SINTER`, `SINTERSTORE`, `SDIFF` and `SDIFFSTORE`.

For `SDIFFSTORE destination key1 [key2 ...]` command, kvrocks will
read key1, key2 ... orderly without any lock, and then restore the
diff into the destination key. So maybe some keys may be changed when
We read them orderly, which breaks atomicity but Redis can guarantee
atomicity.

In this PR, we are using `MultiLockGuard` to lock these keys before
we read or write, so it is impossible to change these keys. This change
affects all commands listed previously.

Fixes #1692",unstable,True,False,3,redis_set.cc,cc,24,0,24
c9b1e8e65258a37bcdbdc24e74b4096976493327,binloveplay1314@qq.com,2023-08-26 13:37:40+08:00,noreply@github.com,2023-08-26 13:37:40+08:00,"Use MultiLockGuard to guarantee atomicity for multiple keys commands (#1700)

In kvrocks, for multiple key commands, we may break atomicity.
such as `ZUNION`, `ZUNIONSTORE`, `ZINTERSTOR`E, `SUNION`, `SUNIONSTORE`,
`SINTER`, `SINTERSTORE`, `SDIFF` and `SDIFFSTORE`.

For `SDIFFSTORE destination key1 [key2 ...]` command, kvrocks will
read key1, key2 ... orderly without any lock, and then restore the
diff into the destination key. So maybe some keys may be changed when
We read them orderly, which breaks atomicity but Redis can guarantee
atomicity.

In this PR, we are using `MultiLockGuard` to lock these keys before
we read or write, so it is impossible to change these keys. This change
affects all commands listed previously.

Fixes #1692",unstable,True,False,3,redis_string.cc,cc,2,2,4
c9b1e8e65258a37bcdbdc24e74b4096976493327,binloveplay1314@qq.com,2023-08-26 13:37:40+08:00,noreply@github.com,2023-08-26 13:37:40+08:00,"Use MultiLockGuard to guarantee atomicity for multiple keys commands (#1700)

In kvrocks, for multiple key commands, we may break atomicity.
such as `ZUNION`, `ZUNIONSTORE`, `ZINTERSTOR`E, `SUNION`, `SUNIONSTORE`,
`SINTER`, `SINTERSTORE`, `SDIFF` and `SDIFFSTORE`.

For `SDIFFSTORE destination key1 [key2 ...]` command, kvrocks will
read key1, key2 ... orderly without any lock, and then restore the
diff into the destination key. So maybe some keys may be changed when
We read them orderly, which breaks atomicity but Redis can guarantee
atomicity.

In this PR, we are using `MultiLockGuard` to lock these keys before
we read or write, so it is impossible to change these keys. This change
affects all commands listed previously.

Fixes #1692",unstable,True,False,3,redis_zset.cc,cc,16,0,16
6bcd387f7f91f94cc0a18b08ec9d190ca528a115,twice.mliu@gmail.com,2023-08-26 23:43:53+09:00,noreply@github.com,2023-08-26 23:43:53+09:00,"Fix wrong metadata parsing in CompactOnExpiredCollector (#1703)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,server.cc,cc,5,9,14
6bcd387f7f91f94cc0a18b08ec9d190ca528a115,twice.mliu@gmail.com,2023-08-26 23:43:53+09:00,noreply@github.com,2023-08-26 23:43:53+09:00,"Fix wrong metadata parsing in CompactOnExpiredCollector (#1703)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,server.h,h,4,4,8
6bcd387f7f91f94cc0a18b08ec9d190ca528a115,twice.mliu@gmail.com,2023-08-26 23:43:53+09:00,noreply@github.com,2023-08-26 23:43:53+09:00,"Fix wrong metadata parsing in CompactOnExpiredCollector (#1703)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,redis_metadata.cc,cc,3,6,9
6bcd387f7f91f94cc0a18b08ec9d190ca528a115,twice.mliu@gmail.com,2023-08-26 23:43:53+09:00,noreply@github.com,2023-08-26 23:43:53+09:00,"Fix wrong metadata parsing in CompactOnExpiredCollector (#1703)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,redis_metadata.h,h,14,12,26
6bcd387f7f91f94cc0a18b08ec9d190ca528a115,twice.mliu@gmail.com,2023-08-26 23:43:53+09:00,noreply@github.com,2023-08-26 23:43:53+09:00,"Fix wrong metadata parsing in CompactOnExpiredCollector (#1703)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,storage.cc,cc,3,0,3
6bcd387f7f91f94cc0a18b08ec9d190ca528a115,twice.mliu@gmail.com,2023-08-26 23:43:53+09:00,noreply@github.com,2023-08-26 23:43:53+09:00,"Fix wrong metadata parsing in CompactOnExpiredCollector (#1703)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,table_properties_collector.cc,cc,10,19,29
6bcd387f7f91f94cc0a18b08ec9d190ca528a115,twice.mliu@gmail.com,2023-08-26 23:43:53+09:00,noreply@github.com,2023-08-26 23:43:53+09:00,"Fix wrong metadata parsing in CompactOnExpiredCollector (#1703)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,table_properties_collector.h,h,2,2,4
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,cmd_server.cc,cc,73,0,73
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,main.cc,cc,2,0,2
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,rdb.cc,cc,451,0,451
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,rdb.h,h,100,0,100
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,rdb_intset.cc,cc,88,0,88
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,rdb_intset.h,h,38,0,38
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,rdb_listpack.cc,cc,222,0,222
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,rdb_listpack.h,h,42,0,42
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,rdb_ziplist.cc,cc,154,0,154
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,rdb_ziplist.h,h,44,0,44
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,rdb_zipmap.cc,cc,93,0,93
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,rdb_zipmap.h,h,43,0,43
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,crc64.cc,cc,379,0,379
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,crc64.h,h,57,0,57
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,endianconv.cc,cc,90,0,90
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,endianconv.h,h,62,0,62
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,lzf.cc,cc,237,0,237
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,lzf.h,h,200,0,200
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,restore_test.go,go,278,0,278
d5ad497301aa0584af1fdc351593d3ee37e6472e,hulk.website@gmail.com,2023-08-28 11:21:51+08:00,noreply@github.com,2023-08-28 11:21:51+08:00,"Add the support of the restore command (#1684)

This PR will close #1648 which supports the restore command for making Redis migration tools happy.
To achieve this feature, we need to implement all encoding types now supported by Redis from 2.x to 7.x which includes:

- All kinds of data objects like String/List/Set/Hash/Sorted Set
- Binary encoding types: ZipMap/ZipList/IntSet/ListPack

For test cases, I have dumped value for Redis according to encoding types and confirmed it works well
with the RedisShake migration tool. Another thing to be noticed, we haven't supported the stream and module type yet,
because our stream type is partially implemented, so we can go back to support it after all commands are supported.
 
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,20,random.go,go,3,1,4
f69982ee53b8a7a4c862014282bf2eebc1b5240c,binloveplay1314@qq.com,2023-08-28 14:24:59+08:00,noreply@github.com,2023-08-28 14:24:59+08:00,"Fix RESTORE to create a key without expire under the same ms (#1705)

I am unable to reproduce it, but if the ttl_ms (absttl) passed in
happens to be in the same ms as GetTimeStampMS, the `ttl_ms < now`
will be false and `ttl_ms -= now` will make ttl_ms become 0 and then
we will create a key without any expire.

It is off by one bug.",unstable,True,False,1,cmd_server.cc,cc,1,1,2
a64cabf4b091fe48b85fa7bdc74d74cf775f6011,122602529+xq2010@users.noreply.github.com,2023-08-28 21:06:02+08:00,noreply@github.com,2023-08-28 22:06:02+09:00,"Add support for LASTSAVE command (#1702)

Co-authored-by: xuqing <xuqing@cyou-inc.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,4,cmd_server.cc,cc,14,0,14
a64cabf4b091fe48b85fa7bdc74d74cf775f6011,122602529+xq2010@users.noreply.github.com,2023-08-28 21:06:02+08:00,noreply@github.com,2023-08-28 22:06:02+09:00,"Add support for LASTSAVE command (#1702)

Co-authored-by: xuqing <xuqing@cyou-inc.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,4,server.cc,cc,6,1,7
a64cabf4b091fe48b85fa7bdc74d74cf775f6011,122602529+xq2010@users.noreply.github.com,2023-08-28 21:06:02+08:00,noreply@github.com,2023-08-28 22:06:02+09:00,"Add support for LASTSAVE command (#1702)

Co-authored-by: xuqing <xuqing@cyou-inc.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,4,server.h,h,1,0,1
a64cabf4b091fe48b85fa7bdc74d74cf775f6011,122602529+xq2010@users.noreply.github.com,2023-08-28 21:06:02+08:00,noreply@github.com,2023-08-28 22:06:02+09:00,"Add support for LASTSAVE command (#1702)

Co-authored-by: xuqing <xuqing@cyou-inc.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,4,info_test.go,go,0,1,1
caa2d67d1edbc2bf910e4e5178c0a0e745178a42,hulk.website@gmail.com,2023-08-29 11:14:02+08:00,noreply@github.com,2023-08-29 11:14:02+08:00,Update the Redis migration tool to RedisShake due to redis-migrate-tool is inactive for a long time (#1706),unstable,True,False,1,README.md,md,1,1,2
592b24fd39b58bf07af54162605bddcd5b531ba7,binloveplay1314@qq.com,2023-08-29 12:25:21+08:00,noreply@github.com,2023-08-29 12:25:21+08:00,"Remove the no-script flag in the LASTSAVE command (#1708)

Redis allow run it in the script:
```
127.0.0.1:6379> eval ""return redis.call('lastsave')"" 0
(integer) 1693277322
```

Look like a copy-paste bug.",unstable,True,False,1,cmd_server.cc,cc,1,1,2
8b90c383516e12ddb6653bd9563ea30f00a73ec4,aleks.raiden@gmail.com,2023-08-29 13:00:28+03:00,noreply@github.com,2023-08-29 18:00:28+08:00,"Bump fmtlib to version 10.1.1 (#1707)

- Added formatters for std::atomic and atomic_flag
- Fix a lot of bug and warning in C++20

Full release notice - https://github.com/fmtlib/fmt/releases/tag/10.1.1",unstable,True,False,1,fmt.cmake,cmake,2,2,4
e4bf4ff7ff00515b7a0636313a9f61fd47f13822,binloveplay1314@qq.com,2023-08-29 22:38:50+08:00,noreply@github.com,2023-08-29 23:38:50+09:00,Fix RESTORE check for zset2 object type (#1709),unstable,True,False,3,rdb.cc,cc,4,4,8
e4bf4ff7ff00515b7a0636313a9f61fd47f13822,binloveplay1314@qq.com,2023-08-29 22:38:50+08:00,noreply@github.com,2023-08-29 23:38:50+09:00,Fix RESTORE check for zset2 object type (#1709),unstable,True,False,3,rdb.h,h,2,0,2
e4bf4ff7ff00515b7a0636313a9f61fd47f13822,binloveplay1314@qq.com,2023-08-29 22:38:50+08:00,noreply@github.com,2023-08-29 23:38:50+09:00,Fix RESTORE check for zset2 object type (#1709),unstable,True,False,3,restore_test.go,go,11,0,11
01a2f1db2c66dce5efefbdd0e39cabbdd783d5b1,zncleon@gmail.com,2023-08-29 23:58:53+08:00,noreply@github.com,2023-08-29 23:58:53+08:00,"Add the support of basic scalable bloom (#1699)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,cmd_bloom_filter.cc,cc,117,0,117
01a2f1db2c66dce5efefbdd0e39cabbdd783d5b1,zncleon@gmail.com,2023-08-29 23:58:53+08:00,noreply@github.com,2023-08-29 23:58:53+08:00,"Add the support of basic scalable bloom (#1699)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,batch_extractor.cc,cc,1,0,1
01a2f1db2c66dce5efefbdd0e39cabbdd783d5b1,zncleon@gmail.com,2023-08-29 23:58:53+08:00,noreply@github.com,2023-08-29 23:58:53+08:00,"Add the support of basic scalable bloom (#1699)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,redis_db.cc,cc,2,1,3
01a2f1db2c66dce5efefbdd0e39cabbdd783d5b1,zncleon@gmail.com,2023-08-29 23:58:53+08:00,noreply@github.com,2023-08-29 23:58:53+08:00,"Add the support of basic scalable bloom (#1699)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,redis_metadata.cc,cc,55,1,56
01a2f1db2c66dce5efefbdd0e39cabbdd783d5b1,zncleon@gmail.com,2023-08-29 23:58:53+08:00,noreply@github.com,2023-08-29 23:58:53+08:00,"Add the support of basic scalable bloom (#1699)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,redis_metadata.h,h,46,0,46
01a2f1db2c66dce5efefbdd0e39cabbdd783d5b1,zncleon@gmail.com,2023-08-29 23:58:53+08:00,noreply@github.com,2023-08-29 23:58:53+08:00,"Add the support of basic scalable bloom (#1699)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,redis_bloom_chain.cc,cc,198,0,198
01a2f1db2c66dce5efefbdd0e39cabbdd783d5b1,zncleon@gmail.com,2023-08-29 23:58:53+08:00,noreply@github.com,2023-08-29 23:58:53+08:00,"Add the support of basic scalable bloom (#1699)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,redis_bloom_chain.h,h,49,0,49
01a2f1db2c66dce5efefbdd0e39cabbdd783d5b1,zncleon@gmail.com,2023-08-29 23:58:53+08:00,noreply@github.com,2023-08-29 23:58:53+08:00,"Add the support of basic scalable bloom (#1699)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,bloom_chain_test.cc,cc,83,0,83
01a2f1db2c66dce5efefbdd0e39cabbdd783d5b1,zncleon@gmail.com,2023-08-29 23:58:53+08:00,noreply@github.com,2023-08-29 23:58:53+08:00,"Add the support of basic scalable bloom (#1699)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,bloom_test.go,go,119,0,119
9a79dd0f1ab97b237e891737f6ad92cae418e2eb,binloveplay1314@qq.com,2023-08-30 20:00:06+08:00,noreply@github.com,2023-08-30 20:00:06+08:00,"Change the default value of max-io-mb to 0 (unlimited) (#1713)

For now, the max-io-mb is 500MiB which may be too low for fast devices
like NVMe SSD, so it'd be better to set the io bandwidth to unlimited by default.

This closes #1711.",unstable,True,False,3,kvrocks.conf,conf,2,2,4
9a79dd0f1ab97b237e891737f6ad92cae418e2eb,binloveplay1314@qq.com,2023-08-30 20:00:06+08:00,noreply@github.com,2023-08-30 20:00:06+08:00,"Change the default value of max-io-mb to 0 (unlimited) (#1713)

For now, the max-io-mb is 500MiB which may be too low for fast devices
like NVMe SSD, so it'd be better to set the io bandwidth to unlimited by default.

This closes #1711.",unstable,True,False,3,config.cc,cc,1,1,2
9a79dd0f1ab97b237e891737f6ad92cae418e2eb,binloveplay1314@qq.com,2023-08-30 20:00:06+08:00,noreply@github.com,2023-08-30 20:00:06+08:00,"Change the default value of max-io-mb to 0 (unlimited) (#1713)

For now, the max-io-mb is 500MiB which may be too low for fast devices
like NVMe SSD, so it'd be better to set the io bandwidth to unlimited by default.

This closes #1711.",unstable,True,False,3,default.conf,conf,1,1,2
721467dae1b9893c1c1baf74f3e07a4a029e83d8,wander4096@gmail.com,2023-08-31 10:05:02+08:00,noreply@github.com,2023-08-31 10:05:02+08:00,Replace sha512sum with shasum (#1716),unstable,True,False,1,x.py,py,2,2,4
23faf36bc20b0b2d2816fc53bda94fdd3f280789,twice.mliu@gmail.com,2023-08-31 14:16:59+09:00,noreply@github.com,2023-08-31 13:16:59+08:00,"Use `emplace` instead of `insert` for map (#1718)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,worker.cc,cc,1,1,2
23faf36bc20b0b2d2816fc53bda94fdd3f280789,twice.mliu@gmail.com,2023-08-31 14:16:59+09:00,noreply@github.com,2023-08-31 13:16:59+08:00,"Use `emplace` instead of `insert` for map (#1718)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,table_properties_collector.cc,cc,6,6,12
088eae04abaaa74bfdb4473a6655f5753a63242b,zncleon@gmail.com,2023-08-31 19:25:21+08:00,noreply@github.com,2023-08-31 19:25:21+08:00,Add the support of the bloom BF.INFO command (#1710),unstable,True,False,6,cmd_bloom_filter.cc,cc,80,6,86
088eae04abaaa74bfdb4473a6655f5753a63242b,zncleon@gmail.com,2023-08-31 19:25:21+08:00,noreply@github.com,2023-08-31 19:25:21+08:00,Add the support of the bloom BF.INFO command (#1710),unstable,True,False,6,redis_metadata.cc,cc,1,1,2
088eae04abaaa74bfdb4473a6655f5753a63242b,zncleon@gmail.com,2023-08-31 19:25:21+08:00,noreply@github.com,2023-08-31 19:25:21+08:00,Add the support of the bloom BF.INFO command (#1710),unstable,True,False,6,redis_bloom_chain.cc,cc,42,29,71
088eae04abaaa74bfdb4473a6655f5753a63242b,zncleon@gmail.com,2023-08-31 19:25:21+08:00,noreply@github.com,2023-08-31 19:25:21+08:00,Add the support of the bloom BF.INFO command (#1710),unstable,True,False,6,redis_bloom_chain.h,h,20,2,22
088eae04abaaa74bfdb4473a6655f5753a63242b,zncleon@gmail.com,2023-08-31 19:25:21+08:00,noreply@github.com,2023-08-31 19:25:21+08:00,Add the support of the bloom BF.INFO command (#1710),unstable,True,False,6,bloom_chain_test.cc,cc,1,2,3
088eae04abaaa74bfdb4473a6655f5753a63242b,zncleon@gmail.com,2023-08-31 19:25:21+08:00,noreply@github.com,2023-08-31 19:25:21+08:00,Add the support of the bloom BF.INFO command (#1710),unstable,True,False,6,bloom_test.go,go,99,11,110
e2baeb1b2cdeb480d02b74d4eff23f2c418bc3e7,twice.mliu@gmail.com,2023-09-01 10:24:58+09:00,noreply@github.com,2023-09-01 10:24:58+09:00,"Use resp functions instead of manual concatenation (#1717)

Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,3,replication.cc,cc,7,5,12
e2baeb1b2cdeb480d02b74d4eff23f2c418bc3e7,twice.mliu@gmail.com,2023-09-01 10:24:58+09:00,noreply@github.com,2023-09-01 10:24:58+09:00,"Use resp functions instead of manual concatenation (#1717)

Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,3,redis_reply.h,h,2,2,4
e2baeb1b2cdeb480d02b74d4eff23f2c418bc3e7,twice.mliu@gmail.com,2023-09-01 10:24:58+09:00,noreply@github.com,2023-09-01 10:24:58+09:00,"Use resp functions instead of manual concatenation (#1717)

Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,3,server.cc,cc,3,5,8
357efac993bfd2045ec6bbd6126d2ad01c00b42d,85615957+Yangsx-1@users.noreply.github.com,2023-09-02 00:03:44+08:00,noreply@github.com,2023-09-02 00:03:44+08:00,Add the support of the XGROUP CREATE and DESTROY command (#1704),unstable,True,False,8,cmd_stream.cc,cc,84,0,84
357efac993bfd2045ec6bbd6126d2ad01c00b42d,85615957+Yangsx-1@users.noreply.github.com,2023-09-02 00:03:44+08:00,noreply@github.com,2023-09-02 00:03:44+08:00,Add the support of the XGROUP CREATE and DESTROY command (#1704),unstable,True,False,8,redis_metadata.cc,cc,5,0,5
357efac993bfd2045ec6bbd6126d2ad01c00b42d,85615957+Yangsx-1@users.noreply.github.com,2023-09-02 00:03:44+08:00,noreply@github.com,2023-09-02 00:03:44+08:00,Add the support of the XGROUP CREATE and DESTROY command (#1704),unstable,True,False,8,redis_metadata.h,h,1,0,1
357efac993bfd2045ec6bbd6126d2ad01c00b42d,85615957+Yangsx-1@users.noreply.github.com,2023-09-02 00:03:44+08:00,noreply@github.com,2023-09-02 00:03:44+08:00,Add the support of the XGROUP CREATE and DESTROY command (#1704),unstable,True,False,8,redis_stream.cc,cc,153,0,153
357efac993bfd2045ec6bbd6126d2ad01c00b42d,85615957+Yangsx-1@users.noreply.github.com,2023-09-02 00:03:44+08:00,noreply@github.com,2023-09-02 00:03:44+08:00,Add the support of the XGROUP CREATE and DESTROY command (#1704),unstable,True,False,8,redis_stream.h,h,8,0,8
357efac993bfd2045ec6bbd6126d2ad01c00b42d,85615957+Yangsx-1@users.noreply.github.com,2023-09-02 00:03:44+08:00,noreply@github.com,2023-09-02 00:03:44+08:00,Add the support of the XGROUP CREATE and DESTROY command (#1704),unstable,True,False,8,redis_stream_base.h,h,14,0,14
357efac993bfd2045ec6bbd6126d2ad01c00b42d,85615957+Yangsx-1@users.noreply.github.com,2023-09-02 00:03:44+08:00,noreply@github.com,2023-09-02 00:03:44+08:00,Add the support of the XGROUP CREATE and DESTROY command (#1704),unstable,True,False,8,stream_test.cc,cc,14,0,14
357efac993bfd2045ec6bbd6126d2ad01c00b42d,85615957+Yangsx-1@users.noreply.github.com,2023-09-02 00:03:44+08:00,noreply@github.com,2023-09-02 00:03:44+08:00,Add the support of the XGROUP CREATE and DESTROY command (#1704),unstable,True,False,8,stream_test.go,go,30,0,30
ba6731fa859f959d78f352852da770bea85596a1,binloveplay1314@qq.com,2023-09-02 13:48:34+08:00,noreply@github.com,2023-09-02 13:48:34+08:00,"Add MOVE command as Redis (#1723)

Since kvrocks don't support Redis DBs, so this is a dummy command.
If key does not exist, the command returns 0, otherwise it will always
returns 1.",unstable,True,False,2,cmd_key.cc,cc,19,0,19
ba6731fa859f959d78f352852da770bea85596a1,binloveplay1314@qq.com,2023-09-02 13:48:34+08:00,noreply@github.com,2023-09-02 13:48:34+08:00,"Add MOVE command as Redis (#1723)

Since kvrocks don't support Redis DBs, so this is a dummy command.
If key does not exist, the command returns 0, otherwise it will always
returns 1.",unstable,True,False,2,introspection_test.go,go,12,0,12
b1afbe34808caae9ef6a1f8052cf00c5cd4914d9,binloveplay1314@qq.com,2023-09-02 18:14:09+08:00,noreply@github.com,2023-09-02 18:14:09+08:00,"Fix RESTORE TTL is 0 with ASBTTL does not restore the key (#1724)

TTL is 0 mean the key is created without any expire.
ABSTTL mean the TTL should represent absolute Unix timestamp
in milliseconds in which the key will expire.

When typing TTL 0 and ABSTTL, kvrocks will not restore the
key, since we think the key is expired. However, in Redis,
ABSTTL is ignored when TTL is 0. (Although they seem to be
mutually exclusive)",unstable,True,False,2,cmd_server.cc,cc,1,1,2
b1afbe34808caae9ef6a1f8052cf00c5cd4914d9,binloveplay1314@qq.com,2023-09-02 18:14:09+08:00,noreply@github.com,2023-09-02 18:14:09+08:00,"Fix RESTORE TTL is 0 with ASBTTL does not restore the key (#1724)

TTL is 0 mean the key is created without any expire.
ABSTTL mean the TTL should represent absolute Unix timestamp
in milliseconds in which the key will expire.

When typing TTL 0 and ABSTTL, kvrocks will not restore the
key, since we think the key is expired. However, in Redis,
ABSTTL is ignored when TTL is 0. (Although they seem to be
mutually exclusive)",unstable,True,False,2,restore_test.go,go,10,0,10
e917552b9ce802ffb79aadf2a30aa792d266e52e,maplewish117@gmail.com,2023-09-03 01:20:36+08:00,noreply@github.com,2023-09-03 01:20:36+08:00,Fix boundary check in Bitmap::BitOp (#1727),unstable,True,False,5,cmd_bit.cc,cc,1,0,1
e917552b9ce802ffb79aadf2a30aa792d266e52e,maplewish117@gmail.com,2023-09-03 01:20:36+08:00,noreply@github.com,2023-09-03 01:20:36+08:00,Fix boundary check in Bitmap::BitOp (#1727),unstable,True,False,5,redis_bitmap.cc,cc,12,4,16
e917552b9ce802ffb79aadf2a30aa792d266e52e,maplewish117@gmail.com,2023-09-03 01:20:36+08:00,noreply@github.com,2023-09-03 01:20:36+08:00,Fix boundary check in Bitmap::BitOp (#1727),unstable,True,False,5,disk_test.cc,cc,40,0,40
e917552b9ce802ffb79aadf2a30aa792d266e52e,maplewish117@gmail.com,2023-09-03 01:20:36+08:00,noreply@github.com,2023-09-03 01:20:36+08:00,Fix boundary check in Bitmap::BitOp (#1727),unstable,True,False,5,bitmap_test.go,go,8,0,8
e917552b9ce802ffb79aadf2a30aa792d266e52e,maplewish117@gmail.com,2023-09-03 01:20:36+08:00,noreply@github.com,2023-09-03 01:20:36+08:00,Fix boundary check in Bitmap::BitOp (#1727),unstable,True,False,5,random.go,go,6,2,8
004924901369c6a6908ea2dd32af4741811ed912,hulk.website@gmail.com,2023-09-03 17:15:48+08:00,noreply@github.com,2023-09-03 17:15:48+08:00,"Replace the random char seed to global rand to avoid collision (#1729)

#1727 changed the random string causing namespaces test fails.

This fixes #1728",unstable,True,False,1,random.go,go,2,3,5
aaff696e76b6a7ff5921667136aa241da47b39eb,binloveplay1314@qq.com,2023-09-03 18:12:50+08:00,noreply@github.com,2023-09-03 18:12:50+08:00,"Split Inter in ZSet::InterStore into a separate function (#1726)

CI TSAN show ZINTERSTORE may has a deadlock after introducing
locks to DEL in #1712. In ZSet::InterStore if the dst key was
inside the source key list we may have a deadlock since the
OverWrite function will also lock the dst key.

In this PR, we split Inter in ZSet::InterStore into a separate
function, just like the Set apis.

After this PR, after the CI verification in #1712, it can pass
the CI verification now. Closes #1715

This PR also do a saved_cnt cleanup since it is same as members.size().",unstable,True,False,3,cmd_zset.cc,cc,1,1,2
aaff696e76b6a7ff5921667136aa241da47b39eb,binloveplay1314@qq.com,2023-09-03 18:12:50+08:00,noreply@github.com,2023-09-03 18:12:50+08:00,"Split Inter in ZSet::InterStore into a separate function (#1726)

CI TSAN show ZINTERSTORE may has a deadlock after introducing
locks to DEL in #1712. In ZSet::InterStore if the dst key was
inside the source key list we may have a deadlock since the
OverWrite function will also lock the dst key.

In this PR, we split Inter in ZSet::InterStore into a separate
function, just like the Set apis.

After this PR, after the CI verification in #1712, it can pass
the CI verification now. Closes #1715

This PR also do a saved_cnt cleanup since it is same as members.size().",unstable,True,False,3,redis_zset.cc,cc,15,12,27
aaff696e76b6a7ff5921667136aa241da47b39eb,binloveplay1314@qq.com,2023-09-03 18:12:50+08:00,noreply@github.com,2023-09-03 18:12:50+08:00,"Split Inter in ZSet::InterStore into a separate function (#1726)

CI TSAN show ZINTERSTORE may has a deadlock after introducing
locks to DEL in #1712. In ZSet::InterStore if the dst key was
inside the source key list we may have a deadlock since the
OverWrite function will also lock the dst key.

In this PR, we split Inter in ZSet::InterStore into a separate
function, just like the Set apis.

After this PR, after the CI verification in #1712, it can pass
the CI verification now. Closes #1715

This PR also do a saved_cnt cleanup since it is same as members.size().",unstable,True,False,3,redis_zset.h,h,3,1,4
91b1d63a81a7cab7fa4b628b1b7f627f34ba7472,binloveplay1314@qq.com,2023-09-04 15:41:46+08:00,noreply@github.com,2023-09-04 15:41:46+08:00,"Introduce MDel do the batch delete and use MultiLockGuard guarantee atomicity (#1712)

Previously, the DEL/UNLINK commands looped through each key to
delete a single key. We need to change to batch delete (write),
and also the original implementation did not lock the keys and
will break atomicity.

This PR introduces a new Mdel function, which uses MultiLockGuard
to lock all the keys to guarantee atomicity, and use batch to do
the final delete (write).

Now it will be only used in DEL / UNLINKE commands. Noticed that
our DEL / UNLINK test coverage was not sufficient, added some simple
coverage tests to cover it.

Fixes for DEL / UNLINK issues in #1692.

unrelated change: in Exists for loop Get, return an execution error
when `!s.ok() && !s.IsNotFound()` without continuing the operation
(because it will be some internal RocksDB error).",unstable,True,False,4,cmd_key.cc,cc,10,4,14
91b1d63a81a7cab7fa4b628b1b7f627f34ba7472,binloveplay1314@qq.com,2023-09-04 15:41:46+08:00,noreply@github.com,2023-09-04 15:41:46+08:00,"Introduce MDel do the batch delete and use MultiLockGuard guarantee atomicity (#1712)

Previously, the DEL/UNLINK commands looped through each key to
delete a single key. We need to change to batch delete (write),
and also the original implementation did not lock the keys and
will break atomicity.

This PR introduces a new Mdel function, which uses MultiLockGuard
to lock all the keys to guarantee atomicity, and use batch to do
the final delete (write).

Now it will be only used in DEL / UNLINKE commands. Noticed that
our DEL / UNLINK test coverage was not sufficient, added some simple
coverage tests to cover it.

Fixes for DEL / UNLINK issues in #1692.

unrelated change: in Exists for loop Get, return an execution error
when `!s.ok() && !s.IsNotFound()` without continuing the operation
(because it will be some internal RocksDB error).",unstable,True,False,4,redis_db.cc,cc,47,0,47
91b1d63a81a7cab7fa4b628b1b7f627f34ba7472,binloveplay1314@qq.com,2023-09-04 15:41:46+08:00,noreply@github.com,2023-09-04 15:41:46+08:00,"Introduce MDel do the batch delete and use MultiLockGuard guarantee atomicity (#1712)

Previously, the DEL/UNLINK commands looped through each key to
delete a single key. We need to change to batch delete (write),
and also the original implementation did not lock the keys and
will break atomicity.

This PR introduces a new Mdel function, which uses MultiLockGuard
to lock all the keys to guarantee atomicity, and use batch to do
the final delete (write).

Now it will be only used in DEL / UNLINKE commands. Noticed that
our DEL / UNLINK test coverage was not sufficient, added some simple
coverage tests to cover it.

Fixes for DEL / UNLINK issues in #1692.

unrelated change: in Exists for loop Get, return an execution error
when `!s.ok() && !s.IsNotFound()` without continuing the operation
(because it will be some internal RocksDB error).",unstable,True,False,4,redis_db.h,h,1,0,1
91b1d63a81a7cab7fa4b628b1b7f627f34ba7472,binloveplay1314@qq.com,2023-09-04 15:41:46+08:00,noreply@github.com,2023-09-04 15:41:46+08:00,"Introduce MDel do the batch delete and use MultiLockGuard guarantee atomicity (#1712)

Previously, the DEL/UNLINK commands looped through each key to
delete a single key. We need to change to batch delete (write),
and also the original implementation did not lock the keys and
will break atomicity.

This PR introduces a new Mdel function, which uses MultiLockGuard
to lock all the keys to guarantee atomicity, and use batch to do
the final delete (write).

Now it will be only used in DEL / UNLINKE commands. Noticed that
our DEL / UNLINK test coverage was not sufficient, added some simple
coverage tests to cover it.

Fixes for DEL / UNLINK issues in #1692.

unrelated change: in Exists for loop Get, return an execution error
when `!s.ok() && !s.IsNotFound()` without continuing the operation
(because it will be some internal RocksDB error).",unstable,True,False,4,introspection_test.go,go,50,0,50
f2cc1984b88cb2d9a6d7054f88f510eff2776e74,aleks.raiden@gmail.com,2023-09-04 13:34:33+03:00,noreply@github.com,2023-09-04 18:34:33+08:00,"Bump rocksdb from v8.3.2 to v8.3.3 and change the default value of rocksdb.level_compaction_dynamic_level_bytes from no to yes (#1725)

This is a bugfix release in the 8.3 line (8.6.х is developed now).

Bug fixes include:

- Fix a bug where if there is an error reading from offset 0 of a file from L1+ and the file is not the first file in the sorted run, data can be lost in compaction and read/scan can return incorrect results.
- Fix a bug where the iterator may return incorrect results for DeleteRange() users if there is an error reading from a file.
- Fixed a race condition in GenericRateLimiter that could cause it to stop granting requests

**Important**! Config options level_compaction_dynamic_level_bytes defaults changed to true in kvrocks.config file

Original release notice: https://github.com/facebook/rocksdb/releases/tag/v8.3.3",unstable,True,False,2,rocksdb.cmake,cmake,2,2,4
f2cc1984b88cb2d9a6d7054f88f510eff2776e74,aleks.raiden@gmail.com,2023-09-04 13:34:33+03:00,noreply@github.com,2023-09-04 18:34:33+08:00,"Bump rocksdb from v8.3.2 to v8.3.3 and change the default value of rocksdb.level_compaction_dynamic_level_bytes from no to yes (#1725)

This is a bugfix release in the 8.3 line (8.6.х is developed now).

Bug fixes include:

- Fix a bug where if there is an error reading from offset 0 of a file from L1+ and the file is not the first file in the sorted run, data can be lost in compaction and read/scan can return incorrect results.
- Fix a bug where the iterator may return incorrect results for DeleteRange() users if there is an error reading from a file.
- Fixed a race condition in GenericRateLimiter that could cause it to stop granting requests

**Important**! Config options level_compaction_dynamic_level_bytes defaults changed to true in kvrocks.config file

Original release notice: https://github.com/facebook/rocksdb/releases/tag/v8.3.3",unstable,True,False,2,kvrocks.conf,conf,2,2,4
4cd4ab75948dff1ea76e4f9e24f18633d55380e9,twice.mliu@gmail.com,2023-09-05 08:51:41+09:00,noreply@github.com,2023-09-05 08:51:41+09:00,Make output slice of Metadata::Decode available (#1738),unstable,True,False,2,redis_metadata.cc,cc,46,67,113
4cd4ab75948dff1ea76e4f9e24f18633d55380e9,twice.mliu@gmail.com,2023-09-05 08:51:41+09:00,noreply@github.com,2023-09-05 08:51:41+09:00,Make output slice of Metadata::Decode available (#1738),unstable,True,False,2,redis_metadata.h,h,14,8,22
acfc991745c4a09723595ba77e9f4313c0b98003,294843472@qq.com,2023-09-05 11:15:53+08:00,noreply@github.com,2023-09-05 11:15:53+08:00,"Fix bit commands error msg (#1739)

Signed-off-by: Jinze Wu <294843472@qq.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,cmd_bit.cc,cc,10,6,16
c791511c77c0e2bf659150dccfd76eefb6d64415,jiaming.xie7@gmail.com,2023-09-06 22:44:30+08:00,noreply@github.com,2023-09-06 23:44:30+09:00,"Add the support of LMPOP command (#1737)

Co-authored-by: mwish <1506118561@qq.com>
Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,2,cmd_list.cc,cc,79,0,79
c791511c77c0e2bf659150dccfd76eefb6d64415,jiaming.xie7@gmail.com,2023-09-06 22:44:30+08:00,noreply@github.com,2023-09-06 23:44:30+09:00,"Add the support of LMPOP command (#1737)

Co-authored-by: mwish <1506118561@qq.com>
Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,2,list_test.go,go,177,0,177
15b4d8f0ff92d9329b32cfe5703b80d87aea34d4,2725346379@qq.com,2023-09-07 00:12:59+08:00,noreply@github.com,2023-09-07 00:12:59+08:00,Add the client name and ipport to the slowlog output (#1740),unstable,True,False,8,redis_connection.cc,cc,1,1,2
15b4d8f0ff92d9329b32cfe5703b80d87aea34d4,2725346379@qq.com,2023-09-07 00:12:59+08:00,noreply@github.com,2023-09-07 00:12:59+08:00,Add the client name and ipport to the slowlog output (#1740),unstable,True,False,8,redis_connection.h,h,2,2,4
15b4d8f0ff92d9329b32cfe5703b80d87aea34d4,2725346379@qq.com,2023-09-07 00:12:59+08:00,noreply@github.com,2023-09-07 00:12:59+08:00,Add the client name and ipport to the slowlog output (#1740),unstable,True,False,8,server.cc,cc,5,1,6
15b4d8f0ff92d9329b32cfe5703b80d87aea34d4,2725346379@qq.com,2023-09-07 00:12:59+08:00,noreply@github.com,2023-09-07 00:12:59+08:00,Add the client name and ipport to the slowlog output (#1740),unstable,True,False,8,server.h,h,1,1,2
15b4d8f0ff92d9329b32cfe5703b80d87aea34d4,2725346379@qq.com,2023-09-07 00:12:59+08:00,noreply@github.com,2023-09-07 00:12:59+08:00,Add the client name and ipport to the slowlog output (#1740),unstable,True,False,8,log_collector.cc,cc,4,1,5
15b4d8f0ff92d9329b32cfe5703b80d87aea34d4,2725346379@qq.com,2023-09-07 00:12:59+08:00,noreply@github.com,2023-09-07 00:12:59+08:00,Add the client name and ipport to the slowlog output (#1740),unstable,True,False,8,log_collector.h,h,4,1,5
15b4d8f0ff92d9329b32cfe5703b80d87aea34d4,2725346379@qq.com,2023-09-07 00:12:59+08:00,noreply@github.com,2023-09-07 00:12:59+08:00,Add the client name and ipport to the slowlog output (#1740),unstable,True,False,8,scripting.cc,cc,1,1,2
15b4d8f0ff92d9329b32cfe5703b80d87aea34d4,2725346379@qq.com,2023-09-07 00:12:59+08:00,noreply@github.com,2023-09-07 00:12:59+08:00,Add the client name and ipport to the slowlog output (#1740),unstable,True,False,8,slowlog_test.go,go,11,0,11
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,cmd_list.cc,cc,2,2,4
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,commander.cc,cc,1,1,2
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,commander.h,h,2,2,4
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,cron.cc,cc,2,2,4
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,cron.h,h,2,2,4
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,task_runner.h,h,1,1,2
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,config.cc,cc,2,2,4
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,config.h,h,2,2,4
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,config_type.h,h,17,16,33
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,redis_connection.cc,cc,3,3,6
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,redis_connection.h,h,7,7,14
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,server.cc,cc,1,1,2
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,server.h,h,8,8,16
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,stats.cc,cc,1,1,2
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,stats.h,h,1,1,2
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,redis_db.cc,cc,2,2,4
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,redis_db.h,h,3,3,6
45d741aece58d6285c2e4b68be5aaaf2c5974afe,twice.mliu@gmail.com,2023-09-07 12:45:29+09:00,noreply@github.com,2023-09-07 12:45:29+09:00,Add missing const specifiers to methods (#1744),unstable,True,False,18,storage.h,h,8,8,16
e0965002589ce4295bdcca0c998c843efb598547,twice.mliu@gmail.com,2023-09-07 16:20:29+09:00,noreply@github.com,2023-09-07 15:20:29+08:00,"Remove redundant string contruction from Slice (#1745)

We remove lots of redundant string contruction from Slice to improve efficiency.",unstable,True,False,7,redis_slot.cc,cc,2,2,4
e0965002589ce4295bdcca0c998c843efb598547,twice.mliu@gmail.com,2023-09-07 16:20:29+09:00,noreply@github.com,2023-09-07 15:20:29+08:00,"Remove redundant string contruction from Slice (#1745)

We remove lots of redundant string contruction from Slice to improve efficiency.",unstable,True,False,7,batch_extractor.cc,cc,2,2,4
e0965002589ce4295bdcca0c998c843efb598547,twice.mliu@gmail.com,2023-09-07 16:20:29+09:00,noreply@github.com,2023-09-07 15:20:29+08:00,"Remove redundant string contruction from Slice (#1745)

We remove lots of redundant string contruction from Slice to improve efficiency.",unstable,True,False,7,compact_filter.cc,cc,3,6,9
e0965002589ce4295bdcca0c998c843efb598547,twice.mliu@gmail.com,2023-09-07 16:20:29+09:00,noreply@github.com,2023-09-07 15:20:29+08:00,"Remove redundant string contruction from Slice (#1745)

We remove lots of redundant string contruction from Slice to improve efficiency.",unstable,True,False,7,redis_db.cc,cc,3,5,8
e0965002589ce4295bdcca0c998c843efb598547,twice.mliu@gmail.com,2023-09-07 16:20:29+09:00,noreply@github.com,2023-09-07 15:20:29+08:00,"Remove redundant string contruction from Slice (#1745)

We remove lots of redundant string contruction from Slice to improve efficiency.",unstable,True,False,7,redis_metadata.cc,cc,1,1,2
e0965002589ce4295bdcca0c998c843efb598547,twice.mliu@gmail.com,2023-09-07 16:20:29+09:00,noreply@github.com,2023-09-07 15:20:29+08:00,"Remove redundant string contruction from Slice (#1745)

We remove lots of redundant string contruction from Slice to improve efficiency.",unstable,True,False,7,storage.cc,cc,1,1,2
e0965002589ce4295bdcca0c998c843efb598547,twice.mliu@gmail.com,2023-09-07 16:20:29+09:00,noreply@github.com,2023-09-07 15:20:29+08:00,"Remove redundant string contruction from Slice (#1745)

We remove lots of redundant string contruction from Slice to improve efficiency.",unstable,True,False,7,parser.cc,cc,1,1,2
59012ac37389d1b4aa55d7382be7db800c4cdf84,294843472@qq.com,2023-09-07 16:30:28+08:00,noreply@github.com,2023-09-07 16:30:28+08:00,Fix `GETEX` not working correctly on `Redis::Bitmap` (#1743),unstable,True,False,2,cmd_string.cc,cc,8,0,8
59012ac37389d1b4aa55d7382be7db800c4cdf84,294843472@qq.com,2023-09-07 16:30:28+08:00,noreply@github.com,2023-09-07 16:30:28+08:00,Fix `GETEX` not working correctly on `Redis::Bitmap` (#1743),unstable,True,False,2,bitmap_test.go,go,47,0,47
1e9a609724e244972f35a7f1e01edca39bb6d1cc,binloveplay1314@qq.com,2023-09-07 22:41:17+08:00,noreply@github.com,2023-09-07 23:41:17+09:00,Allow runing RANDOMKEY in lua script (#1746),unstable,True,False,1,cmd_server.cc,cc,1,1,2
166f9a7c54a1d6aa0d402bf85fd41c3139badc67,294843472@qq.com,2023-09-09 17:09:11+08:00,noreply@github.com,2023-09-09 17:09:11+08:00,"Fix `TYPE` command with bloom filter (#1747)

When #1699 introduced BloomFilter, RedisTypeNames was not modified
at the same time, causing the TYPE command return nothing in bf key.
Now it will return `MBbloom--` (keep names consistent with Redis).

Signed-off-by: Jinze Wu <294843472@qq.com>",unstable,True,False,3,cmd_key.cc,cc,1,0,1
166f9a7c54a1d6aa0d402bf85fd41c3139badc67,294843472@qq.com,2023-09-09 17:09:11+08:00,noreply@github.com,2023-09-09 17:09:11+08:00,"Fix `TYPE` command with bloom filter (#1747)

When #1699 introduced BloomFilter, RedisTypeNames was not modified
at the same time, causing the TYPE command return nothing in bf key.
Now it will return `MBbloom--` (keep names consistent with Redis).

Signed-off-by: Jinze Wu <294843472@qq.com>",unstable,True,False,3,redis_metadata.h,h,4,2,6
166f9a7c54a1d6aa0d402bf85fd41c3139badc67,294843472@qq.com,2023-09-09 17:09:11+08:00,noreply@github.com,2023-09-09 17:09:11+08:00,"Fix `TYPE` command with bloom filter (#1747)

When #1699 introduced BloomFilter, RedisTypeNames was not modified
at the same time, causing the TYPE command return nothing in bf key.
Now it will return `MBbloom--` (keep names consistent with Redis).

Signed-off-by: Jinze Wu <294843472@qq.com>",unstable,True,False,3,bloom_test.go,go,6,0,6
c30bcec52f9d50ebfa0b76745d3b1a3b7c70c511,twice.mliu@gmail.com,2023-09-10 08:41:02+09:00,noreply@github.com,2023-09-10 08:41:02+09:00,Add nodiscard attribute to methods of Storage (#1750),unstable,True,False,5,cmd_script.cc,cc,7,3,10
c30bcec52f9d50ebfa0b76745d3b1a3b7c70c511,twice.mliu@gmail.com,2023-09-10 08:41:02+09:00,noreply@github.com,2023-09-10 08:41:02+09:00,Add nodiscard attribute to methods of Storage (#1750),unstable,True,False,5,server.cc,cc,9,3,12
c30bcec52f9d50ebfa0b76745d3b1a3b7c70c511,twice.mliu@gmail.com,2023-09-10 08:41:02+09:00,noreply@github.com,2023-09-10 08:41:02+09:00,Add nodiscard attribute to methods of Storage (#1750),unstable,True,False,5,server.h,h,1,1,2
c30bcec52f9d50ebfa0b76745d3b1a3b7c70c511,twice.mliu@gmail.com,2023-09-10 08:41:02+09:00,noreply@github.com,2023-09-10 08:41:02+09:00,Add nodiscard attribute to methods of Storage (#1750),unstable,True,False,5,compaction_checker.cc,cc,4,1,5
c30bcec52f9d50ebfa0b76745d3b1a3b7c70c511,twice.mliu@gmail.com,2023-09-10 08:41:02+09:00,noreply@github.com,2023-09-10 08:41:02+09:00,Add nodiscard attribute to methods of Storage (#1750),unstable,True,False,5,storage.h,h,10,9,19
b9c7359eb12c4f08ccd8547cd3132173405faf7d,twice.mliu@gmail.com,2023-09-10 16:58:14+09:00,noreply@github.com,2023-09-10 16:58:14+09:00,Add nodiscard to Metadata::Decode (#1751),unstable,True,False,10,slot_migrate.cc,cc,6,2,8
b9c7359eb12c4f08ccd8547cd3132173405faf7d,twice.mliu@gmail.com,2023-09-10 16:58:14+09:00,noreply@github.com,2023-09-10 16:58:14+09:00,Add nodiscard to Metadata::Decode (#1751),unstable,True,False,10,db_util.h,h,4,3,7
b9c7359eb12c4f08ccd8547cd3132173405faf7d,twice.mliu@gmail.com,2023-09-10 16:58:14+09:00,noreply@github.com,2023-09-10 16:58:14+09:00,Add nodiscard to Metadata::Decode (#1751),unstable,True,False,10,batch_extractor.cc,cc,2,1,3
b9c7359eb12c4f08ccd8547cd3132173405faf7d,twice.mliu@gmail.com,2023-09-10 16:58:14+09:00,noreply@github.com,2023-09-10 16:58:14+09:00,Add nodiscard to Metadata::Decode (#1751),unstable,True,False,10,redis_db.cc,cc,35,16,51
b9c7359eb12c4f08ccd8547cd3132173405faf7d,twice.mliu@gmail.com,2023-09-10 16:58:14+09:00,noreply@github.com,2023-09-10 16:58:14+09:00,Add nodiscard to Metadata::Decode (#1751),unstable,True,False,10,redis_db.h,h,3,2,5
b9c7359eb12c4f08ccd8547cd3132173405faf7d,twice.mliu@gmail.com,2023-09-10 16:58:14+09:00,noreply@github.com,2023-09-10 16:58:14+09:00,Add nodiscard to Metadata::Decode (#1751),unstable,True,False,10,redis_metadata.h,h,2,2,4
b9c7359eb12c4f08ccd8547cd3132173405faf7d,twice.mliu@gmail.com,2023-09-10 16:58:14+09:00,noreply@github.com,2023-09-10 16:58:14+09:00,Add nodiscard to Metadata::Decode (#1751),unstable,True,False,10,redis_bitmap.cc,cc,6,4,10
b9c7359eb12c4f08ccd8547cd3132173405faf7d,twice.mliu@gmail.com,2023-09-10 16:58:14+09:00,noreply@github.com,2023-09-10 16:58:14+09:00,Add nodiscard to Metadata::Decode (#1751),unstable,True,False,10,redis_string.cc,cc,8,2,10
b9c7359eb12c4f08ccd8547cd3132173405faf7d,twice.mliu@gmail.com,2023-09-10 16:58:14+09:00,noreply@github.com,2023-09-10 16:58:14+09:00,Add nodiscard to Metadata::Decode (#1751),unstable,True,False,10,metadata_test.cc,cc,6,6,12
b9c7359eb12c4f08ccd8547cd3132173405faf7d,twice.mliu@gmail.com,2023-09-10 16:58:14+09:00,noreply@github.com,2023-09-10 16:58:14+09:00,Add nodiscard to Metadata::Decode (#1751),unstable,True,False,10,parser.cc,cc,6,2,8
8ec8e8f51bcca1c09c7fda9f72985e5543d373e1,binloveplay1314@qq.com,2023-09-11 13:29:34+08:00,noreply@github.com,2023-09-11 13:29:34+08:00,"Fix GEORADIUSBYMEMBER STORE should return the elements number (#1749)

When using the STORE variant, we should return the number of
elements in the resulting set.

```
127.0.0.1:6666> geoadd src 13 14 Shenzhen 25 30 Guangzhou
(integer) 2
127.0.0.1:6666> georadiusbymember src Shenzhen 5000 km store dst
1) ""Shenzhen""
2) ""Guangzhou""

127.0.0.1:6379> geoadd src 13 14 Shenzhen 25 30 Guangzhou
(integer) 2
127.0.0.1:6379> georadiusbymember src Shenzhen 5000 km store dst
(integer) 2
```",unstable,True,False,2,cmd_geo.cc,cc,6,1,7
8ec8e8f51bcca1c09c7fda9f72985e5543d373e1,binloveplay1314@qq.com,2023-09-11 13:29:34+08:00,noreply@github.com,2023-09-11 13:29:34+08:00,"Fix GEORADIUSBYMEMBER STORE should return the elements number (#1749)

When using the STORE variant, we should return the number of
elements in the resulting set.

```
127.0.0.1:6666> geoadd src 13 14 Shenzhen 25 30 Guangzhou
(integer) 2
127.0.0.1:6666> georadiusbymember src Shenzhen 5000 km store dst
1) ""Shenzhen""
2) ""Guangzhou""

127.0.0.1:6379> geoadd src 13 14 Shenzhen 25 30 Guangzhou
(integer) 2
127.0.0.1:6379> georadiusbymember src Shenzhen 5000 km store dst
(integer) 2
```",unstable,True,False,2,geo_test.go,go,11,2,13
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,cluster.cc,cc,8,2,10
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,cmd_key.cc,cc,2,1,3
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,cmd_server.cc,cc,11,3,14
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,cmd_string.cc,cc,5,2,7
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,server.cc,cc,5,1,6
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,redis_db.cc,cc,2,3,5
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,redis_db.h,h,24,23,47
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,redis_geo.cc,cc,2,1,3
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,redis_string.cc,cc,2,1,3
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,compact_test.cc,cc,2,2,4
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,disk_test.cc,cc,10,10,20
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,metadata_test.cc,cc,4,4,8
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,bitmap_test.cc,cc,4,4,8
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,bloom_chain_test.cc,cc,3,3,6
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,geo_test.cc,cc,6,6,12
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,hash_test.cc,cc,11,11,22
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,list_test.cc,cc,24,24,48
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,set_test.cc,cc,25,25,50
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,sortedint_test.cc,cc,2,2,4
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,stream_test.cc,cc,2,2,4
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,string_test.cc,cc,20,20,40
2ecaef221c1300f14d0a8f03a51ddd5f1f48766c,twice.mliu@gmail.com,2023-09-11 17:13:23+09:00,noreply@github.com,2023-09-11 17:13:23+09:00,"Add nodiscard to methods of redis::Database (#1752)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,22,zset_test.cc,cc,10,10,20
f3d796dd4a25de4e8a0e3bb14bbd1043aed5c9c6,twice.mliu@gmail.com,2023-09-12 13:42:27+09:00,noreply@github.com,2023-09-12 13:42:27+09:00,Support TLS for replication (#1630),unstable,True,False,13,kvrocks.conf,conf,7,0,7
f3d796dd4a25de4e8a0e3bb14bbd1043aed5c9c6,twice.mliu@gmail.com,2023-09-12 13:42:27+09:00,noreply@github.com,2023-09-12 13:42:27+09:00,Support TLS for replication (#1630),unstable,True,False,13,replication.cc,cc,57,17,74
f3d796dd4a25de4e8a0e3bb14bbd1043aed5c9c6,twice.mliu@gmail.com,2023-09-12 13:42:27+09:00,noreply@github.com,2023-09-12 13:42:27+09:00,Support TLS for replication (#1630),unstable,True,False,13,replication.h,h,4,3,7
f3d796dd4a25de4e8a0e3bb14bbd1043aed5c9c6,twice.mliu@gmail.com,2023-09-12 13:42:27+09:00,noreply@github.com,2023-09-12 13:42:27+09:00,Support TLS for replication (#1630),unstable,True,False,13,cmd_replication.cc,cc,5,5,10
f3d796dd4a25de4e8a0e3bb14bbd1043aed5c9c6,twice.mliu@gmail.com,2023-09-12 13:42:27+09:00,noreply@github.com,2023-09-12 13:42:27+09:00,Support TLS for replication (#1630),unstable,True,False,13,io_util.cc,cc,123,10,133
f3d796dd4a25de4e8a0e3bb14bbd1043aed5c9c6,twice.mliu@gmail.com,2023-09-12 13:42:27+09:00,noreply@github.com,2023-09-12 13:42:27+09:00,Support TLS for replication (#1630),unstable,True,False,13,io_util.h,h,14,0,14
f3d796dd4a25de4e8a0e3bb14bbd1043aed5c9c6,twice.mliu@gmail.com,2023-09-12 13:42:27+09:00,noreply@github.com,2023-09-12 13:42:27+09:00,Support TLS for replication (#1630),unstable,True,False,13,config.cc,cc,1,0,1
f3d796dd4a25de4e8a0e3bb14bbd1043aed5c9c6,twice.mliu@gmail.com,2023-09-12 13:42:27+09:00,noreply@github.com,2023-09-12 13:42:27+09:00,Support TLS for replication (#1630),unstable,True,False,13,config.h,h,3,0,3
f3d796dd4a25de4e8a0e3bb14bbd1043aed5c9c6,twice.mliu@gmail.com,2023-09-12 13:42:27+09:00,noreply@github.com,2023-09-12 13:42:27+09:00,Support TLS for replication (#1630),unstable,True,False,13,main.cc,cc,1,1,2
f3d796dd4a25de4e8a0e3bb14bbd1043aed5c9c6,twice.mliu@gmail.com,2023-09-12 13:42:27+09:00,noreply@github.com,2023-09-12 13:42:27+09:00,Support TLS for replication (#1630),unstable,True,False,13,server.cc,cc,1,1,2
f3d796dd4a25de4e8a0e3bb14bbd1043aed5c9c6,twice.mliu@gmail.com,2023-09-12 13:42:27+09:00,noreply@github.com,2023-09-12 13:42:27+09:00,Support TLS for replication (#1630),unstable,True,False,13,worker.cc,cc,2,2,4
f3d796dd4a25de4e8a0e3bb14bbd1043aed5c9c6,twice.mliu@gmail.com,2023-09-12 13:42:27+09:00,noreply@github.com,2023-09-12 13:42:27+09:00,Support TLS for replication (#1630),unstable,True,False,13,tls_test.go,go,57,0,57
f3d796dd4a25de4e8a0e3bb14bbd1043aed5c9c6,twice.mliu@gmail.com,2023-09-12 13:42:27+09:00,noreply@github.com,2023-09-12 13:42:27+09:00,Support TLS for replication (#1630),unstable,True,False,13,server.go,go,4,0,4
11a01401d2695ef12e3931fec95465a2f5207337,zncleon@gmail.com,2023-09-12 13:57:36+08:00,noreply@github.com,2023-09-12 14:57:36+09:00,"Add the support of SCALING for bloom filter (#1721)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <1506118561@qq.com>",unstable,True,False,5,redis_metadata.h,h,2,3,5
11a01401d2695ef12e3931fec95465a2f5207337,zncleon@gmail.com,2023-09-12 13:57:36+08:00,noreply@github.com,2023-09-12 14:57:36+09:00,"Add the support of SCALING for bloom filter (#1721)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <1506118561@qq.com>",unstable,True,False,5,bloom_filter.h,h,3,1,4
11a01401d2695ef12e3931fec95465a2f5207337,zncleon@gmail.com,2023-09-12 13:57:36+08:00,noreply@github.com,2023-09-12 14:57:36+09:00,"Add the support of SCALING for bloom filter (#1721)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <1506118561@qq.com>",unstable,True,False,5,redis_bloom_chain.cc,cc,41,19,60
11a01401d2695ef12e3931fec95465a2f5207337,zncleon@gmail.com,2023-09-12 13:57:36+08:00,noreply@github.com,2023-09-12 14:57:36+09:00,"Add the support of SCALING for bloom filter (#1721)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <1506118561@qq.com>",unstable,True,False,5,redis_bloom_chain.h,h,3,1,4
11a01401d2695ef12e3931fec95465a2f5207337,zncleon@gmail.com,2023-09-12 13:57:36+08:00,noreply@github.com,2023-09-12 14:57:36+09:00,"Add the support of SCALING for bloom filter (#1721)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <1506118561@qq.com>",unstable,True,False,5,bloom_test.go,go,45,0,45
4aa95fa029c721fc6c9ff9346658612fe980fb36,binloveplay1314@qq.com,2023-09-12 19:57:59+08:00,noreply@github.com,2023-09-12 19:57:59+08:00,"Fix GEO store commands not removing dst key when result set is empty (#1755)

If dst exists, when using the store variant, we need to
delete the dst key when the result set is empty, like
we are overwriting the dst key with an empty result set.

This change covers the following commands and scenarios:
- GEOSEARCHSTORE FROMMEMBER against non-existing src key.
- GEOSEARCHSTORE FROMLONLAT against non-existing src key.
- GEOSEARCHSTORE FROMLONLAT the search result set is empty.
- GEORADIUS STORE Against non-existing src key.
- GEORADIUS STORE search result set is empty.
- GEORADIUSBYMEMBER STORE against non-existing src key.
- GEORADIUSBYMEMBER STORE search result set is empty.

While writing the test cases, we still have a issue, FROMMEMBER
against non-existing src key member:
```
127.0.0.1:6666> geoadd src 10 10 Shenzhen
(integer) 1
127.0.0.1:6666> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen_2 BYBOX 88 88 m
(integer) 0

127.0.0.1:6379> GEOADD src 10 10 Shenzhen
(integer) 1
127.0.0.1:6379> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen_2 BYBOX 88 88 m
(error) ERR could not decode requested zset member
```

Redis will return a specific error if the member does not exist,
but Kvrocks currently handles it as if the src key does not exist,
this will be addressed in a future PR since it require more works.",unstable,True,False,2,redis_geo.cc,cc,15,0,15
4aa95fa029c721fc6c9ff9346658612fe980fb36,binloveplay1314@qq.com,2023-09-12 19:57:59+08:00,noreply@github.com,2023-09-12 19:57:59+08:00,"Fix GEO store commands not removing dst key when result set is empty (#1755)

If dst exists, when using the store variant, we need to
delete the dst key when the result set is empty, like
we are overwriting the dst key with an empty result set.

This change covers the following commands and scenarios:
- GEOSEARCHSTORE FROMMEMBER against non-existing src key.
- GEOSEARCHSTORE FROMLONLAT against non-existing src key.
- GEOSEARCHSTORE FROMLONLAT the search result set is empty.
- GEORADIUS STORE Against non-existing src key.
- GEORADIUS STORE search result set is empty.
- GEORADIUSBYMEMBER STORE against non-existing src key.
- GEORADIUSBYMEMBER STORE search result set is empty.

While writing the test cases, we still have a issue, FROMMEMBER
against non-existing src key member:
```
127.0.0.1:6666> geoadd src 10 10 Shenzhen
(integer) 1
127.0.0.1:6666> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen_2 BYBOX 88 88 m
(integer) 0

127.0.0.1:6379> GEOADD src 10 10 Shenzhen
(integer) 1
127.0.0.1:6379> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen_2 BYBOX 88 88 m
(error) ERR could not decode requested zset member
```

Redis will return a specific error if the member does not exist,
but Kvrocks currently handles it as if the src key does not exist,
this will be addressed in a future PR since it require more works.",unstable,True,False,2,geo_test.go,go,50,0,50
5c9137c56703528bb164d1cc0f9bbcd5d0079ec1,twice.mliu@gmail.com,2023-09-13 14:37:27+09:00,noreply@github.com,2023-09-13 14:37:27+09:00,Add BlockingCommander to refactor all blocking commands (#1757),unstable,True,False,3,blocking_commander.h,h,127,0,127
5c9137c56703528bb164d1cc0f9bbcd5d0079ec1,twice.mliu@gmail.com,2023-09-13 14:37:27+09:00,noreply@github.com,2023-09-13 14:37:27+09:00,Add BlockingCommander to refactor all blocking commands (#1757),unstable,True,False,3,cmd_list.cc,cc,27,131,158
5c9137c56703528bb164d1cc0f9bbcd5d0079ec1,twice.mliu@gmail.com,2023-09-13 14:37:27+09:00,noreply@github.com,2023-09-13 14:37:27+09:00,Add BlockingCommander to refactor all blocking commands (#1757),unstable,True,False,3,cmd_zset.cc,cc,35,138,173
83aaa7531fdfdd874a936287fe3f466b184c9e41,zncleon@gmail.com,2023-09-14 10:48:36+08:00,noreply@github.com,2023-09-14 10:48:36+08:00,"Add the support of the BF.MEXISTS and BF.CARD Command (#1756)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,cmd_bloom_filter.cc,cc,44,2,46
83aaa7531fdfdd874a936287fe3f466b184c9e41,zncleon@gmail.com,2023-09-14 10:48:36+08:00,noreply@github.com,2023-09-14 10:48:36+08:00,"Add the support of the BF.MEXISTS and BF.CARD Command (#1756)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,redis_reply.h,h,9,0,9
83aaa7531fdfdd874a936287fe3f466b184c9e41,zncleon@gmail.com,2023-09-14 10:48:36+08:00,noreply@github.com,2023-09-14 10:48:36+08:00,"Add the support of the BF.MEXISTS and BF.CARD Command (#1756)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,redis_bloom_chain.cc,cc,31,21,52
83aaa7531fdfdd874a936287fe3f466b184c9e41,zncleon@gmail.com,2023-09-14 10:48:36+08:00,noreply@github.com,2023-09-14 10:48:36+08:00,"Add the support of the BF.MEXISTS and BF.CARD Command (#1756)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,redis_bloom_chain.h,h,10,3,13
83aaa7531fdfdd874a936287fe3f466b184c9e41,zncleon@gmail.com,2023-09-14 10:48:36+08:00,noreply@github.com,2023-09-14 10:48:36+08:00,"Add the support of the BF.MEXISTS and BF.CARD Command (#1756)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,bloom_chain_test.cc,cc,3,3,6
83aaa7531fdfdd874a936287fe3f466b184c9e41,zncleon@gmail.com,2023-09-14 10:48:36+08:00,noreply@github.com,2023-09-14 10:48:36+08:00,"Add the support of the BF.MEXISTS and BF.CARD Command (#1756)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,bloom_test.go,go,31,1,32
9f71709e95ec4f3415c1a626eb00fdc08cd68d33,294843472@qq.com,2023-09-17 10:35:19+08:00,noreply@github.com,2023-09-17 10:35:19+08:00,Fix pointer-bool-conversion warning in `GeoHashHelper::BoundingBox` (#1760),unstable,True,False,1,geohash.cc,cc,1,1,2
21984b32d194fad4aee3bb374d850c35257d8e66,twice.mliu@gmail.com,2023-09-17 22:39:53+09:00,noreply@github.com,2023-09-17 22:39:53+09:00,Use SSL_sendfile in SockSendFile while available (#1762),unstable,True,False,1,io_util.cc,cc,4,0,4
d42a89fb73b8e89d11ed31b9d0acd71684806562,twice.mliu@gmail.com,2023-09-18 15:51:27+09:00,noreply@github.com,2023-09-18 15:51:27+09:00,"Make BlockSplitBloomFilter a view (#1764)

Co-authored-by: mwish <1506118561@qq.com>",unstable,True,False,9,CMakeLists.txt,txt,2,0,2
d42a89fb73b8e89d11ed31b9d0acd71684806562,twice.mliu@gmail.com,2023-09-18 15:51:27+09:00,noreply@github.com,2023-09-18 15:51:27+09:00,"Make BlockSplitBloomFilter a view (#1764)

Co-authored-by: mwish <1506118561@qq.com>",unstable,True,False,9,NOTICE,None,4,1,5
d42a89fb73b8e89d11ed31b9d0acd71684806562,twice.mliu@gmail.com,2023-09-18 15:51:27+09:00,noreply@github.com,2023-09-18 15:51:27+09:00,"Make BlockSplitBloomFilter a view (#1764)

Co-authored-by: mwish <1506118561@qq.com>",unstable,True,False,9,span.cmake,cmake,27,0,27
d42a89fb73b8e89d11ed31b9d0acd71684806562,twice.mliu@gmail.com,2023-09-18 15:51:27+09:00,noreply@github.com,2023-09-18 15:51:27+09:00,"Make BlockSplitBloomFilter a view (#1764)

Co-authored-by: mwish <1506118561@qq.com>",unstable,True,False,9,LICENSE-span-lite.txt,txt,23,0,23
d42a89fb73b8e89d11ed31b9d0acd71684806562,twice.mliu@gmail.com,2023-09-18 15:51:27+09:00,noreply@github.com,2023-09-18 15:51:27+09:00,"Make BlockSplitBloomFilter a view (#1764)

Co-authored-by: mwish <1506118561@qq.com>",unstable,True,False,9,LICENSE-xxhash.txt,txt,26,0,26
d42a89fb73b8e89d11ed31b9d0acd71684806562,twice.mliu@gmail.com,2023-09-18 15:51:27+09:00,noreply@github.com,2023-09-18 15:51:27+09:00,"Make BlockSplitBloomFilter a view (#1764)

Co-authored-by: mwish <1506118561@qq.com>",unstable,True,False,9,bloom_filter.cc,cc,11,19,30
d42a89fb73b8e89d11ed31b9d0acd71684806562,twice.mliu@gmail.com,2023-09-18 15:51:27+09:00,noreply@github.com,2023-09-18 15:51:27+09:00,"Make BlockSplitBloomFilter a view (#1764)

Co-authored-by: mwish <1506118561@qq.com>",unstable,True,False,9,bloom_filter.h,h,41,39,80
d42a89fb73b8e89d11ed31b9d0acd71684806562,twice.mliu@gmail.com,2023-09-18 15:51:27+09:00,noreply@github.com,2023-09-18 15:51:27+09:00,"Make BlockSplitBloomFilter a view (#1764)

Co-authored-by: mwish <1506118561@qq.com>",unstable,True,False,9,redis_bloom_chain.cc,cc,6,10,16
d42a89fb73b8e89d11ed31b9d0acd71684806562,twice.mliu@gmail.com,2023-09-18 15:51:27+09:00,noreply@github.com,2023-09-18 15:51:27+09:00,"Make BlockSplitBloomFilter a view (#1764)

Co-authored-by: mwish <1506118561@qq.com>",unstable,True,False,9,bloom_filter_test.cc,cc,7,14,21
84a628991ea3d5d135a707c0145db2d5076c6fa7,binloveplay1314@qq.com,2023-09-18 22:37:29+08:00,noreply@github.com,2023-09-18 22:37:29+08:00,"GEO FROMMEMBER returns error when member does not exist (#1766)

Redis will return a specific error if the member does not exist,
but Kvrocks currently handles it as if the src key does not exist:
```
127.0.0.1:6666> geoadd src 10 10 Shenzhen
(integer) 1
127.0.0.1:6666> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen_2 BYBOX 88 88 m
(integer) 0

127.0.0.1:6379> GEOADD src 10 10 Shenzhen
(integer) 1
127.0.0.1:6379> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen_2 BYBOX 88 88 m
(error) ERR could not decode requested zset member
```

Now we will return an error, the error message is the same
as Redis: could not decode requested zset member
```
127.0.0.1:6666> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen_2 BYBOX 88 88 m
(error) ERR Invalid argument: could not decode requested zset member

127.0.0.1:6666> GEORADIUSBYMEMBER src Shenzhen_2 20 M STORE dst
(error) ERR Invalid argument: could not decode requested zset member
```",unstable,True,False,2,redis_geo.cc,cc,1,1,2
84a628991ea3d5d135a707c0145db2d5076c6fa7,binloveplay1314@qq.com,2023-09-18 22:37:29+08:00,noreply@github.com,2023-09-18 22:37:29+08:00,"GEO FROMMEMBER returns error when member does not exist (#1766)

Redis will return a specific error if the member does not exist,
but Kvrocks currently handles it as if the src key does not exist:
```
127.0.0.1:6666> geoadd src 10 10 Shenzhen
(integer) 1
127.0.0.1:6666> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen_2 BYBOX 88 88 m
(integer) 0

127.0.0.1:6379> GEOADD src 10 10 Shenzhen
(integer) 1
127.0.0.1:6379> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen_2 BYBOX 88 88 m
(error) ERR could not decode requested zset member
```

Now we will return an error, the error message is the same
as Redis: could not decode requested zset member
```
127.0.0.1:6666> GEOSEARCHSTORE dst src FROMMEMBER Shenzhen_2 BYBOX 88 88 m
(error) ERR Invalid argument: could not decode requested zset member

127.0.0.1:6666> GEORADIUSBYMEMBER src Shenzhen_2 20 M STORE dst
(error) ERR Invalid argument: could not decode requested zset member
```",unstable,True,False,2,geo_test.go,go,24,0,24
3092081a4857d681173a752a15b5b5b95e68758a,zncleon@gmail.com,2023-09-19 14:42:08+08:00,noreply@github.com,2023-09-19 15:42:08+09:00,"Add the support of the BF.MADD command (#1758)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,cmd_bloom_filter.cc,cc,59,8,67
3092081a4857d681173a752a15b5b5b95e68758a,zncleon@gmail.com,2023-09-19 14:42:08+08:00,noreply@github.com,2023-09-19 15:42:08+09:00,"Add the support of the BF.MADD command (#1758)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,redis_reply.h,h,0,9,9
3092081a4857d681173a752a15b5b5b95e68758a,zncleon@gmail.com,2023-09-19 14:42:08+08:00,noreply@github.com,2023-09-19 15:42:08+09:00,"Add the support of the BF.MADD command (#1758)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,redis_bloom_chain.cc,cc,96,69,165
3092081a4857d681173a752a15b5b5b95e68758a,zncleon@gmail.com,2023-09-19 14:42:08+08:00,noreply@github.com,2023-09-19 15:42:08+09:00,"Add the support of the BF.MADD command (#1758)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,redis_bloom_chain.h,h,16,9,25
3092081a4857d681173a752a15b5b5b95e68758a,zncleon@gmail.com,2023-09-19 14:42:08+08:00,noreply@github.com,2023-09-19 15:42:08+09:00,"Add the support of the BF.MADD command (#1758)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,bloom_chain_test.cc,cc,9,8,17
3092081a4857d681173a752a15b5b5b95e68758a,zncleon@gmail.com,2023-09-19 14:42:08+08:00,noreply@github.com,2023-09-19 15:42:08+09:00,"Add the support of the BF.MADD command (#1758)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,bloom_test.go,go,94,7,101
dda1407766a613a6821fc26abd3e10abddf251a9,twice.mliu@gmail.com,2023-09-20 20:23:34+09:00,noreply@github.com,2023-09-20 19:23:34+08:00,Fix TLS connection for sendAuth in replication (#1769),unstable,True,False,1,replication.cc,cc,2,2,4
49c6248584f5bb23cb655960901ad8bb3910980b,hulk.website@gmail.com,2023-09-20 22:53:27+08:00,noreply@github.com,2023-09-20 22:53:27+08:00,Fix missing return value receiver when using slices.Compact (#1771),unstable,True,False,1,scan_test.go,go,9,9,18
888265d84fe27cb47f6c0f9732c4738364c9908e,xiaofan8421@gmail.com,2023-09-21 14:51:50+08:00,noreply@github.com,2023-09-21 14:51:50+08:00,Fix wrong replica's port number(=0) if the listening port is not set (#1763),unstable,True,False,2,redis_connection.h,h,2,1,3
888265d84fe27cb47f6c0f9732c4738364c9908e,xiaofan8421@gmail.com,2023-09-21 14:51:50+08:00,noreply@github.com,2023-09-21 14:51:50+08:00,Fix wrong replica's port number(=0) if the listening port is not set (#1763),unstable,True,False,2,server.cc,cc,1,1,2
86abc210149890c5bfcfaccecbd87bd4c19d5de6,binloveplay1314@qq.com,2023-09-21 16:05:38+08:00,noreply@github.com,2023-09-21 16:05:38+08:00,"Allow create-cluster to be run from other dirs, not just its own dir (#1773)

The current harcode directory causes us to only run create-cluster
in the create-cluster directory. This PR makes it possible to run
create-cluster from any dir, not just its own dir.",unstable,True,False,1,create-cluster,None,4,2,6
723829ff2ba3a65683296e3a50954126763ec00b,zncleon@gmail.com,2023-09-22 15:58:20+08:00,noreply@github.com,2023-09-22 16:58:20+09:00,Add the support of the BF.INSERT command (#1768),unstable,True,False,4,cmd_bloom_filter.cc,cc,125,11,136
723829ff2ba3a65683296e3a50954126763ec00b,zncleon@gmail.com,2023-09-22 15:58:20+08:00,noreply@github.com,2023-09-22 16:58:20+09:00,Add the support of the BF.INSERT command (#1768),unstable,True,False,4,redis_bloom_chain.cc,cc,16,7,23
723829ff2ba3a65683296e3a50954126763ec00b,zncleon@gmail.com,2023-09-22 15:58:20+08:00,noreply@github.com,2023-09-22 16:58:20+09:00,Add the support of the BF.INSERT command (#1768),unstable,True,False,4,redis_bloom_chain.h,h,15,5,20
723829ff2ba3a65683296e3a50954126763ec00b,zncleon@gmail.com,2023-09-22 15:58:20+08:00,noreply@github.com,2023-09-22 16:58:20+09:00,Add the support of the BF.INSERT command (#1768),unstable,True,False,4,bloom_test.go,go,86,8,94
711e41b688e90c3b405207f897b49249057650bd,jiaming.xie7@gmail.com,2023-09-22 20:46:02+08:00,noreply@github.com,2023-09-22 21:46:02+09:00,Add the support of the BLMPOP command (#1774),unstable,True,False,3,cmd_list.cc,cc,124,0,124
711e41b688e90c3b405207f897b49249057650bd,jiaming.xie7@gmail.com,2023-09-22 20:46:02+08:00,noreply@github.com,2023-09-22 21:46:02+09:00,Add the support of the BLMPOP command (#1774),unstable,True,False,3,list_test.go,go,305,0,305
711e41b688e90c3b405207f897b49249057650bd,jiaming.xie7@gmail.com,2023-09-22 20:46:02+08:00,noreply@github.com,2023-09-22 21:46:02+09:00,Add the support of the BLMPOP command (#1774),unstable,True,False,3,tcp_client.go,go,15,0,15
2f2d80f30051019d06f39b76d53c263fbe711e01,twice.mliu@gmail.com,2023-09-26 10:23:28+09:00,noreply@github.com,2023-09-26 10:23:28+09:00,Skip TLS replica test until fixed (#1780),unstable,True,False,1,tls_test.go,go,2,0,2
493c6d0fa325fd596c31708fcb9a2070254c730d,twice.mliu@gmail.com,2023-09-26 11:50:25+09:00,noreply@github.com,2023-09-25 21:50:25-05:00,"Fix no binary directory error of xxhash in CMake (#1779)

`xxhash_BINARY_DIR` is the right variable instead of `xxhash_BUILD_DIR`.

Close #1778.",unstable,True,False,1,xxhash.cmake,cmake,1,1,2
e0eead5148c0c0ac416eb9f6a587d0abdc9eb755,twice.mliu@gmail.com,2023-09-26 17:01:56+09:00,noreply@github.com,2023-09-26 17:01:56+09:00,"Restore the GCC TSAN test in CI (#1782)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,kvrocks.yaml,yaml,6,7,13
7f0c5156493dc3601bbc6f2157f9fa1d8462ea51,hulk.website@gmail.com,2023-09-26 20:48:24+08:00,noreply@github.com,2023-09-26 21:48:24+09:00,Fix should listen on 0.0.0.0 in docker image (#1784),unstable,True,False,1,Dockerfile,None,2,2,4
72fb0a41b6e26dc173877ad91a0c6131644a5d90,twice.mliu@gmail.com,2023-09-27 14:43:58+09:00,noreply@github.com,2023-09-27 14:43:58+09:00,Update controller URL in README.md (#1785),unstable,True,False,2,.asf.yaml,yaml,1,1,2
72fb0a41b6e26dc173877ad91a0c6131644a5d90,twice.mliu@gmail.com,2023-09-27 14:43:58+09:00,noreply@github.com,2023-09-27 14:43:58+09:00,Update controller URL in README.md (#1785),unstable,True,False,2,README.md,md,2,2,4
13327114aac51ea24939e9af581e43a2554c7065,aleks.raiden@gmail.com,2023-09-27 14:58:03+03:00,noreply@github.com,2023-09-27 20:58:03+09:00,Bump rocksdb to 8.5.4 (#1786),unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
a9397f2b857e5f228082df625413704fb0010249,twice.mliu@gmail.com,2023-09-28 17:03:57+09:00,noreply@github.com,2023-09-28 17:03:57+09:00,Split functions in main.cc to multiple headers (#1787),unstable,True,False,8,CMakeLists.txt,txt,2,2,4
a9397f2b857e5f228082df625413704fb0010249,twice.mliu@gmail.com,2023-09-28 17:03:57+09:00,noreply@github.com,2023-09-28 17:03:57+09:00,Split functions in main.cc to multiple headers (#1787),unstable,True,False,8,daemon_util.h,h,127,0,127
a9397f2b857e5f228082df625413704fb0010249,twice.mliu@gmail.com,2023-09-28 17:03:57+09:00,noreply@github.com,2023-09-28 17:03:57+09:00,Split functions in main.cc to multiple headers (#1787),unstable,True,False,8,main.cc,cc,186,0,186
a9397f2b857e5f228082df625413704fb0010249,twice.mliu@gmail.com,2023-09-28 17:03:57+09:00,noreply@github.com,2023-09-28 17:03:57+09:00,Split functions in main.cc to multiple headers (#1787),unstable,True,False,8,pid_util.h,h,44,0,44
a9397f2b857e5f228082df625413704fb0010249,twice.mliu@gmail.com,2023-09-28 17:03:57+09:00,noreply@github.com,2023-09-28 17:03:57+09:00,Split functions in main.cc to multiple headers (#1787),unstable,True,False,8,signal_util.h,h,93,0,93
a9397f2b857e5f228082df625413704fb0010249,twice.mliu@gmail.com,2023-09-28 17:03:57+09:00,noreply@github.com,2023-09-28 17:03:57+09:00,Split functions in main.cc to multiple headers (#1787),unstable,True,False,8,version_util.h,h,39,0,39
a9397f2b857e5f228082df625413704fb0010249,twice.mliu@gmail.com,2023-09-28 17:03:57+09:00,noreply@github.com,2023-09-28 17:03:57+09:00,Split functions in main.cc to multiple headers (#1787),unstable,True,False,8,main.cc,cc,5,56,61
548d5f56962734419e3f123fbdad818f42d316b8,twice.mliu@gmail.com,2023-10-01 15:30:54+09:00,noreply@github.com,2023-10-01 15:30:54+09:00,Implement FUNCTION commands like redis (#1788),unstable,True,False,11,cmd_function.cc,cc,100,0,100
548d5f56962734419e3f123fbdad818f42d316b8,twice.mliu@gmail.com,2023-10-01 15:30:54+09:00,noreply@github.com,2023-10-01 15:30:54+09:00,Implement FUNCTION commands like redis (#1788),unstable,True,False,11,server.cc,cc,33,2,35
548d5f56962734419e3f123fbdad818f42d316b8,twice.mliu@gmail.com,2023-10-01 15:30:54+09:00,noreply@github.com,2023-10-01 15:30:54+09:00,Implement FUNCTION commands like redis (#1788),unstable,True,False,11,server.h,h,5,0,5
548d5f56962734419e3f123fbdad818f42d316b8,twice.mliu@gmail.com,2023-10-01 15:30:54+09:00,noreply@github.com,2023-10-01 15:30:54+09:00,Implement FUNCTION commands like redis (#1788),unstable,True,False,11,redis_db.h,h,12,12,24
548d5f56962734419e3f123fbdad818f42d316b8,twice.mliu@gmail.com,2023-10-01 15:30:54+09:00,noreply@github.com,2023-10-01 15:30:54+09:00,Implement FUNCTION commands like redis (#1788),unstable,True,False,11,scripting.cc,cc,332,9,341
548d5f56962734419e3f123fbdad818f42d316b8,twice.mliu@gmail.com,2023-10-01 15:30:54+09:00,noreply@github.com,2023-10-01 15:30:54+09:00,Implement FUNCTION commands like redis (#1788),unstable,True,False,11,scripting.h,h,17,1,18
548d5f56962734419e3f123fbdad818f42d316b8,twice.mliu@gmail.com,2023-10-01 15:30:54+09:00,noreply@github.com,2023-10-01 15:30:54+09:00,Implement FUNCTION commands like redis (#1788),unstable,True,False,11,storage.cc,cc,1,1,2
548d5f56962734419e3f123fbdad818f42d316b8,twice.mliu@gmail.com,2023-10-01 15:30:54+09:00,noreply@github.com,2023-10-01 15:30:54+09:00,Implement FUNCTION commands like redis (#1788),unstable,True,False,11,storage.h,h,3,1,4
548d5f56962734419e3f123fbdad818f42d316b8,twice.mliu@gmail.com,2023-10-01 15:30:54+09:00,noreply@github.com,2023-10-01 15:30:54+09:00,Implement FUNCTION commands like redis (#1788),unstable,True,False,11,function_test.go,go,147,0,147
548d5f56962734419e3f123fbdad818f42d316b8,twice.mliu@gmail.com,2023-10-01 15:30:54+09:00,noreply@github.com,2023-10-01 15:30:54+09:00,Implement FUNCTION commands like redis (#1788),unstable,True,False,11,mylib1.lua,lua,29,0,29
548d5f56962734419e3f123fbdad818f42d316b8,twice.mliu@gmail.com,2023-10-01 15:30:54+09:00,noreply@github.com,2023-10-01 15:30:54+09:00,Implement FUNCTION commands like redis (#1788),unstable,True,False,11,mylib2.lua,lua,29,0,29
53ea09045414f0d6493cee421e94cb6ffd53ddda,hulk.website@gmail.com,2023-10-01 18:08:45+08:00,noreply@github.com,2023-10-01 18:08:45+08:00,Fix data race in instant metrics (#1790),unstable,True,False,2,stats.cc,cc,3,0,3
53ea09045414f0d6493cee421e94cb6ffd53ddda,hulk.website@gmail.com,2023-10-01 18:08:45+08:00,noreply@github.com,2023-10-01 18:08:45+08:00,Fix data race in instant metrics (#1790),unstable,True,False,2,stats.h,h,3,0,3
f3d7ef465f53e8b44ce1ac2d9c1415b935eabc97,twice.mliu@gmail.com,2023-10-01 20:47:40+09:00,noreply@github.com,2023-10-01 20:47:40+09:00,"Add support of command FCALL_RO (#1791)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,cmd_function.cc,cc,8,5,13
f3d7ef465f53e8b44ce1ac2d9c1415b935eabc97,twice.mliu@gmail.com,2023-10-01 20:47:40+09:00,noreply@github.com,2023-10-01 20:47:40+09:00,"Add support of command FCALL_RO (#1791)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,scripting.cc,cc,16,12,28
f3d7ef465f53e8b44ce1ac2d9c1415b935eabc97,twice.mliu@gmail.com,2023-10-01 20:47:40+09:00,noreply@github.com,2023-10-01 20:47:40+09:00,"Add support of command FCALL_RO (#1791)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,scripting.h,h,6,4,10
f3d7ef465f53e8b44ce1ac2d9c1415b935eabc97,twice.mliu@gmail.com,2023-10-01 20:47:40+09:00,noreply@github.com,2023-10-01 20:47:40+09:00,"Add support of command FCALL_RO (#1791)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,function_test.go,go,16,0,16
f3d7ef465f53e8b44ce1ac2d9c1415b935eabc97,twice.mliu@gmail.com,2023-10-01 20:47:40+09:00,noreply@github.com,2023-10-01 20:47:40+09:00,"Add support of command FCALL_RO (#1791)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,mylib3.lua,lua,29,0,29
42623c11f5a9bd48d3c9b75379194b0bc09050e8,aleks.raiden@gmail.com,2023-10-07 03:53:30+03:00,noreply@github.com,2023-10-07 09:53:30+09:00,Bump rocksdb to version 8.6.7 (#1794),unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
f97281928f51188b0592e93110981c8a739bbe64,hulk.website@gmail.com,2023-10-09 14:15:52+08:00,noreply@github.com,2023-10-09 14:15:52+08:00,"Add the support of the namespace replication (#1776)

Currently, Kvrocks won't propagate the namespace and token between master and slaves, and it may cause trouble if users add them in master but missing in slaves. So it would make this process easier if we could propagate the namespace/token as well.


## Design

To implement this feature, we need to consider the following situations:

- How to replicate namespaces between the master and slaves
- How to be compatible with old versions

**For the replication:**

We now have the propagate column family to propagate commands between the master and slaves, so we can use it to replicate namespaces as well. The steps are like below:

1. Modify namespace/token in master(forbid changing in slaves)
2. Propagate the namespace event to notify slaves like the Lua script
3. Slaves replay namespace/token changes

This works well for new instances, but what if there are different namespaces between the master and slaves in old instances?  There are three possible conditions:

1. Namespace/token exists in master but NOT in slave
2. Namespace exists in slave but NOT in master
3. Namespace exists both in master and slave, but the token is different

For condition 1, we can add the namespace/token to the slave as well. For condition 2, it makes sense to keep the namespace NOT existing in the master since data are from it, so we can remove the namespace/token. The most troublesome condition is 3 since users may have already used the token to access the data, changing the token would cause an invalid password error. **To make this simple, I prefer also overwriting the token.** And offer the configuration to allow users to enable or disable this feature, they MUST understand the risks before enabling.

To be noticed, we don't expect to propagate the default namespace since it may affect the replication part, so we won't persist the default namespace.

**For the compatible issue:**

Currently, namespaces are kept in the configuration file, so we need to read from the rocksdb first(store in propagate column like Lua script) when starting:

- If the key exists in rocksdb, load namespace/token from rocksdb and check if any namespace/token is inside the configuration file. If yes, refuse to start the server and ask users to remove them and add them via the `namespace add` command.
- If the key does NOT exist in rocksdb, read namespace/token from the configuration file and write them into rocksdb. To be noticed, we need to add an empty value for the key even though no namespace/token.

Users can only modify the namespace via command if this feature is enabled.",unstable,True,False,14,kvrocks.conf,conf,9,0,9
f97281928f51188b0592e93110981c8a739bbe64,hulk.website@gmail.com,2023-10-09 14:15:52+08:00,noreply@github.com,2023-10-09 14:15:52+08:00,"Add the support of the namespace replication (#1776)

Currently, Kvrocks won't propagate the namespace and token between master and slaves, and it may cause trouble if users add them in master but missing in slaves. So it would make this process easier if we could propagate the namespace/token as well.


## Design

To implement this feature, we need to consider the following situations:

- How to replicate namespaces between the master and slaves
- How to be compatible with old versions

**For the replication:**

We now have the propagate column family to propagate commands between the master and slaves, so we can use it to replicate namespaces as well. The steps are like below:

1. Modify namespace/token in master(forbid changing in slaves)
2. Propagate the namespace event to notify slaves like the Lua script
3. Slaves replay namespace/token changes

This works well for new instances, but what if there are different namespaces between the master and slaves in old instances?  There are three possible conditions:

1. Namespace/token exists in master but NOT in slave
2. Namespace exists in slave but NOT in master
3. Namespace exists both in master and slave, but the token is different

For condition 1, we can add the namespace/token to the slave as well. For condition 2, it makes sense to keep the namespace NOT existing in the master since data are from it, so we can remove the namespace/token. The most troublesome condition is 3 since users may have already used the token to access the data, changing the token would cause an invalid password error. **To make this simple, I prefer also overwriting the token.** And offer the configuration to allow users to enable or disable this feature, they MUST understand the risks before enabling.

To be noticed, we don't expect to propagate the default namespace since it may affect the replication part, so we won't persist the default namespace.

**For the compatible issue:**

Currently, namespaces are kept in the configuration file, so we need to read from the rocksdb first(store in propagate column like Lua script) when starting:

- If the key exists in rocksdb, load namespace/token from rocksdb and check if any namespace/token is inside the configuration file. If yes, refuse to start the server and ask users to remove them and add them via the `namespace add` command.
- If the key does NOT exist in rocksdb, read namespace/token from the configuration file and write them into rocksdb. To be noticed, we need to add an empty value for the key even though no namespace/token.

Users can only modify the namespace via command if this feature is enabled.",unstable,True,False,14,replication.cc,cc,5,0,5
f97281928f51188b0592e93110981c8a739bbe64,hulk.website@gmail.com,2023-10-09 14:15:52+08:00,noreply@github.com,2023-10-09 14:15:52+08:00,"Add the support of the namespace replication (#1776)

Currently, Kvrocks won't propagate the namespace and token between master and slaves, and it may cause trouble if users add them in master but missing in slaves. So it would make this process easier if we could propagate the namespace/token as well.


## Design

To implement this feature, we need to consider the following situations:

- How to replicate namespaces between the master and slaves
- How to be compatible with old versions

**For the replication:**

We now have the propagate column family to propagate commands between the master and slaves, so we can use it to replicate namespaces as well. The steps are like below:

1. Modify namespace/token in master(forbid changing in slaves)
2. Propagate the namespace event to notify slaves like the Lua script
3. Slaves replay namespace/token changes

This works well for new instances, but what if there are different namespaces between the master and slaves in old instances?  There are three possible conditions:

1. Namespace/token exists in master but NOT in slave
2. Namespace exists in slave but NOT in master
3. Namespace exists both in master and slave, but the token is different

For condition 1, we can add the namespace/token to the slave as well. For condition 2, it makes sense to keep the namespace NOT existing in the master since data are from it, so we can remove the namespace/token. The most troublesome condition is 3 since users may have already used the token to access the data, changing the token would cause an invalid password error. **To make this simple, I prefer also overwriting the token.** And offer the configuration to allow users to enable or disable this feature, they MUST understand the risks before enabling.

To be noticed, we don't expect to propagate the default namespace since it may affect the replication part, so we won't persist the default namespace.

**For the compatible issue:**

Currently, namespaces are kept in the configuration file, so we need to read from the rocksdb first(store in propagate column like Lua script) when starting:

- If the key exists in rocksdb, load namespace/token from rocksdb and check if any namespace/token is inside the configuration file. If yes, refuse to start the server and ask users to remove them and add them via the `namespace add` command.
- If the key does NOT exist in rocksdb, read namespace/token from the configuration file and write them into rocksdb. To be noticed, we need to add an empty value for the key even though no namespace/token.

Users can only modify the namespace via command if this feature is enabled.",unstable,True,False,14,cmd_server.cc,cc,18,17,35
f97281928f51188b0592e93110981c8a739bbe64,hulk.website@gmail.com,2023-10-09 14:15:52+08:00,noreply@github.com,2023-10-09 14:15:52+08:00,"Add the support of the namespace replication (#1776)

Currently, Kvrocks won't propagate the namespace and token between master and slaves, and it may cause trouble if users add them in master but missing in slaves. So it would make this process easier if we could propagate the namespace/token as well.


## Design

To implement this feature, we need to consider the following situations:

- How to replicate namespaces between the master and slaves
- How to be compatible with old versions

**For the replication:**

We now have the propagate column family to propagate commands between the master and slaves, so we can use it to replicate namespaces as well. The steps are like below:

1. Modify namespace/token in master(forbid changing in slaves)
2. Propagate the namespace event to notify slaves like the Lua script
3. Slaves replay namespace/token changes

This works well for new instances, but what if there are different namespaces between the master and slaves in old instances?  There are three possible conditions:

1. Namespace/token exists in master but NOT in slave
2. Namespace exists in slave but NOT in master
3. Namespace exists both in master and slave, but the token is different

For condition 1, we can add the namespace/token to the slave as well. For condition 2, it makes sense to keep the namespace NOT existing in the master since data are from it, so we can remove the namespace/token. The most troublesome condition is 3 since users may have already used the token to access the data, changing the token would cause an invalid password error. **To make this simple, I prefer also overwriting the token.** And offer the configuration to allow users to enable or disable this feature, they MUST understand the risks before enabling.

To be noticed, we don't expect to propagate the default namespace since it may affect the replication part, so we won't persist the default namespace.

**For the compatible issue:**

Currently, namespaces are kept in the configuration file, so we need to read from the rocksdb first(store in propagate column like Lua script) when starting:

- If the key exists in rocksdb, load namespace/token from rocksdb and check if any namespace/token is inside the configuration file. If yes, refuse to start the server and ask users to remove them and add them via the `namespace add` command.
- If the key does NOT exist in rocksdb, read namespace/token from the configuration file and write them into rocksdb. To be noticed, we need to add an empty value for the key even though no namespace/token.

Users can only modify the namespace via command if this feature is enabled.",unstable,True,False,14,config.cc,cc,18,110,128
f97281928f51188b0592e93110981c8a739bbe64,hulk.website@gmail.com,2023-10-09 14:15:52+08:00,noreply@github.com,2023-10-09 14:15:52+08:00,"Add the support of the namespace replication (#1776)

Currently, Kvrocks won't propagate the namespace and token between master and slaves, and it may cause trouble if users add them in master but missing in slaves. So it would make this process easier if we could propagate the namespace/token as well.


## Design

To implement this feature, we need to consider the following situations:

- How to replicate namespaces between the master and slaves
- How to be compatible with old versions

**For the replication:**

We now have the propagate column family to propagate commands between the master and slaves, so we can use it to replicate namespaces as well. The steps are like below:

1. Modify namespace/token in master(forbid changing in slaves)
2. Propagate the namespace event to notify slaves like the Lua script
3. Slaves replay namespace/token changes

This works well for new instances, but what if there are different namespaces between the master and slaves in old instances?  There are three possible conditions:

1. Namespace/token exists in master but NOT in slave
2. Namespace exists in slave but NOT in master
3. Namespace exists both in master and slave, but the token is different

For condition 1, we can add the namespace/token to the slave as well. For condition 2, it makes sense to keep the namespace NOT existing in the master since data are from it, so we can remove the namespace/token. The most troublesome condition is 3 since users may have already used the token to access the data, changing the token would cause an invalid password error. **To make this simple, I prefer also overwriting the token.** And offer the configuration to allow users to enable or disable this feature, they MUST understand the risks before enabling.

To be noticed, we don't expect to propagate the default namespace since it may affect the replication part, so we won't persist the default namespace.

**For the compatible issue:**

Currently, namespaces are kept in the configuration file, so we need to read from the rocksdb first(store in propagate column like Lua script) when starting:

- If the key exists in rocksdb, load namespace/token from rocksdb and check if any namespace/token is inside the configuration file. If yes, refuse to start the server and ask users to remove them and add them via the `namespace add` command.
- If the key does NOT exist in rocksdb, read namespace/token from the configuration file and write them into rocksdb. To be noticed, we need to add an empty value for the key even though no namespace/token.

Users can only modify the namespace via command if this feature is enabled.",unstable,True,False,14,config.h,h,8,7,15
f97281928f51188b0592e93110981c8a739bbe64,hulk.website@gmail.com,2023-10-09 14:15:52+08:00,noreply@github.com,2023-10-09 14:15:52+08:00,"Add the support of the namespace replication (#1776)

Currently, Kvrocks won't propagate the namespace and token between master and slaves, and it may cause trouble if users add them in master but missing in slaves. So it would make this process easier if we could propagate the namespace/token as well.


## Design

To implement this feature, we need to consider the following situations:

- How to replicate namespaces between the master and slaves
- How to be compatible with old versions

**For the replication:**

We now have the propagate column family to propagate commands between the master and slaves, so we can use it to replicate namespaces as well. The steps are like below:

1. Modify namespace/token in master(forbid changing in slaves)
2. Propagate the namespace event to notify slaves like the Lua script
3. Slaves replay namespace/token changes

This works well for new instances, but what if there are different namespaces between the master and slaves in old instances?  There are three possible conditions:

1. Namespace/token exists in master but NOT in slave
2. Namespace exists in slave but NOT in master
3. Namespace exists both in master and slave, but the token is different

For condition 1, we can add the namespace/token to the slave as well. For condition 2, it makes sense to keep the namespace NOT existing in the master since data are from it, so we can remove the namespace/token. The most troublesome condition is 3 since users may have already used the token to access the data, changing the token would cause an invalid password error. **To make this simple, I prefer also overwriting the token.** And offer the configuration to allow users to enable or disable this feature, they MUST understand the risks before enabling.

To be noticed, we don't expect to propagate the default namespace since it may affect the replication part, so we won't persist the default namespace.

**For the compatible issue:**

Currently, namespaces are kept in the configuration file, so we need to read from the rocksdb first(store in propagate column like Lua script) when starting:

- If the key exists in rocksdb, load namespace/token from rocksdb and check if any namespace/token is inside the configuration file. If yes, refuse to start the server and ask users to remove them and add them via the `namespace add` command.
- If the key does NOT exist in rocksdb, read namespace/token from the configuration file and write them into rocksdb. To be noticed, we need to add an empty value for the key even though no namespace/token.

Users can only modify the namespace via command if this feature is enabled.",unstable,True,False,14,namespace.cc,cc,182,0,182
f97281928f51188b0592e93110981c8a739bbe64,hulk.website@gmail.com,2023-10-09 14:15:52+08:00,noreply@github.com,2023-10-09 14:15:52+08:00,"Add the support of the namespace replication (#1776)

Currently, Kvrocks won't propagate the namespace and token between master and slaves, and it may cause trouble if users add them in master but missing in slaves. So it would make this process easier if we could propagate the namespace/token as well.


## Design

To implement this feature, we need to consider the following situations:

- How to replicate namespaces between the master and slaves
- How to be compatible with old versions

**For the replication:**

We now have the propagate column family to propagate commands between the master and slaves, so we can use it to replicate namespaces as well. The steps are like below:

1. Modify namespace/token in master(forbid changing in slaves)
2. Propagate the namespace event to notify slaves like the Lua script
3. Slaves replay namespace/token changes

This works well for new instances, but what if there are different namespaces between the master and slaves in old instances?  There are three possible conditions:

1. Namespace/token exists in master but NOT in slave
2. Namespace exists in slave but NOT in master
3. Namespace exists both in master and slave, but the token is different

For condition 1, we can add the namespace/token to the slave as well. For condition 2, it makes sense to keep the namespace NOT existing in the master since data are from it, so we can remove the namespace/token. The most troublesome condition is 3 since users may have already used the token to access the data, changing the token would cause an invalid password error. **To make this simple, I prefer also overwriting the token.** And offer the configuration to allow users to enable or disable this feature, they MUST understand the risks before enabling.

To be noticed, we don't expect to propagate the default namespace since it may affect the replication part, so we won't persist the default namespace.

**For the compatible issue:**

Currently, namespaces are kept in the configuration file, so we need to read from the rocksdb first(store in propagate column like Lua script) when starting:

- If the key exists in rocksdb, load namespace/token from rocksdb and check if any namespace/token is inside the configuration file. If yes, refuse to start the server and ask users to remove them and add them via the `namespace add` command.
- If the key does NOT exist in rocksdb, read namespace/token from the configuration file and write them into rocksdb. To be noticed, we need to add an empty value for the key even though no namespace/token.

Users can only modify the namespace via command if this feature is enabled.",unstable,True,False,14,namespace.h,h,50,0,50
f97281928f51188b0592e93110981c8a739bbe64,hulk.website@gmail.com,2023-10-09 14:15:52+08:00,noreply@github.com,2023-10-09 14:15:52+08:00,"Add the support of the namespace replication (#1776)

Currently, Kvrocks won't propagate the namespace and token between master and slaves, and it may cause trouble if users add them in master but missing in slaves. So it would make this process easier if we could propagate the namespace/token as well.


## Design

To implement this feature, we need to consider the following situations:

- How to replicate namespaces between the master and slaves
- How to be compatible with old versions

**For the replication:**

We now have the propagate column family to propagate commands between the master and slaves, so we can use it to replicate namespaces as well. The steps are like below:

1. Modify namespace/token in master(forbid changing in slaves)
2. Propagate the namespace event to notify slaves like the Lua script
3. Slaves replay namespace/token changes

This works well for new instances, but what if there are different namespaces between the master and slaves in old instances?  There are three possible conditions:

1. Namespace/token exists in master but NOT in slave
2. Namespace exists in slave but NOT in master
3. Namespace exists both in master and slave, but the token is different

For condition 1, we can add the namespace/token to the slave as well. For condition 2, it makes sense to keep the namespace NOT existing in the master since data are from it, so we can remove the namespace/token. The most troublesome condition is 3 since users may have already used the token to access the data, changing the token would cause an invalid password error. **To make this simple, I prefer also overwriting the token.** And offer the configuration to allow users to enable or disable this feature, they MUST understand the risks before enabling.

To be noticed, we don't expect to propagate the default namespace since it may affect the replication part, so we won't persist the default namespace.

**For the compatible issue:**

Currently, namespaces are kept in the configuration file, so we need to read from the rocksdb first(store in propagate column like Lua script) when starting:

- If the key exists in rocksdb, load namespace/token from rocksdb and check if any namespace/token is inside the configuration file. If yes, refuse to start the server and ask users to remove them and add them via the `namespace add` command.
- If the key does NOT exist in rocksdb, read namespace/token from the configuration file and write them into rocksdb. To be noticed, we need to add an empty value for the key even though no namespace/token.

Users can only modify the namespace via command if this feature is enabled.",unstable,True,False,14,server.cc,cc,8,4,12
f97281928f51188b0592e93110981c8a739bbe64,hulk.website@gmail.com,2023-10-09 14:15:52+08:00,noreply@github.com,2023-10-09 14:15:52+08:00,"Add the support of the namespace replication (#1776)

Currently, Kvrocks won't propagate the namespace and token between master and slaves, and it may cause trouble if users add them in master but missing in slaves. So it would make this process easier if we could propagate the namespace/token as well.


## Design

To implement this feature, we need to consider the following situations:

- How to replicate namespaces between the master and slaves
- How to be compatible with old versions

**For the replication:**

We now have the propagate column family to propagate commands between the master and slaves, so we can use it to replicate namespaces as well. The steps are like below:

1. Modify namespace/token in master(forbid changing in slaves)
2. Propagate the namespace event to notify slaves like the Lua script
3. Slaves replay namespace/token changes

This works well for new instances, but what if there are different namespaces between the master and slaves in old instances?  There are three possible conditions:

1. Namespace/token exists in master but NOT in slave
2. Namespace exists in slave but NOT in master
3. Namespace exists both in master and slave, but the token is different

For condition 1, we can add the namespace/token to the slave as well. For condition 2, it makes sense to keep the namespace NOT existing in the master since data are from it, so we can remove the namespace/token. The most troublesome condition is 3 since users may have already used the token to access the data, changing the token would cause an invalid password error. **To make this simple, I prefer also overwriting the token.** And offer the configuration to allow users to enable or disable this feature, they MUST understand the risks before enabling.

To be noticed, we don't expect to propagate the default namespace since it may affect the replication part, so we won't persist the default namespace.

**For the compatible issue:**

Currently, namespaces are kept in the configuration file, so we need to read from the rocksdb first(store in propagate column like Lua script) when starting:

- If the key exists in rocksdb, load namespace/token from rocksdb and check if any namespace/token is inside the configuration file. If yes, refuse to start the server and ask users to remove them and add them via the `namespace add` command.
- If the key does NOT exist in rocksdb, read namespace/token from the configuration file and write them into rocksdb. To be noticed, we need to add an empty value for the key even though no namespace/token.

Users can only modify the namespace via command if this feature is enabled.",unstable,True,False,14,server.h,h,5,0,5
f97281928f51188b0592e93110981c8a739bbe64,hulk.website@gmail.com,2023-10-09 14:15:52+08:00,noreply@github.com,2023-10-09 14:15:52+08:00,"Add the support of the namespace replication (#1776)

Currently, Kvrocks won't propagate the namespace and token between master and slaves, and it may cause trouble if users add them in master but missing in slaves. So it would make this process easier if we could propagate the namespace/token as well.


## Design

To implement this feature, we need to consider the following situations:

- How to replicate namespaces between the master and slaves
- How to be compatible with old versions

**For the replication:**

We now have the propagate column family to propagate commands between the master and slaves, so we can use it to replicate namespaces as well. The steps are like below:

1. Modify namespace/token in master(forbid changing in slaves)
2. Propagate the namespace event to notify slaves like the Lua script
3. Slaves replay namespace/token changes

This works well for new instances, but what if there are different namespaces between the master and slaves in old instances?  There are three possible conditions:

1. Namespace/token exists in master but NOT in slave
2. Namespace exists in slave but NOT in master
3. Namespace exists both in master and slave, but the token is different

For condition 1, we can add the namespace/token to the slave as well. For condition 2, it makes sense to keep the namespace NOT existing in the master since data are from it, so we can remove the namespace/token. The most troublesome condition is 3 since users may have already used the token to access the data, changing the token would cause an invalid password error. **To make this simple, I prefer also overwriting the token.** And offer the configuration to allow users to enable or disable this feature, they MUST understand the risks before enabling.

To be noticed, we don't expect to propagate the default namespace since it may affect the replication part, so we won't persist the default namespace.

**For the compatible issue:**

Currently, namespaces are kept in the configuration file, so we need to read from the rocksdb first(store in propagate column like Lua script) when starting:

- If the key exists in rocksdb, load namespace/token from rocksdb and check if any namespace/token is inside the configuration file. If yes, refuse to start the server and ask users to remove them and add them via the `namespace add` command.
- If the key does NOT exist in rocksdb, read namespace/token from the configuration file and write them into rocksdb. To be noticed, we need to add an empty value for the key even though no namespace/token.

Users can only modify the namespace via command if this feature is enabled.",unstable,True,False,14,storage.h,h,1,1,2
f97281928f51188b0592e93110981c8a739bbe64,hulk.website@gmail.com,2023-10-09 14:15:52+08:00,noreply@github.com,2023-10-09 14:15:52+08:00,"Add the support of the namespace replication (#1776)

Currently, Kvrocks won't propagate the namespace and token between master and slaves, and it may cause trouble if users add them in master but missing in slaves. So it would make this process easier if we could propagate the namespace/token as well.


## Design

To implement this feature, we need to consider the following situations:

- How to replicate namespaces between the master and slaves
- How to be compatible with old versions

**For the replication:**

We now have the propagate column family to propagate commands between the master and slaves, so we can use it to replicate namespaces as well. The steps are like below:

1. Modify namespace/token in master(forbid changing in slaves)
2. Propagate the namespace event to notify slaves like the Lua script
3. Slaves replay namespace/token changes

This works well for new instances, but what if there are different namespaces between the master and slaves in old instances?  There are three possible conditions:

1. Namespace/token exists in master but NOT in slave
2. Namespace exists in slave but NOT in master
3. Namespace exists both in master and slave, but the token is different

For condition 1, we can add the namespace/token to the slave as well. For condition 2, it makes sense to keep the namespace NOT existing in the master since data are from it, so we can remove the namespace/token. The most troublesome condition is 3 since users may have already used the token to access the data, changing the token would cause an invalid password error. **To make this simple, I prefer also overwriting the token.** And offer the configuration to allow users to enable or disable this feature, they MUST understand the risks before enabling.

To be noticed, we don't expect to propagate the default namespace since it may affect the replication part, so we won't persist the default namespace.

**For the compatible issue:**

Currently, namespaces are kept in the configuration file, so we need to read from the rocksdb first(store in propagate column like Lua script) when starting:

- If the key exists in rocksdb, load namespace/token from rocksdb and check if any namespace/token is inside the configuration file. If yes, refuse to start the server and ask users to remove them and add them via the `namespace add` command.
- If the key does NOT exist in rocksdb, read namespace/token from the configuration file and write them into rocksdb. To be noticed, we need to add an empty value for the key even though no namespace/token.

Users can only modify the namespace via command if this feature is enabled.",unstable,True,False,14,config_test.cc,cc,2,140,142
f97281928f51188b0592e93110981c8a739bbe64,hulk.website@gmail.com,2023-10-09 14:15:52+08:00,noreply@github.com,2023-10-09 14:15:52+08:00,"Add the support of the namespace replication (#1776)

Currently, Kvrocks won't propagate the namespace and token between master and slaves, and it may cause trouble if users add them in master but missing in slaves. So it would make this process easier if we could propagate the namespace/token as well.


## Design

To implement this feature, we need to consider the following situations:

- How to replicate namespaces between the master and slaves
- How to be compatible with old versions

**For the replication:**

We now have the propagate column family to propagate commands between the master and slaves, so we can use it to replicate namespaces as well. The steps are like below:

1. Modify namespace/token in master(forbid changing in slaves)
2. Propagate the namespace event to notify slaves like the Lua script
3. Slaves replay namespace/token changes

This works well for new instances, but what if there are different namespaces between the master and slaves in old instances?  There are three possible conditions:

1. Namespace/token exists in master but NOT in slave
2. Namespace exists in slave but NOT in master
3. Namespace exists both in master and slave, but the token is different

For condition 1, we can add the namespace/token to the slave as well. For condition 2, it makes sense to keep the namespace NOT existing in the master since data are from it, so we can remove the namespace/token. The most troublesome condition is 3 since users may have already used the token to access the data, changing the token would cause an invalid password error. **To make this simple, I prefer also overwriting the token.** And offer the configuration to allow users to enable or disable this feature, they MUST understand the risks before enabling.

To be noticed, we don't expect to propagate the default namespace since it may affect the replication part, so we won't persist the default namespace.

**For the compatible issue:**

Currently, namespaces are kept in the configuration file, so we need to read from the rocksdb first(store in propagate column like Lua script) when starting:

- If the key exists in rocksdb, load namespace/token from rocksdb and check if any namespace/token is inside the configuration file. If yes, refuse to start the server and ask users to remove them and add them via the `namespace add` command.
- If the key does NOT exist in rocksdb, read namespace/token from the configuration file and write them into rocksdb. To be noticed, we need to add an empty value for the key even though no namespace/token.

Users can only modify the namespace via command if this feature is enabled.",unstable,True,False,14,namespace_test.cc,cc,71,0,71
f97281928f51188b0592e93110981c8a739bbe64,hulk.website@gmail.com,2023-10-09 14:15:52+08:00,noreply@github.com,2023-10-09 14:15:52+08:00,"Add the support of the namespace replication (#1776)

Currently, Kvrocks won't propagate the namespace and token between master and slaves, and it may cause trouble if users add them in master but missing in slaves. So it would make this process easier if we could propagate the namespace/token as well.


## Design

To implement this feature, we need to consider the following situations:

- How to replicate namespaces between the master and slaves
- How to be compatible with old versions

**For the replication:**

We now have the propagate column family to propagate commands between the master and slaves, so we can use it to replicate namespaces as well. The steps are like below:

1. Modify namespace/token in master(forbid changing in slaves)
2. Propagate the namespace event to notify slaves like the Lua script
3. Slaves replay namespace/token changes

This works well for new instances, but what if there are different namespaces between the master and slaves in old instances?  There are three possible conditions:

1. Namespace/token exists in master but NOT in slave
2. Namespace exists in slave but NOT in master
3. Namespace exists both in master and slave, but the token is different

For condition 1, we can add the namespace/token to the slave as well. For condition 2, it makes sense to keep the namespace NOT existing in the master since data are from it, so we can remove the namespace/token. The most troublesome condition is 3 since users may have already used the token to access the data, changing the token would cause an invalid password error. **To make this simple, I prefer also overwriting the token.** And offer the configuration to allow users to enable or disable this feature, they MUST understand the risks before enabling.

To be noticed, we don't expect to propagate the default namespace since it may affect the replication part, so we won't persist the default namespace.

**For the compatible issue:**

Currently, namespaces are kept in the configuration file, so we need to read from the rocksdb first(store in propagate column like Lua script) when starting:

- If the key exists in rocksdb, load namespace/token from rocksdb and check if any namespace/token is inside the configuration file. If yes, refuse to start the server and ask users to remove them and add them via the `namespace add` command.
- If the key does NOT exist in rocksdb, read namespace/token from the configuration file and write them into rocksdb. To be noticed, we need to add an empty value for the key even though no namespace/token.

Users can only modify the namespace via command if this feature is enabled.",unstable,True,False,14,test_base.h,h,8,1,9
f97281928f51188b0592e93110981c8a739bbe64,hulk.website@gmail.com,2023-10-09 14:15:52+08:00,noreply@github.com,2023-10-09 14:15:52+08:00,"Add the support of the namespace replication (#1776)

Currently, Kvrocks won't propagate the namespace and token between master and slaves, and it may cause trouble if users add them in master but missing in slaves. So it would make this process easier if we could propagate the namespace/token as well.


## Design

To implement this feature, we need to consider the following situations:

- How to replicate namespaces between the master and slaves
- How to be compatible with old versions

**For the replication:**

We now have the propagate column family to propagate commands between the master and slaves, so we can use it to replicate namespaces as well. The steps are like below:

1. Modify namespace/token in master(forbid changing in slaves)
2. Propagate the namespace event to notify slaves like the Lua script
3. Slaves replay namespace/token changes

This works well for new instances, but what if there are different namespaces between the master and slaves in old instances?  There are three possible conditions:

1. Namespace/token exists in master but NOT in slave
2. Namespace exists in slave but NOT in master
3. Namespace exists both in master and slave, but the token is different

For condition 1, we can add the namespace/token to the slave as well. For condition 2, it makes sense to keep the namespace NOT existing in the master since data are from it, so we can remove the namespace/token. The most troublesome condition is 3 since users may have already used the token to access the data, changing the token would cause an invalid password error. **To make this simple, I prefer also overwriting the token.** And offer the configuration to allow users to enable or disable this feature, they MUST understand the risks before enabling.

To be noticed, we don't expect to propagate the default namespace since it may affect the replication part, so we won't persist the default namespace.

**For the compatible issue:**

Currently, namespaces are kept in the configuration file, so we need to read from the rocksdb first(store in propagate column like Lua script) when starting:

- If the key exists in rocksdb, load namespace/token from rocksdb and check if any namespace/token is inside the configuration file. If yes, refuse to start the server and ask users to remove them and add them via the `namespace add` command.
- If the key does NOT exist in rocksdb, read namespace/token from the configuration file and write them into rocksdb. To be noticed, we need to add an empty value for the key even though no namespace/token.

Users can only modify the namespace via command if this feature is enabled.",unstable,True,False,14,namespace_test.go,go,142,2,144
493c17f841c1673a137e95b5235dec2d51ca6ab4,twice.mliu@gmail.com,2023-10-09 17:28:45+09:00,noreply@github.com,2023-10-09 17:28:45+09:00,"Add LISTLIB subcommand as an extension to FUNCTION (#1796)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,cmd_function.cc,cc,4,0,4
493c17f841c1673a137e95b5235dec2d51ca6ab4,twice.mliu@gmail.com,2023-10-09 17:28:45+09:00,noreply@github.com,2023-10-09 17:28:45+09:00,"Add LISTLIB subcommand as an extension to FUNCTION (#1796)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,scripting.cc,cc,46,0,46
493c17f841c1673a137e95b5235dec2d51ca6ab4,twice.mliu@gmail.com,2023-10-09 17:28:45+09:00,noreply@github.com,2023-10-09 17:28:45+09:00,"Add LISTLIB subcommand as an extension to FUNCTION (#1796)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,scripting.h,h,1,0,1
493c17f841c1673a137e95b5235dec2d51ca6ab4,twice.mliu@gmail.com,2023-10-09 17:28:45+09:00,noreply@github.com,2023-10-09 17:28:45+09:00,"Add LISTLIB subcommand as an extension to FUNCTION (#1796)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,function_test.go,go,22,0,22
e38021ca509d21624957f217aae516360ff77adb,85615957+Yangsx-1@users.noreply.github.com,2023-10-12 11:44:35+08:00,noreply@github.com,2023-10-12 11:44:35+08:00,Add support of the XGROUP CREATECONSUMER command (#1799),unstable,True,False,5,cmd_stream.cc,cc,20,0,20
e38021ca509d21624957f217aae516360ff77adb,85615957+Yangsx-1@users.noreply.github.com,2023-10-12 11:44:35+08:00,noreply@github.com,2023-10-12 11:44:35+08:00,Add support of the XGROUP CREATECONSUMER command (#1799),unstable,True,False,5,redis_stream.cc,cc,74,0,74
e38021ca509d21624957f217aae516360ff77adb,85615957+Yangsx-1@users.noreply.github.com,2023-10-12 11:44:35+08:00,noreply@github.com,2023-10-12 11:44:35+08:00,Add support of the XGROUP CREATECONSUMER command (#1799),unstable,True,False,5,redis_stream.h,h,5,0,5
e38021ca509d21624957f217aae516360ff77adb,85615957+Yangsx-1@users.noreply.github.com,2023-10-12 11:44:35+08:00,noreply@github.com,2023-10-12 11:44:35+08:00,Add support of the XGROUP CREATECONSUMER command (#1799),unstable,True,False,5,redis_stream_base.h,h,6,0,6
e38021ca509d21624957f217aae516360ff77adb,85615957+Yangsx-1@users.noreply.github.com,2023-10-12 11:44:35+08:00,noreply@github.com,2023-10-12 11:44:35+08:00,Add support of the XGROUP CREATECONSUMER command (#1799),unstable,True,False,5,stream_test.go,go,22,0,22
eef51ac9a9d48b4e111c7f98a1a40c31b8bc12d7,twice.mliu@gmail.com,2023-10-13 12:07:40+09:00,noreply@github.com,2023-10-13 11:07:40+08:00,Add speedb as an alternative to rocksdb (#1792),unstable,True,False,9,kvrocks.yaml,yaml,5,1,6
eef51ac9a9d48b4e111c7f98a1a40c31b8bc12d7,twice.mliu@gmail.com,2023-10-13 12:07:40+09:00,noreply@github.com,2023-10-13 11:07:40+08:00,Add speedb as an alternative to rocksdb (#1792),unstable,True,False,9,CMakeLists.txt,txt,5,0,5
eef51ac9a9d48b4e111c7f98a1a40c31b8bc12d7,twice.mliu@gmail.com,2023-10-13 12:07:40+09:00,noreply@github.com,2023-10-13 11:07:40+08:00,Add speedb as an alternative to rocksdb (#1792),unstable,True,False,9,NOTICE,None,2,1,3
eef51ac9a9d48b4e111c7f98a1a40c31b8bc12d7,twice.mliu@gmail.com,2023-10-13 12:07:40+09:00,noreply@github.com,2023-10-13 11:07:40+08:00,Add speedb as an alternative to rocksdb (#1792),unstable,True,False,9,FindJeMalloc.cmake,cmake,1,0,1
eef51ac9a9d48b4e111c7f98a1a40c31b8bc12d7,twice.mliu@gmail.com,2023-10-13 12:07:40+09:00,noreply@github.com,2023-10-13 11:07:40+08:00,Add speedb as an alternative to rocksdb (#1792),unstable,True,False,9,FindZLIB.cmake,cmake,1,0,1
eef51ac9a9d48b4e111c7f98a1a40c31b8bc12d7,twice.mliu@gmail.com,2023-10-13 12:07:40+09:00,noreply@github.com,2023-10-13 11:07:40+08:00,Add speedb as an alternative to rocksdb (#1792),unstable,True,False,9,Findlz4.cmake,cmake,1,0,1
eef51ac9a9d48b4e111c7f98a1a40c31b8bc12d7,twice.mliu@gmail.com,2023-10-13 12:07:40+09:00,noreply@github.com,2023-10-13 11:07:40+08:00,Add speedb as an alternative to rocksdb (#1792),unstable,True,False,9,Findzstd.cmake,cmake,1,0,1
eef51ac9a9d48b4e111c7f98a1a40c31b8bc12d7,twice.mliu@gmail.com,2023-10-13 12:07:40+09:00,noreply@github.com,2023-10-13 11:07:40+08:00,Add speedb as an alternative to rocksdb (#1792),unstable,True,False,9,speedb.cmake,cmake,60,0,60
eef51ac9a9d48b4e111c7f98a1a40c31b8bc12d7,twice.mliu@gmail.com,2023-10-13 12:07:40+09:00,noreply@github.com,2023-10-13 11:07:40+08:00,Add speedb as an alternative to rocksdb (#1792),unstable,True,False,9,compact_test.cc,cc,9,0,9
935f32e1de626669909e49f59b450dbf91f34790,twice.mliu@gmail.com,2023-10-15 22:08:17+09:00,noreply@github.com,2023-10-15 22:08:17+09:00,Add support of new command JSON.SET and JSON.GET (#1803),unstable,True,False,11,typos.toml,toml,3,0,3
935f32e1de626669909e49f59b450dbf91f34790,twice.mliu@gmail.com,2023-10-15 22:08:17+09:00,noreply@github.com,2023-10-15 22:08:17+09:00,Add support of new command JSON.SET and JSON.GET (#1803),unstable,True,False,11,slot_migrate.cc,cc,1,1,2
935f32e1de626669909e49f59b450dbf91f34790,twice.mliu@gmail.com,2023-10-15 22:08:17+09:00,noreply@github.com,2023-10-15 22:08:17+09:00,Add support of new command JSON.SET and JSON.GET (#1803),unstable,True,False,11,cmd_json.cc,cc,58,0,58
935f32e1de626669909e49f59b450dbf91f34790,twice.mliu@gmail.com,2023-10-15 22:08:17+09:00,noreply@github.com,2023-10-15 22:08:17+09:00,Add support of new command JSON.SET and JSON.GET (#1803),unstable,True,False,11,compact_filter.cc,cc,1,1,2
935f32e1de626669909e49f59b450dbf91f34790,twice.mliu@gmail.com,2023-10-15 22:08:17+09:00,noreply@github.com,2023-10-15 22:08:17+09:00,Add support of new command JSON.SET and JSON.GET (#1803),unstable,True,False,11,redis_db.cc,cc,22,10,32
935f32e1de626669909e49f59b450dbf91f34790,twice.mliu@gmail.com,2023-10-15 22:08:17+09:00,noreply@github.com,2023-10-15 22:08:17+09:00,Add support of new command JSON.SET and JSON.GET (#1803),unstable,True,False,11,redis_db.h,h,3,0,3
935f32e1de626669909e49f59b450dbf91f34790,twice.mliu@gmail.com,2023-10-15 22:08:17+09:00,noreply@github.com,2023-10-15 22:08:17+09:00,Add support of new command JSON.SET and JSON.GET (#1803),unstable,True,False,11,redis_metadata.cc,cc,28,4,32
935f32e1de626669909e49f59b450dbf91f34790,twice.mliu@gmail.com,2023-10-15 22:08:17+09:00,noreply@github.com,2023-10-15 22:08:17+09:00,Add support of new command JSON.SET and JSON.GET (#1803),unstable,True,False,11,redis_metadata.h,h,31,0,31
935f32e1de626669909e49f59b450dbf91f34790,twice.mliu@gmail.com,2023-10-15 22:08:17+09:00,noreply@github.com,2023-10-15 22:08:17+09:00,Add support of new command JSON.SET and JSON.GET (#1803),unstable,True,False,11,json.h,h,77,0,77
935f32e1de626669909e49f59b450dbf91f34790,twice.mliu@gmail.com,2023-10-15 22:08:17+09:00,noreply@github.com,2023-10-15 22:08:17+09:00,Add support of new command JSON.SET and JSON.GET (#1803),unstable,True,False,11,redis_json.cc,cc,120,0,120
935f32e1de626669909e49f59b450dbf91f34790,twice.mliu@gmail.com,2023-10-15 22:08:17+09:00,noreply@github.com,2023-10-15 22:08:17+09:00,Add support of new command JSON.SET and JSON.GET (#1803),unstable,True,False,11,redis_json.h,h,42,0,42
2b9545688142df85048bc8bc04c0589cb96f9cc1,hulk.website@gmail.com,2023-10-15 23:11:53+08:00,noreply@github.com,2023-10-16 00:11:53+09:00,"Fix server cannot start without the configuration file (#1804)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,config.cc,cc,1,1,2
2b9545688142df85048bc8bc04c0589cb96f9cc1,hulk.website@gmail.com,2023-10-15 23:11:53+08:00,noreply@github.com,2023-10-16 00:11:53+09:00,"Fix server cannot start without the configuration file (#1804)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,config.h,h,1,0,1
2b9545688142df85048bc8bc04c0589cb96f9cc1,hulk.website@gmail.com,2023-10-15 23:11:53+08:00,noreply@github.com,2023-10-16 00:11:53+09:00,"Fix server cannot start without the configuration file (#1804)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,namespace.cc,cc,20,3,23
2b9545688142df85048bc8bc04c0589cb96f9cc1,hulk.website@gmail.com,2023-10-15 23:11:53+08:00,noreply@github.com,2023-10-16 00:11:53+09:00,"Fix server cannot start without the configuration file (#1804)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,namespace.h,h,1,0,1
2b9545688142df85048bc8bc04c0589cb96f9cc1,hulk.website@gmail.com,2023-10-15 23:11:53+08:00,noreply@github.com,2023-10-16 00:11:53+09:00,"Fix server cannot start without the configuration file (#1804)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,cli_options_test.go,go,1,1,2
2b9545688142df85048bc8bc04c0589cb96f9cc1,hulk.website@gmail.com,2023-10-15 23:11:53+08:00,noreply@github.com,2023-10-16 00:11:53+09:00,"Fix server cannot start without the configuration file (#1804)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,config_test.go,go,12,0,12
2b9545688142df85048bc8bc04c0589cb96f9cc1,hulk.website@gmail.com,2023-10-15 23:11:53+08:00,noreply@github.com,2023-10-16 00:11:53+09:00,"Fix server cannot start without the configuration file (#1804)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,namespace_test.go,go,30,0,30
2b9545688142df85048bc8bc04c0589cb96f9cc1,hulk.website@gmail.com,2023-10-15 23:11:53+08:00,noreply@github.com,2023-10-16 00:11:53+09:00,"Fix server cannot start without the configuration file (#1804)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,server.go,go,21,10,31
4d88a098865ec2ef7d10ec4c856dc06073674be4,maplewish117@gmail.com,2023-10-16 10:46:29+08:00,noreply@github.com,2023-10-16 10:46:29+08:00,"Catch up for json-set with multiple values (#1827)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,json.h,h,1,2,3
05dbad82ca4814170ecac26b7f39ca3f229732a6,twice.mliu@gmail.com,2023-10-16 13:48:57+09:00,noreply@github.com,2023-10-16 12:48:57+08:00,"Add test cases for JSON.SET and JSON.GET (#1828)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,CMakeLists.txt,txt,8,8,16
05dbad82ca4814170ecac26b7f39ca3f229732a6,twice.mliu@gmail.com,2023-10-16 13:48:57+09:00,noreply@github.com,2023-10-16 12:48:57+08:00,"Add test cases for JSON.SET and JSON.GET (#1828)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,gtest.cmake,cmake,1,1,2
05dbad82ca4814170ecac26b7f39ca3f229732a6,twice.mliu@gmail.com,2023-10-16 13:48:57+09:00,noreply@github.com,2023-10-16 12:48:57+08:00,"Add test cases for JSON.SET and JSON.GET (#1828)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,json.h,h,10,1,11
05dbad82ca4814170ecac26b7f39ca3f229732a6,twice.mliu@gmail.com,2023-10-16 13:48:57+09:00,noreply@github.com,2023-10-16 12:48:57+08:00,"Add test cases for JSON.SET and JSON.GET (#1828)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,redis_json.cc,cc,6,6,12
05dbad82ca4814170ecac26b7f39ca3f229732a6,twice.mliu@gmail.com,2023-10-16 13:48:57+09:00,noreply@github.com,2023-10-16 12:48:57+08:00,"Add test cases for JSON.SET and JSON.GET (#1828)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,json_test.cc,cc,121,0,121
05dbad82ca4814170ecac26b7f39ca3f229732a6,twice.mliu@gmail.com,2023-10-16 13:48:57+09:00,noreply@github.com,2023-10-16 12:48:57+08:00,"Add test cases for JSON.SET and JSON.GET (#1828)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,json_test.go,go,58,0,58
3e995df5ed7b369c8cbf63f86cce5f9bda65a56d,maplewish117@gmail.com,2023-10-16 17:35:15+08:00,noreply@github.com,2023-10-16 17:35:15+08:00,RDB: fix Endian handling in rdb_intset (#1830),unstable,True,False,1,rdb_intset.cc,cc,5,5,10
45deba91f80efabbf2933a8d66ccd6b1d521a56b,122602529+xq2010@users.noreply.github.com,2023-10-17 22:28:39+08:00,noreply@github.com,2023-10-17 22:28:39+08:00,Add the support of the load RDB command (#1798),unstable,True,False,14,cmd_server.cc,cc,45,3,48
45deba91f80efabbf2933a8d66ccd6b1d521a56b,122602529+xq2010@users.noreply.github.com,2023-10-17 22:28:39+08:00,noreply@github.com,2023-10-17 22:28:39+08:00,Add the support of the load RDB command (#1798),unstable,True,False,14,rdb_stream.cc,cc,69,0,69
45deba91f80efabbf2933a8d66ccd6b1d521a56b,122602529+xq2010@users.noreply.github.com,2023-10-17 22:28:39+08:00,noreply@github.com,2023-10-17 22:28:39+08:00,Add the support of the load RDB command (#1798),unstable,True,False,14,rdb_stream.h,h,84,0,84
45deba91f80efabbf2933a8d66ccd6b1d521a56b,122602529+xq2010@users.noreply.github.com,2023-10-17 22:28:39+08:00,noreply@github.com,2023-10-17 22:28:39+08:00,Add the support of the load RDB command (#1798),unstable,True,False,14,rdb.cc,cc,313,86,399
45deba91f80efabbf2933a8d66ccd6b1d521a56b,122602529+xq2010@users.noreply.github.com,2023-10-17 22:28:39+08:00,noreply@github.com,2023-10-17 22:28:39+08:00,Add the support of the load RDB command (#1798),unstable,True,False,14,rdb.h,h,31,9,40
45deba91f80efabbf2933a8d66ccd6b1d521a56b,122602529+xq2010@users.noreply.github.com,2023-10-17 22:28:39+08:00,noreply@github.com,2023-10-17 22:28:39+08:00,Add the support of the load RDB command (#1798),unstable,True,False,14,rdb_listpack.cc,cc,7,5,12
45deba91f80efabbf2933a8d66ccd6b1d521a56b,122602529+xq2010@users.noreply.github.com,2023-10-17 22:28:39+08:00,noreply@github.com,2023-10-17 22:28:39+08:00,Add the support of the load RDB command (#1798),unstable,True,False,14,rdb_zipmap.cc,cc,3,2,5
45deba91f80efabbf2933a8d66ccd6b1d521a56b,122602529+xq2010@users.noreply.github.com,2023-10-17 22:28:39+08:00,noreply@github.com,2023-10-17 22:28:39+08:00,Add the support of the load RDB command (#1798),unstable,True,False,14,redis_db.cc,cc,14,0,14
45deba91f80efabbf2933a8d66ccd6b1d521a56b,122602529+xq2010@users.noreply.github.com,2023-10-17 22:28:39+08:00,noreply@github.com,2023-10-17 22:28:39+08:00,Add the support of the load RDB command (#1798),unstable,True,False,14,redis_db.h,h,1,0,1
45deba91f80efabbf2933a8d66ccd6b1d521a56b,122602529+xq2010@users.noreply.github.com,2023-10-17 22:28:39+08:00,noreply@github.com,2023-10-17 22:28:39+08:00,Add the support of the load RDB command (#1798),unstable,True,False,14,endianconv.h,h,10,0,10
45deba91f80efabbf2933a8d66ccd6b1d521a56b,122602529+xq2010@users.noreply.github.com,2023-10-17 22:28:39+08:00,noreply@github.com,2023-10-17 22:28:39+08:00,Add the support of the load RDB command (#1798),unstable,True,False,14,rdb_stream_test.cc,cc,90,0,90
45deba91f80efabbf2933a8d66ccd6b1d521a56b,122602529+xq2010@users.noreply.github.com,2023-10-17 22:28:39+08:00,noreply@github.com,2023-10-17 22:28:39+08:00,Add the support of the load RDB command (#1798),unstable,True,False,14,rdb_test.cc,cc,312,0,312
45deba91f80efabbf2933a8d66ccd6b1d521a56b,122602529+xq2010@users.noreply.github.com,2023-10-17 22:28:39+08:00,noreply@github.com,2023-10-17 22:28:39+08:00,Add the support of the load RDB command (#1798),unstable,True,False,14,rdb_util.h,h,203,0,203
45deba91f80efabbf2933a8d66ccd6b1d521a56b,122602529+xq2010@users.noreply.github.com,2023-10-17 22:28:39+08:00,noreply@github.com,2023-10-17 22:28:39+08:00,Add the support of the load RDB command (#1798),unstable,True,False,14,test_base.h,h,2,0,2
ab9f8368d10a31280bbd356d1fb29ee5ed12f64d,aleks.raiden@gmail.com,2023-10-18 12:46:09+03:00,noreply@github.com,2023-10-18 18:46:09+09:00,Bump jsoncons to 0.171.1 (#1831),unstable,True,False,1,jsoncons.cmake,cmake,2,2,4
10465a4255369165d8674dd2b57974099e5bd7af,twice.mliu@gmail.com,2023-10-18 23:00:50+09:00,noreply@github.com,2023-10-18 23:00:50+09:00,Add subcommand and permission check to RDB command (#1834),unstable,True,False,1,cmd_server.cc,cc,15,5,20
31d62fd9a57cffe181b741ba57e9d80a0c41d392,85615957+Yangsx-1@users.noreply.github.com,2023-10-19 21:24:59+08:00,noreply@github.com,2023-10-19 21:24:59+08:00,Add support of the XGROUP SETID command (#1833),unstable,True,False,5,cmd_stream.cc,cc,33,0,33
31d62fd9a57cffe181b741ba57e9d80a0c41d392,85615957+Yangsx-1@users.noreply.github.com,2023-10-19 21:24:59+08:00,noreply@github.com,2023-10-19 21:24:59+08:00,Add support of the XGROUP SETID command (#1833),unstable,True,False,5,redis_stream.cc,cc,43,0,43
31d62fd9a57cffe181b741ba57e9d80a0c41d392,85615957+Yangsx-1@users.noreply.github.com,2023-10-19 21:24:59+08:00,noreply@github.com,2023-10-19 21:24:59+08:00,Add support of the XGROUP SETID command (#1833),unstable,True,False,5,redis_stream.h,h,2,0,2
31d62fd9a57cffe181b741ba57e9d80a0c41d392,85615957+Yangsx-1@users.noreply.github.com,2023-10-19 21:24:59+08:00,noreply@github.com,2023-10-19 21:24:59+08:00,Add support of the XGROUP SETID command (#1833),unstable,True,False,5,redis_stream_base.h,h,1,1,2
31d62fd9a57cffe181b741ba57e9d80a0c41d392,85615957+Yangsx-1@users.noreply.github.com,2023-10-19 21:24:59+08:00,noreply@github.com,2023-10-19 21:24:59+08:00,Add support of the XGROUP SETID command (#1833),unstable,True,False,5,stream_test.go,go,21,0,21
a618574f5ff2eb03255da66e4c9910969b4e0cce,maplewish117@gmail.com,2023-10-20 17:59:56+08:00,noreply@github.com,2023-10-20 18:59:56+09:00,RDB: style enhancement for rdb load (#1839),unstable,True,False,4,rdb_stream.cc,cc,13,9,22
a618574f5ff2eb03255da66e4c9910969b4e0cce,maplewish117@gmail.com,2023-10-20 17:59:56+08:00,noreply@github.com,2023-10-20 18:59:56+09:00,RDB: style enhancement for rdb load (#1839),unstable,True,False,4,rdb_stream.h,h,3,3,6
a618574f5ff2eb03255da66e4c9910969b4e0cce,maplewish117@gmail.com,2023-10-20 17:59:56+08:00,noreply@github.com,2023-10-20 18:59:56+09:00,RDB: style enhancement for rdb load (#1839),unstable,True,False,4,rdb.cc,cc,14,10,24
a618574f5ff2eb03255da66e4c9910969b4e0cce,maplewish117@gmail.com,2023-10-20 17:59:56+08:00,noreply@github.com,2023-10-20 18:59:56+09:00,RDB: style enhancement for rdb load (#1839),unstable,True,False,4,rdb_stream_test.cc,cc,5,6,11
411ebfeda0402dab1fb3889a5f06d4794a98b62a,728269388@qq.com,2023-10-20 20:57:51+08:00,noreply@github.com,2023-10-20 20:57:51+08:00,"Add the support of the json.arrappend command (#1837)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,cmd_json.cc,cc,25,1,26
411ebfeda0402dab1fb3889a5f06d4794a98b62a,728269388@qq.com,2023-10-20 20:57:51+08:00,noreply@github.com,2023-10-20 20:57:51+08:00,"Add the support of the json.arrappend command (#1837)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,json.h,h,18,0,18
411ebfeda0402dab1fb3889a5f06d4794a98b62a,728269388@qq.com,2023-10-20 20:57:51+08:00,noreply@github.com,2023-10-20 20:57:51+08:00,"Add the support of the json.arrappend command (#1837)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,redis_json.cc,cc,37,0,37
411ebfeda0402dab1fb3889a5f06d4794a98b62a,728269388@qq.com,2023-10-20 20:57:51+08:00,noreply@github.com,2023-10-20 20:57:51+08:00,"Add the support of the json.arrappend command (#1837)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,redis_json.h,h,2,0,2
411ebfeda0402dab1fb3889a5f06d4794a98b62a,728269388@qq.com,2023-10-20 20:57:51+08:00,noreply@github.com,2023-10-20 20:57:51+08:00,"Add the support of the json.arrappend command (#1837)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,json_test.cc,cc,41,0,41
411ebfeda0402dab1fb3889a5f06d4794a98b62a,728269388@qq.com,2023-10-20 20:57:51+08:00,noreply@github.com,2023-10-20 20:57:51+08:00,"Add the support of the json.arrappend command (#1837)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,6,json_test.go,go,29,0,29
012d5295d8232007c9a6252a31ff8e1c8e1d6e50,twice.mliu@gmail.com,2023-10-21 09:37:15+09:00,noreply@github.com,2023-10-21 09:37:15+09:00,Support format options for `JSON.GET` (#1840),unstable,True,False,7,cmd_json.cc,cc,46,2,48
012d5295d8232007c9a6252a31ff8e1c8e1d6e50,twice.mliu@gmail.com,2023-10-21 09:37:15+09:00,noreply@github.com,2023-10-21 09:37:15+09:00,Support format options for `JSON.GET` (#1840),unstable,True,False,7,config.cc,cc,1,0,1
012d5295d8232007c9a6252a31ff8e1c8e1d6e50,twice.mliu@gmail.com,2023-10-21 09:37:15+09:00,noreply@github.com,2023-10-21 09:37:15+09:00,Support format options for `JSON.GET` (#1840),unstable,True,False,7,config.h,h,3,0,3
012d5295d8232007c9a6252a31ff8e1c8e1d6e50,twice.mliu@gmail.com,2023-10-21 09:37:15+09:00,noreply@github.com,2023-10-21 09:37:15+09:00,Support format options for `JSON.GET` (#1840),unstable,True,False,7,json.h,h,49,8,57
012d5295d8232007c9a6252a31ff8e1c8e1d6e50,twice.mliu@gmail.com,2023-10-21 09:37:15+09:00,noreply@github.com,2023-10-21 09:37:15+09:00,Support format options for `JSON.GET` (#1840),unstable,True,False,7,redis_json.cc,cc,6,3,9
012d5295d8232007c9a6252a31ff8e1c8e1d6e50,twice.mliu@gmail.com,2023-10-21 09:37:15+09:00,noreply@github.com,2023-10-21 09:37:15+09:00,Support format options for `JSON.GET` (#1840),unstable,True,False,7,json_test.cc,cc,41,22,63
012d5295d8232007c9a6252a31ff8e1c8e1d6e50,twice.mliu@gmail.com,2023-10-21 09:37:15+09:00,noreply@github.com,2023-10-21 09:37:15+09:00,Support format options for `JSON.GET` (#1840),unstable,True,False,7,json_test.go,go,9,0,9
0276f39ba3cd5f531763c3ffca69cce199fe5338,twice.mliu@gmail.com,2023-10-21 11:32:11+09:00,noreply@github.com,2023-10-21 11:32:11+09:00,Fix output when key is not found in JSON.GET (#1845),unstable,True,False,2,cmd_json.cc,cc,4,0,4
0276f39ba3cd5f531763c3ffca69cce199fe5338,twice.mliu@gmail.com,2023-10-21 11:32:11+09:00,noreply@github.com,2023-10-21 11:32:11+09:00,Fix output when key is not found in JSON.GET (#1845),unstable,True,False,2,json_test.go,go,2,0,2
968551d5f1a202e71808971022d720417ee8430d,twice.mliu@gmail.com,2023-10-21 15:49:59+09:00,noreply@github.com,2023-10-21 15:49:59+09:00,Add method to read JSON from storage for simplifying code (#1843),unstable,True,False,3,kvrocks.conf,conf,5,0,5
968551d5f1a202e71808971022d720417ee8430d,twice.mliu@gmail.com,2023-10-21 15:49:59+09:00,noreply@github.com,2023-10-21 15:49:59+09:00,Add method to read JSON from storage for simplifying code (#1843),unstable,True,False,3,redis_json.cc,cc,24,31,55
968551d5f1a202e71808971022d720417ee8430d,twice.mliu@gmail.com,2023-10-21 15:49:59+09:00,noreply@github.com,2023-10-21 15:49:59+09:00,Add method to read JSON from storage for simplifying code (#1843),unstable,True,False,3,redis_json.h,h,2,0,2
0bd1f948e1cd12df6e5658ac81e94631a656069a,hulk.website@gmail.com,2023-10-21 22:01:28+08:00,noreply@github.com,2023-10-21 22:01:28+08:00,"Add the support of JSON.TYPE command (#1847)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,cmd_json.cc,cc,26,0,26
0bd1f948e1cd12df6e5658ac81e94631a656069a,hulk.website@gmail.com,2023-10-21 22:01:28+08:00,noreply@github.com,2023-10-21 22:01:28+08:00,"Add the support of JSON.TYPE command (#1847)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,json.h,h,38,0,38
0bd1f948e1cd12df6e5658ac81e94631a656069a,hulk.website@gmail.com,2023-10-21 22:01:28+08:00,noreply@github.com,2023-10-21 22:01:28+08:00,"Add the support of JSON.TYPE command (#1847)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,redis_json.cc,cc,12,0,12
0bd1f948e1cd12df6e5658ac81e94631a656069a,hulk.website@gmail.com,2023-10-21 22:01:28+08:00,noreply@github.com,2023-10-21 22:01:28+08:00,"Add the support of JSON.TYPE command (#1847)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,redis_json.h,h,1,0,1
0bd1f948e1cd12df6e5658ac81e94631a656069a,hulk.website@gmail.com,2023-10-21 22:01:28+08:00,noreply@github.com,2023-10-21 22:01:28+08:00,"Add the support of JSON.TYPE command (#1847)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,json_test.go,go,33,0,33
43bf8ef7c323dc9d90097e25e16e85e6a8ce3379,twice.mliu@gmail.com,2023-10-22 00:38:51+09:00,noreply@github.com,2023-10-22 00:38:51+09:00,"Add type name of JSON in redis_metadata.h (#1848)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,redis_metadata.h,h,2,2,4
43bf8ef7c323dc9d90097e25e16e85e6a8ce3379,twice.mliu@gmail.com,2023-10-22 00:38:51+09:00,noreply@github.com,2023-10-22 00:38:51+09:00,"Add type name of JSON in redis_metadata.h (#1848)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,json_test.go,go,1,0,1
af13343f392a834085656b56511e6d9bdc0e4247,twice.mliu@gmail.com,2023-10-22 02:11:27+09:00,noreply@github.com,2023-10-22 02:11:27+09:00,Fix code style of Json::ArrAppend (#1846),unstable,True,False,5,cmd_json.cc,cc,2,2,4
af13343f392a834085656b56511e6d9bdc0e4247,twice.mliu@gmail.com,2023-10-22 02:11:27+09:00,noreply@github.com,2023-10-22 02:11:27+09:00,Fix code style of Json::ArrAppend (#1846),unstable,True,False,5,json.h,h,8,6,14
af13343f392a834085656b56511e6d9bdc0e4247,twice.mliu@gmail.com,2023-10-22 02:11:27+09:00,noreply@github.com,2023-10-22 02:11:27+09:00,Fix code style of Json::ArrAppend (#1846),unstable,True,False,5,redis_json.cc,cc,3,2,5
af13343f392a834085656b56511e6d9bdc0e4247,twice.mliu@gmail.com,2023-10-22 02:11:27+09:00,noreply@github.com,2023-10-22 02:11:27+09:00,Fix code style of Json::ArrAppend (#1846),unstable,True,False,5,redis_json.h,h,1,1,2
af13343f392a834085656b56511e6d9bdc0e4247,twice.mliu@gmail.com,2023-10-22 02:11:27+09:00,noreply@github.com,2023-10-22 02:11:27+09:00,Fix code style of Json::ArrAppend (#1846),unstable,True,False,5,json_test.cc,cc,3,1,4
8b542005c6aeb5c42f8895638798e3e450f35c76,maplewish117@gmail.com,2023-10-22 09:02:06+08:00,noreply@github.com,2023-10-22 10:02:06+09:00,"JSON: Fix arity of JSON.SET (#1849)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,cmd_json.cc,cc,1,1,2
8b542005c6aeb5c42f8895638798e3e450f35c76,maplewish117@gmail.com,2023-10-22 09:02:06+08:00,noreply@github.com,2023-10-22 10:02:06+09:00,"JSON: Fix arity of JSON.SET (#1849)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,json_test.go,go,1,0,1
35e041f628847d67a75e03573ac29265ba046ede,48602080+2rueSid@users.noreply.github.com,2023-10-24 07:14:18-04:00,noreply@github.com,2023-10-24 20:14:18+09:00,Support for the JSON.CLEAR command (#1850),unstable,True,False,6,cmd_json.cc,cc,25,1,26
35e041f628847d67a75e03573ac29265ba046ede,48602080+2rueSid@users.noreply.github.com,2023-10-24 07:14:18-04:00,noreply@github.com,2023-10-24 20:14:18+09:00,Support for the JSON.CLEAR command (#1850),unstable,True,False,6,json.h,h,30,0,30
35e041f628847d67a75e03573ac29265ba046ede,48602080+2rueSid@users.noreply.github.com,2023-10-24 07:14:18-04:00,noreply@github.com,2023-10-24 20:14:18+09:00,Support for the JSON.CLEAR command (#1850),unstable,True,False,6,redis_json.cc,cc,20,0,20
35e041f628847d67a75e03573ac29265ba046ede,48602080+2rueSid@users.noreply.github.com,2023-10-24 07:14:18-04:00,noreply@github.com,2023-10-24 20:14:18+09:00,Support for the JSON.CLEAR command (#1850),unstable,True,False,6,redis_json.h,h,1,0,1
35e041f628847d67a75e03573ac29265ba046ede,48602080+2rueSid@users.noreply.github.com,2023-10-24 07:14:18-04:00,noreply@github.com,2023-10-24 20:14:18+09:00,Support for the JSON.CLEAR command (#1850),unstable,True,False,6,json_test.cc,cc,44,0,44
35e041f628847d67a75e03573ac29265ba046ede,48602080+2rueSid@users.noreply.github.com,2023-10-24 07:14:18-04:00,noreply@github.com,2023-10-24 20:14:18+09:00,Support for the JSON.CLEAR command (#1850),unstable,True,False,6,json_test.go,go,22,0,22
7598e8d9eebffb6a6cf0bb16bfa56877b9e3dc4c,twice.mliu@gmail.com,2023-10-24 22:19:20+09:00,noreply@github.com,2023-10-24 22:19:20+09:00,Make a compile error while facing unused variables (#1854),unstable,True,False,1,CMakeLists.txt,txt,2,1,3
eaced67e7a7c35a3fc8be24ca8dcaab45fbd9ffa,twice.mliu@gmail.com,2023-10-25 17:54:36+09:00,noreply@github.com,2023-10-25 17:54:36+09:00,Fix status mis-return in JSON.CLEAR and polish code style (#1853),unstable,True,False,5,cmd_json.cc,cc,1,1,2
eaced67e7a7c35a3fc8be24ca8dcaab45fbd9ffa,twice.mliu@gmail.com,2023-10-25 17:54:36+09:00,noreply@github.com,2023-10-25 17:54:36+09:00,Fix status mis-return in JSON.CLEAR and polish code style (#1853),unstable,True,False,5,json.h,h,31,35,66
eaced67e7a7c35a3fc8be24ca8dcaab45fbd9ffa,twice.mliu@gmail.com,2023-10-25 17:54:36+09:00,noreply@github.com,2023-10-25 17:54:36+09:00,Fix status mis-return in JSON.CLEAR and polish code style (#1853),unstable,True,False,5,redis_json.cc,cc,8,4,12
eaced67e7a7c35a3fc8be24ca8dcaab45fbd9ffa,twice.mliu@gmail.com,2023-10-25 17:54:36+09:00,noreply@github.com,2023-10-25 17:54:36+09:00,Fix status mis-return in JSON.CLEAR and polish code style (#1853),unstable,True,False,5,redis_json.h,h,1,1,2
eaced67e7a7c35a3fc8be24ca8dcaab45fbd9ffa,twice.mliu@gmail.com,2023-10-25 17:54:36+09:00,noreply@github.com,2023-10-25 17:54:36+09:00,Fix status mis-return in JSON.CLEAR and polish code style (#1853),unstable,True,False,5,json_test.cc,cc,1,1,2
1d5e3df80c271ae33dffd5d2c4ea59ccc52458f9,aleks.raiden@gmail.com,2023-10-26 12:53:37+03:00,noreply@github.com,2023-10-26 18:53:37+09:00,Bump speedb to 2.7.0 (#1857),unstable,True,False,1,speedb.cmake,cmake,2,2,4
6a02fade89a91fe5c4c339c4187fb2d34e5f76d4,tanziyi0925@gmail.com,2023-10-26 22:31:46+08:00,noreply@github.com,2023-10-26 22:31:46+08:00,Support for the JSON.ARRLEN command (#1856),unstable,True,False,6,cmd_json.cc,cc,35,1,36
6a02fade89a91fe5c4c339c4187fb2d34e5f76d4,tanziyi0925@gmail.com,2023-10-26 22:31:46+08:00,noreply@github.com,2023-10-26 22:31:46+08:00,Support for the JSON.ARRLEN command (#1856),unstable,True,False,6,json.h,h,17,0,17
6a02fade89a91fe5c4c339c4187fb2d34e5f76d4,tanziyi0925@gmail.com,2023-10-26 22:31:46+08:00,noreply@github.com,2023-10-26 22:31:46+08:00,Support for the JSON.ARRLEN command (#1856),unstable,True,False,6,redis_json.cc,cc,14,0,14
6a02fade89a91fe5c4c339c4187fb2d34e5f76d4,tanziyi0925@gmail.com,2023-10-26 22:31:46+08:00,noreply@github.com,2023-10-26 22:31:46+08:00,Support for the JSON.ARRLEN command (#1856),unstable,True,False,6,redis_json.h,h,2,0,2
6a02fade89a91fe5c4c339c4187fb2d34e5f76d4,tanziyi0925@gmail.com,2023-10-26 22:31:46+08:00,noreply@github.com,2023-10-26 22:31:46+08:00,Support for the JSON.ARRLEN command (#1856),unstable,True,False,6,json_test.cc,cc,47,0,47
6a02fade89a91fe5c4c339c4187fb2d34e5f76d4,tanziyi0925@gmail.com,2023-10-26 22:31:46+08:00,noreply@github.com,2023-10-26 22:31:46+08:00,Support for the JSON.ARRLEN command (#1856),unstable,True,False,6,json_test.go,go,33,0,33
a453d384254f767ae7b7d2a2cb1a6a5f038ce121,twice.mliu@gmail.com,2023-10-28 21:33:45+09:00,noreply@github.com,2023-10-28 21:33:45+09:00,Refactor command utilities to class methods (#1858),unstable,True,False,10,cluster.cc,cc,1,1,2
a453d384254f767ae7b7d2a2cb1a6a5f038ce121,twice.mliu@gmail.com,2023-10-28 21:33:45+09:00,noreply@github.com,2023-10-28 21:33:45+09:00,Refactor command utilities to class methods (#1858),unstable,True,False,10,cmd_cluster.cc,cc,1,1,2
a453d384254f767ae7b7d2a2cb1a6a5f038ce121,twice.mliu@gmail.com,2023-10-28 21:33:45+09:00,noreply@github.com,2023-10-28 21:33:45+09:00,Refactor command utilities to class methods (#1858),unstable,True,False,10,cmd_server.cc,cc,7,7,14
a453d384254f767ae7b7d2a2cb1a6a5f038ce121,twice.mliu@gmail.com,2023-10-28 21:33:45+09:00,noreply@github.com,2023-10-28 21:33:45+09:00,Refactor command utilities to class methods (#1858),unstable,True,False,10,commander.cc,cc,19,19,38
a453d384254f767ae7b7d2a2cb1a6a5f038ce121,twice.mliu@gmail.com,2023-10-28 21:33:45+09:00,noreply@github.com,2023-10-28 21:33:45+09:00,Refactor command utilities to class methods (#1858),unstable,True,False,10,commander.h,h,28,24,52
a453d384254f767ae7b7d2a2cb1a6a5f038ce121,twice.mliu@gmail.com,2023-10-28 21:33:45+09:00,noreply@github.com,2023-10-28 21:33:45+09:00,Refactor command utilities to class methods (#1858),unstable,True,False,10,config.cc,cc,2,2,4
a453d384254f767ae7b7d2a2cb1a6a5f038ce121,twice.mliu@gmail.com,2023-10-28 21:33:45+09:00,noreply@github.com,2023-10-28 21:33:45+09:00,Refactor command utilities to class methods (#1858),unstable,True,False,10,server.cc,cc,2,2,4
a453d384254f767ae7b7d2a2cb1a6a5f038ce121,twice.mliu@gmail.com,2023-10-28 21:33:45+09:00,noreply@github.com,2023-10-28 21:33:45+09:00,Refactor command utilities to class methods (#1858),unstable,True,False,10,scripting.cc,cc,1,1,2
a453d384254f767ae7b7d2a2cb1a6a5f038ce121,twice.mliu@gmail.com,2023-10-28 21:33:45+09:00,noreply@github.com,2023-10-28 21:33:45+09:00,Refactor command utilities to class methods (#1858),unstable,True,False,10,cluster_test.cc,cc,12,12,24
a453d384254f767ae7b7d2a2cb1a6a5f038ce121,twice.mliu@gmail.com,2023-10-28 21:33:45+09:00,noreply@github.com,2023-10-28 21:33:45+09:00,Refactor command utilities to class methods (#1858),unstable,True,False,10,config_test.cc,cc,3,3,6
b29ad21d86959a22b577debf3ca233c31dc2d775,hulk.website@gmail.com,2023-10-30 09:13:54+08:00,noreply@github.com,2023-10-30 09:13:54+08:00,"Allow to change the worker thread number in-flight (#1855)

Scaling up is as simple as starting new threads and adding them to the worker pool.
But scaling down is a bit complex since we need to migrate existing connections from
the to-be-removed workers to survived workers. This process is NOT so easy for the sake
of the blocking commands that will store its context(includes fd and owner pointer) in
different global variables and we need to find out and remove them. As far as I know,
it contains the below commands:

- All LIST blocking command
- Subscribe/PSubscribe
- XREAD

To make it simple, we would like to close those connections if the last command is
a blocking command. And we can improve this if any users complain about this.",unstable,True,False,13,blocking_commander.h,h,1,0,1
b29ad21d86959a22b577debf3ca233c31dc2d775,hulk.website@gmail.com,2023-10-30 09:13:54+08:00,noreply@github.com,2023-10-30 09:13:54+08:00,"Allow to change the worker thread number in-flight (#1855)

Scaling up is as simple as starting new threads and adding them to the worker pool.
But scaling down is a bit complex since we need to migrate existing connections from
the to-be-removed workers to survived workers. This process is NOT so easy for the sake
of the blocking commands that will store its context(includes fd and owner pointer) in
different global variables and we need to find out and remove them. As far as I know,
it contains the below commands:

- All LIST blocking command
- Subscribe/PSubscribe
- XREAD

To make it simple, we would like to close those connections if the last command is
a blocking command. And we can improve this if any users complain about this.",unstable,True,False,13,cmd_pubsub.cc,cc,2,0,2
b29ad21d86959a22b577debf3ca233c31dc2d775,hulk.website@gmail.com,2023-10-30 09:13:54+08:00,noreply@github.com,2023-10-30 09:13:54+08:00,"Allow to change the worker thread number in-flight (#1855)

Scaling up is as simple as starting new threads and adding them to the worker pool.
But scaling down is a bit complex since we need to migrate existing connections from
the to-be-removed workers to survived workers. This process is NOT so easy for the sake
of the blocking commands that will store its context(includes fd and owner pointer) in
different global variables and we need to find out and remove them. As far as I know,
it contains the below commands:

- All LIST blocking command
- Subscribe/PSubscribe
- XREAD

To make it simple, we would like to close those connections if the last command is
a blocking command. And we can improve this if any users complain about this.",unstable,True,False,13,cmd_stream.cc,cc,1,0,1
b29ad21d86959a22b577debf3ca233c31dc2d775,hulk.website@gmail.com,2023-10-30 09:13:54+08:00,noreply@github.com,2023-10-30 09:13:54+08:00,"Allow to change the worker thread number in-flight (#1855)

Scaling up is as simple as starting new threads and adding them to the worker pool.
But scaling down is a bit complex since we need to migrate existing connections from
the to-be-removed workers to survived workers. This process is NOT so easy for the sake
of the blocking commands that will store its context(includes fd and owner pointer) in
different global variables and we need to find out and remove them. As far as I know,
it contains the below commands:

- All LIST blocking command
- Subscribe/PSubscribe
- XREAD

To make it simple, we would like to close those connections if the last command is
a blocking command. And we can improve this if any users complain about this.",unstable,True,False,13,commander.h,h,1,0,1
b29ad21d86959a22b577debf3ca233c31dc2d775,hulk.website@gmail.com,2023-10-30 09:13:54+08:00,noreply@github.com,2023-10-30 09:13:54+08:00,"Allow to change the worker thread number in-flight (#1855)

Scaling up is as simple as starting new threads and adding them to the worker pool.
But scaling down is a bit complex since we need to migrate existing connections from
the to-be-removed workers to survived workers. This process is NOT so easy for the sake
of the blocking commands that will store its context(includes fd and owner pointer) in
different global variables and we need to find out and remove them. As far as I know,
it contains the below commands:

- All LIST blocking command
- Subscribe/PSubscribe
- XREAD

To make it simple, we would like to close those connections if the last command is
a blocking command. And we can improve this if any users complain about this.",unstable,True,False,13,config.cc,cc,292,285,577
b29ad21d86959a22b577debf3ca233c31dc2d775,hulk.website@gmail.com,2023-10-30 09:13:54+08:00,noreply@github.com,2023-10-30 09:13:54+08:00,"Allow to change the worker thread number in-flight (#1855)

Scaling up is as simple as starting new threads and adding them to the worker pool.
But scaling down is a bit complex since we need to migrate existing connections from
the to-be-removed workers to survived workers. This process is NOT so easy for the sake
of the blocking commands that will store its context(includes fd and owner pointer) in
different global variables and we need to find out and remove them. As far as I know,
it contains the below commands:

- All LIST blocking command
- Subscribe/PSubscribe
- XREAD

To make it simple, we would like to close those connections if the last command is
a blocking command. And we can improve this if any users complain about this.",unstable,True,False,13,redis_connection.cc,cc,1,0,1
b29ad21d86959a22b577debf3ca233c31dc2d775,hulk.website@gmail.com,2023-10-30 09:13:54+08:00,noreply@github.com,2023-10-30 09:13:54+08:00,"Allow to change the worker thread number in-flight (#1855)

Scaling up is as simple as starting new threads and adding them to the worker pool.
But scaling down is a bit complex since we need to migrate existing connections from
the to-be-removed workers to survived workers. This process is NOT so easy for the sake
of the blocking commands that will store its context(includes fd and owner pointer) in
different global variables and we need to find out and remove them. As far as I know,
it contains the below commands:

- All LIST blocking command
- Subscribe/PSubscribe
- XREAD

To make it simple, we would like to close those connections if the last command is
a blocking command. And we can improve this if any users complain about this.",unstable,True,False,13,redis_connection.h,h,1,0,1
b29ad21d86959a22b577debf3ca233c31dc2d775,hulk.website@gmail.com,2023-10-30 09:13:54+08:00,noreply@github.com,2023-10-30 09:13:54+08:00,"Allow to change the worker thread number in-flight (#1855)

Scaling up is as simple as starting new threads and adding them to the worker pool.
But scaling down is a bit complex since we need to migrate existing connections from
the to-be-removed workers to survived workers. This process is NOT so easy for the sake
of the blocking commands that will store its context(includes fd and owner pointer) in
different global variables and we need to find out and remove them. As far as I know,
it contains the below commands:

- All LIST blocking command
- Subscribe/PSubscribe
- XREAD

To make it simple, we would like to close those connections if the last command is
a blocking command. And we can improve this if any users complain about this.",unstable,True,False,13,server.cc,cc,69,14,83
b29ad21d86959a22b577debf3ca233c31dc2d775,hulk.website@gmail.com,2023-10-30 09:13:54+08:00,noreply@github.com,2023-10-30 09:13:54+08:00,"Allow to change the worker thread number in-flight (#1855)

Scaling up is as simple as starting new threads and adding them to the worker pool.
But scaling down is a bit complex since we need to migrate existing connections from
the to-be-removed workers to survived workers. This process is NOT so easy for the sake
of the blocking commands that will store its context(includes fd and owner pointer) in
different global variables and we need to find out and remove them. As far as I know,
it contains the below commands:

- All LIST blocking command
- Subscribe/PSubscribe
- XREAD

To make it simple, we would like to close those connections if the last command is
a blocking command. And we can improve this if any users complain about this.",unstable,True,False,13,server.h,h,6,1,7
b29ad21d86959a22b577debf3ca233c31dc2d775,hulk.website@gmail.com,2023-10-30 09:13:54+08:00,noreply@github.com,2023-10-30 09:13:54+08:00,"Allow to change the worker thread number in-flight (#1855)

Scaling up is as simple as starting new threads and adding them to the worker pool.
But scaling down is a bit complex since we need to migrate existing connections from
the to-be-removed workers to survived workers. This process is NOT so easy for the sake
of the blocking commands that will store its context(includes fd and owner pointer) in
different global variables and we need to find out and remove them. As far as I know,
it contains the below commands:

- All LIST blocking command
- Subscribe/PSubscribe
- XREAD

To make it simple, we would like to close those connections if the last command is
a blocking command. And we can improve this if any users complain about this.",unstable,True,False,13,worker.cc,cc,25,0,25
b29ad21d86959a22b577debf3ca233c31dc2d775,hulk.website@gmail.com,2023-10-30 09:13:54+08:00,noreply@github.com,2023-10-30 09:13:54+08:00,"Allow to change the worker thread number in-flight (#1855)

Scaling up is as simple as starting new threads and adding them to the worker pool.
But scaling down is a bit complex since we need to migrate existing connections from
the to-be-removed workers to survived workers. This process is NOT so easy for the sake
of the blocking commands that will store its context(includes fd and owner pointer) in
different global variables and we need to find out and remove them. As far as I know,
it contains the below commands:

- All LIST blocking command
- Subscribe/PSubscribe
- XREAD

To make it simple, we would like to close those connections if the last command is
a blocking command. And we can improve this if any users complain about this.",unstable,True,False,13,worker.h,h,2,0,2
b29ad21d86959a22b577debf3ca233c31dc2d775,hulk.website@gmail.com,2023-10-30 09:13:54+08:00,noreply@github.com,2023-10-30 09:13:54+08:00,"Allow to change the worker thread number in-flight (#1855)

Scaling up is as simple as starting new threads and adding them to the worker pool.
But scaling down is a bit complex since we need to migrate existing connections from
the to-be-removed workers to survived workers. This process is NOT so easy for the sake
of the blocking commands that will store its context(includes fd and owner pointer) in
different global variables and we need to find out and remove them. As far as I know,
it contains the below commands:

- All LIST blocking command
- Subscribe/PSubscribe
- XREAD

To make it simple, we would like to close those connections if the last command is
a blocking command. And we can improve this if any users complain about this.",unstable,True,False,13,config_test.cc,cc,1,1,2
b29ad21d86959a22b577debf3ca233c31dc2d775,hulk.website@gmail.com,2023-10-30 09:13:54+08:00,noreply@github.com,2023-10-30 09:13:54+08:00,"Allow to change the worker thread number in-flight (#1855)

Scaling up is as simple as starting new threads and adding them to the worker pool.
But scaling down is a bit complex since we need to migrate existing connections from
the to-be-removed workers to survived workers. This process is NOT so easy for the sake
of the blocking commands that will store its context(includes fd and owner pointer) in
different global variables and we need to find out and remove them. As far as I know,
it contains the below commands:

- All LIST blocking command
- Subscribe/PSubscribe
- XREAD

To make it simple, we would like to close those connections if the last command is
a blocking command. And we can improve this if any users complain about this.",unstable,True,False,13,config_test.go,go,92,0,92
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cluster.cc,cc,21,21,42
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cluster.h,h,2,2,4
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,slot_import.cc,cc,5,5,10
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,slot_import.h,h,2,2,4
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,slot_migrate.cc,cc,9,9,18
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,slot_migrate.h,h,2,2,4
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,sync_migrate_context.cc,cc,2,2,4
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,sync_migrate_context.h,h,2,2,4
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_bit.cc,cc,10,10,20
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_bloom_filter.cc,cc,16,16,32
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_cluster.cc,cc,16,16,32
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_geo.cc,cc,16,16,32
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_hash.cc,cc,34,34,68
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_json.cc,cc,8,8,16
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_key.cc,cc,24,24,48
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_list.cc,cc,46,46,92
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_pubsub.cc,cc,12,12,24
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_replication.cc,cc,28,28,56
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_script.cc,cc,7,7,14
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_server.cc,cc,82,82,164
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_set.cc,cc,36,36,72
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_sortedint.cc,cc,12,12,24
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_stream.cc,cc,30,30,60
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_string.cc,cc,48,48,96
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_txn.cc,cc,12,12,24
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,cmd_zset.cc,cc,57,57,114
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,commander.h,h,1,1,2
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,scan_base.h,h,4,4,8
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,config.cc,cc,2,2,4
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,config.h,h,1,1,2
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,redis_connection.cc,cc,28,28,56
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,redis_connection.h,h,2,2,4
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,redis_request.cc,cc,3,3,6
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,redis_request.h,h,2,2,4
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,worker.cc,cc,20,20,40
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,worker.h,h,2,2,4
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,scripting.cc,cc,2,2,4
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,scripting.h,h,1,1,2
1962b86763d7628796812e4b718e9d5265247f77,hulk.website@gmail.com,2023-10-30 12:25:13+08:00,noreply@github.com,2023-10-30 12:25:13+08:00,chore: unify server abbr as srv (#1861),unstable,True,False,39,expire_test.go,go,3,3,6
1142a9d87ac6c404dcf4e0d06778af9ae738539b,twice.mliu@gmail.com,2023-10-30 20:46:38+09:00,noreply@github.com,2023-10-30 20:46:38+09:00,chore: polish wording and code block style in README (#1862),unstable,True,False,1,README.md,md,4,4,8
6836f2417ad08037f5cdb1f073c158dacf548d75,8042833@qq.com,2023-11-03 08:08:39+08:00,noreply@github.com,2023-11-03 08:08:39+08:00,only run publish-nightly action on the main repo (#1868),unstable,True,False,1,nightly.yaml,yaml,1,0,1
80b493c697e1dfed9d4099e51566f6ea11242a38,twice.mliu@gmail.com,2023-11-04 00:49:19+09:00,noreply@github.com,2023-11-04 00:49:19+09:00,Add CBOR as a storage format for the JSON data type (#1871),unstable,True,False,12,kvrocks.conf,conf,7,0,7
80b493c697e1dfed9d4099e51566f6ea11242a38,twice.mliu@gmail.com,2023-11-04 00:49:19+09:00,noreply@github.com,2023-11-04 00:49:19+09:00,Add CBOR as a storage format for the JSON data type (#1871),unstable,True,False,12,main.cc,cc,1,1,2
80b493c697e1dfed9d4099e51566f6ea11242a38,twice.mliu@gmail.com,2023-11-04 00:49:19+09:00,noreply@github.com,2023-11-04 00:49:19+09:00,Add CBOR as a storage format for the JSON data type (#1871),unstable,True,False,12,cmd_json.cc,cc,19,0,19
80b493c697e1dfed9d4099e51566f6ea11242a38,twice.mliu@gmail.com,2023-11-04 00:49:19+09:00,noreply@github.com,2023-11-04 00:49:19+09:00,Add CBOR as a storage format for the JSON data type (#1871),unstable,True,False,12,config.cc,cc,15,7,22
80b493c697e1dfed9d4099e51566f6ea11242a38,twice.mliu@gmail.com,2023-11-04 00:49:19+09:00,noreply@github.com,2023-11-04 00:49:19+09:00,Add CBOR as a storage format for the JSON data type (#1871),unstable,True,False,12,config.h,h,4,2,6
80b493c697e1dfed9d4099e51566f6ea11242a38,twice.mliu@gmail.com,2023-11-04 00:49:19+09:00,noreply@github.com,2023-11-04 00:49:19+09:00,Add CBOR as a storage format for the JSON data type (#1871),unstable,True,False,12,config_type.h,h,18,14,32
80b493c697e1dfed9d4099e51566f6ea11242a38,twice.mliu@gmail.com,2023-11-04 00:49:19+09:00,noreply@github.com,2023-11-04 00:49:19+09:00,Add CBOR as a storage format for the JSON data type (#1871),unstable,True,False,12,redis_metadata.h,h,1,0,1
80b493c697e1dfed9d4099e51566f6ea11242a38,twice.mliu@gmail.com,2023-11-04 00:49:19+09:00,noreply@github.com,2023-11-04 00:49:19+09:00,Add CBOR as a storage format for the JSON data type (#1871),unstable,True,False,12,storage.cc,cc,2,2,4
80b493c697e1dfed9d4099e51566f6ea11242a38,twice.mliu@gmail.com,2023-11-04 00:49:19+09:00,noreply@github.com,2023-11-04 00:49:19+09:00,Add CBOR as a storage format for the JSON data type (#1871),unstable,True,False,12,json.h,h,38,0,38
80b493c697e1dfed9d4099e51566f6ea11242a38,twice.mliu@gmail.com,2023-11-04 00:49:19+09:00,noreply@github.com,2023-11-04 00:49:19+09:00,Add CBOR as a storage format for the JSON data type (#1871),unstable,True,False,12,redis_json.cc,cc,35,6,41
80b493c697e1dfed9d4099e51566f6ea11242a38,twice.mliu@gmail.com,2023-11-04 00:49:19+09:00,noreply@github.com,2023-11-04 00:49:19+09:00,Add CBOR as a storage format for the JSON data type (#1871),unstable,True,False,12,redis_json.h,h,1,0,1
80b493c697e1dfed9d4099e51566f6ea11242a38,twice.mliu@gmail.com,2023-11-04 00:49:19+09:00,noreply@github.com,2023-11-04 00:49:19+09:00,Add CBOR as a storage format for the JSON data type (#1871),unstable,True,False,12,json_test.go,go,11,0,11
e0fec89cca8eca61f2d4edbafb73360f82bf0342,64510284+jyf111@users.noreply.github.com,2023-11-05 16:43:00+08:00,noreply@github.com,2023-11-05 17:43:00+09:00,"Support for the JSON.ARRPOP command (#1874)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,6,cmd_json.cc,cc,42,1,43
e0fec89cca8eca61f2d4edbafb73360f82bf0342,64510284+jyf111@users.noreply.github.com,2023-11-05 16:43:00+08:00,noreply@github.com,2023-11-05 17:43:00+09:00,"Support for the JSON.ARRPOP command (#1874)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,6,json.h,h,27,0,27
e0fec89cca8eca61f2d4edbafb73360f82bf0342,64510284+jyf111@users.noreply.github.com,2023-11-05 16:43:00+08:00,noreply@github.com,2023-11-05 17:43:00+09:00,"Support for the JSON.ARRPOP command (#1874)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,6,redis_json.cc,cc,22,0,22
e0fec89cca8eca61f2d4edbafb73360f82bf0342,64510284+jyf111@users.noreply.github.com,2023-11-05 16:43:00+08:00,noreply@github.com,2023-11-05 17:43:00+09:00,"Support for the JSON.ARRPOP command (#1874)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,6,redis_json.h,h,2,0,2
e0fec89cca8eca61f2d4edbafb73360f82bf0342,64510284+jyf111@users.noreply.github.com,2023-11-05 16:43:00+08:00,noreply@github.com,2023-11-05 17:43:00+09:00,"Support for the JSON.ARRPOP command (#1874)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,6,json_test.cc,cc,68,0,68
e0fec89cca8eca61f2d4edbafb73360f82bf0342,64510284+jyf111@users.noreply.github.com,2023-11-05 16:43:00+08:00,noreply@github.com,2023-11-05 17:43:00+09:00,"Support for the JSON.ARRPOP command (#1874)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,6,json_test.go,go,24,0,24
0ea85d42ddcb7ad22347f5b19672a30762f765ac,raffertyyu@tencent.com,2023-11-06 17:58:07+08:00,noreply@github.com,2023-11-06 17:58:07+08:00,Add column family parameter to Compact methon (#1878),unstable,True,False,5,server.cc,cc,1,1,2
0ea85d42ddcb7ad22347f5b19672a30762f765ac,raffertyyu@tencent.com,2023-11-06 17:58:07+08:00,noreply@github.com,2023-11-06 17:58:07+08:00,Add column family parameter to Compact methon (#1878),unstable,True,False,5,compaction_checker.cc,cc,3,3,6
0ea85d42ddcb7ad22347f5b19672a30762f765ac,raffertyyu@tencent.com,2023-11-06 17:58:07+08:00,noreply@github.com,2023-11-06 17:58:07+08:00,Add column family parameter to Compact methon (#1878),unstable,True,False,5,storage.cc,cc,3,2,5
0ea85d42ddcb7ad22347f5b19672a30762f765ac,raffertyyu@tencent.com,2023-11-06 17:58:07+08:00,noreply@github.com,2023-11-06 17:58:07+08:00,Add column family parameter to Compact methon (#1878),unstable,True,False,5,storage.h,h,2,1,3
0ea85d42ddcb7ad22347f5b19672a30762f765ac,raffertyyu@tencent.com,2023-11-06 17:58:07+08:00,noreply@github.com,2023-11-06 17:58:07+08:00,Add column family parameter to Compact methon (#1878),unstable,True,False,5,compact_test.cc,cc,5,5,10
eb250d0ce2c0b427b6a08074dfdc3f24f563c02b,twice.mliu@gmail.com,2023-11-06 20:15:50+09:00,noreply@github.com,2023-11-06 20:15:50+09:00,"Fix unescaped characters in configuration rewriting (#1880)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,config.cc,cc,1,1,2
a79a386a71095b5a700c56b3d557cb79119618bb,8042833@qq.com,2023-11-07 13:01:10+08:00,noreply@github.com,2023-11-07 13:01:10+08:00,Support for the JSON.OBJKEYS command (#1872),unstable,True,False,5,cmd_json.cc,cc,30,0,30
a79a386a71095b5a700c56b3d557cb79119618bb,8042833@qq.com,2023-11-07 13:01:10+08:00,noreply@github.com,2023-11-07 13:01:10+08:00,Support for the JSON.OBJKEYS command (#1872),unstable,True,False,5,json.h,h,21,0,21
a79a386a71095b5a700c56b3d557cb79119618bb,8042833@qq.com,2023-11-07 13:01:10+08:00,noreply@github.com,2023-11-07 13:01:10+08:00,Support for the JSON.OBJKEYS command (#1872),unstable,True,False,5,redis_json.cc,cc,14,0,14
a79a386a71095b5a700c56b3d557cb79119618bb,8042833@qq.com,2023-11-07 13:01:10+08:00,noreply@github.com,2023-11-07 13:01:10+08:00,Support for the JSON.OBJKEYS command (#1872),unstable,True,False,5,redis_json.h,h,2,0,2
a79a386a71095b5a700c56b3d557cb79119618bb,8042833@qq.com,2023-11-07 13:01:10+08:00,noreply@github.com,2023-11-07 13:01:10+08:00,Support for the JSON.OBJKEYS command (#1872),unstable,True,False,5,json_test.go,go,25,0,25
ffc2ece731e7243c3a54db4cff8bc3bffdbdce22,hulk.website@gmail.com,2023-11-07 21:46:16+08:00,noreply@github.com,2023-11-07 21:46:16+08:00,"Don't rewrite unchanged items into the configuration file (#1882)

Currently, config rewrite will also add some default configurations 
like backup-dir, pidfile into the configuration file. Some of them
are for compatible purposes and don't expect to be seen by users.

So we resolve this by ignoring the configuration items
if they do not exist in the configuration file and the value was not modified.",unstable,True,False,8,kvrocks.conf,conf,1,2,3
ffc2ece731e7243c3a54db4cff8bc3bffdbdce22,hulk.website@gmail.com,2023-11-07 21:46:16+08:00,noreply@github.com,2023-11-07 21:46:16+08:00,"Don't rewrite unchanged items into the configuration file (#1882)

Currently, config rewrite will also add some default configurations 
like backup-dir, pidfile into the configuration file. Some of them
are for compatible purposes and don't expect to be seen by users.

So we resolve this by ignoring the configuration items
if they do not exist in the configuration file and the value was not modified.",unstable,True,False,8,main.cc,cc,2,2,4
ffc2ece731e7243c3a54db4cff8bc3bffdbdce22,hulk.website@gmail.com,2023-11-07 21:46:16+08:00,noreply@github.com,2023-11-07 21:46:16+08:00,"Don't rewrite unchanged items into the configuration file (#1882)

Currently, config rewrite will also add some default configurations 
like backup-dir, pidfile into the configuration file. Some of them
are for compatible purposes and don't expect to be seen by users.

So we resolve this by ignoring the configuration items
if they do not exist in the configuration file and the value was not modified.",unstable,True,False,8,config.cc,cc,12,13,25
ffc2ece731e7243c3a54db4cff8bc3bffdbdce22,hulk.website@gmail.com,2023-11-07 21:46:16+08:00,noreply@github.com,2023-11-07 21:46:16+08:00,"Don't rewrite unchanged items into the configuration file (#1882)

Currently, config rewrite will also add some default configurations 
like backup-dir, pidfile into the configuration file. Some of them
are for compatible purposes and don't expect to be seen by users.

So we resolve this by ignoring the configuration items
if they do not exist in the configuration file and the value was not modified.",unstable,True,False,8,config.h,h,5,2,7
ffc2ece731e7243c3a54db4cff8bc3bffdbdce22,hulk.website@gmail.com,2023-11-07 21:46:16+08:00,noreply@github.com,2023-11-07 21:46:16+08:00,"Don't rewrite unchanged items into the configuration file (#1882)

Currently, config rewrite will also add some default configurations 
like backup-dir, pidfile into the configuration file. Some of them
are for compatible purposes and don't expect to be seen by users.

So we resolve this by ignoring the configuration items
if they do not exist in the configuration file and the value was not modified.",unstable,True,False,8,config_type.h,h,46,22,68
ffc2ece731e7243c3a54db4cff8bc3bffdbdce22,hulk.website@gmail.com,2023-11-07 21:46:16+08:00,noreply@github.com,2023-11-07 21:46:16+08:00,"Don't rewrite unchanged items into the configuration file (#1882)

Currently, config rewrite will also add some default configurations 
like backup-dir, pidfile into the configuration file. Some of them
are for compatible purposes and don't expect to be seen by users.

So we resolve this by ignoring the configuration items
if they do not exist in the configuration file and the value was not modified.",unstable,True,False,8,storage.cc,cc,2,2,4
ffc2ece731e7243c3a54db4cff8bc3bffdbdce22,hulk.website@gmail.com,2023-11-07 21:46:16+08:00,noreply@github.com,2023-11-07 21:46:16+08:00,"Don't rewrite unchanged items into the configuration file (#1882)

Currently, config rewrite will also add some default configurations 
like backup-dir, pidfile into the configuration file. Some of them
are for compatible purposes and don't expect to be seen by users.

So we resolve this by ignoring the configuration items
if they do not exist in the configuration file and the value was not modified.",unstable,True,False,8,compact_test.cc,cc,0,1,1
ffc2ece731e7243c3a54db4cff8bc3bffdbdce22,hulk.website@gmail.com,2023-11-07 21:46:16+08:00,noreply@github.com,2023-11-07 21:46:16+08:00,"Don't rewrite unchanged items into the configuration file (#1882)

Currently, config rewrite will also add some default configurations 
like backup-dir, pidfile into the configuration file. Some of them
are for compatible purposes and don't expect to be seen by users.

So we resolve this by ignoring the configuration items
if they do not exist in the configuration file and the value was not modified.",unstable,True,False,8,test_base.h,h,0,1,1
7c045b227485a9ff75a1260b146bdfe4cf5171ba,64510284+jyf111@users.noreply.github.com,2023-11-09 12:54:40+08:00,noreply@github.com,2023-11-09 12:54:40+08:00,Add more sanity checks for docker image (#1877),unstable,True,False,1,kvrocks.yaml,yaml,13,1,14
1083142b97a1e7a7c842f68ed633e9a0566383c6,58337761+MaheshMadushan@users.noreply.github.com,2023-11-09 12:16:04+05:30,noreply@github.com,2023-11-09 14:46:04+08:00,"support for the JSON.TOGGLE command (#1875)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,cmd_json.cc,cc,30,1,31
1083142b97a1e7a7c842f68ed633e9a0566383c6,58337761+MaheshMadushan@users.noreply.github.com,2023-11-09 12:16:04+05:30,noreply@github.com,2023-11-09 14:46:04+08:00,"support for the JSON.TOGGLE command (#1875)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,json.h,h,17,0,17
1083142b97a1e7a7c842f68ed633e9a0566383c6,58337761+MaheshMadushan@users.noreply.github.com,2023-11-09 12:16:04+05:30,noreply@github.com,2023-11-09 14:46:04+08:00,"support for the JSON.TOGGLE command (#1875)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,redis_json.cc,cc,18,0,18
1083142b97a1e7a7c842f68ed633e9a0566383c6,58337761+MaheshMadushan@users.noreply.github.com,2023-11-09 12:16:04+05:30,noreply@github.com,2023-11-09 14:46:04+08:00,"support for the JSON.TOGGLE command (#1875)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,redis_json.h,h,2,0,2
1083142b97a1e7a7c842f68ed633e9a0566383c6,58337761+MaheshMadushan@users.noreply.github.com,2023-11-09 12:16:04+05:30,noreply@github.com,2023-11-09 14:46:04+08:00,"support for the JSON.TOGGLE command (#1875)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,json_test.cc,cc,58,0,58
1083142b97a1e7a7c842f68ed633e9a0566383c6,58337761+MaheshMadushan@users.noreply.github.com,2023-11-09 12:16:04+05:30,noreply@github.com,2023-11-09 14:46:04+08:00,"support for the JSON.TOGGLE command (#1875)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,json_test.go,go,30,0,30
319de1ec3808e14473f031e4f73ed1a36ed93365,skbysp@gmail.com,2023-11-10 11:39:32+08:00,noreply@github.com,2023-11-10 11:39:32+08:00,Add the support of JSON.ARRINDEX command (#1865),unstable,True,False,6,cmd_json.cc,cc,51,1,52
319de1ec3808e14473f031e4f73ed1a36ed93365,skbysp@gmail.com,2023-11-10 11:39:32+08:00,noreply@github.com,2023-11-10 11:39:32+08:00,Add the support of JSON.ARRINDEX command (#1865),unstable,True,False,6,json.h,h,45,0,45
319de1ec3808e14473f031e4f73ed1a36ed93365,skbysp@gmail.com,2023-11-10 11:39:32+08:00,noreply@github.com,2023-11-10 11:39:32+08:00,Add the support of JSON.ARRINDEX command (#1865),unstable,True,False,6,redis_json.cc,cc,20,0,20
319de1ec3808e14473f031e4f73ed1a36ed93365,skbysp@gmail.com,2023-11-10 11:39:32+08:00,noreply@github.com,2023-11-10 11:39:32+08:00,Add the support of JSON.ARRINDEX command (#1865),unstable,True,False,6,redis_json.h,h,2,0,2
319de1ec3808e14473f031e4f73ed1a36ed93365,skbysp@gmail.com,2023-11-10 11:39:32+08:00,noreply@github.com,2023-11-10 11:39:32+08:00,Add the support of JSON.ARRINDEX command (#1865),unstable,True,False,6,json_test.cc,cc,57,0,57
319de1ec3808e14473f031e4f73ed1a36ed93365,skbysp@gmail.com,2023-11-10 11:39:32+08:00,noreply@github.com,2023-11-10 11:39:32+08:00,Add the support of JSON.ARRINDEX command (#1865),unstable,True,False,6,json_test.go,go,38,0,38
3ed1b1b8c16eb5bdba3c19dc546d4a8992400d2c,twice.mliu@gmail.com,2023-11-10 13:59:01+09:00,noreply@github.com,2023-11-10 12:59:01+08:00,Fix TBB compile failure due to `-Werror` and `#warning` (#1887),unstable,True,False,1,tbb.cmake,cmake,1,0,1
78f87c409348bbde6839ccf4d7bb2be207efbf5e,48602080+2rueSid@users.noreply.github.com,2023-11-10 10:28:57-05:00,noreply@github.com,2023-11-10 23:28:57+08:00,Add support for the JSON.MERGE command  (#1852),unstable,True,False,6,cmd_json.cc,cc,27,0,27
78f87c409348bbde6839ccf4d7bb2be207efbf5e,48602080+2rueSid@users.noreply.github.com,2023-11-10 10:28:57-05:00,noreply@github.com,2023-11-10 23:28:57+08:00,Add support for the JSON.MERGE command  (#1852),unstable,True,False,6,json.h,h,50,0,50
78f87c409348bbde6839ccf4d7bb2be207efbf5e,48602080+2rueSid@users.noreply.github.com,2023-11-10 10:28:57-05:00,noreply@github.com,2023-11-10 23:28:57+08:00,Add support for the JSON.MERGE command  (#1852),unstable,True,False,6,redis_json.cc,cc,40,5,45
78f87c409348bbde6839ccf4d7bb2be207efbf5e,48602080+2rueSid@users.noreply.github.com,2023-11-10 10:28:57-05:00,noreply@github.com,2023-11-10 23:28:57+08:00,Add support for the JSON.MERGE command  (#1852),unstable,True,False,6,redis_json.h,h,2,0,2
78f87c409348bbde6839ccf4d7bb2be207efbf5e,48602080+2rueSid@users.noreply.github.com,2023-11-10 10:28:57-05:00,noreply@github.com,2023-11-10 23:28:57+08:00,Add support for the JSON.MERGE command  (#1852),unstable,True,False,6,json_test.cc,cc,30,0,30
78f87c409348bbde6839ccf4d7bb2be207efbf5e,48602080+2rueSid@users.noreply.github.com,2023-11-10 10:28:57-05:00,noreply@github.com,2023-11-10 23:28:57+08:00,Add support for the JSON.MERGE command  (#1852),unstable,True,False,6,json_test.go,go,19,0,19
b3a6e948cb6e07eef2c20968e0c39a507f66f46b,twice.mliu@gmail.com,2023-11-12 11:28:37+09:00,noreply@github.com,2023-11-12 11:28:37+09:00,Fix potentially overflow msg_namelen value in SupervisedSystemd (#1891),unstable,True,False,9,daemon_util.h,h,5,8,13
b3a6e948cb6e07eef2c20968e0c39a507f66f46b,twice.mliu@gmail.com,2023-11-12 11:28:37+09:00,noreply@github.com,2023-11-12 11:28:37+09:00,Fix potentially overflow msg_namelen value in SupervisedSystemd (#1891),unstable,True,False,9,cron.cc,cc,1,1,2
b3a6e948cb6e07eef2c20968e0c39a507f66f46b,twice.mliu@gmail.com,2023-11-12 11:28:37+09:00,noreply@github.com,2023-11-12 11:28:37+09:00,Fix potentially overflow msg_namelen value in SupervisedSystemd (#1891),unstable,True,False,9,cron.h,h,1,1,2
b3a6e948cb6e07eef2c20968e0c39a507f66f46b,twice.mliu@gmail.com,2023-11-12 11:28:37+09:00,noreply@github.com,2023-11-12 11:28:37+09:00,Fix potentially overflow msg_namelen value in SupervisedSystemd (#1891),unstable,True,False,9,io_util.cc,cc,3,3,6
b3a6e948cb6e07eef2c20968e0c39a507f66f46b,twice.mliu@gmail.com,2023-11-12 11:28:37+09:00,noreply@github.com,2023-11-12 11:28:37+09:00,Fix potentially overflow msg_namelen value in SupervisedSystemd (#1891),unstable,True,False,9,redis_connection.cc,cc,2,2,4
b3a6e948cb6e07eef2c20968e0c39a507f66f46b,twice.mliu@gmail.com,2023-11-12 11:28:37+09:00,noreply@github.com,2023-11-12 11:28:37+09:00,Fix potentially overflow msg_namelen value in SupervisedSystemd (#1891),unstable,True,False,9,redis_connection.h,h,2,2,4
b3a6e948cb6e07eef2c20968e0c39a507f66f46b,twice.mliu@gmail.com,2023-11-12 11:28:37+09:00,noreply@github.com,2023-11-12 11:28:37+09:00,Fix potentially overflow msg_namelen value in SupervisedSystemd (#1891),unstable,True,False,9,worker.cc,cc,1,1,2
b3a6e948cb6e07eef2c20968e0c39a507f66f46b,twice.mliu@gmail.com,2023-11-12 11:28:37+09:00,noreply@github.com,2023-11-12 11:28:37+09:00,Fix potentially overflow msg_namelen value in SupervisedSystemd (#1891),unstable,True,False,9,stats.h,h,1,1,2
b3a6e948cb6e07eef2c20968e0c39a507f66f46b,twice.mliu@gmail.com,2023-11-12 11:28:37+09:00,noreply@github.com,2023-11-12 11:28:37+09:00,Fix potentially overflow msg_namelen value in SupervisedSystemd (#1891),unstable,True,False,9,storage.cc,cc,6,6,12
be983181ae3f751486706409e662cbc9322682c8,85615957+Yangsx-1@users.noreply.github.com,2023-11-12 16:47:59+08:00,noreply@github.com,2023-11-12 17:47:59+09:00,"Add support of the XINFO GROUPS and CONSUMERS (#1870)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,cmd_stream.cc,cc,89,3,92
be983181ae3f751486706409e662cbc9322682c8,85615957+Yangsx-1@users.noreply.github.com,2023-11-12 16:47:59+08:00,noreply@github.com,2023-11-12 17:47:59+09:00,"Add support of the XINFO GROUPS and CONSUMERS (#1870)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,redis_stream.cc,cc,162,4,166
be983181ae3f751486706409e662cbc9322682c8,85615957+Yangsx-1@users.noreply.github.com,2023-11-12 16:47:59+08:00,noreply@github.com,2023-11-12 17:47:59+09:00,"Add support of the XINFO GROUPS and CONSUMERS (#1870)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,redis_stream.h,h,7,0,7
be983181ae3f751486706409e662cbc9322682c8,85615957+Yangsx-1@users.noreply.github.com,2023-11-12 16:47:59+08:00,noreply@github.com,2023-11-12 17:47:59+09:00,"Add support of the XINFO GROUPS and CONSUMERS (#1870)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,redis_stream_base.h,h,8,1,9
be983181ae3f751486706409e662cbc9322682c8,85615957+Yangsx-1@users.noreply.github.com,2023-11-12 16:47:59+08:00,noreply@github.com,2023-11-12 17:47:59+09:00,"Add support of the XINFO GROUPS and CONSUMERS (#1870)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,stream_test.go,go,46,0,46
21f7997847d8a5e1c1c24aaf2b7d88d310077332,8042833@qq.com,2023-11-12 19:35:37+08:00,noreply@github.com,2023-11-12 19:35:37+08:00,Fix parameters order in Go test `JSON.TOGGLE basics` (#1892),unstable,True,False,1,json_test.go,go,7,7,14
21c81680f88739bca666a74804e89b1667e96dae,8042833@qq.com,2023-11-12 21:50:21+08:00,noreply@github.com,2023-11-12 21:50:21+08:00,Support for the JSON.ARRTRIM command (#1881),unstable,True,False,5,cmd_json.cc,cc,42,0,42
21c81680f88739bca666a74804e89b1667e96dae,8042833@qq.com,2023-11-12 21:50:21+08:00,noreply@github.com,2023-11-12 21:50:21+08:00,Support for the JSON.ARRTRIM command (#1881),unstable,True,False,5,json.h,h,33,0,33
21c81680f88739bca666a74804e89b1667e96dae,8042833@qq.com,2023-11-12 21:50:21+08:00,noreply@github.com,2023-11-12 21:50:21+08:00,Support for the JSON.ARRTRIM command (#1881),unstable,True,False,5,redis_json.cc,cc,19,0,19
21c81680f88739bca666a74804e89b1667e96dae,8042833@qq.com,2023-11-12 21:50:21+08:00,noreply@github.com,2023-11-12 21:50:21+08:00,Support for the JSON.ARRTRIM command (#1881),unstable,True,False,5,redis_json.h,h,3,0,3
21c81680f88739bca666a74804e89b1667e96dae,8042833@qq.com,2023-11-12 21:50:21+08:00,noreply@github.com,2023-11-12 21:50:21+08:00,Support for the JSON.ARRTRIM command (#1881),unstable,True,False,5,json_test.go,go,84,0,84
a68f07e50acef4c36c18caaf635a40e2cbb9319b,hulk.website@gmail.com,2023-11-17 09:54:03+08:00,noreply@github.com,2023-11-17 09:54:03+08:00,"Graceful shutdown the workers when reducing worker threads (#1863)

#1855 introduced the data race even only migrating the non-blocking connections. For example:

T1: C0(connection) is running the command Config::Set on W0(worker)
and C1 is running another command on W1. C0 got the exclusive lock for executing commands
and C1 will wait for the lock inside ExecuteCommands.

T2: C0 migrates C1 to W0 after reducing the number of worker threads, but the ExecuteCommands function will
continue executing after migrating. So both W0 and W1 will access the C1 at the same time.

To avoid this, I simply don't migrate the connection if it has any running command and
delay to shutdown workers, so that old connections have a chance to finish the running command.",unstable,True,False,11,blocking_commander.h,h,0,1,1
a68f07e50acef4c36c18caaf635a40e2cbb9319b,hulk.website@gmail.com,2023-11-17 09:54:03+08:00,noreply@github.com,2023-11-17 09:54:03+08:00,"Graceful shutdown the workers when reducing worker threads (#1863)

#1855 introduced the data race even only migrating the non-blocking connections. For example:

T1: C0(connection) is running the command Config::Set on W0(worker)
and C1 is running another command on W1. C0 got the exclusive lock for executing commands
and C1 will wait for the lock inside ExecuteCommands.

T2: C0 migrates C1 to W0 after reducing the number of worker threads, but the ExecuteCommands function will
continue executing after migrating. So both W0 and W1 will access the C1 at the same time.

To avoid this, I simply don't migrate the connection if it has any running command and
delay to shutdown workers, so that old connections have a chance to finish the running command.",unstable,True,False,11,cmd_pubsub.cc,cc,0,2,2
a68f07e50acef4c36c18caaf635a40e2cbb9319b,hulk.website@gmail.com,2023-11-17 09:54:03+08:00,noreply@github.com,2023-11-17 09:54:03+08:00,"Graceful shutdown the workers when reducing worker threads (#1863)

#1855 introduced the data race even only migrating the non-blocking connections. For example:

T1: C0(connection) is running the command Config::Set on W0(worker)
and C1 is running another command on W1. C0 got the exclusive lock for executing commands
and C1 will wait for the lock inside ExecuteCommands.

T2: C0 migrates C1 to W0 after reducing the number of worker threads, but the ExecuteCommands function will
continue executing after migrating. So both W0 and W1 will access the C1 at the same time.

To avoid this, I simply don't migrate the connection if it has any running command and
delay to shutdown workers, so that old connections have a chance to finish the running command.",unstable,True,False,11,cmd_stream.cc,cc,0,1,1
a68f07e50acef4c36c18caaf635a40e2cbb9319b,hulk.website@gmail.com,2023-11-17 09:54:03+08:00,noreply@github.com,2023-11-17 09:54:03+08:00,"Graceful shutdown the workers when reducing worker threads (#1863)

#1855 introduced the data race even only migrating the non-blocking connections. For example:

T1: C0(connection) is running the command Config::Set on W0(worker)
and C1 is running another command on W1. C0 got the exclusive lock for executing commands
and C1 will wait for the lock inside ExecuteCommands.

T2: C0 migrates C1 to W0 after reducing the number of worker threads, but the ExecuteCommands function will
continue executing after migrating. So both W0 and W1 will access the C1 at the same time.

To avoid this, I simply don't migrate the connection if it has any running command and
delay to shutdown workers, so that old connections have a chance to finish the running command.",unstable,True,False,11,commander.h,h,0,1,1
a68f07e50acef4c36c18caaf635a40e2cbb9319b,hulk.website@gmail.com,2023-11-17 09:54:03+08:00,noreply@github.com,2023-11-17 09:54:03+08:00,"Graceful shutdown the workers when reducing worker threads (#1863)

#1855 introduced the data race even only migrating the non-blocking connections. For example:

T1: C0(connection) is running the command Config::Set on W0(worker)
and C1 is running another command on W1. C0 got the exclusive lock for executing commands
and C1 will wait for the lock inside ExecuteCommands.

T2: C0 migrates C1 to W0 after reducing the number of worker threads, but the ExecuteCommands function will
continue executing after migrating. So both W0 and W1 will access the C1 at the same time.

To avoid this, I simply don't migrate the connection if it has any running command and
delay to shutdown workers, so that old connections have a chance to finish the running command.",unstable,True,False,11,redis_connection.cc,cc,17,2,19
a68f07e50acef4c36c18caaf635a40e2cbb9319b,hulk.website@gmail.com,2023-11-17 09:54:03+08:00,noreply@github.com,2023-11-17 09:54:03+08:00,"Graceful shutdown the workers when reducing worker threads (#1863)

#1855 introduced the data race even only migrating the non-blocking connections. For example:

T1: C0(connection) is running the command Config::Set on W0(worker)
and C1 is running another command on W1. C0 got the exclusive lock for executing commands
and C1 will wait for the lock inside ExecuteCommands.

T2: C0 migrates C1 to W0 after reducing the number of worker threads, but the ExecuteCommands function will
continue executing after migrating. So both W0 and W1 will access the C1 at the same time.

To avoid this, I simply don't migrate the connection if it has any running command and
delay to shutdown workers, so that old connections have a chance to finish the running command.",unstable,True,False,11,redis_connection.h,h,4,1,5
a68f07e50acef4c36c18caaf635a40e2cbb9319b,hulk.website@gmail.com,2023-11-17 09:54:03+08:00,noreply@github.com,2023-11-17 09:54:03+08:00,"Graceful shutdown the workers when reducing worker threads (#1863)

#1855 introduced the data race even only migrating the non-blocking connections. For example:

T1: C0(connection) is running the command Config::Set on W0(worker)
and C1 is running another command on W1. C0 got the exclusive lock for executing commands
and C1 will wait for the lock inside ExecuteCommands.

T2: C0 migrates C1 to W0 after reducing the number of worker threads, but the ExecuteCommands function will
continue executing after migrating. So both W0 and W1 will access the C1 at the same time.

To avoid this, I simply don't migrate the connection if it has any running command and
delay to shutdown workers, so that old connections have a chance to finish the running command.",unstable,True,False,11,server.cc,cc,21,11,32
a68f07e50acef4c36c18caaf635a40e2cbb9319b,hulk.website@gmail.com,2023-11-17 09:54:03+08:00,noreply@github.com,2023-11-17 09:54:03+08:00,"Graceful shutdown the workers when reducing worker threads (#1863)

#1855 introduced the data race even only migrating the non-blocking connections. For example:

T1: C0(connection) is running the command Config::Set on W0(worker)
and C1 is running another command on W1. C0 got the exclusive lock for executing commands
and C1 will wait for the lock inside ExecuteCommands.

T2: C0 migrates C1 to W0 after reducing the number of worker threads, but the ExecuteCommands function will
continue executing after migrating. So both W0 and W1 will access the C1 at the same time.

To avoid this, I simply don't migrate the connection if it has any running command and
delay to shutdown workers, so that old connections have a chance to finish the running command.",unstable,True,False,11,server.h,h,1,1,2
a68f07e50acef4c36c18caaf635a40e2cbb9319b,hulk.website@gmail.com,2023-11-17 09:54:03+08:00,noreply@github.com,2023-11-17 09:54:03+08:00,"Graceful shutdown the workers when reducing worker threads (#1863)

#1855 introduced the data race even only migrating the non-blocking connections. For example:

T1: C0(connection) is running the command Config::Set on W0(worker)
and C1 is running another command on W1. C0 got the exclusive lock for executing commands
and C1 will wait for the lock inside ExecuteCommands.

T2: C0 migrates C1 to W0 after reducing the number of worker threads, but the ExecuteCommands function will
continue executing after migrating. So both W0 and W1 will access the C1 at the same time.

To avoid this, I simply don't migrate the connection if it has any running command and
delay to shutdown workers, so that old connections have a chance to finish the running command.",unstable,True,False,11,worker.cc,cc,25,10,35
a68f07e50acef4c36c18caaf635a40e2cbb9319b,hulk.website@gmail.com,2023-11-17 09:54:03+08:00,noreply@github.com,2023-11-17 09:54:03+08:00,"Graceful shutdown the workers when reducing worker threads (#1863)

#1855 introduced the data race even only migrating the non-blocking connections. For example:

T1: C0(connection) is running the command Config::Set on W0(worker)
and C1 is running another command on W1. C0 got the exclusive lock for executing commands
and C1 will wait for the lock inside ExecuteCommands.

T2: C0 migrates C1 to W0 after reducing the number of worker threads, but the ExecuteCommands function will
continue executing after migrating. So both W0 and W1 will access the C1 at the same time.

To avoid this, I simply don't migrate the connection if it has any running command and
delay to shutdown workers, so that old connections have a chance to finish the running command.",unstable,True,False,11,worker.h,h,5,2,7
a68f07e50acef4c36c18caaf635a40e2cbb9319b,hulk.website@gmail.com,2023-11-17 09:54:03+08:00,noreply@github.com,2023-11-17 09:54:03+08:00,"Graceful shutdown the workers when reducing worker threads (#1863)

#1855 introduced the data race even only migrating the non-blocking connections. For example:

T1: C0(connection) is running the command Config::Set on W0(worker)
and C1 is running another command on W1. C0 got the exclusive lock for executing commands
and C1 will wait for the lock inside ExecuteCommands.

T2: C0 migrates C1 to W0 after reducing the number of worker threads, but the ExecuteCommands function will
continue executing after migrating. So both W0 and W1 will access the C1 at the same time.

To avoid this, I simply don't migrate the connection if it has any running command and
delay to shutdown workers, so that old connections have a chance to finish the running command.",unstable,True,False,11,config_test.go,go,4,5,9
2cab8f71458f2961be92a41bd0b9bb7d9c366843,8042833@qq.com,2023-11-17 22:23:09+08:00,noreply@github.com,2023-11-17 22:23:09+08:00,Support for the JSON.ARRINSERT command  (#1867),unstable,True,False,5,cmd_json.cc,cc,44,0,44
2cab8f71458f2961be92a41bd0b9bb7d9c366843,8042833@qq.com,2023-11-17 22:23:09+08:00,noreply@github.com,2023-11-17 22:23:09+08:00,Support for the JSON.ARRINSERT command  (#1867),unstable,True,False,5,json.h,h,29,0,29
2cab8f71458f2961be92a41bd0b9bb7d9c366843,8042833@qq.com,2023-11-17 22:23:09+08:00,noreply@github.com,2023-11-17 22:23:09+08:00,Support for the JSON.ARRINSERT command  (#1867),unstable,True,False,5,redis_json.cc,cc,32,0,32
2cab8f71458f2961be92a41bd0b9bb7d9c366843,8042833@qq.com,2023-11-17 22:23:09+08:00,noreply@github.com,2023-11-17 22:23:09+08:00,Support for the JSON.ARRINSERT command  (#1867),unstable,True,False,5,redis_json.h,h,2,0,2
2cab8f71458f2961be92a41bd0b9bb7d9c366843,8042833@qq.com,2023-11-17 22:23:09+08:00,noreply@github.com,2023-11-17 22:23:09+08:00,Support for the JSON.ARRINSERT command  (#1867),unstable,True,False,5,json_test.go,go,46,0,46
358cc4101651cfd19f558f9e46ef377c36b70ba6,aleks.raiden@gmail.com,2023-11-18 05:14:19+02:00,noreply@github.com,2023-11-18 11:14:19+08:00,Bump oneTBB to 2011.11.0 (#1895),unstable,True,False,1,tbb.cmake,cmake,2,2,4
02fd85e60056f6b728c7a9046a00d7b14730d7c6,hulk.website@gmail.com,2023-11-20 21:12:05+08:00,noreply@github.com,2023-11-20 22:12:05+09:00,Change the default value of cmake option DEPS_FETCH_PROXY (#1900),unstable,True,False,1,x.py,py,2,2,4
a18800976176da06f21f6dd33a7522ef905f5c2f,aleks.raiden@gmail.com,2023-11-22 05:52:39+02:00,noreply@github.com,2023-11-22 11:52:39+08:00,"Bump rocksdb to 8.7.3 (#1902)

Update rocksdb to v8.7.3. Full release notes here - https://github.com/facebook/rocksdb/releases/tag/v8.7.3 

Critical changes include:

- Add new Cache APIs GetSecondaryCacheCapacity() and GetSecondaryCachePinnedUsage()
- A few bugs in cache subsystem are fixed
- Fix a bug in auto_readahead_size where first_internal_key of index blocks wasn't copied properly resulting in corruption error when first_internal_key was used for comparison
-  Fix a bug where row cache can falsely return kNotFound even though row cache entry is hit.
- Fixed a race condition in GenericRateLimiter that could cause it to stop granting requests
- A lot of bugs are fixed (in cache, in async_io, in compaction etc.)
- (Perf) Added additional improvements in tuning readahead_size during Scans when auto_readahead_size is enabled
- (Perf) During async_io, the Seek happens in 2 phases. Phase 1 starts an asynchronous read on a block cache miss, and phase 2 waits for it to complete and finishes the seek. In both phases, it tries to lookup the block cache for the data block first before looking in the prefetch buffer. It's optimized by doing the block cache lookup only in the first phase that would save some CPU.
- Universal size amp compaction will conditionally exclude some of the newest L0 files when selecting input with a small negative impact to size amp. This is to prevent a large number of L0 files from being locked by a size amp compaction, potentially leading to write stop with a few more flushes.
- Options::compaction_readahead_size 's default value is changed from 0 to 2MB.
- Added a new wide-column aware full merge API called FullMergeV3 to MergeOperator. FullMergeV3 supports wide columns both as base value and merge result, which enables the application to perform more general transformations during merges. For backward compatibility, the default implementation implements the earlier logic of applying the merge operation to the default column of any wide-column entities. 
- Add a new statistic COMPACTION_CPU_TOTAL_TIME that records cumulative compaction cpu time.
- Added an experimental new ""automatic"" variant of HyperClockCache that does not require a prior estimate of the average size of cache entries",unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
2b9faf782fbfff4d6dab091540101c678546b146,wanghenshui@qq.com,2023-11-22 23:54:57+08:00,noreply@github.com,2023-11-22 23:54:57+08:00,"Enable rocksdb read option `avoid_unnecessary_blocking_io` to avoid unexpected long latency (#1903)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,kvrocks.conf,conf,7,0,7
2b9faf782fbfff4d6dab091540101c678546b146,wanghenshui@qq.com,2023-11-22 23:54:57+08:00,noreply@github.com,2023-11-22 23:54:57+08:00,"Enable rocksdb read option `avoid_unnecessary_blocking_io` to avoid unexpected long latency (#1903)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,config.cc,cc,1,0,1
2b9faf782fbfff4d6dab091540101c678546b146,wanghenshui@qq.com,2023-11-22 23:54:57+08:00,noreply@github.com,2023-11-22 23:54:57+08:00,"Enable rocksdb read option `avoid_unnecessary_blocking_io` to avoid unexpected long latency (#1903)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,config.h,h,1,0,1
2b9faf782fbfff4d6dab091540101c678546b146,wanghenshui@qq.com,2023-11-22 23:54:57+08:00,noreply@github.com,2023-11-22 23:54:57+08:00,"Enable rocksdb read option `avoid_unnecessary_blocking_io` to avoid unexpected long latency (#1903)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,storage.cc,cc,3,0,3
0a301e417bf0704f440cb92d518dae74a4680c08,hulk.website@gmail.com,2023-11-23 22:54:21+08:00,noreply@github.com,2023-11-23 22:54:21+08:00,Add the bind argument to the docker quickstart section (#1906),unstable,True,False,1,README.md,md,1,1,2
bcf1c9ad23d7dadeb8d8def79b48aba427ec566a,aleks.raiden@gmail.com,2023-11-24 07:11:46+02:00,noreply@github.com,2023-11-24 13:11:46+08:00,"Bump rocksdb to 8.8.1 (#1904)

The release includes some bug fixes and performance issues.  Full release notes:

https://github.com/facebook/rocksdb/releases/tag/v8.8.1

Critical changes include:

- (perf) Improved the I/O efficiency of DB::Open a new DB with create_missing_column_families=true and many column families.
- (bug) Fixed a rare race bug involving a concurrent combination of Create/DropColumnFamily and/or Set(DB)Options
- (Important) The default value of DBOptions::fail_if_options_file_error changed from false to true.
- Added new tickers rocksdb.fifo.{max.size|ttl}.compactions to count FIFO compactions that drop files for different reasons
- (feature) Introduce AttributeGroup by adding the first AttributeGroup support API, MultiGetEntity(). Through the use of Column Families, AttributeGroup enables users to logically group wide-column entities. 
- Bug fixed, some are port from 8.7 release line",unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
db4669a59c992935a3dd473da821b3f9b21edfb0,hulk.website@gmail.com,2023-11-24 22:07:43+08:00,noreply@github.com,2023-11-24 22:07:43+08:00,Fix server crash when receiving the empty inline command (#1909),unstable,True,False,3,redis_connection.cc,cc,1,0,1
db4669a59c992935a3dd473da821b3f9b21edfb0,hulk.website@gmail.com,2023-11-24 22:07:43+08:00,noreply@github.com,2023-11-24 22:07:43+08:00,Fix server crash when receiving the empty inline command (#1909),unstable,True,False,3,redis_request.cc,cc,1,0,1
db4669a59c992935a3dd473da821b3f9b21edfb0,hulk.website@gmail.com,2023-11-24 22:07:43+08:00,noreply@github.com,2023-11-24 22:07:43+08:00,Fix server crash when receiving the empty inline command (#1909),unstable,True,False,3,protocol_test.go,go,11,1,12
5a4ad7f7907700f49dcbf732d17513ef6cf760ac,44099579+chrisxu333@users.noreply.github.com,2023-11-25 20:04:17-08:00,noreply@github.com,2023-11-26 12:04:17+08:00,Use rocksdb::PinnableSlice to avoid memory copy in bitmap and bloomfilter (#1888),unstable,True,False,5,storage.cc,cc,13,0,13
5a4ad7f7907700f49dcbf732d17513ef6cf760ac,44099579+chrisxu333@users.noreply.github.com,2023-11-25 20:04:17-08:00,noreply@github.com,2023-11-26 12:04:17+08:00,Use rocksdb::PinnableSlice to avoid memory copy in bitmap and bloomfilter (#1888),unstable,True,False,5,storage.h,h,4,0,4
5a4ad7f7907700f49dcbf732d17513ef6cf760ac,44099579+chrisxu333@users.noreply.github.com,2023-11-25 20:04:17-08:00,noreply@github.com,2023-11-26 12:04:17+08:00,Use rocksdb::PinnableSlice to avoid memory copy in bitmap and bloomfilter (#1888),unstable,True,False,5,redis_bitmap.cc,cc,12,11,23
5a4ad7f7907700f49dcbf732d17513ef6cf760ac,44099579+chrisxu333@users.noreply.github.com,2023-11-25 20:04:17-08:00,noreply@github.com,2023-11-26 12:04:17+08:00,Use rocksdb::PinnableSlice to avoid memory copy in bitmap and bloomfilter (#1888),unstable,True,False,5,redis_bloom_chain.cc,cc,23,14,37
5a4ad7f7907700f49dcbf732d17513ef6cf760ac,44099579+chrisxu333@users.noreply.github.com,2023-11-25 20:04:17-08:00,noreply@github.com,2023-11-26 12:04:17+08:00,Use rocksdb::PinnableSlice to avoid memory copy in bitmap and bloomfilter (#1888),unstable,True,False,5,redis_bloom_chain.h,h,3,2,5
963839d3f66a2926cb1128a458a08b2173bff9af,aleks.raiden@gmail.com,2023-11-27 14:43:26+02:00,noreply@github.com,2023-11-27 20:43:26+08:00,"Bump jsoncons to 0.172.0 (#1911)

Bump jsoncons to 0.172.0. Full release notes - https://github.com/danielaparker/jsoncons/releases/tag/v0.172.0

Key features:

- Fixed issue https://github.com/danielaparker/jsoncons/issues/469 affecting JSMESPath expressions with terminating CR
- Added result_option sort_descending
- Added new classes basic_json_location, basic_path_element, and basic_path_node
- Added a new functions get and remove for selecting a single JSON value from a JSON document at
a location represented by a json_location",unstable,True,False,1,jsoncons.cmake,cmake,2,2,4
155f3d900839135eee9f0c1dddab98b84ab211a1,qy254@cornell.edu,2023-11-30 10:06:48-05:00,noreply@github.com,2023-11-30 23:06:48+08:00,Support for the JSON.DEL command (#1859),unstable,True,False,5,cmd_json.cc,cc,24,1,25
155f3d900839135eee9f0c1dddab98b84ab211a1,qy254@cornell.edu,2023-11-30 10:06:48-05:00,noreply@github.com,2023-11-30 23:06:48+08:00,Support for the JSON.DEL command (#1859),unstable,True,False,5,json.h,h,11,0,11
155f3d900839135eee9f0c1dddab98b84ab211a1,qy254@cornell.edu,2023-11-30 10:06:48-05:00,noreply@github.com,2023-11-30 23:06:48+08:00,Support for the JSON.DEL command (#1859),unstable,True,False,5,redis_json.cc,cc,35,0,35
155f3d900839135eee9f0c1dddab98b84ab211a1,qy254@cornell.edu,2023-11-30 10:06:48-05:00,noreply@github.com,2023-11-30 23:06:48+08:00,Support for the JSON.DEL command (#1859),unstable,True,False,5,redis_json.h,h,2,0,2
155f3d900839135eee9f0c1dddab98b84ab211a1,qy254@cornell.edu,2023-11-30 10:06:48-05:00,noreply@github.com,2023-11-30 23:06:48+08:00,Support for the JSON.DEL command (#1859),unstable,True,False,5,json_test.cc,cc,52,2,54
04cf217671438e8fee06bd654c928400d4bb4efa,skbysp@gmail.com,2023-12-01 20:47:43+08:00,noreply@github.com,2023-12-01 20:47:43+08:00,support JSON.NUMINCRBY and JSON.NUMMULTBY command (#1890),unstable,True,False,6,cmd_json.cc,cc,37,1,38
04cf217671438e8fee06bd654c928400d4bb4efa,skbysp@gmail.com,2023-12-01 20:47:43+08:00,noreply@github.com,2023-12-01 20:47:43+08:00,support JSON.NUMINCRBY and JSON.NUMMULTBY command (#1890),unstable,True,False,6,json.h,h,43,0,43
04cf217671438e8fee06bd654c928400d4bb4efa,skbysp@gmail.com,2023-12-01 20:47:43+08:00,noreply@github.com,2023-12-01 20:47:43+08:00,support JSON.NUMINCRBY and JSON.NUMMULTBY command (#1890),unstable,True,False,6,redis_json.cc,cc,33,0,33
04cf217671438e8fee06bd654c928400d4bb4efa,skbysp@gmail.com,2023-12-01 20:47:43+08:00,noreply@github.com,2023-12-01 20:47:43+08:00,support JSON.NUMINCRBY and JSON.NUMMULTBY command (#1890),unstable,True,False,6,redis_json.h,h,6,0,6
04cf217671438e8fee06bd654c928400d4bb4efa,skbysp@gmail.com,2023-12-01 20:47:43+08:00,noreply@github.com,2023-12-01 20:47:43+08:00,support JSON.NUMINCRBY and JSON.NUMMULTBY command (#1890),unstable,True,False,6,json_test.cc,cc,117,0,117
04cf217671438e8fee06bd654c928400d4bb4efa,skbysp@gmail.com,2023-12-01 20:47:43+08:00,noreply@github.com,2023-12-01 20:47:43+08:00,support JSON.NUMINCRBY and JSON.NUMMULTBY command (#1890),unstable,True,False,6,json_test.go,go,52,0,52
efc720d5232c66fe5e513fb16bb1195a6beaf7fc,18236554121@163.com,2023-12-03 20:01:52+08:00,noreply@github.com,2023-12-03 20:01:52+08:00,Remove the unused vector inside worker.cc (#1915),unstable,True,False,1,server.cc,cc,0,1,1
55d21ddd91ca2252a2616b3b513b8dd163cdbdbd,hulk.website@gmail.com,2023-12-03 21:05:00+08:00,noreply@github.com,2023-12-03 21:05:00+08:00,"Fix name of rocksdb's write delay and stop stats in INFO command (#1916)

rocksdb rename the write stall stats of the DB and column family in rocksdb PR #11300,
which organizes them more structurally. So it will return an empty string in the INFO command
since we're still using the old stat key to fetch them.

The INFO command will return ""0"" instead of the empty string after this patch:

```
level0_file_limit_slowdown[metadata]:0
level0_file_limit_stop[metadata]:0
pending_compaction_bytes_slowdown[metadata]:0
pending_compaction_bytes_stop[metadata]:0
level0_file_limit_stop_with_ongoing_compaction[metadata]:0
level0_file_limit_slowdown_with_ongoing_compaction[metadata]:0
memtable_count_limit_slowdown[metadata]:0
memtable_count_limit_stop[metadata]:0
```

and the current output is:

```
level0_file_limit_slowdown[default]:
level0_file_limit_stop[default]:
pending_compaction_bytes_slowdown[default]:
pending_compaction_bytes_stop[default]:
memtable_count_limit_slowdown[default]:
memtable_count_limit_stop[default]:
```",unstable,True,False,1,server.cc,cc,10,6,16
d2312a4c19ea43f91f670e29f4db7952510a7ebe,hulk.website@gmail.com,2023-12-03 22:37:57+08:00,noreply@github.com,2023-12-03 23:37:57+09:00,Add the support of JSON.FORGET command (#1917),unstable,True,False,2,cmd_json.cc,cc,2,0,2
d2312a4c19ea43f91f670e29f4db7952510a7ebe,hulk.website@gmail.com,2023-12-03 22:37:57+08:00,noreply@github.com,2023-12-03 23:37:57+09:00,Add the support of JSON.FORGET command (#1917),unstable,True,False,2,json_test.go,go,13,0,13
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,slot_migrate.cc,cc,32,9,41
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,slot_migrate.h,h,1,1,2
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,cmd_bit.cc,cc,152,1,153
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,command_parser.h,h,32,0,32
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,bitfield_util.cc,cc,124,0,124
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,bitfield_util.h,h,316,0,316
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,lock_manager.h,h,10,2,12
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,parse_util.h,h,12,2,14
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,batch_extractor.cc,cc,4,0,4
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,redis_metadata.h,h,1,0,1
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,redis_bitmap.cc,cc,335,11,346
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,redis_bitmap.h,h,24,0,24
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,redis_bitmap_string.cc,cc,85,0,85
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,redis_bitmap_string.h,h,7,0,7
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,bitfield_util.cc,cc,48,0,48
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,bitmap_test.cc,cc,368,1,369
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,slotmigrate_test.go,go,12,0,12
901c771872173aafdd95d2dee1f3aef448608e3b,97575247+julic20s@users.noreply.github.com,2023-12-03 23:27:28+08:00,noreply@github.com,2023-12-04 00:27:28+09:00,"Support for the BITFIELD command (#1901)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,18,bitmap_test.go,go,10,0,10
08194a83d4c636cfafa98c6ee212ea87b9f698c8,hulk.website@gmail.com,2023-12-04 22:55:11+08:00,noreply@github.com,2023-12-04 22:55:11+08:00,Fix JSON.DEL should return 0 if the key was not found (#1918),unstable,True,False,2,redis_json.cc,cc,11,6,17
08194a83d4c636cfafa98c6ee212ea87b9f698c8,hulk.website@gmail.com,2023-12-04 22:55:11+08:00,noreply@github.com,2023-12-04 22:55:11+08:00,Fix JSON.DEL should return 0 if the key was not found (#1918),unstable,True,False,2,json_test.go,go,3,0,3
b889b0e6fed8e9552333cc8bb26b34968f59a7f4,57054352+isHuangXin@users.noreply.github.com,2023-12-05 09:55:40+08:00,noreply@github.com,2023-12-05 09:55:40+08:00,"Support for the JSON.OBJLEN command (#1860)

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,5,cmd_json.cc,cc,35,1,36
b889b0e6fed8e9552333cc8bb26b34968f59a7f4,57054352+isHuangXin@users.noreply.github.com,2023-12-05 09:55:40+08:00,noreply@github.com,2023-12-05 09:55:40+08:00,"Support for the JSON.OBJLEN command (#1860)

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,5,json.h,h,16,0,16
b889b0e6fed8e9552333cc8bb26b34968f59a7f4,57054352+isHuangXin@users.noreply.github.com,2023-12-05 09:55:40+08:00,noreply@github.com,2023-12-05 09:55:40+08:00,"Support for the JSON.OBJLEN command (#1860)

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,5,redis_json.cc,cc,13,0,13
b889b0e6fed8e9552333cc8bb26b34968f59a7f4,57054352+isHuangXin@users.noreply.github.com,2023-12-05 09:55:40+08:00,noreply@github.com,2023-12-05 09:55:40+08:00,"Support for the JSON.OBJLEN command (#1860)

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,5,redis_json.h,h,2,0,2
b889b0e6fed8e9552333cc8bb26b34968f59a7f4,57054352+isHuangXin@users.noreply.github.com,2023-12-05 09:55:40+08:00,noreply@github.com,2023-12-05 09:55:40+08:00,"Support for the JSON.OBJLEN command (#1860)

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,5,json_test.go,go,27,0,27
c17a8cb2b484a004f4188bfb66692f05507f0c3f,48602080+2rueSid@users.noreply.github.com,2023-12-05 05:30:29-05:00,noreply@github.com,2023-12-05 19:30:29+09:00,Improve the command JSON.MERGE via jsonpath::remove (#1919),unstable,True,False,2,json.h,h,19,17,36
c17a8cb2b484a004f4188bfb66692f05507f0c3f,48602080+2rueSid@users.noreply.github.com,2023-12-05 05:30:29-05:00,noreply@github.com,2023-12-05 19:30:29+09:00,Improve the command JSON.MERGE via jsonpath::remove (#1919),unstable,True,False,2,json_test.cc,cc,7,1,8
bf694106c4ca21722fc4a4d941ca31aaf6ee6996,63799833+guojidan@users.noreply.github.com,2023-12-05 20:23:02+08:00,noreply@github.com,2023-12-05 20:23:02+08:00,Add support for JSON.STRAPPEND and JSON.STRLEN command (#1841),unstable,True,False,6,cmd_json.cc,cc,58,1,59
bf694106c4ca21722fc4a4d941ca31aaf6ee6996,63799833+guojidan@users.noreply.github.com,2023-12-05 20:23:02+08:00,noreply@github.com,2023-12-05 20:23:02+08:00,Add support for JSON.STRAPPEND and JSON.STRLEN command (#1841),unstable,True,False,6,json.h,h,45,0,45
bf694106c4ca21722fc4a4d941ca31aaf6ee6996,63799833+guojidan@users.noreply.github.com,2023-12-05 20:23:02+08:00,noreply@github.com,2023-12-05 20:23:02+08:00,Add support for JSON.STRAPPEND and JSON.STRLEN command (#1841),unstable,True,False,6,redis_json.cc,cc,39,0,39
bf694106c4ca21722fc4a4d941ca31aaf6ee6996,63799833+guojidan@users.noreply.github.com,2023-12-05 20:23:02+08:00,noreply@github.com,2023-12-05 20:23:02+08:00,Add support for JSON.STRAPPEND and JSON.STRLEN command (#1841),unstable,True,False,6,redis_json.h,h,3,0,3
bf694106c4ca21722fc4a4d941ca31aaf6ee6996,63799833+guojidan@users.noreply.github.com,2023-12-05 20:23:02+08:00,noreply@github.com,2023-12-05 20:23:02+08:00,Add support for JSON.STRAPPEND and JSON.STRLEN command (#1841),unstable,True,False,6,json_test.cc,cc,34,0,34
bf694106c4ca21722fc4a4d941ca31aaf6ee6996,63799833+guojidan@users.noreply.github.com,2023-12-05 20:23:02+08:00,noreply@github.com,2023-12-05 20:23:02+08:00,Add support for JSON.STRAPPEND and JSON.STRLEN command (#1841),unstable,True,False,6,json_test.go,go,24,0,24
6cb5b3aa57805299359e73e903212b2e25dbfcad,hulk.website@gmail.com,2023-12-06 09:43:45+08:00,noreply@github.com,2023-12-06 09:43:45+08:00,Minor refactor the return value of JSON methods (#1920),unstable,True,False,5,cmd_json.cc,cc,44,100,144
6cb5b3aa57805299359e73e903212b2e25dbfcad,hulk.website@gmail.com,2023-12-06 09:43:45+08:00,noreply@github.com,2023-12-06 09:43:45+08:00,Minor refactor the return value of JSON methods (#1920),unstable,True,False,5,json.h,h,69,62,131
6cb5b3aa57805299359e73e903212b2e25dbfcad,hulk.website@gmail.com,2023-12-06 09:43:45+08:00,noreply@github.com,2023-12-06 09:43:45+08:00,Minor refactor the return value of JSON methods (#1920),unstable,True,False,5,redis_json.cc,cc,35,38,73
6cb5b3aa57805299359e73e903212b2e25dbfcad,hulk.website@gmail.com,2023-12-06 09:43:45+08:00,noreply@github.com,2023-12-06 09:43:45+08:00,Minor refactor the return value of JSON methods (#1920),unstable,True,False,5,redis_json.h,h,10,13,23
6cb5b3aa57805299359e73e903212b2e25dbfcad,hulk.website@gmail.com,2023-12-06 09:43:45+08:00,noreply@github.com,2023-12-06 09:43:45+08:00,Minor refactor the return value of JSON methods (#1920),unstable,True,False,5,json_test.cc,cc,45,45,90
8ae7d54a78d956642cc417f8b8d845f48866bfc4,binloveplay1314@qq.com,2023-12-08 17:41:28+08:00,noreply@github.com,2023-12-08 17:41:28+08:00,"Add redis_mode/kvrocks_mode fields in INFO SERVER (#1927)

Although we will already show cluster_enabled in INFO CLUSTER,
some tools such as Redis Manager will need this field to determine
whether it is cluster mode.

If cluster mode is enabled, redis_mode is displayed as a cluster,
otherwise, it is standalone. We also use this opportunity to add
a kvrocks_mode field.

Fixes #1926.",unstable,True,False,1,server.cc,cc,2,0,2
ed2a64bc7504379469160fe4d8decf0a43347745,hulk.website@gmail.com,2023-12-08 21:28:21+08:00,noreply@github.com,2023-12-08 21:28:21+08:00,"Fix redundant ERR prefix in cluster redirect error message (#1928)

Currently, Kvrocks cluster mode returns a MOVED/TRYAGAIN error message with the 'ERR' prefix, which will cause the Redis client can't recognize the redirection message. To make it compatible with the Redis client, we should remove this prefix.

Before this patch, Kvrocks will return a MOVED error message:

```
> redis-cli -p 30001 -c set a 1
(error) ERR MOVED 15495 127.0.0.1:30005
```

After applying this patch, it works well with redis-cli redirection:

```
> redis-cli -p 30001 -c set a 1
OK
```",unstable,True,False,2,redis_connection.cc,cc,1,1,2
ed2a64bc7504379469160fe4d8decf0a43347745,hulk.website@gmail.com,2023-12-08 21:28:21+08:00,noreply@github.com,2023-12-08 21:28:21+08:00,"Fix redundant ERR prefix in cluster redirect error message (#1928)

Currently, Kvrocks cluster mode returns a MOVED/TRYAGAIN error message with the 'ERR' prefix, which will cause the Redis client can't recognize the redirection message. To make it compatible with the Redis client, we should remove this prefix.

Before this patch, Kvrocks will return a MOVED error message:

```
> redis-cli -p 30001 -c set a 1
(error) ERR MOVED 15495 127.0.0.1:30005
```

After applying this patch, it works well with redis-cli redirection:

```
> redis-cli -p 30001 -c set a 1
OK
```",unstable,True,False,2,cluster_test.go,go,11,11,22
55c55e7a80989f4c7867be249218b97375715b4c,aleks.raiden@gmail.com,2023-12-13 13:15:49+02:00,noreply@github.com,2023-12-13 20:15:49+09:00,Bump rocksdb to v8.9.1 (#1933),unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
99703d65d2e46c54228a12e5bfa6dc468fac8890,skbysp@gmail.com,2023-12-14 20:47:27+08:00,noreply@github.com,2023-12-14 20:47:27+08:00,Add the support of JSON.MGET command (#1930),unstable,True,False,4,cmd_json.cc,cc,30,1,31
99703d65d2e46c54228a12e5bfa6dc468fac8890,skbysp@gmail.com,2023-12-14 20:47:27+08:00,noreply@github.com,2023-12-14 20:47:27+08:00,Add the support of JSON.MGET command (#1930),unstable,True,False,4,redis_json.cc,cc,83,0,83
99703d65d2e46c54228a12e5bfa6dc468fac8890,skbysp@gmail.com,2023-12-14 20:47:27+08:00,noreply@github.com,2023-12-14 20:47:27+08:00,Add the support of JSON.MGET command (#1930),unstable,True,False,4,redis_json.h,h,6,0,6
99703d65d2e46c54228a12e5bfa6dc468fac8890,skbysp@gmail.com,2023-12-14 20:47:27+08:00,noreply@github.com,2023-12-14 20:47:27+08:00,Add the support of JSON.MGET command (#1930),unstable,True,False,4,json_test.go,go,32,0,32
2ecf764db9a393a414c7239410db198079bed573,hulk.website@gmail.com,2023-12-18 10:02:21+08:00,noreply@github.com,2023-12-18 10:02:21+08:00,Add the rocksdb's block cache hit/miss count to the INFO command (#1938),unstable,True,False,1,server.cc,cc,18,0,18
64e7834fea79a81d5de125a8fe3ae8e00dc82ee6,8042833@qq.com,2023-12-18 18:13:48+08:00,noreply@github.com,2023-12-18 18:13:48+08:00,Add the support of  KEEPTLE and GET options to SET command(#1935),unstable,True,False,5,cmd_string.cc,cc,30,20,50
64e7834fea79a81d5de125a8fe3ae8e00dc82ee6,8042833@qq.com,2023-12-18 18:13:48+08:00,noreply@github.com,2023-12-18 18:13:48+08:00,Add the support of  KEEPTLE and GET options to SET command(#1935),unstable,True,False,5,redis_string.cc,cc,77,39,116
64e7834fea79a81d5de125a8fe3ae8e00dc82ee6,8042833@qq.com,2023-12-18 18:13:48+08:00,noreply@github.com,2023-12-18 18:13:48+08:00,Add the support of  KEEPTLE and GET options to SET command(#1935),unstable,True,False,5,redis_string.h,h,14,1,15
64e7834fea79a81d5de125a8fe3ae8e00dc82ee6,8042833@qq.com,2023-12-18 18:13:48+08:00,noreply@github.com,2023-12-18 18:13:48+08:00,Add the support of  KEEPTLE and GET options to SET command(#1935),unstable,True,False,5,string_test.cc,cc,3,3,6
64e7834fea79a81d5de125a8fe3ae8e00dc82ee6,8042833@qq.com,2023-12-18 18:13:48+08:00,noreply@github.com,2023-12-18 18:13:48+08:00,Add the support of  KEEPTLE and GET options to SET command(#1935),unstable,True,False,5,strings_test.go,go,88,0,88
a25c054b77ffa39c24cd37aff294762942f6b808,binloveplay1314@qq.com,2023-12-19 22:39:02+08:00,noreply@github.com,2023-12-19 23:39:02+09:00,Add no-multi no-script flags to SHUTDOWN command (#1957),unstable,True,False,1,cmd_server.cc,cc,1,1,2
38c36e1e9082b6bc2f8af12a0080e507a2684786,hulk.website@gmail.com,2023-12-24 12:59:00+08:00,noreply@github.com,2023-12-24 12:59:00+08:00,Unify the way of parsing metadata (#1964),unstable,True,False,5,redis_db.cc,cc,11,12,23
38c36e1e9082b6bc2f8af12a0080e507a2684786,hulk.website@gmail.com,2023-12-24 12:59:00+08:00,noreply@github.com,2023-12-24 12:59:00+08:00,Unify the way of parsing metadata (#1964),unstable,True,False,5,redis_db.h,h,2,2,4
38c36e1e9082b6bc2f8af12a0080e507a2684786,hulk.website@gmail.com,2023-12-24 12:59:00+08:00,noreply@github.com,2023-12-24 12:59:00+08:00,Unify the way of parsing metadata (#1964),unstable,True,False,5,redis_bitmap.cc,cc,2,19,21
38c36e1e9082b6bc2f8af12a0080e507a2684786,hulk.website@gmail.com,2023-12-24 12:59:00+08:00,noreply@github.com,2023-12-24 12:59:00+08:00,Unify the way of parsing metadata (#1964),unstable,True,False,5,redis_json.cc,cc,24,49,73
38c36e1e9082b6bc2f8af12a0080e507a2684786,hulk.website@gmail.com,2023-12-24 12:59:00+08:00,noreply@github.com,2023-12-24 12:59:00+08:00,Unify the way of parsing metadata (#1964),unstable,True,False,5,redis_json.h,h,1,2,3
b0b1b4e06a109389a5ba1cf93c52eac5b84f8f5d,twice.mliu@gmail.com,2023-12-24 23:23:38+09:00,noreply@github.com,2023-12-24 23:23:38+09:00,Optimize ParseMetadata by introducing RedisTypes (#1967),unstable,True,False,3,redis_db.cc,cc,2,3,5
b0b1b4e06a109389a5ba1cf93c52eac5b84f8f5d,twice.mliu@gmail.com,2023-12-24 23:23:38+09:00,noreply@github.com,2023-12-24 23:23:38+09:00,Optimize ParseMetadata by introducing RedisTypes (#1967),unstable,True,False,3,redis_db.h,h,1,2,3
b0b1b4e06a109389a5ba1cf93c52eac5b84f8f5d,twice.mliu@gmail.com,2023-12-24 23:23:38+09:00,noreply@github.com,2023-12-24 23:23:38+09:00,Optimize ParseMetadata by introducing RedisTypes (#1967),unstable,True,False,3,redis_metadata.h,h,26,1,27
3d83f2e5c5238018c3f788efefbd3639b1f7ac2b,hulk.website@gmail.com,2023-12-25 09:53:34+08:00,noreply@github.com,2023-12-25 09:53:34+08:00,Avoid to fetch old value in SET command if NX/XX/GET/KEEPTTL is not set (#1968),unstable,True,False,2,redis_string.cc,cc,48,38,86
3d83f2e5c5238018c3f788efefbd3639b1f7ac2b,hulk.website@gmail.com,2023-12-25 09:53:34+08:00,noreply@github.com,2023-12-25 09:53:34+08:00,Avoid to fetch old value in SET command if NX/XX/GET/KEEPTTL is not set (#1968),unstable,True,False,2,redis_string.h,h,1,0,1
7a08dfdccea05266992d95e1b22c616e17bdbb35,18236554121@163.com,2023-12-26 21:07:05+08:00,noreply@github.com,2023-12-26 21:07:05+08:00,Add support of EXPIRETIME and PEXPIRETIME (#1965),unstable,True,False,14,cmd_key.cc,cc,36,0,36
7a08dfdccea05266992d95e1b22c616e17bdbb35,18236554121@163.com,2023-12-26 21:07:05+08:00,noreply@github.com,2023-12-26 21:07:05+08:00,Add support of EXPIRETIME and PEXPIRETIME (#1965),unstable,True,False,14,disk_stats.cc,cc,7,7,14
7a08dfdccea05266992d95e1b22c616e17bdbb35,18236554121@163.com,2023-12-26 21:07:05+08:00,noreply@github.com,2023-12-26 21:07:05+08:00,Add support of EXPIRETIME and PEXPIRETIME (#1965),unstable,True,False,14,redis_db.cc,cc,16,6,22
7a08dfdccea05266992d95e1b22c616e17bdbb35,18236554121@163.com,2023-12-26 21:07:05+08:00,noreply@github.com,2023-12-26 21:07:05+08:00,Add support of EXPIRETIME and PEXPIRETIME (#1965),unstable,True,False,14,redis_db.h,h,3,2,5
7a08dfdccea05266992d95e1b22c616e17bdbb35,18236554121@163.com,2023-12-26 21:07:05+08:00,noreply@github.com,2023-12-26 21:07:05+08:00,Add support of EXPIRETIME and PEXPIRETIME (#1965),unstable,True,False,14,redis_bloom_chain.cc,cc,1,1,2
7a08dfdccea05266992d95e1b22c616e17bdbb35,18236554121@163.com,2023-12-26 21:07:05+08:00,noreply@github.com,2023-12-26 21:07:05+08:00,Add support of EXPIRETIME and PEXPIRETIME (#1965),unstable,True,False,14,redis_hash.cc,cc,1,1,2
7a08dfdccea05266992d95e1b22c616e17bdbb35,18236554121@163.com,2023-12-26 21:07:05+08:00,noreply@github.com,2023-12-26 21:07:05+08:00,Add support of EXPIRETIME and PEXPIRETIME (#1965),unstable,True,False,14,redis_json.cc,cc,2,2,4
7a08dfdccea05266992d95e1b22c616e17bdbb35,18236554121@163.com,2023-12-26 21:07:05+08:00,noreply@github.com,2023-12-26 21:07:05+08:00,Add support of EXPIRETIME and PEXPIRETIME (#1965),unstable,True,False,14,redis_list.cc,cc,1,1,2
7a08dfdccea05266992d95e1b22c616e17bdbb35,18236554121@163.com,2023-12-26 21:07:05+08:00,noreply@github.com,2023-12-26 21:07:05+08:00,Add support of EXPIRETIME and PEXPIRETIME (#1965),unstable,True,False,14,redis_set.cc,cc,1,1,2
7a08dfdccea05266992d95e1b22c616e17bdbb35,18236554121@163.com,2023-12-26 21:07:05+08:00,noreply@github.com,2023-12-26 21:07:05+08:00,Add support of EXPIRETIME and PEXPIRETIME (#1965),unstable,True,False,14,redis_sortedint.cc,cc,1,1,2
7a08dfdccea05266992d95e1b22c616e17bdbb35,18236554121@163.com,2023-12-26 21:07:05+08:00,noreply@github.com,2023-12-26 21:07:05+08:00,Add support of EXPIRETIME and PEXPIRETIME (#1965),unstable,True,False,14,redis_stream.cc,cc,1,1,2
7a08dfdccea05266992d95e1b22c616e17bdbb35,18236554121@163.com,2023-12-26 21:07:05+08:00,noreply@github.com,2023-12-26 21:07:05+08:00,Add support of EXPIRETIME and PEXPIRETIME (#1965),unstable,True,False,14,redis_zset.cc,cc,1,1,2
7a08dfdccea05266992d95e1b22c616e17bdbb35,18236554121@163.com,2023-12-26 21:07:05+08:00,noreply@github.com,2023-12-26 21:07:05+08:00,Add support of EXPIRETIME and PEXPIRETIME (#1965),unstable,True,False,14,metadata_test.cc,cc,78,1,79
7a08dfdccea05266992d95e1b22c616e17bdbb35,18236554121@163.com,2023-12-26 21:07:05+08:00,noreply@github.com,2023-12-26 21:07:05+08:00,Add support of EXPIRETIME and PEXPIRETIME (#1965),unstable,True,False,14,expire_test.go,go,52,0,52
5b54f9cdb1aa3b7b789ef2f05bb1b198e09c9da6,hulk.website@gmail.com,2023-12-27 09:45:47+08:00,noreply@github.com,2023-12-27 09:45:47+08:00,"Record and export the keyspace hit/miss count to INFO command (#1971)

Currently, Redis supports inspecting the keyspace hit/miss count via
INFO command to see if the hit ratio is expected. So we also export
the same metric to align with Redis metrics.",unstable,True,False,12,cmd_replication.cc,cc,3,3,6
5b54f9cdb1aa3b7b789ef2f05bb1b198e09c9da6,hulk.website@gmail.com,2023-12-27 09:45:47+08:00,noreply@github.com,2023-12-27 09:45:47+08:00,"Record and export the keyspace hit/miss count to INFO command (#1971)

Currently, Redis supports inspecting the keyspace hit/miss count via
INFO command to see if the hit ratio is expected. So we also export
the same metric to align with Redis metrics.",unstable,True,False,12,redis_connection.cc,cc,1,1,2
5b54f9cdb1aa3b7b789ef2f05bb1b198e09c9da6,hulk.website@gmail.com,2023-12-27 09:45:47+08:00,noreply@github.com,2023-12-27 09:45:47+08:00,"Record and export the keyspace hit/miss count to INFO command (#1971)

Currently, Redis supports inspecting the keyspace hit/miss count via
INFO command to see if the hit ratio is expected. So we also export
the same metric to align with Redis metrics.",unstable,True,False,12,redis_request.cc,cc,3,3,6
5b54f9cdb1aa3b7b789ef2f05bb1b198e09c9da6,hulk.website@gmail.com,2023-12-27 09:45:47+08:00,noreply@github.com,2023-12-27 09:45:47+08:00,"Record and export the keyspace hit/miss count to INFO command (#1971)

Currently, Redis supports inspecting the keyspace hit/miss count via
INFO command to see if the hit ratio is expected. So we also export
the same metric to align with Redis metrics.",unstable,True,False,12,server.cc,cc,14,8,22
5b54f9cdb1aa3b7b789ef2f05bb1b198e09c9da6,hulk.website@gmail.com,2023-12-27 09:45:47+08:00,noreply@github.com,2023-12-27 09:45:47+08:00,"Record and export the keyspace hit/miss count to INFO command (#1971)

Currently, Redis supports inspecting the keyspace hit/miss count via
INFO command to see if the hit ratio is expected. So we also export
the same metric to align with Redis metrics.",unstable,True,False,12,stats.h,h,8,8,16
5b54f9cdb1aa3b7b789ef2f05bb1b198e09c9da6,hulk.website@gmail.com,2023-12-27 09:45:47+08:00,noreply@github.com,2023-12-27 09:45:47+08:00,"Record and export the keyspace hit/miss count to INFO command (#1971)

Currently, Redis supports inspecting the keyspace hit/miss count via
INFO command to see if the hit ratio is expected. So we also export
the same metric to align with Redis metrics.",unstable,True,False,12,event_listener.cc,cc,2,2,4
5b54f9cdb1aa3b7b789ef2f05bb1b198e09c9da6,hulk.website@gmail.com,2023-12-27 09:45:47+08:00,noreply@github.com,2023-12-27 09:45:47+08:00,"Record and export the keyspace hit/miss count to INFO command (#1971)

Currently, Redis supports inspecting the keyspace hit/miss count via
INFO command to see if the hit ratio is expected. So we also export
the same metric to align with Redis metrics.",unstable,True,False,12,redis_db.cc,cc,11,37,48
5b54f9cdb1aa3b7b789ef2f05bb1b198e09c9da6,hulk.website@gmail.com,2023-12-27 09:45:47+08:00,noreply@github.com,2023-12-27 09:45:47+08:00,"Record and export the keyspace hit/miss count to INFO command (#1971)

Currently, Redis supports inspecting the keyspace hit/miss count via
INFO command to see if the hit ratio is expected. So we also export
the same metric to align with Redis metrics.",unstable,True,False,12,redis_db.h,h,1,3,4
5b54f9cdb1aa3b7b789ef2f05bb1b198e09c9da6,hulk.website@gmail.com,2023-12-27 09:45:47+08:00,noreply@github.com,2023-12-27 09:45:47+08:00,"Record and export the keyspace hit/miss count to INFO command (#1971)

Currently, Redis supports inspecting the keyspace hit/miss count via
INFO command to see if the hit ratio is expected. So we also export
the same metric to align with Redis metrics.",unstable,True,False,12,storage.cc,cc,45,10,55
5b54f9cdb1aa3b7b789ef2f05bb1b198e09c9da6,hulk.website@gmail.com,2023-12-27 09:45:47+08:00,noreply@github.com,2023-12-27 09:45:47+08:00,"Record and export the keyspace hit/miss count to INFO command (#1971)

Currently, Redis supports inspecting the keyspace hit/miss count via
INFO command to see if the hit ratio is expected. So we also export
the same metric to align with Redis metrics.",unstable,True,False,12,storage.h,h,20,7,27
5b54f9cdb1aa3b7b789ef2f05bb1b198e09c9da6,hulk.website@gmail.com,2023-12-27 09:45:47+08:00,noreply@github.com,2023-12-27 09:45:47+08:00,"Record and export the keyspace hit/miss count to INFO command (#1971)

Currently, Redis supports inspecting the keyspace hit/miss count via
INFO command to see if the hit ratio is expected. So we also export
the same metric to align with Redis metrics.",unstable,True,False,12,redis_string.cc,cc,5,25,30
5b54f9cdb1aa3b7b789ef2f05bb1b198e09c9da6,hulk.website@gmail.com,2023-12-27 09:45:47+08:00,noreply@github.com,2023-12-27 09:45:47+08:00,"Record and export the keyspace hit/miss count to INFO command (#1971)

Currently, Redis supports inspecting the keyspace hit/miss count via
INFO command to see if the hit ratio is expected. So we also export
the same metric to align with Redis metrics.",unstable,True,False,12,info_test.go,go,41,0,41
c27018e0d111bcc6486e3b4e4ceab736b4b7d5c4,twice.mliu@gmail.com,2024-01-02 11:32:04+08:00,noreply@github.com,2024-01-02 11:32:04+08:00,Update copyright date in NOTICE (#1975),unstable,True,False,1,NOTICE,None,1,1,2
6b9dcd11171489a3d23dfcac57fbbacdb592c545,44099579+chrisxu333@users.noreply.github.com,2024-01-02 07:51:01-08:00,noreply@github.com,2024-01-02 23:51:01+08:00,Add the support of ANALYZE command to inspect the performance of RocksDB (#1943),unstable,True,False,1,cmd_server.cc,cc,70,1,71
aaf0faf092e9ea5d7519bfcefb71e4e260bcb826,8042833@qq.com,2024-01-03 08:36:44+08:00,noreply@github.com,2024-01-03 08:36:44+08:00,"Add INFO comment when DB not scaned (#1956)

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,server.cc,cc,5,1,6
574d438b9acde7b45b0666564af4450c057aceea,maochongxin@gmail.com,2024-01-03 09:55:23+08:00,noreply@github.com,2024-01-03 09:55:23+08:00,Refactor kvrocks2redis via rocksdb secondary instance (#1963),unstable,True,False,15,db_util.h,h,20,0,20
574d438b9acde7b45b0666564af4450c057aceea,maochongxin@gmail.com,2024-01-03 09:55:23+08:00,noreply@github.com,2024-01-03 09:55:23+08:00,Refactor kvrocks2redis via rocksdb secondary instance (#1963),unstable,True,False,15,storage.cc,cc,23,8,31
574d438b9acde7b45b0666564af4450c057aceea,maochongxin@gmail.com,2024-01-03 09:55:23+08:00,noreply@github.com,2024-01-03 09:55:23+08:00,Refactor kvrocks2redis via rocksdb secondary instance (#1963),unstable,True,False,15,storage.h,h,8,1,9
574d438b9acde7b45b0666564af4450c057aceea,maochongxin@gmail.com,2024-01-03 09:55:23+08:00,noreply@github.com,2024-01-03 09:55:23+08:00,Refactor kvrocks2redis via rocksdb secondary instance (#1963),unstable,True,False,15,config.cc,cc,0,8,8
574d438b9acde7b45b0666564af4450c057aceea,maochongxin@gmail.com,2024-01-03 09:55:23+08:00,noreply@github.com,2024-01-03 09:55:23+08:00,Refactor kvrocks2redis via rocksdb secondary instance (#1963),unstable,True,False,15,config.h,h,0,3,3
574d438b9acde7b45b0666564af4450c057aceea,maochongxin@gmail.com,2024-01-03 09:55:23+08:00,noreply@github.com,2024-01-03 09:55:23+08:00,Refactor kvrocks2redis via rocksdb secondary instance (#1963),unstable,True,False,15,kvrocks2redis.conf,conf,0,4,4
574d438b9acde7b45b0666564af4450c057aceea,maochongxin@gmail.com,2024-01-03 09:55:23+08:00,noreply@github.com,2024-01-03 09:55:23+08:00,Refactor kvrocks2redis via rocksdb secondary instance (#1963),unstable,True,False,15,main.cc,cc,1,1,2
574d438b9acde7b45b0666564af4450c057aceea,maochongxin@gmail.com,2024-01-03 09:55:23+08:00,noreply@github.com,2024-01-03 09:55:23+08:00,Refactor kvrocks2redis via rocksdb secondary instance (#1963),unstable,True,False,15,parser.cc,cc,3,5,8
574d438b9acde7b45b0666564af4450c057aceea,maochongxin@gmail.com,2024-01-03 09:55:23+08:00,noreply@github.com,2024-01-03 09:55:23+08:00,Refactor kvrocks2redis via rocksdb secondary instance (#1963),unstable,True,False,15,parser.h,h,1,19,20
574d438b9acde7b45b0666564af4450c057aceea,maochongxin@gmail.com,2024-01-03 09:55:23+08:00,noreply@github.com,2024-01-03 09:55:23+08:00,Refactor kvrocks2redis via rocksdb secondary instance (#1963),unstable,True,False,15,sync.cc,cc,58,114,172
574d438b9acde7b45b0666564af4450c057aceea,maochongxin@gmail.com,2024-01-03 09:55:23+08:00,noreply@github.com,2024-01-03 09:55:23+08:00,Refactor kvrocks2redis via rocksdb secondary instance (#1963),unstable,True,False,15,sync.h,h,3,5,8
574d438b9acde7b45b0666564af4450c057aceea,maochongxin@gmail.com,2024-01-03 09:55:23+08:00,noreply@github.com,2024-01-03 09:55:23+08:00,Refactor kvrocks2redis via rocksdb secondary instance (#1963),unstable,True,False,15,README.md,md,7,5,12
574d438b9acde7b45b0666564af4450c057aceea,maochongxin@gmail.com,2024-01-03 09:55:23+08:00,noreply@github.com,2024-01-03 09:55:23+08:00,Refactor kvrocks2redis via rocksdb secondary instance (#1963),unstable,True,False,15,check_consistency.py,py,132,0,132
574d438b9acde7b45b0666564af4450c057aceea,maochongxin@gmail.com,2024-01-03 09:55:23+08:00,noreply@github.com,2024-01-03 09:55:23+08:00,Refactor kvrocks2redis via rocksdb secondary instance (#1963),unstable,True,False,15,populate-kvrocks.py,py,141,53,194
08c73350d914dde2fa83f2f7fcdfb83a839f1247,58337761+MaheshMadushan@users.noreply.github.com,2024-01-03 08:22:29+05:30,noreply@github.com,2024-01-03 10:52:29+08:00,"The storage engine type awareness in Kvrocks (#1973)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,CMakeLists.txt,txt,5,0,5
08c73350d914dde2fa83f2f7fcdfb83a839f1247,58337761+MaheshMadushan@users.noreply.github.com,2024-01-03 08:22:29+05:30,noreply@github.com,2024-01-03 10:52:29+08:00,"The storage engine type awareness in Kvrocks (#1973)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,storage.h,h,7,0,7
36bab87c5e529ed2ae57f9977f015932a302ffe7,wander4096@gmail.com,2024-01-03 12:31:13+08:00,noreply@github.com,2024-01-03 12:31:13+08:00,"Fix parse BITCOUNT (#1979)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,4,cmd_bit.cc,cc,15,1,16
36bab87c5e529ed2ae57f9977f015932a302ffe7,wander4096@gmail.com,2024-01-03 12:31:13+08:00,noreply@github.com,2024-01-03 12:31:13+08:00,"Fix parse BITCOUNT (#1979)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,4,commander.h,h,2,1,3
36bab87c5e529ed2ae57f9977f015932a302ffe7,wander4096@gmail.com,2024-01-03 12:31:13+08:00,noreply@github.com,2024-01-03 12:31:13+08:00,"Fix parse BITCOUNT (#1979)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,4,error_constants.h,h,1,0,1
36bab87c5e529ed2ae57f9977f015932a302ffe7,wander4096@gmail.com,2024-01-03 12:31:13+08:00,noreply@github.com,2024-01-03 12:31:13+08:00,"Fix parse BITCOUNT (#1979)

Signed-off-by: tison <wander4096@gmail.com>",unstable,True,False,4,redis_bitmap.cc,cc,0,1,1
230d972640c9231b173f3acd17d4a0b1c19d15a1,hulk.website@gmail.com,2024-01-05 10:49:10+08:00,noreply@github.com,2024-01-05 10:49:10+08:00,Allow to get the latest sequence number when creating the backup (#1987),unstable,True,False,3,storage.cc,cc,2,2,4
230d972640c9231b173f3acd17d4a0b1c19d15a1,hulk.website@gmail.com,2024-01-05 10:49:10+08:00,noreply@github.com,2024-01-05 10:49:10+08:00,Allow to get the latest sequence number when creating the backup (#1987),unstable,True,False,3,storage.h,h,4,1,5
230d972640c9231b173f3acd17d4a0b1c19d15a1,hulk.website@gmail.com,2024-01-05 10:49:10+08:00,noreply@github.com,2024-01-05 10:49:10+08:00,Allow to get the latest sequence number when creating the backup (#1987),unstable,True,False,3,storage_test.cc,cc,58,0,58
74a1f42a3fe671e1f8732f74a13e5ed289d2d646,64510284+jyf111@users.noreply.github.com,2024-01-06 19:06:50+08:00,noreply@github.com,2024-01-06 19:06:50+08:00,Add support of BITFIELD_RO (#1990),unstable,True,False,2,cmd_bit.cc,cc,9,1,10
74a1f42a3fe671e1f8732f74a13e5ed289d2d646,64510284+jyf111@users.noreply.github.com,2024-01-06 19:06:50+08:00,noreply@github.com,2024-01-06 19:06:50+08:00,Add support of BITFIELD_RO (#1990),unstable,True,False,2,bitmap_test.go,go,13,1,14
6e79fa940edca2ce80d863d92f967d5ade767c6d,hulk.website@gmail.com,2024-01-08 10:10:10+08:00,noreply@github.com,2024-01-08 10:10:10+08:00,"Implement the RESP3 boolean type (#1991)

Except for the RESP3 boolean type, this PR also implements the
`DEBUG PROTOCOL <type>`  to test the new types. Also, we have
added a new configuration `resp3-enabled` to enable the RESP3
when testing.",unstable,True,False,14,kvrocks.conf,conf,6,0,6
6e79fa940edca2ce80d863d92f967d5ade767c6d,hulk.website@gmail.com,2024-01-08 10:10:10+08:00,noreply@github.com,2024-01-08 10:10:10+08:00,"Implement the RESP3 boolean type (#1991)

Except for the RESP3 boolean type, this PR also implements the
`DEBUG PROTOCOL <type>`  to test the new types. Also, we have
added a new configuration `resp3-enabled` to enable the RESP3
when testing.",unstable,True,False,14,cmd_server.cc,cc,35,5,40
6e79fa940edca2ce80d863d92f967d5ade767c6d,hulk.website@gmail.com,2024-01-08 10:10:10+08:00,noreply@github.com,2024-01-08 10:10:10+08:00,"Implement the RESP3 boolean type (#1991)

Except for the RESP3 boolean type, this PR also implements the
`DEBUG PROTOCOL <type>`  to test the new types. Also, we have
added a new configuration `resp3-enabled` to enable the RESP3
when testing.",unstable,True,False,14,config.cc,cc,1,0,1
6e79fa940edca2ce80d863d92f967d5ade767c6d,hulk.website@gmail.com,2024-01-08 10:10:10+08:00,noreply@github.com,2024-01-08 10:10:10+08:00,"Implement the RESP3 boolean type (#1991)

Except for the RESP3 boolean type, this PR also implements the
`DEBUG PROTOCOL <type>`  to test the new types. Also, we have
added a new configuration `resp3-enabled` to enable the RESP3
when testing.",unstable,True,False,14,config.h,h,1,0,1
6e79fa940edca2ce80d863d92f967d5ade767c6d,hulk.website@gmail.com,2024-01-08 10:10:10+08:00,noreply@github.com,2024-01-08 10:10:10+08:00,"Implement the RESP3 boolean type (#1991)

Except for the RESP3 boolean type, this PR also implements the
`DEBUG PROTOCOL <type>`  to test the new types. Also, we have
added a new configuration `resp3-enabled` to enable the RESP3
when testing.",unstable,True,False,14,redis_connection.h,h,5,1,6
6e79fa940edca2ce80d863d92f967d5ade767c6d,hulk.website@gmail.com,2024-01-08 10:10:10+08:00,noreply@github.com,2024-01-08 10:10:10+08:00,"Implement the RESP3 boolean type (#1991)

Except for the RESP3 boolean type, this PR also implements the
`DEBUG PROTOCOL <type>`  to test the new types. Also, we have
added a new configuration `resp3-enabled` to enable the RESP3
when testing.",unstable,True,False,14,redis_reply.h,h,9,0,9
6e79fa940edca2ce80d863d92f967d5ade767c6d,hulk.website@gmail.com,2024-01-08 10:10:10+08:00,noreply@github.com,2024-01-08 10:10:10+08:00,"Implement the RESP3 boolean type (#1991)

Except for the RESP3 boolean type, this PR also implements the
`DEBUG PROTOCOL <type>`  to test the new types. Also, we have
added a new configuration `resp3-enabled` to enable the RESP3
when testing.",unstable,True,False,14,scripting.cc,cc,9,5,14
6e79fa940edca2ce80d863d92f967d5ade767c6d,hulk.website@gmail.com,2024-01-08 10:10:10+08:00,noreply@github.com,2024-01-08 10:10:10+08:00,"Implement the RESP3 boolean type (#1991)

Except for the RESP3 boolean type, this PR also implements the
`DEBUG PROTOCOL <type>`  to test the new types. Also, we have
added a new configuration `resp3-enabled` to enable the RESP3
when testing.",unstable,True,False,14,scripting.h,h,1,1,2
6e79fa940edca2ce80d863d92f967d5ade767c6d,hulk.website@gmail.com,2024-01-08 10:10:10+08:00,noreply@github.com,2024-01-08 10:10:10+08:00,"Implement the RESP3 boolean type (#1991)

Except for the RESP3 boolean type, this PR also implements the
`DEBUG PROTOCOL <type>`  to test the new types. Also, we have
added a new configuration `resp3-enabled` to enable the RESP3
when testing.",unstable,True,False,14,go.mod,mod,1,1,2
6e79fa940edca2ce80d863d92f967d5ade767c6d,hulk.website@gmail.com,2024-01-08 10:10:10+08:00,noreply@github.com,2024-01-08 10:10:10+08:00,"Implement the RESP3 boolean type (#1991)

Except for the RESP3 boolean type, this PR also implements the
`DEBUG PROTOCOL <type>`  to test the new types. Also, we have
added a new configuration `resp3-enabled` to enable the RESP3
when testing.",unstable,True,False,14,go.sum,sum,4,4,8
6e79fa940edca2ce80d863d92f967d5ade767c6d,hulk.website@gmail.com,2024-01-08 10:10:10+08:00,noreply@github.com,2024-01-08 10:10:10+08:00,"Implement the RESP3 boolean type (#1991)

Except for the RESP3 boolean type, this PR also implements the
`DEBUG PROTOCOL <type>`  to test the new types. Also, we have
added a new configuration `resp3-enabled` to enable the RESP3
when testing.",unstable,True,False,14,slotmigrate_test.go,go,1,1,2
6e79fa940edca2ce80d863d92f967d5ade767c6d,hulk.website@gmail.com,2024-01-08 10:10:10+08:00,noreply@github.com,2024-01-08 10:10:10+08:00,"Implement the RESP3 boolean type (#1991)

Except for the RESP3 boolean type, this PR also implements the
`DEBUG PROTOCOL <type>`  to test the new types. Also, we have
added a new configuration `resp3-enabled` to enable the RESP3
when testing.",unstable,True,False,14,debug_test.go,go,106,0,106
6e79fa940edca2ce80d863d92f967d5ade767c6d,hulk.website@gmail.com,2024-01-08 10:10:10+08:00,noreply@github.com,2024-01-08 10:10:10+08:00,"Implement the RESP3 boolean type (#1991)

Except for the RESP3 boolean type, this PR also implements the
`DEBUG PROTOCOL <type>`  to test the new types. Also, we have
added a new configuration `resp3-enabled` to enable the RESP3
when testing.",unstable,True,False,14,hello_test.go,go,21,0,21
6e79fa940edca2ce80d863d92f967d5ade767c6d,hulk.website@gmail.com,2024-01-08 10:10:10+08:00,noreply@github.com,2024-01-08 10:10:10+08:00,"Implement the RESP3 boolean type (#1991)

Except for the RESP3 boolean type, this PR also implements the
`DEBUG PROTOCOL <type>`  to test the new types. Also, we have
added a new configuration `resp3-enabled` to enable the RESP3
when testing.",unstable,True,False,14,zset_test.go,go,2,2,4
ee41959e837a5a3023a9eb6aef4914567e9fdd64,18236554121@163.com,2024-01-09 21:40:48+08:00,noreply@github.com,2024-01-09 21:40:48+08:00,Add the support of ZINTER and ZINTERCARD (#1992),unstable,True,False,4,cmd_zset.cc,cc,83,0,83
ee41959e837a5a3023a9eb6aef4914567e9fdd64,18236554121@163.com,2024-01-09 21:40:48+08:00,noreply@github.com,2024-01-09 21:40:48+08:00,Add the support of ZINTER and ZINTERCARD (#1992),unstable,True,False,4,redis_zset.cc,cc,46,0,46
ee41959e837a5a3023a9eb6aef4914567e9fdd64,18236554121@163.com,2024-01-09 21:40:48+08:00,noreply@github.com,2024-01-09 21:40:48+08:00,Add the support of ZINTER and ZINTERCARD (#1992),unstable,True,False,4,redis_zset.h,h,1,0,1
ee41959e837a5a3023a9eb6aef4914567e9fdd64,18236554121@163.com,2024-01-09 21:40:48+08:00,noreply@github.com,2024-01-09 21:40:48+08:00,Add the support of ZINTER and ZINTERCARD (#1992),unstable,True,False,4,zset_test.go,go,52,0,52
505aeb6d7105090814e6fa914e8969c029968b23,raffertyyu@tencent.com,2024-01-12 13:27:31+08:00,noreply@github.com,2024-01-12 13:27:31+08:00,Add support of new command: ssubscribe and sunsubscribe (#2003),unstable,True,False,7,cmd_pubsub.cc,cc,54,6,60
505aeb6d7105090814e6fa914e8969c029968b23,raffertyyu@tencent.com,2024-01-12 13:27:31+08:00,noreply@github.com,2024-01-12 13:27:31+08:00,Add support of new command: ssubscribe and sunsubscribe (#2003),unstable,True,False,7,cmd_server.cc,cc,3,2,5
505aeb6d7105090814e6fa914e8969c029968b23,raffertyyu@tencent.com,2024-01-12 13:27:31+08:00,noreply@github.com,2024-01-12 13:27:31+08:00,Add support of new command: ssubscribe and sunsubscribe (#2003),unstable,True,False,7,redis_connection.cc,cc,39,0,39
505aeb6d7105090814e6fa914e8969c029968b23,raffertyyu@tencent.com,2024-01-12 13:27:31+08:00,noreply@github.com,2024-01-12 13:27:31+08:00,Add support of new command: ssubscribe and sunsubscribe (#2003),unstable,True,False,7,redis_connection.h,h,5,0,5
505aeb6d7105090814e6fa914e8969c029968b23,raffertyyu@tencent.com,2024-01-12 13:27:31+08:00,noreply@github.com,2024-01-12 13:27:31+08:00,Add support of new command: ssubscribe and sunsubscribe (#2003),unstable,True,False,7,server.cc,cc,61,0,61
505aeb6d7105090814e6fa914e8969c029968b23,raffertyyu@tencent.com,2024-01-12 13:27:31+08:00,noreply@github.com,2024-01-12 13:27:31+08:00,Add support of new command: ssubscribe and sunsubscribe (#2003),unstable,True,False,7,server.h,h,7,0,7
505aeb6d7105090814e6fa914e8969c029968b23,raffertyyu@tencent.com,2024-01-12 13:27:31+08:00,noreply@github.com,2024-01-12 13:27:31+08:00,Add support of new command: ssubscribe and sunsubscribe (#2003),unstable,True,False,7,pubsubshard_test.go,go,164,0,164
4059b43f38601e560fd0812c597759eecaf463be,hulk.website@gmail.com,2024-01-12 18:16:51+08:00,noreply@github.com,2024-01-12 18:16:51+08:00,"Implement an unify key-value iterator for Kvrocks (#2004)

Currently, we need to iterate all keys in the database in different places like the cluster migration and kvrocks2redis, but don't have an iterator for this purpose. It's very error-prone to implement this in different places since Kvrocks may add a new column family in the future, and we must be careful to iterate all keys in all column families. This would be a burden for maintenance, So we want to implement an iterator for iterating keys.

```C++

DBIter iter(storage, read_option);
for (iter.Seek(); iter.Valid(); iter.Next()) {
    if (iter.Type() == kRedisString || iter.Type() == kRedisJSON) {
        // the string/json type didn't have subkeys
        continue;
    }

    auto subkey_iter = iter.GetSubKeyIterator();
    for (subkey_iter.Seek(); subkey_iter.Valid(); subkey_iter.Next()) {
        // handle its subkey and value here
    }
}

```

When using this iterator, it will iterate the metadata column family first and check its type, if it's not a string or JSON, then it will iterate the corresponding column family to get subkeys. That said, if we have a key foo with type hash, then the iterator will iterate foo and foo:field1, foo:field2, and so on.

This solution can bring those benefits:

- The codes look more intuitive
- Can reuse this iterator if we want to iterate keys only

This closes #1989",unstable,True,False,3,iterator.cc,cc,166,0,166
4059b43f38601e560fd0812c597759eecaf463be,hulk.website@gmail.com,2024-01-12 18:16:51+08:00,noreply@github.com,2024-01-12 18:16:51+08:00,"Implement an unify key-value iterator for Kvrocks (#2004)

Currently, we need to iterate all keys in the database in different places like the cluster migration and kvrocks2redis, but don't have an iterator for this purpose. It's very error-prone to implement this in different places since Kvrocks may add a new column family in the future, and we must be careful to iterate all keys in all column families. This would be a burden for maintenance, So we want to implement an iterator for iterating keys.

```C++

DBIter iter(storage, read_option);
for (iter.Seek(); iter.Valid(); iter.Next()) {
    if (iter.Type() == kRedisString || iter.Type() == kRedisJSON) {
        // the string/json type didn't have subkeys
        continue;
    }

    auto subkey_iter = iter.GetSubKeyIterator();
    for (subkey_iter.Seek(); subkey_iter.Valid(); subkey_iter.Next()) {
        // handle its subkey and value here
    }
}

```

When using this iterator, it will iterate the metadata column family first and check its type, if it's not a string or JSON, then it will iterate the corresponding column family to get subkeys. That said, if we have a key foo with type hash, then the iterator will iterate foo and foo:field1, foo:field2, and so on.

This solution can bring those benefits:

- The codes look more intuitive
- Can reuse this iterator if we want to iterate keys only

This closes #1989",unstable,True,False,3,iterator.h,h,82,0,82
4059b43f38601e560fd0812c597759eecaf463be,hulk.website@gmail.com,2024-01-12 18:16:51+08:00,noreply@github.com,2024-01-12 18:16:51+08:00,"Implement an unify key-value iterator for Kvrocks (#2004)

Currently, we need to iterate all keys in the database in different places like the cluster migration and kvrocks2redis, but don't have an iterator for this purpose. It's very error-prone to implement this in different places since Kvrocks may add a new column family in the future, and we must be careful to iterate all keys in all column families. This would be a burden for maintenance, So we want to implement an iterator for iterating keys.

```C++

DBIter iter(storage, read_option);
for (iter.Seek(); iter.Valid(); iter.Next()) {
    if (iter.Type() == kRedisString || iter.Type() == kRedisJSON) {
        // the string/json type didn't have subkeys
        continue;
    }

    auto subkey_iter = iter.GetSubKeyIterator();
    for (subkey_iter.Seek(); subkey_iter.Valid(); subkey_iter.Next()) {
        // handle its subkey and value here
    }
}

```

When using this iterator, it will iterate the metadata column family first and check its type, if it's not a string or JSON, then it will iterate the corresponding column family to get subkeys. That said, if we have a key foo with type hash, then the iterator will iterate foo and foo:field1, foo:field2, and so on.

This solution can bring those benefits:

- The codes look more intuitive
- Can reuse this iterator if we want to iterate keys only

This closes #1989",unstable,True,False,3,iterator_test.cc,cc,366,0,366
9b36a0a871c07c82e3f73685d2d55beb86fafb39,aleks.raiden@gmail.com,2024-01-13 09:28:11+02:00,noreply@github.com,2024-01-13 15:28:11+08:00,Bump rocksdb to 8.10.0 (#2005),unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
5cbc123ee05f0b6dbd95b504ae262d00d03549be,44099579+chrisxu333@users.noreply.github.com,2024-01-13 19:26:19-08:00,noreply@github.com,2024-01-14 12:26:19+09:00,"Add support of new command: RESET (#1999)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,cmd_server.cc,cc,35,2,37
5cbc123ee05f0b6dbd95b504ae262d00d03549be,44099579+chrisxu333@users.noreply.github.com,2024-01-13 19:26:19-08:00,noreply@github.com,2024-01-14 12:26:19+09:00,"Add support of new command: RESET (#1999)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,worker.cc,cc,10,0,10
5cbc123ee05f0b6dbd95b504ae262d00d03549be,44099579+chrisxu333@users.noreply.github.com,2024-01-13 19:26:19-08:00,noreply@github.com,2024-01-14 12:26:19+09:00,"Add support of new command: RESET (#1999)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,worker.h,h,1,0,1
5cbc123ee05f0b6dbd95b504ae262d00d03549be,44099579+chrisxu333@users.noreply.github.com,2024-01-13 19:26:19-08:00,noreply@github.com,2024-01-14 12:26:19+09:00,"Add support of new command: RESET (#1999)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,reset_test.go,go,67,0,67
7cbf0a577859da1f9e41364a56931a1402f02145,twice.mliu@gmail.com,2024-01-14 14:53:01+09:00,noreply@github.com,2024-01-14 14:53:01+09:00,Replace manual RedisType check by calling IsSingleKVType (#2013),unstable,True,False,2,compact_filter.cc,cc,1,1,2
7cbf0a577859da1f9e41364a56931a1402f02145,twice.mliu@gmail.com,2024-01-14 14:53:01+09:00,noreply@github.com,2024-01-14 14:53:01+09:00,Replace manual RedisType check by calling IsSingleKVType (#2013),unstable,True,False,2,iterator.cc,cc,1,2,3
9d656f1476583651e2fae20ed1c37cf35d0679ca,caipengbo@outlook.com,2024-01-14 15:59:07+08:00,noreply@github.com,2024-01-14 15:59:07+08:00,"Add the ApplyBatch command for data migration scenario (#2010)

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,4,cmd_server.cc,cc,35,1,36
9d656f1476583651e2fae20ed1c37cf35d0679ca,caipengbo@outlook.com,2024-01-14 15:59:07+08:00,noreply@github.com,2024-01-14 15:59:07+08:00,"Add the ApplyBatch command for data migration scenario (#2010)

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,4,storage.cc,cc,5,3,8
9d656f1476583651e2fae20ed1c37cf35d0679ca,caipengbo@outlook.com,2024-01-14 15:59:07+08:00,noreply@github.com,2024-01-14 15:59:07+08:00,"Add the ApplyBatch command for data migration scenario (#2010)

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,4,storage.h,h,1,0,1
9d656f1476583651e2fae20ed1c37cf35d0679ca,caipengbo@outlook.com,2024-01-14 15:59:07+08:00,noreply@github.com,2024-01-14 15:59:07+08:00,"Add the ApplyBatch command for data migration scenario (#2010)

Co-authored-by: git-hulk <hulk.website@gmail.com>",unstable,True,False,4,applybatch_test.go,go,58,0,58
a1cbd1a921d43d75a8537fb1ba6aa76b4e39841a,binloveplay1314@qq.com,2024-01-15 09:48:32+08:00,noreply@github.com,2024-01-15 09:48:32+08:00,Fix RESET arity and command flags (#2018),unstable,True,False,1,cmd_server.cc,cc,1,1,2
dad7494f0028e51bd3265459196dc4049b9cc615,53040712+JxLi0921@users.noreply.github.com,2024-01-15 15:57:09+08:00,noreply@github.com,2024-01-15 15:57:09+08:00,Add support of new command: ZRANDMEMBER  (#2016),unstable,True,False,5,cmd_zset.cc,cc,64,1,65
dad7494f0028e51bd3265459196dc4049b9cc615,53040712+JxLi0921@users.noreply.github.com,2024-01-15 15:57:09+08:00,noreply@github.com,2024-01-15 15:57:09+08:00,Add support of new command: ZRANDMEMBER  (#2016),unstable,True,False,5,redis_zset.cc,cc,79,0,79
dad7494f0028e51bd3265459196dc4049b9cc615,53040712+JxLi0921@users.noreply.github.com,2024-01-15 15:57:09+08:00,noreply@github.com,2024-01-15 15:57:09+08:00,Add support of new command: ZRANDMEMBER  (#2016),unstable,True,False,5,redis_zset.h,h,2,0,2
dad7494f0028e51bd3265459196dc4049b9cc615,53040712+JxLi0921@users.noreply.github.com,2024-01-15 15:57:09+08:00,noreply@github.com,2024-01-15 15:57:09+08:00,Add support of new command: ZRANDMEMBER  (#2016),unstable,True,False,5,zset_test.cc,cc,102,0,102
dad7494f0028e51bd3265459196dc4049b9cc615,53040712+JxLi0921@users.noreply.github.com,2024-01-15 15:57:09+08:00,noreply@github.com,2024-01-15 15:57:09+08:00,Add support of new command: ZRANDMEMBER  (#2016),unstable,True,False,5,zset_test.go,go,132,0,132
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,replication.cc,cc,8,8,16
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,slot_migrate.cc,cc,12,13,25
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,sync_migrate_context.cc,cc,1,1,2
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,blocking_commander.h,h,3,3,6
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,cmd_bit.cc,cc,1,1,2
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,cmd_bloom_filter.cc,cc,2,2,4
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,cmd_geo.cc,cc,14,14,28
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,cmd_hash.cc,cc,10,10,20
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,cmd_json.cc,cc,29,29,58
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,cmd_list.cc,cc,17,17,34
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,cmd_pubsub.cc,cc,18,15,33
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,cmd_server.cc,cc,16,13,29
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,cmd_set.cc,cc,8,8,16
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,cmd_stream.cc,cc,20,20,40
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,cmd_string.cc,cc,9,9,18
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,cmd_txn.cc,cc,1,1,2
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,cmd_zset.cc,cc,13,13,26
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,commander.cc,cc,1,1,2
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,scan_base.h,h,5,4,9
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,redis_connection.cc,cc,33,0,33
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,redis_connection.h,h,6,0,6
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,redis_reply.cc,cc,7,27,34
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,redis_reply.h,h,4,9,13
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,server.cc,cc,2,2,4
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,log_collector.cc,cc,1,1,2
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,batch_extractor.cc,cc,6,6,12
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,scripting.cc,cc,3,3,6
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,string_reply_test.cc,cc,1,1,2
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,debug_test.go,go,5,0,5
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,protocol_test.go,go,98,0,98
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,parser.cc,cc,9,9,18
d1acbcbae8693bc895fa5749dd55ddc7458bedc8,hulk.website@gmail.com,2024-01-15 18:40:23+08:00,noreply@github.com,2024-01-15 18:40:23+08:00,"Implement the RESP3 null for the nil string and array (#2017)

For the null type in RESP2, the nil string is represented by `$-1\r\n`
and nil array is `*-1\r\n`. But after RESP3, they will be reduced into
a unified string `_\r\n`. So in this PR, most of them are renamed redis::MultiBulkString/Redis::NilString to connection::MultiBulkString and connection::NilString.",unstable,True,False,32,redis_writer.cc,cc,1,1,2
d9acbba130502a1f23a4ea6704b43897f609c330,maplewish117@gmail.com,2024-01-17 10:00:13+08:00,noreply@github.com,2024-01-17 10:00:13+08:00,Minor refactor the implementation of the command ZRANDMEMBER (#2025),unstable,True,False,2,redis_hash.cc,cc,3,4,7
d9acbba130502a1f23a4ea6704b43897f609c330,maplewish117@gmail.com,2024-01-17 10:00:13+08:00,noreply@github.com,2024-01-17 10:00:13+08:00,Minor refactor the implementation of the command ZRANDMEMBER (#2025),unstable,True,False,2,redis_zset.cc,cc,7,6,13
5af0b3b46f423ec40b5faaf3785f3cb1b5b41394,hulk.website@gmail.com,2024-01-17 13:38:16+08:00,noreply@github.com,2024-01-17 13:38:16+08:00,Implement RESP3 set type for the set data structure (#2024),unstable,True,False,7,cmd_server.cc,cc,7,2,9
5af0b3b46f423ec40b5faaf3785f3cb1b5b41394,hulk.website@gmail.com,2024-01-17 13:38:16+08:00,noreply@github.com,2024-01-17 13:38:16+08:00,Implement RESP3 set type for the set data structure (#2024),unstable,True,False,7,cmd_set.cc,cc,6,6,12
5af0b3b46f423ec40b5faaf3785f3cb1b5b41394,hulk.website@gmail.com,2024-01-17 13:38:16+08:00,noreply@github.com,2024-01-17 13:38:16+08:00,Implement RESP3 set type for the set data structure (#2024),unstable,True,False,7,redis_connection.cc,cc,9,0,9
5af0b3b46f423ec40b5faaf3785f3cb1b5b41394,hulk.website@gmail.com,2024-01-17 13:38:16+08:00,noreply@github.com,2024-01-17 13:38:16+08:00,Implement RESP3 set type for the set data structure (#2024),unstable,True,False,7,redis_connection.h,h,5,0,5
5af0b3b46f423ec40b5faaf3785f3cb1b5b41394,hulk.website@gmail.com,2024-01-17 13:38:16+08:00,noreply@github.com,2024-01-17 13:38:16+08:00,Implement RESP3 set type for the set data structure (#2024),unstable,True,False,7,debug_test.go,go,2,0,2
5af0b3b46f423ec40b5faaf3785f3cb1b5b41394,hulk.website@gmail.com,2024-01-17 13:38:16+08:00,noreply@github.com,2024-01-17 13:38:16+08:00,Implement RESP3 set type for the set data structure (#2024),unstable,True,False,7,protocol_test.go,go,2,0,2
5af0b3b46f423ec40b5faaf3785f3cb1b5b41394,hulk.website@gmail.com,2024-01-17 13:38:16+08:00,noreply@github.com,2024-01-17 13:38:16+08:00,Implement RESP3 set type for the set data structure (#2024),unstable,True,False,7,set_test.go,go,11,1,12
69b054edcfba00f82f8b00634383bdb02e75d69e,58337761+MaheshMadushan@users.noreply.github.com,2024-01-17 15:47:02+05:30,noreply@github.com,2024-01-17 18:17:02+08:00,Add support of the command ZDIFF and ZDIFFSTORE (#2021),unstable,True,False,5,cmd_zset.cc,cc,96,1,97
69b054edcfba00f82f8b00634383bdb02e75d69e,58337761+MaheshMadushan@users.noreply.github.com,2024-01-17 15:47:02+05:30,noreply@github.com,2024-01-17 18:17:02+08:00,Add support of the command ZDIFF and ZDIFFSTORE (#2021),unstable,True,False,5,redis_zset.cc,cc,38,0,38
69b054edcfba00f82f8b00634383bdb02e75d69e,58337761+MaheshMadushan@users.noreply.github.com,2024-01-17 15:47:02+05:30,noreply@github.com,2024-01-17 18:17:02+08:00,Add support of the command ZDIFF and ZDIFFSTORE (#2021),unstable,True,False,5,redis_zset.h,h,2,0,2
69b054edcfba00f82f8b00634383bdb02e75d69e,58337761+MaheshMadushan@users.noreply.github.com,2024-01-17 15:47:02+05:30,noreply@github.com,2024-01-17 18:17:02+08:00,Add support of the command ZDIFF and ZDIFFSTORE (#2021),unstable,True,False,5,zset_test.cc,cc,78,0,78
69b054edcfba00f82f8b00634383bdb02e75d69e,58337761+MaheshMadushan@users.noreply.github.com,2024-01-17 15:47:02+05:30,noreply@github.com,2024-01-17 18:17:02+08:00,Add support of the command ZDIFF and ZDIFFSTORE (#2021),unstable,True,False,5,zset_test.go,go,161,0,161
0723ae10e6c75a555a37237b468645daf358968d,jihuayu123@gmail.com,2024-01-17 21:54:21+08:00,noreply@github.com,2024-01-17 21:54:21+08:00,Check data type before metadata decode to avoid confusing error message (#2015),unstable,True,False,3,redis_db.cc,cc,4,1,5
0723ae10e6c75a555a37237b468645daf358968d,jihuayu123@gmail.com,2024-01-17 21:54:21+08:00,noreply@github.com,2024-01-17 21:54:21+08:00,Check data type before metadata decode to avoid confusing error message (#2015),unstable,True,False,3,redis_metadata.cc,cc,6,6,12
0723ae10e6c75a555a37237b468645daf358968d,jihuayu123@gmail.com,2024-01-17 21:54:21+08:00,noreply@github.com,2024-01-17 21:54:21+08:00,Check data type before metadata decode to avoid confusing error message (#2015),unstable,True,False,3,types_test.go,go,54,0,54
19258a9ecb86bf14d6b47c5d1ae00bb50280c1d5,maplewish117@gmail.com,2024-01-18 10:00:14+08:00,noreply@github.com,2024-01-18 10:00:14+08:00,Improve the style of zdiff (#2027),unstable,True,False,2,cmd_zset.cc,cc,1,0,1
19258a9ecb86bf14d6b47c5d1ae00bb50280c1d5,maplewish117@gmail.com,2024-01-18 10:00:14+08:00,noreply@github.com,2024-01-18 10:00:14+08:00,Improve the style of zdiff (#2027),unstable,True,False,2,redis_zset.cc,cc,11,10,21
027127becfb1266f030c397ec9a3177e3fbe26fe,pleaseshutup@gmail.com,2024-01-18 19:44:05-08:00,noreply@github.com,2024-01-19 11:44:05+08:00,"Clarification in kvrocks.conf that disable_wal will break replication (#2029)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,1,kvrocks.conf,conf,1,0,1
483b5007b6f4ef2cd74529743da3adb1e57f437e,twice.mliu@gmail.com,2024-01-21 16:45:33+09:00,noreply@github.com,2024-01-21 16:45:33+09:00,Run SonarQube scan in Github Actions to support coverage analysis (#2030),unstable,True,False,2,kvrocks.yaml,yaml,37,2,39
483b5007b6f4ef2cd74529743da3adb1e57f437e,twice.mliu@gmail.com,2024-01-21 16:45:33+09:00,noreply@github.com,2024-01-21 16:45:33+09:00,Run SonarQube scan in Github Actions to support coverage analysis (#2030),unstable,True,False,2,sonar.yaml,yaml,75,0,75
c772109516a6698f8e74d50c1a43bb1c02a697c5,hulk.website@gmail.com,2024-01-21 16:43:10+08:00,noreply@github.com,2024-01-21 16:43:10+08:00,"Add the support of RESP3 map type (#2028)

This PR mainly supports the RESP3 map type. But we found the FUNCTION LIST command
output now is an array of bulk strings like `[""function_name"",""add"",""library"":""lib1""]`.
To align with Redis's format which is an array of arrays that should be:
`[[""function_name"",""add""], [""library"":""lib1""]]`.

This closes #1996",unstable,True,False,16,cmd_function.cc,cc,3,3,6
c772109516a6698f8e74d50c1a43bb1c02a697c5,hulk.website@gmail.com,2024-01-21 16:43:10+08:00,noreply@github.com,2024-01-21 16:43:10+08:00,"Add the support of RESP3 map type (#2028)

This PR mainly supports the RESP3 map type. But we found the FUNCTION LIST command
output now is an array of bulk strings like `[""function_name"",""add"",""library"":""lib1""]`.
To align with Redis's format which is an array of arrays that should be:
`[[""function_name"",""add""], [""library"":""lib1""]]`.

This closes #1996",unstable,True,False,16,cmd_hash.cc,cc,1,1,2
c772109516a6698f8e74d50c1a43bb1c02a697c5,hulk.website@gmail.com,2024-01-21 16:43:10+08:00,noreply@github.com,2024-01-21 16:43:10+08:00,"Add the support of RESP3 map type (#2028)

This PR mainly supports the RESP3 map type. But we found the FUNCTION LIST command
output now is an array of bulk strings like `[""function_name"",""add"",""library"":""lib1""]`.
To align with Redis's format which is an array of arrays that should be:
`[[""function_name"",""add""], [""library"":""lib1""]]`.

This closes #1996",unstable,True,False,16,cmd_server.cc,cc,12,3,15
c772109516a6698f8e74d50c1a43bb1c02a697c5,hulk.website@gmail.com,2024-01-21 16:43:10+08:00,noreply@github.com,2024-01-21 16:43:10+08:00,"Add the support of RESP3 map type (#2028)

This PR mainly supports the RESP3 map type. But we found the FUNCTION LIST command
output now is an array of bulk strings like `[""function_name"",""add"",""library"":""lib1""]`.
To align with Redis's format which is an array of arrays that should be:
`[[""function_name"",""add""], [""library"":""lib1""]]`.

This closes #1996",unstable,True,False,16,cmd_set.cc,cc,6,6,12
c772109516a6698f8e74d50c1a43bb1c02a697c5,hulk.website@gmail.com,2024-01-21 16:43:10+08:00,noreply@github.com,2024-01-21 16:43:10+08:00,"Add the support of RESP3 map type (#2028)

This PR mainly supports the RESP3 map type. But we found the FUNCTION LIST command
output now is an array of bulk strings like `[""function_name"",""add"",""library"":""lib1""]`.
To align with Redis's format which is an array of arrays that should be:
`[[""function_name"",""add""], [""library"":""lib1""]]`.

This closes #1996",unstable,True,False,16,cmd_stream.cc,cc,4,4,8
c772109516a6698f8e74d50c1a43bb1c02a697c5,hulk.website@gmail.com,2024-01-21 16:43:10+08:00,noreply@github.com,2024-01-21 16:43:10+08:00,"Add the support of RESP3 map type (#2028)

This PR mainly supports the RESP3 map type. But we found the FUNCTION LIST command
output now is an array of bulk strings like `[""function_name"",""add"",""library"":""lib1""]`.
To align with Redis's format which is an array of arrays that should be:
`[[""function_name"",""add""], [""library"":""lib1""]]`.

This closes #1996",unstable,True,False,16,redis_connection.cc,cc,13,2,15
c772109516a6698f8e74d50c1a43bb1c02a697c5,hulk.website@gmail.com,2024-01-21 16:43:10+08:00,noreply@github.com,2024-01-21 16:43:10+08:00,"Add the support of RESP3 map type (#2028)

This PR mainly supports the RESP3 map type. But we found the FUNCTION LIST command
output now is an array of bulk strings like `[""function_name"",""add"",""library"":""lib1""]`.
To align with Redis's format which is an array of arrays that should be:
`[[""function_name"",""add""], [""library"":""lib1""]]`.

This closes #1996",unstable,True,False,16,redis_connection.h,h,7,2,9
c772109516a6698f8e74d50c1a43bb1c02a697c5,hulk.website@gmail.com,2024-01-21 16:43:10+08:00,noreply@github.com,2024-01-21 16:43:10+08:00,"Add the support of RESP3 map type (#2028)

This PR mainly supports the RESP3 map type. But we found the FUNCTION LIST command
output now is an array of bulk strings like `[""function_name"",""add"",""library"":""lib1""]`.
To align with Redis's format which is an array of arrays that should be:
`[[""function_name"",""add""], [""library"":""lib1""]]`.

This closes #1996",unstable,True,False,16,scripting.cc,cc,21,18,39
c772109516a6698f8e74d50c1a43bb1c02a697c5,hulk.website@gmail.com,2024-01-21 16:43:10+08:00,noreply@github.com,2024-01-21 16:43:10+08:00,"Add the support of RESP3 map type (#2028)

This PR mainly supports the RESP3 map type. But we found the FUNCTION LIST command
output now is an array of bulk strings like `[""function_name"",""add"",""library"":""lib1""]`.
To align with Redis's format which is an array of arrays that should be:
`[[""function_name"",""add""], [""library"":""lib1""]]`.

This closes #1996",unstable,True,False,16,scripting.h,h,4,3,7
c772109516a6698f8e74d50c1a43bb1c02a697c5,hulk.website@gmail.com,2024-01-21 16:43:10+08:00,noreply@github.com,2024-01-21 16:43:10+08:00,"Add the support of RESP3 map type (#2028)

This PR mainly supports the RESP3 map type. But we found the FUNCTION LIST command
output now is an array of bulk strings like `[""function_name"",""add"",""library"":""lib1""]`.
To align with Redis's format which is an array of arrays that should be:
`[[""function_name"",""add""], [""library"":""lib1""]]`.

This closes #1996",unstable,True,False,16,config_test.go,go,13,0,13
c772109516a6698f8e74d50c1a43bb1c02a697c5,hulk.website@gmail.com,2024-01-21 16:43:10+08:00,noreply@github.com,2024-01-21 16:43:10+08:00,"Add the support of RESP3 map type (#2028)

This PR mainly supports the RESP3 map type. But we found the FUNCTION LIST command
output now is an array of bulk strings like `[""function_name"",""add"",""library"":""lib1""]`.
To align with Redis's format which is an array of arrays that should be:
`[[""function_name"",""add""], [""library"":""lib1""]]`.

This closes #1996",unstable,True,False,16,debug_test.go,go,2,0,2
c772109516a6698f8e74d50c1a43bb1c02a697c5,hulk.website@gmail.com,2024-01-21 16:43:10+08:00,noreply@github.com,2024-01-21 16:43:10+08:00,"Add the support of RESP3 map type (#2028)

This PR mainly supports the RESP3 map type. But we found the FUNCTION LIST command
output now is an array of bulk strings like `[""function_name"",""add"",""library"":""lib1""]`.
To align with Redis's format which is an array of arrays that should be:
`[[""function_name"",""add""], [""library"":""lib1""]]`.

This closes #1996",unstable,True,False,16,hello_test.go,go,7,6,13
c772109516a6698f8e74d50c1a43bb1c02a697c5,hulk.website@gmail.com,2024-01-21 16:43:10+08:00,noreply@github.com,2024-01-21 16:43:10+08:00,"Add the support of RESP3 map type (#2028)

This PR mainly supports the RESP3 map type. But we found the FUNCTION LIST command
output now is an array of bulk strings like `[""function_name"",""add"",""library"":""lib1""]`.
To align with Redis's format which is an array of arrays that should be:
`[[""function_name"",""add""], [""library"":""lib1""]]`.

This closes #1996",unstable,True,False,16,protocol_test.go,go,3,1,4
c772109516a6698f8e74d50c1a43bb1c02a697c5,hulk.website@gmail.com,2024-01-21 16:43:10+08:00,noreply@github.com,2024-01-21 16:43:10+08:00,"Add the support of RESP3 map type (#2028)

This PR mainly supports the RESP3 map type. But we found the FUNCTION LIST command
output now is an array of bulk strings like `[""function_name"",""add"",""library"":""lib1""]`.
To align with Redis's format which is an array of arrays that should be:
`[[""function_name"",""add""], [""library"":""lib1""]]`.

This closes #1996",unstable,True,False,16,function_test.go,go,157,63,220
c772109516a6698f8e74d50c1a43bb1c02a697c5,hulk.website@gmail.com,2024-01-21 16:43:10+08:00,noreply@github.com,2024-01-21 16:43:10+08:00,"Add the support of RESP3 map type (#2028)

This PR mainly supports the RESP3 map type. But we found the FUNCTION LIST command
output now is an array of bulk strings like `[""function_name"",""add"",""library"":""lib1""]`.
To align with Redis's format which is an array of arrays that should be:
`[[""function_name"",""add""], [""library"":""lib1""]]`.

This closes #1996",unstable,True,False,16,hash_test.go,go,24,0,24
c772109516a6698f8e74d50c1a43bb1c02a697c5,hulk.website@gmail.com,2024-01-21 16:43:10+08:00,noreply@github.com,2024-01-21 16:43:10+08:00,"Add the support of RESP3 map type (#2028)

This PR mainly supports the RESP3 map type. But we found the FUNCTION LIST command
output now is an array of bulk strings like `[""function_name"",""add"",""library"":""lib1""]`.
To align with Redis's format which is an array of arrays that should be:
`[[""function_name"",""add""], [""library"":""lib1""]]`.

This closes #1996",unstable,True,False,16,stream_test.go,go,12,2,14
e3036f2f5f58546584eaabf3750ac22f8393149b,twice.mliu@gmail.com,2024-01-21 19:34:26+09:00,noreply@github.com,2024-01-21 19:34:26+09:00,Fix build file missing in SonarCloud CI (#2033),unstable,True,False,2,kvrocks.yaml,yaml,1,1,2
e3036f2f5f58546584eaabf3750ac22f8393149b,twice.mliu@gmail.com,2024-01-21 19:34:26+09:00,noreply@github.com,2024-01-21 19:34:26+09:00,Fix build file missing in SonarCloud CI (#2033),unstable,True,False,2,sonar.yaml,yaml,9,1,10
3ff15bfb3f34418f9b3f1ac28b9d7e97c18a281c,twice.mliu@gmail.com,2024-01-21 23:13:35+09:00,noreply@github.com,2024-01-21 23:13:35+09:00,Fix shell command in SonarCloud CI (#2037),unstable,True,False,1,sonar.yaml,yaml,1,1,2
3df90b3764da1767c5227969d14a7264de7efe4d,hulk.website@gmail.com,2024-01-22 00:12:50+08:00,noreply@github.com,2024-01-22 00:12:50+08:00,Add RESP3 big number (#2034),unstable,True,False,5,cmd_server.cc,cc,3,1,4
3df90b3764da1767c5227969d14a7264de7efe4d,hulk.website@gmail.com,2024-01-22 00:12:50+08:00,noreply@github.com,2024-01-22 00:12:50+08:00,Add RESP3 big number (#2034),unstable,True,False,5,redis_connection.h,h,3,0,3
3df90b3764da1767c5227969d14a7264de7efe4d,hulk.website@gmail.com,2024-01-22 00:12:50+08:00,noreply@github.com,2024-01-22 00:12:50+08:00,Add RESP3 big number (#2034),unstable,True,False,5,scripting.cc,cc,28,14,42
3df90b3764da1767c5227969d14a7264de7efe4d,hulk.website@gmail.com,2024-01-22 00:12:50+08:00,noreply@github.com,2024-01-22 00:12:50+08:00,Add RESP3 big number (#2034),unstable,True,False,5,debug_test.go,go,4,0,4
3df90b3764da1767c5227969d14a7264de7efe4d,hulk.website@gmail.com,2024-01-22 00:12:50+08:00,noreply@github.com,2024-01-22 00:12:50+08:00,Add RESP3 big number (#2034),unstable,True,False,5,protocol_test.go,go,2,0,2
771438bc2068cf6626745896ad8ebf06f90d374f,jihuayu123@gmail.com,2024-01-22 15:07:16+08:00,noreply@github.com,2024-01-22 15:07:16+08:00,Only runs sonar action on the main repo (#2038),unstable,True,False,1,sonar.yaml,yaml,1,1,2
bf85450774982606be3233288ac82f0a9cc62e21,maplewish117@gmail.com,2024-01-22 22:16:31+08:00,noreply@github.com,2024-01-22 23:16:31+09:00,Avoid the implicit conversion from PinnableSlice to Slice (#2039),unstable,True,False,1,redis_db.cc,cc,3,1,4
8dcbe69f4790ec13e48fd5a27923350d29cf4940,twice.mliu@gmail.com,2024-01-23 10:59:52+09:00,noreply@github.com,2024-01-23 09:59:52+08:00,Remove the second parameter of MultiBulkString (#2042),unstable,True,False,8,cmd_hash.cc,cc,3,3,6
8dcbe69f4790ec13e48fd5a27923350d29cf4940,twice.mliu@gmail.com,2024-01-23 10:59:52+09:00,noreply@github.com,2024-01-23 09:59:52+08:00,Remove the second parameter of MultiBulkString (#2042),unstable,True,False,8,cmd_json.cc,cc,1,1,2
8dcbe69f4790ec13e48fd5a27923350d29cf4940,twice.mliu@gmail.com,2024-01-23 10:59:52+09:00,noreply@github.com,2024-01-23 09:59:52+08:00,Remove the second parameter of MultiBulkString (#2042),unstable,True,False,8,cmd_list.cc,cc,2,2,4
8dcbe69f4790ec13e48fd5a27923350d29cf4940,twice.mliu@gmail.com,2024-01-23 10:59:52+09:00,noreply@github.com,2024-01-23 09:59:52+08:00,Remove the second parameter of MultiBulkString (#2042),unstable,True,False,8,cmd_server.cc,cc,2,2,4
8dcbe69f4790ec13e48fd5a27923350d29cf4940,twice.mliu@gmail.com,2024-01-23 10:59:52+09:00,noreply@github.com,2024-01-23 09:59:52+08:00,Remove the second parameter of MultiBulkString (#2042),unstable,True,False,8,cmd_zset.cc,cc,1,1,2
8dcbe69f4790ec13e48fd5a27923350d29cf4940,twice.mliu@gmail.com,2024-01-23 10:59:52+09:00,noreply@github.com,2024-01-23 09:59:52+08:00,Remove the second parameter of MultiBulkString (#2042),unstable,True,False,8,scan_base.h,h,2,2,4
8dcbe69f4790ec13e48fd5a27923350d29cf4940,twice.mliu@gmail.com,2024-01-23 10:59:52+09:00,noreply@github.com,2024-01-23 09:59:52+08:00,Remove the second parameter of MultiBulkString (#2042),unstable,True,False,8,redis_connection.cc,cc,2,3,5
8dcbe69f4790ec13e48fd5a27923350d29cf4940,twice.mliu@gmail.com,2024-01-23 10:59:52+09:00,noreply@github.com,2024-01-23 09:59:52+08:00,Remove the second parameter of MultiBulkString (#2042),unstable,True,False,8,redis_connection.h,h,1,1,2
667c1458c23db6938cb2a001bbc67c78eb21485e,Wse1714401046@gmail.com,2024-01-23 14:48:06+08:00,noreply@github.com,2024-01-23 14:48:06+08:00,Fix rand member didn't work in the command SRANDMEMBER (#2032),unstable,True,False,1,redis_set.cc,cc,23,5,28
0f104e59d3fc1c52e784b18c7ce99d28620acbc0,jihuayu123@gmail.com,2024-01-23 16:09:08+08:00,noreply@github.com,2024-01-23 16:09:08+08:00,"Add support of the command RENAME&RENAMENX  (#2026)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,cmd_key.cc,cc,33,1,34
0f104e59d3fc1c52e784b18c7ce99d28620acbc0,jihuayu123@gmail.com,2024-01-23 16:09:08+08:00,noreply@github.com,2024-01-23 16:09:08+08:00,"Add support of the command RENAME&RENAMENX  (#2026)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,iterator.cc,cc,2,0,2
0f104e59d3fc1c52e784b18c7ce99d28620acbc0,jihuayu123@gmail.com,2024-01-23 16:09:08+08:00,noreply@github.com,2024-01-23 16:09:08+08:00,"Add support of the command RENAME&RENAMENX  (#2026)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,iterator.h,h,1,0,1
0f104e59d3fc1c52e784b18c7ce99d28620acbc0,jihuayu123@gmail.com,2024-01-23 16:09:08+08:00,noreply@github.com,2024-01-23 16:09:08+08:00,"Add support of the command RENAME&RENAMENX  (#2026)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,redis_db.cc,cc,66,0,66
0f104e59d3fc1c52e784b18c7ce99d28620acbc0,jihuayu123@gmail.com,2024-01-23 16:09:08+08:00,noreply@github.com,2024-01-23 16:09:08+08:00,"Add support of the command RENAME&RENAMENX  (#2026)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,redis_db.h,h,1,0,1
0f104e59d3fc1c52e784b18c7ce99d28620acbc0,jihuayu123@gmail.com,2024-01-23 16:09:08+08:00,noreply@github.com,2024-01-23 16:09:08+08:00,"Add support of the command RENAME&RENAMENX  (#2026)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,rename_test.go,go,1044,0,1044
0bb01ee9075851aaaf104830b50969913ce080a5,twice.mliu@gmail.com,2024-01-23 18:01:46+09:00,noreply@github.com,2024-01-23 18:01:46+09:00,"Use condition argument of cv.wait instead of loop (#2043)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,slot_migrate.cc,cc,3,4,7
0a2bb1af0f8c18863795e4ab319ca664b522ac27,AntiTopQuark1350@outlook.com,2024-01-24 10:02:39+08:00,noreply@github.com,2024-01-24 10:02:39+08:00,"Fix incorrect error message in command DEBUG PROTOCOL:`int` -> `integer` (#2046)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,1,cmd_server.cc,cc,2,1,3
02a62400e29f4dd21a685296098a8a1eb7e3424b,53040712+JxLi0921@users.noreply.github.com,2024-01-24 17:02:23+08:00,noreply@github.com,2024-01-24 17:02:23+08:00,"Add support of using hyper clock cache as the block cache (#2031)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,kvrocks.conf,conf,11,0,11
02a62400e29f4dd21a685296098a8a1eb7e3424b,53040712+JxLi0921@users.noreply.github.com,2024-01-24 17:02:23+08:00,noreply@github.com,2024-01-24 17:02:23+08:00,"Add support of using hyper clock cache as the block cache (#2031)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,config.cc,cc,11,0,11
02a62400e29f4dd21a685296098a8a1eb7e3424b,53040712+JxLi0921@users.noreply.github.com,2024-01-24 17:02:23+08:00,noreply@github.com,2024-01-24 17:02:23+08:00,"Add support of using hyper clock cache as the block cache (#2031)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,config.h,h,3,0,3
02a62400e29f4dd21a685296098a8a1eb7e3424b,53040712+JxLi0921@users.noreply.github.com,2024-01-24 17:02:23+08:00,noreply@github.com,2024-01-24 17:02:23+08:00,"Add support of using hyper clock cache as the block cache (#2031)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,storage.cc,cc,31,2,33
02a62400e29f4dd21a685296098a8a1eb7e3424b,53040712+JxLi0921@users.noreply.github.com,2024-01-24 17:02:23+08:00,noreply@github.com,2024-01-24 17:02:23+08:00,"Add support of using hyper clock cache as the block cache (#2031)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,storage.h,h,11,0,11
360476dffc52a60b88191f29115269c0655e8359,maplewish117@gmail.com,2024-01-24 22:10:40+08:00,noreply@github.com,2024-01-24 23:10:40+09:00,"Enhance error handling and types in BITFIELD (#2041)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,bitfield_util.h,h,6,6,12
360476dffc52a60b88191f29115269c0655e8359,maplewish117@gmail.com,2024-01-24 22:10:40+08:00,noreply@github.com,2024-01-24 23:10:40+09:00,"Enhance error handling and types in BITFIELD (#2041)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,redis_bitmap_string.cc,cc,15,3,18
360476dffc52a60b88191f29115269c0655e8359,maplewish117@gmail.com,2024-01-24 22:10:40+08:00,noreply@github.com,2024-01-24 23:10:40+09:00,"Enhance error handling and types in BITFIELD (#2041)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,bitfield_util.cc,cc,1,1,2
7716813be6eceace15a8b08524adb91efdc98a3f,twice.mliu@gmail.com,2024-01-25 12:56:40+09:00,noreply@github.com,2024-01-25 11:56:40+08:00,Dump github event information in CI (#2049),unstable,True,False,1,kvrocks.yaml,yaml,7,0,7
044b6fde4d34894b5ff0ba3534419b9631a34753,binloveplay1314@qq.com,2024-01-25 19:11:03+08:00,noreply@github.com,2024-01-25 19:11:03+08:00,"Fix crash in zset store getkeys, fix zdiff/bzmpop range, add tests (#2051)

These following cases will crash the server, the reason is that
the index of numkeys is wrong:
```
command getkeys zdiffstore dst 2 src1 src2
command getkeys zinterstore dst 2 src1 src2
command getkeys zunionstore dst 2 src1 src2
```

These following getkeys output is wrong:
```
> command getkeys zdiff 2 key1 key2
1) ""key1""
2) ""key2""
3) (nil)

> command getkeys bzmpop 0 2 key1 key2
1) ""key1""
```

These are ok:
```
command getkeys zinter 2 key1 key2
command getkeys zunion 2 key1 key2
command getkeys sintercard 2 key1 key2
command getkeys zintercard 2 key1 key2
command getkeys zmpop 2 key1 key2
command getkeys lmpop 2 key1 key2
command getkeys blmpop 0 2 key1 key2
```

However, at present, there is still a problem with our zset store.
We do not support returning dst key, but let's do it later...
```
127.0.0.1:6379> command getkeys zinterstore dst 2 src1 src2
1) ""dst""
2) ""src1""
3) ""src2""

127.0.0.1:6666> command getkeys zinterstore dst 2 src1 src2
1) ""src1""
2) ""src2""
```",unstable,True,False,2,cmd_zset.cc,cc,5,5,10
044b6fde4d34894b5ff0ba3534419b9631a34753,binloveplay1314@qq.com,2024-01-25 19:11:03+08:00,noreply@github.com,2024-01-25 19:11:03+08:00,"Fix crash in zset store getkeys, fix zdiff/bzmpop range, add tests (#2051)

These following cases will crash the server, the reason is that
the index of numkeys is wrong:
```
command getkeys zdiffstore dst 2 src1 src2
command getkeys zinterstore dst 2 src1 src2
command getkeys zunionstore dst 2 src1 src2
```

These following getkeys output is wrong:
```
> command getkeys zdiff 2 key1 key2
1) ""key1""
2) ""key2""
3) (nil)

> command getkeys bzmpop 0 2 key1 key2
1) ""key1""
```

These are ok:
```
command getkeys zinter 2 key1 key2
command getkeys zunion 2 key1 key2
command getkeys sintercard 2 key1 key2
command getkeys zintercard 2 key1 key2
command getkeys zmpop 2 key1 key2
command getkeys lmpop 2 key1 key2
command getkeys blmpop 0 2 key1 key2
```

However, at present, there is still a problem with our zset store.
We do not support returning dst key, but let's do it later...
```
127.0.0.1:6379> command getkeys zinterstore dst 2 src1 src2
1) ""dst""
2) ""src1""
3) ""src2""

127.0.0.1:6666> command getkeys zinterstore dst 2 src1 src2
1) ""src1""
2) ""src2""
```",unstable,True,False,2,command_test.go,go,108,0,108
8361174b652f83217c80d7ebcefbe4163d958624,jihuayu123@gmail.com,2024-01-25 20:31:56+08:00,noreply@github.com,2024-01-25 21:31:56+09:00,"Fix sonar action can't get PR number (#2048)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,sonar.yaml,yaml,2,3,5
cbede1b4523676fdd3446477f667023f63090682,twice.mliu@gmail.com,2024-01-25 23:39:49+09:00,noreply@github.com,2024-01-25 22:39:49+08:00,"Fix Sonar CI fail in unstable branch (#2052)

We should output empty instead of `null` as PR number for unstable branch.",unstable,True,False,1,sonar.yaml,yaml,4,2,6
ba6f61e0d0194e54b9fa7d0bcf22e3f7322c5575,77189278+caicancai@users.noreply.github.com,2024-01-25 23:50:41+08:00,noreply@github.com,2024-01-25 23:50:41+08:00,Add additional environment prerequisites (#2054),unstable,True,False,1,README.md,md,6,0,6
201ba83dca6c5ba5bd0e2323578f9be4eb7f5979,caipengbo@outlook.com,2024-01-26 10:04:56+08:00,noreply@github.com,2024-01-26 10:04:56+08:00,"Implement the unify WAL iterator (#2040)

Implement the unified WAL iterator for kvrocks, similar to the DBIterator.
It will wrap rocksdb WAL Iterator and can return different item types.
It is possible to implement their processing logic depending on the concrete type.",unstable,True,False,5,iterator.cc,cc,125,4,129
201ba83dca6c5ba5bd0e2323578f9be4eb7f5979,caipengbo@outlook.com,2024-01-26 10:04:56+08:00,noreply@github.com,2024-01-26 10:04:56+08:00,"Implement the unify WAL iterator (#2040)

Implement the unified WAL iterator for kvrocks, similar to the DBIterator.
It will wrap rocksdb WAL Iterator and can return different item types.
It is possible to implement their processing logic depending on the concrete type.",unstable,True,False,5,iterator.h,h,82,0,82
201ba83dca6c5ba5bd0e2323578f9be4eb7f5979,caipengbo@outlook.com,2024-01-26 10:04:56+08:00,noreply@github.com,2024-01-26 10:04:56+08:00,"Implement the unify WAL iterator (#2040)

Implement the unified WAL iterator for kvrocks, similar to the DBIterator.
It will wrap rocksdb WAL Iterator and can return different item types.
It is possible to implement their processing logic depending on the concrete type.",unstable,True,False,5,redis_metadata.cc,cc,11,0,11
201ba83dca6c5ba5bd0e2323578f9be4eb7f5979,caipengbo@outlook.com,2024-01-26 10:04:56+08:00,noreply@github.com,2024-01-26 10:04:56+08:00,"Implement the unify WAL iterator (#2040)

Implement the unified WAL iterator for kvrocks, similar to the DBIterator.
It will wrap rocksdb WAL Iterator and can return different item types.
It is possible to implement their processing logic depending on the concrete type.",unstable,True,False,5,redis_metadata.h,h,1,0,1
201ba83dca6c5ba5bd0e2323578f9be4eb7f5979,caipengbo@outlook.com,2024-01-26 10:04:56+08:00,noreply@github.com,2024-01-26 10:04:56+08:00,"Implement the unify WAL iterator (#2040)

Implement the unified WAL iterator for kvrocks, similar to the DBIterator.
It will wrap rocksdb WAL Iterator and can return different item types.
It is possible to implement their processing logic depending on the concrete type.",unstable,True,False,5,iterator_test.cc,cc,506,13,519
4bb6954c837cfac605ce8ed77ab77b868432fa7b,twice.mliu@gmail.com,2024-01-26 12:17:36+09:00,noreply@github.com,2024-01-26 11:17:36+08:00,Refine ctor definition of CommandParser (#2044),unstable,True,False,1,command_parser.h,h,17,3,20
3ea7f4fece7e5af38d276b3cc5037e53f1d7965f,hulk.website@gmail.com,2024-01-26 13:09:53+08:00,noreply@github.com,2024-01-26 13:09:53+08:00,Add the support of RESP3 double type (#2053),unstable,True,False,11,cmd_geo.cc,cc,8,11,19
3ea7f4fece7e5af38d276b3cc5037e53f1d7965f,hulk.website@gmail.com,2024-01-26 13:09:53+08:00,noreply@github.com,2024-01-26 13:09:53+08:00,Add the support of RESP3 double type (#2053),unstable,True,False,11,cmd_hash.cc,cc,8,1,9
3ea7f4fece7e5af38d276b3cc5037e53f1d7965f,hulk.website@gmail.com,2024-01-26 13:09:53+08:00,noreply@github.com,2024-01-26 13:09:53+08:00,Add the support of RESP3 double type (#2053),unstable,True,False,11,cmd_server.cc,cc,3,1,4
3ea7f4fece7e5af38d276b3cc5037e53f1d7965f,hulk.website@gmail.com,2024-01-26 13:09:53+08:00,noreply@github.com,2024-01-26 13:09:53+08:00,Add the support of RESP3 double type (#2053),unstable,True,False,11,cmd_zset.cc,cc,27,24,51
3ea7f4fece7e5af38d276b3cc5037e53f1d7965f,hulk.website@gmail.com,2024-01-26 13:09:53+08:00,noreply@github.com,2024-01-26 13:09:53+08:00,Add the support of RESP3 double type (#2053),unstable,True,False,11,scan_base.h,h,4,18,22
3ea7f4fece7e5af38d276b3cc5037e53f1d7965f,hulk.website@gmail.com,2024-01-26 13:09:53+08:00,noreply@github.com,2024-01-26 13:09:53+08:00,Add the support of RESP3 double type (#2053),unstable,True,False,11,redis_connection.h,h,3,0,3
3ea7f4fece7e5af38d276b3cc5037e53f1d7965f,hulk.website@gmail.com,2024-01-26 13:09:53+08:00,noreply@github.com,2024-01-26 13:09:53+08:00,Add the support of RESP3 double type (#2053),unstable,True,False,11,debug_test.go,go,2,0,2
3ea7f4fece7e5af38d276b3cc5037e53f1d7965f,hulk.website@gmail.com,2024-01-26 13:09:53+08:00,noreply@github.com,2024-01-26 13:09:53+08:00,Add the support of RESP3 double type (#2053),unstable,True,False,11,geo_test.go,go,12,2,14
3ea7f4fece7e5af38d276b3cc5037e53f1d7965f,hulk.website@gmail.com,2024-01-26 13:09:53+08:00,noreply@github.com,2024-01-26 13:09:53+08:00,Add the support of RESP3 double type (#2053),unstable,True,False,11,protocol_test.go,go,2,0,2
3ea7f4fece7e5af38d276b3cc5037e53f1d7965f,hulk.website@gmail.com,2024-01-26 13:09:53+08:00,noreply@github.com,2024-01-26 13:09:53+08:00,Add the support of RESP3 double type (#2053),unstable,True,False,11,hash_test.go,go,18,22,40
3ea7f4fece7e5af38d276b3cc5037e53f1d7965f,hulk.website@gmail.com,2024-01-26 13:09:53+08:00,noreply@github.com,2024-01-26 13:09:53+08:00,Add the support of RESP3 double type (#2053),unstable,True,False,11,zset_test.go,go,38,21,59
3b554e27acc25f01873f4b86e422aa79bd21374f,binloveplay1314@qq.com,2024-01-27 10:11:29+08:00,noreply@github.com,2024-01-27 11:11:29+09:00,Use CommandKeyRangeVecGen to support retrieving store keys (#2055),unstable,True,False,3,cmd_geo.cc,cc,46,3,49
3b554e27acc25f01873f4b86e422aa79bd21374f,binloveplay1314@qq.com,2024-01-27 10:11:29+08:00,noreply@github.com,2024-01-27 11:11:29+09:00,Use CommandKeyRangeVecGen to support retrieving store keys (#2055),unstable,True,False,3,cmd_zset.cc,cc,6,6,12
3b554e27acc25f01873f4b86e422aa79bd21374f,binloveplay1314@qq.com,2024-01-27 10:11:29+08:00,noreply@github.com,2024-01-27 11:11:29+09:00,Use CommandKeyRangeVecGen to support retrieving store keys (#2055),unstable,True,False,3,command_test.go,go,87,9,96
39ad9b1d83cbc566af76003b0a8636bccf55bdfa,twice.mliu@gmail.com,2024-01-27 12:40:06+09:00,noreply@github.com,2024-01-27 12:40:06+09:00,Fix coverage upload failure in Sonar CI (#2060),unstable,True,False,1,sonar.yaml,yaml,1,1,2
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,disk_test.cc,cc,18,18,36
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,iterator_test.cc,cc,42,42,84
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,metadata_test.cc,cc,2,2,4
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,namespace_test.cc,cc,3,3,6
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,rdb_test.cc,cc,9,9,18
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,test_base.h,h,11,13,24
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,bitmap_test.cc,cc,2,2,4
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,bloom_chain_test.cc,cc,1,1,2
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,geo_test.cc,cc,1,1,2
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,hash_test.cc,cc,1,1,2
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,json_test.cc,cc,1,1,2
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,list_test.cc,cc,1,1,2
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,set_test.cc,cc,1,1,2
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,sortedint_test.cc,cc,1,1,2
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,stream_test.cc,cc,1,1,2
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,string_test.cc,cc,1,1,2
892ea915f627c6c09b2bb81a120fe228ba10e893,twice.mliu@gmail.com,2024-01-28 11:03:16+09:00,noreply@github.com,2024-01-28 11:03:16+09:00,Remove raw pointers and useless copy in TestBase (#2062),unstable,True,False,17,zset_test.cc,cc,1,1,2
aa1de3f53252a16e43d381fec83d64ec59228869,maplewish117@gmail.com,2024-01-29 20:31:38+08:00,noreply@github.com,2024-01-29 21:31:38+09:00,"Fix BITCOUNT/BITPOS negative handling (#2069)

Fixing and testing BITCOUNT with negative start/stop.

This patch:
1. Add a `BitmapString::NormalizeRange` for handling the range
2. For BITCOUNT/BITPOS, fixing the syntax of `value.size()`
3. Add the testing",unstable,True,False,5,redis_bitmap.cc,cc,22,17,39
aa1de3f53252a16e43d381fec83d64ec59228869,maplewish117@gmail.com,2024-01-29 20:31:38+08:00,noreply@github.com,2024-01-29 21:31:38+09:00,"Fix BITCOUNT/BITPOS negative handling (#2069)

Fixing and testing BITCOUNT with negative start/stop.

This patch:
1. Add a `BitmapString::NormalizeRange` for handling the range
2. For BITCOUNT/BITPOS, fixing the syntax of `value.size()`
3. Add the testing",unstable,True,False,5,redis_bitmap_string.cc,cc,13,12,25
aa1de3f53252a16e43d381fec83d64ec59228869,maplewish117@gmail.com,2024-01-29 20:31:38+08:00,noreply@github.com,2024-01-29 21:31:38+09:00,"Fix BITCOUNT/BITPOS negative handling (#2069)

Fixing and testing BITCOUNT with negative start/stop.

This patch:
1. Add a `BitmapString::NormalizeRange` for handling the range
2. For BITCOUNT/BITPOS, fixing the syntax of `value.size()`
3. Add the testing",unstable,True,False,5,redis_bitmap_string.h,h,10,0,10
aa1de3f53252a16e43d381fec83d64ec59228869,maplewish117@gmail.com,2024-01-29 20:31:38+08:00,noreply@github.com,2024-01-29 21:31:38+09:00,"Fix BITCOUNT/BITPOS negative handling (#2069)

Fixing and testing BITCOUNT with negative start/stop.

This patch:
1. Add a `BitmapString::NormalizeRange` for handling the range
2. For BITCOUNT/BITPOS, fixing the syntax of `value.size()`
3. Add the testing",unstable,True,False,5,bitmap_test.cc,cc,71,0,71
aa1de3f53252a16e43d381fec83d64ec59228869,maplewish117@gmail.com,2024-01-29 20:31:38+08:00,noreply@github.com,2024-01-29 21:31:38+09:00,"Fix BITCOUNT/BITPOS negative handling (#2069)

Fixing and testing BITCOUNT with negative start/stop.

This patch:
1. Add a `BitmapString::NormalizeRange` for handling the range
2. For BITCOUNT/BITPOS, fixing the syntax of `value.size()`
3. Add the testing",unstable,True,False,5,strings_test.go,go,6,0,6
9d618e0b603b3d066f65a9b3c9b96efaba63f753,twice.mliu@gmail.com,2024-01-30 21:04:34+09:00,noreply@github.com,2024-01-30 21:04:34+09:00,"Initialize metadata and tag indexing encoding for RediSearch (#2066)

The current encoding design:
```
search data type metadata:

key (index name) -> flag | expire | version | size | on_data_type (HASH or JSON)

prefixes encoding:

key (index name) | PREFIXES -> prefix1 prefix2 ...

tag field metadata encoding:

key (index name) | TAG_FIELD_META | field name -> separator | case sensitive

tag field index encoding:

key (index name) | TAG_FIELD | field name | tag | key -> (nil)
```",unstable,True,False,3,redis_metadata.cc,cc,18,0,18
9d618e0b603b3d066f65a9b3c9b96efaba63f753,twice.mliu@gmail.com,2024-01-30 21:04:34+09:00,noreply@github.com,2024-01-30 21:04:34+09:00,"Initialize metadata and tag indexing encoding for RediSearch (#2066)

The current encoding design:
```
search data type metadata:

key (index name) -> flag | expire | version | size | on_data_type (HASH or JSON)

prefixes encoding:

key (index name) | PREFIXES -> prefix1 prefix2 ...

tag field metadata encoding:

key (index name) | TAG_FIELD_META | field name -> separator | case sensitive

tag field index encoding:

key (index name) | TAG_FIELD | field name | tag | key -> (nil)
```",unstable,True,False,3,redis_metadata.h,h,16,0,16
9d618e0b603b3d066f65a9b3c9b96efaba63f753,twice.mliu@gmail.com,2024-01-30 21:04:34+09:00,noreply@github.com,2024-01-30 21:04:34+09:00,"Initialize metadata and tag indexing encoding for RediSearch (#2066)

The current encoding design:
```
search data type metadata:

key (index name) -> flag | expire | version | size | on_data_type (HASH or JSON)

prefixes encoding:

key (index name) | PREFIXES -> prefix1 prefix2 ...

tag field metadata encoding:

key (index name) | TAG_FIELD_META | field name -> separator | case sensitive

tag field index encoding:

key (index name) | TAG_FIELD | field name | tag | key -> (nil)
```",unstable,True,False,3,redis_search_encoding.h,h,103,0,103
fd33e55d8e6fd9e674eef8711000ab03e6d87d76,caipengbo@outlook.com,2024-01-30 21:07:51+08:00,noreply@github.com,2024-01-30 21:07:51+08:00,Ignore max-db-size limit when deleting data or writing aux informations (#2047),unstable,True,False,15,cmd_hash.cc,cc,1,1,2
fd33e55d8e6fd9e674eef8711000ab03e6d87d76,caipengbo@outlook.com,2024-01-30 21:07:51+08:00,noreply@github.com,2024-01-30 21:07:51+08:00,Ignore max-db-size limit when deleting data or writing aux informations (#2047),unstable,True,False,15,cmd_json.cc,cc,3,3,6
fd33e55d8e6fd9e674eef8711000ab03e6d87d76,caipengbo@outlook.com,2024-01-30 21:07:51+08:00,noreply@github.com,2024-01-30 21:07:51+08:00,Ignore max-db-size limit when deleting data or writing aux informations (#2047),unstable,True,False,15,cmd_key.cc,cc,2,2,4
fd33e55d8e6fd9e674eef8711000ab03e6d87d76,caipengbo@outlook.com,2024-01-30 21:07:51+08:00,noreply@github.com,2024-01-30 21:07:51+08:00,Ignore max-db-size limit when deleting data or writing aux informations (#2047),unstable,True,False,15,cmd_list.cc,cc,2,2,4
fd33e55d8e6fd9e674eef8711000ab03e6d87d76,caipengbo@outlook.com,2024-01-30 21:07:51+08:00,noreply@github.com,2024-01-30 21:07:51+08:00,Ignore max-db-size limit when deleting data or writing aux informations (#2047),unstable,True,False,15,cmd_server.cc,cc,16,4,20
fd33e55d8e6fd9e674eef8711000ab03e6d87d76,caipengbo@outlook.com,2024-01-30 21:07:51+08:00,noreply@github.com,2024-01-30 21:07:51+08:00,Ignore max-db-size limit when deleting data or writing aux informations (#2047),unstable,True,False,15,cmd_set.cc,cc,1,1,2
fd33e55d8e6fd9e674eef8711000ab03e6d87d76,caipengbo@outlook.com,2024-01-30 21:07:51+08:00,noreply@github.com,2024-01-30 21:07:51+08:00,Ignore max-db-size limit when deleting data or writing aux informations (#2047),unstable,True,False,15,cmd_sortedint.cc,cc,1,1,2
fd33e55d8e6fd9e674eef8711000ab03e6d87d76,caipengbo@outlook.com,2024-01-30 21:07:51+08:00,noreply@github.com,2024-01-30 21:07:51+08:00,Ignore max-db-size limit when deleting data or writing aux informations (#2047),unstable,True,False,15,cmd_stream.cc,cc,2,2,4
fd33e55d8e6fd9e674eef8711000ab03e6d87d76,caipengbo@outlook.com,2024-01-30 21:07:51+08:00,noreply@github.com,2024-01-30 21:07:51+08:00,Ignore max-db-size limit when deleting data or writing aux informations (#2047),unstable,True,False,15,cmd_string.cc,cc,1,1,2
fd33e55d8e6fd9e674eef8711000ab03e6d87d76,caipengbo@outlook.com,2024-01-30 21:07:51+08:00,noreply@github.com,2024-01-30 21:07:51+08:00,Ignore max-db-size limit when deleting data or writing aux informations (#2047),unstable,True,False,15,cmd_zset.cc,cc,4,4,8
fd33e55d8e6fd9e674eef8711000ab03e6d87d76,caipengbo@outlook.com,2024-01-30 21:07:51+08:00,noreply@github.com,2024-01-30 21:07:51+08:00,Ignore max-db-size limit when deleting data or writing aux informations (#2047),unstable,True,False,15,commander.h,h,15,12,27
fd33e55d8e6fd9e674eef8711000ab03e6d87d76,caipengbo@outlook.com,2024-01-30 21:07:51+08:00,noreply@github.com,2024-01-30 21:07:51+08:00,Ignore max-db-size limit when deleting data or writing aux informations (#2047),unstable,True,False,15,redis_connection.cc,cc,5,0,5
fd33e55d8e6fd9e674eef8711000ab03e6d87d76,caipengbo@outlook.com,2024-01-30 21:07:51+08:00,noreply@github.com,2024-01-30 21:07:51+08:00,Ignore max-db-size limit when deleting data or writing aux informations (#2047),unstable,True,False,15,storage.cc,cc,0,4,4
fd33e55d8e6fd9e674eef8711000ab03e6d87d76,caipengbo@outlook.com,2024-01-30 21:07:51+08:00,noreply@github.com,2024-01-30 21:07:51+08:00,Ignore max-db-size limit when deleting data or writing aux informations (#2047),unstable,True,False,15,storage.h,h,3,1,4
fd33e55d8e6fd9e674eef8711000ab03e6d87d76,caipengbo@outlook.com,2024-01-30 21:07:51+08:00,noreply@github.com,2024-01-30 21:07:51+08:00,Ignore max-db-size limit when deleting data or writing aux informations (#2047),unstable,True,False,15,debug_test.go,go,24,0,24
6eb80182af9e8151a2b06fdf323b42e0d547023a,caipengbo@outlook.com,2024-01-31 13:18:33+08:00,noreply@github.com,2024-01-31 13:18:33+08:00,"Allow to migrate cluster slot by raw write batch (#2067)

This PR implemented the cluster slot migration by the rocksdb write batch,
which will bring performance benefits. Also, we don't need to depend on
parsing commands from the write batch log data if enabled. This makes the
cluster migration feature more robust since we don't have to take care
of the log data in each write batch.

This closes #2008",unstable,True,False,11,kvrocks.conf,conf,22,0,22
6eb80182af9e8151a2b06fdf323b42e0d547023a,caipengbo@outlook.com,2024-01-31 13:18:33+08:00,noreply@github.com,2024-01-31 13:18:33+08:00,"Allow to migrate cluster slot by raw write batch (#2067)

This PR implemented the cluster slot migration by the rocksdb write batch,
which will bring performance benefits. Also, we don't need to depend on
parsing commands from the write batch log data if enabled. This makes the
cluster migration feature more robust since we don't have to take care
of the log data in each write batch.

This closes #2008",unstable,True,False,11,batch_sender.cc,cc,129,0,129
6eb80182af9e8151a2b06fdf323b42e0d547023a,caipengbo@outlook.com,2024-01-31 13:18:33+08:00,noreply@github.com,2024-01-31 13:18:33+08:00,"Allow to migrate cluster slot by raw write batch (#2067)

This PR implemented the cluster slot migration by the rocksdb write batch,
which will bring performance benefits. Also, we don't need to depend on
parsing commands from the write batch log data if enabled. This makes the
cluster migration feature more robust since we don't have to take care
of the log data in each write batch.

This closes #2008",unstable,True,False,11,batch_sender.h,h,71,0,71
6eb80182af9e8151a2b06fdf323b42e0d547023a,caipengbo@outlook.com,2024-01-31 13:18:33+08:00,noreply@github.com,2024-01-31 13:18:33+08:00,"Allow to migrate cluster slot by raw write batch (#2067)

This PR implemented the cluster slot migration by the rocksdb write batch,
which will bring performance benefits. Also, we don't need to depend on
parsing commands from the write batch log data if enabled. This makes the
cluster migration feature more robust since we don't have to take care
of the log data in each write batch.

This closes #2008",unstable,True,False,11,slot_migrate.cc,cc,195,14,209
6eb80182af9e8151a2b06fdf323b42e0d547023a,caipengbo@outlook.com,2024-01-31 13:18:33+08:00,noreply@github.com,2024-01-31 13:18:33+08:00,"Allow to migrate cluster slot by raw write batch (#2067)

This PR implemented the cluster slot migration by the rocksdb write batch,
which will bring performance benefits. Also, we don't need to depend on
parsing commands from the write batch log data if enabled. This makes the
cluster migration feature more robust since we don't have to take care
of the log data in each write batch.

This closes #2008",unstable,True,False,11,slot_migrate.h,h,23,6,29
6eb80182af9e8151a2b06fdf323b42e0d547023a,caipengbo@outlook.com,2024-01-31 13:18:33+08:00,noreply@github.com,2024-01-31 13:18:33+08:00,"Allow to migrate cluster slot by raw write batch (#2067)

This PR implemented the cluster slot migration by the rocksdb write batch,
which will bring performance benefits. Also, we don't need to depend on
parsing commands from the write batch log data if enabled. This makes the
cluster migration feature more robust since we don't have to take care
of the log data in each write batch.

This closes #2008",unstable,True,False,11,config.cc,cc,19,0,19
6eb80182af9e8151a2b06fdf323b42e0d547023a,caipengbo@outlook.com,2024-01-31 13:18:33+08:00,noreply@github.com,2024-01-31 13:18:33+08:00,"Allow to migrate cluster slot by raw write batch (#2067)

This PR implemented the cluster slot migration by the rocksdb write batch,
which will bring performance benefits. Also, we don't need to depend on
parsing commands from the write batch log data if enabled. This makes the
cluster migration feature more robust since we don't have to take care
of the log data in each write batch.

This closes #2008",unstable,True,False,11,config.h,h,5,0,5
6eb80182af9e8151a2b06fdf323b42e0d547023a,caipengbo@outlook.com,2024-01-31 13:18:33+08:00,noreply@github.com,2024-01-31 13:18:33+08:00,"Allow to migrate cluster slot by raw write batch (#2067)

This PR implemented the cluster slot migration by the rocksdb write batch,
which will bring performance benefits. Also, we don't need to depend on
parsing commands from the write batch log data if enabled. This makes the
cluster migration feature more robust since we don't have to take care
of the log data in each write batch.

This closes #2008",unstable,True,False,11,server.cc,cc,1,2,3
6eb80182af9e8151a2b06fdf323b42e0d547023a,caipengbo@outlook.com,2024-01-31 13:18:33+08:00,noreply@github.com,2024-01-31 13:18:33+08:00,"Allow to migrate cluster slot by raw write batch (#2067)

This PR implemented the cluster slot migration by the rocksdb write batch,
which will bring performance benefits. Also, we don't need to depend on
parsing commands from the write batch log data if enabled. This makes the
cluster migration feature more robust since we don't have to take care
of the log data in each write batch.

This closes #2008",unstable,True,False,11,storage.cc,cc,2,0,2
6eb80182af9e8151a2b06fdf323b42e0d547023a,caipengbo@outlook.com,2024-01-31 13:18:33+08:00,noreply@github.com,2024-01-31 13:18:33+08:00,"Allow to migrate cluster slot by raw write batch (#2067)

This PR implemented the cluster slot migration by the rocksdb write batch,
which will bring performance benefits. Also, we don't need to depend on
parsing commands from the write batch log data if enabled. This makes the
cluster migration feature more robust since we don't have to take care
of the log data in each write batch.

This closes #2008",unstable,True,False,11,storage.h,h,2,1,3
6eb80182af9e8151a2b06fdf323b42e0d547023a,caipengbo@outlook.com,2024-01-31 13:18:33+08:00,noreply@github.com,2024-01-31 13:18:33+08:00,"Allow to migrate cluster slot by raw write batch (#2067)

This PR implemented the cluster slot migration by the rocksdb write batch,
which will bring performance benefits. Also, we don't need to depend on
parsing commands from the write batch log data if enabled. This makes the
cluster migration feature more robust since we don't have to take care
of the log data in each write batch.

This closes #2008",unstable,True,False,11,slotmigrate_test.go,go,157,123,280
e95e6f75b6f2eaa6568ad52bf0c12ee1329bc90e,maplewish117@gmail.com,2024-01-31 15:11:23+08:00,noreply@github.com,2024-01-31 15:11:23+08:00,"Making RedisBitmapTest also tests Bitmap String (#2075)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,redis_bitmap.cc,cc,6,1,7
e95e6f75b6f2eaa6568ad52bf0c12ee1329bc90e,maplewish117@gmail.com,2024-01-31 15:11:23+08:00,noreply@github.com,2024-01-31 15:11:23+08:00,"Making RedisBitmapTest also tests Bitmap String (#2075)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,redis_bitmap_string.cc,cc,2,6,8
e95e6f75b6f2eaa6568ad52bf0c12ee1329bc90e,maplewish117@gmail.com,2024-01-31 15:11:23+08:00,noreply@github.com,2024-01-31 15:11:23+08:00,"Making RedisBitmapTest also tests Bitmap String (#2075)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,test_base.h,h,10,3,13
e95e6f75b6f2eaa6568ad52bf0c12ee1329bc90e,maplewish117@gmail.com,2024-01-31 15:11:23+08:00,noreply@github.com,2024-01-31 15:11:23+08:00,"Making RedisBitmapTest also tests Bitmap String (#2075)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,bitmap_test.cc,cc,52,21,73
c2fe4753283a5385fe3b602e81add32efcd2c43e,aleks.raiden@gmail.com,2024-02-01 04:54:35+02:00,noreply@github.com,2024-02-01 10:54:35+08:00,Bump jsoncons to 0.173.2 (#2082),unstable,True,False,1,jsoncons.cmake,cmake,2,2,4
972adb766f5c8ec4479c700500cec43c89a309bd,aleks.raiden@gmail.com,2024-02-01 05:48:31+02:00,noreply@github.com,2024-02-01 11:48:31+08:00,Bump speedb to 2.8.0 (#2080),unstable,True,False,1,speedb.cmake,cmake,2,2,4
eb6dba5fe8fc4f74d847029ae9d64cdb557e7266,aleks.raiden@gmail.com,2024-02-01 07:21:30+02:00,noreply@github.com,2024-02-01 13:21:30+08:00,Bump fmtlib to 10.2.1 (#2081),unstable,True,False,1,fmt.cmake,cmake,2,2,4
40e996c346e8b10e539a1f2b9a8a0d94d6924fa6,hulk.website@gmail.com,2024-02-01 20:23:56+08:00,noreply@github.com,2024-02-01 21:23:56+09:00,"Use human readable string instead of the integer when printing flush/compaction reason (#1962)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,2,event_listener.cc,cc,28,2,30
40e996c346e8b10e539a1f2b9a8a0d94d6924fa6,hulk.website@gmail.com,2024-02-01 20:23:56+08:00,noreply@github.com,2024-02-01 21:23:56+09:00,"Use human readable string instead of the integer when printing flush/compaction reason (#1962)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,2,event_listener.h,h,4,0,4
70fac378e9f966f8209c5195cdd2aaa214a87a0e,twice.mliu@gmail.com,2024-02-02 00:16:06+09:00,noreply@github.com,2024-02-02 00:16:06+09:00,Add search metadata encoding for numeric fields (#2086),unstable,True,False,1,search_encoding.h,h,20,2,22
4d85538375eff11e8d264822ed45fa6e808e62cf,maplewish117@gmail.com,2024-02-02 18:24:48+08:00,noreply@github.com,2024-02-02 18:24:48+08:00,Make BITPOS in Bitmap handling `stop_given` (#2085),unstable,True,False,2,redis_bitmap.cc,cc,44,15,59
4d85538375eff11e8d264822ed45fa6e808e62cf,maplewish117@gmail.com,2024-02-02 18:24:48+08:00,noreply@github.com,2024-02-02 18:24:48+08:00,Make BITPOS in Bitmap handling `stop_given` (#2085),unstable,True,False,2,bitmap_test.cc,cc,28,0,28
4a1a1be807b1caeea517e0b5882ef07476f30eb6,hulk.website@gmail.com,2024-02-05 11:36:37+08:00,noreply@github.com,2024-02-05 11:36:37+08:00,Add support of RESP3 attribute type (#2088),unstable,True,False,3,cmd_server.cc,cc,8,1,9
4a1a1be807b1caeea517e0b5882ef07476f30eb6,hulk.website@gmail.com,2024-02-05 11:36:37+08:00,noreply@github.com,2024-02-05 11:36:37+08:00,Add support of RESP3 attribute type (#2088),unstable,True,False,3,redis_connection.h,h,4,0,4
4a1a1be807b1caeea517e0b5882ef07476f30eb6,hulk.website@gmail.com,2024-02-05 11:36:37+08:00,noreply@github.com,2024-02-05 11:36:37+08:00,Add support of RESP3 attribute type (#2088),unstable,True,False,3,protocol_test.go,go,2,0,2
bb07671113c9e277cfa3d14098a0eb3ec9605bd4,aleks.raiden@gmail.com,2024-02-06 04:25:45+02:00,noreply@github.com,2024-02-06 10:25:45+08:00,Bump jsoncons to 0.173.4 (#2089),unstable,True,False,1,jsoncons.cmake,cmake,2,2,4
afb138262367959968ababd64fa4482fa5858607,77189278+caicancai@users.noreply.github.com,2024-02-06 19:17:53+08:00,noreply@github.com,2024-02-06 19:17:53+08:00,"chore: add x on Social Media (#2090)

Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,1,README.md,md,1,0,1
5940b730ba450cf83348766da2b7214f9a5ce1a9,18236554121@163.com,2024-02-07 18:25:52+08:00,noreply@github.com,2024-02-07 19:25:52+09:00,"Support BIT and BYTE options in the BITCOUNT command (#2087)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,7,cmd_bit.cc,cc,4,2,6
5940b730ba450cf83348766da2b7214f9a5ce1a9,18236554121@163.com,2024-02-07 18:25:52+08:00,noreply@github.com,2024-02-07 19:25:52+09:00,"Support BIT and BYTE options in the BITCOUNT command (#2087)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,7,redis_bitmap.cc,cc,65,40,105
5940b730ba450cf83348766da2b7214f9a5ce1a9,18236554121@163.com,2024-02-07 18:25:52+08:00,noreply@github.com,2024-02-07 19:25:52+09:00,"Support BIT and BYTE options in the BITCOUNT command (#2087)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,7,redis_bitmap.h,h,1,1,2
5940b730ba450cf83348766da2b7214f9a5ce1a9,18236554121@163.com,2024-02-07 18:25:52+08:00,noreply@github.com,2024-02-07 19:25:52+09:00,"Support BIT and BYTE options in the BITCOUNT command (#2087)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,7,redis_bitmap_string.cc,cc,39,5,44
5940b730ba450cf83348766da2b7214f9a5ce1a9,18236554121@163.com,2024-02-07 18:25:52+08:00,noreply@github.com,2024-02-07 19:25:52+09:00,"Support BIT and BYTE options in the BITCOUNT command (#2087)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,7,redis_bitmap_string.h,h,17,1,18
5940b730ba450cf83348766da2b7214f9a5ce1a9,18236554121@163.com,2024-02-07 18:25:52+08:00,noreply@github.com,2024-02-07 19:25:52+09:00,"Support BIT and BYTE options in the BITCOUNT command (#2087)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,7,bitmap_test.cc,cc,50,11,61
5940b730ba450cf83348766da2b7214f9a5ce1a9,18236554121@163.com,2024-02-07 18:25:52+08:00,noreply@github.com,2024-02-07 19:25:52+09:00,"Support BIT and BYTE options in the BITCOUNT command (#2087)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,7,bitmap_test.go,go,54,0,54
a8d132f480d3807c25e2e76876699d6185f90eb5,aleks.raiden@gmail.com,2024-02-08 04:56:38+02:00,noreply@github.com,2024-02-08 10:56:38+08:00,Bump span-lite to 0.11.0 (#2092),unstable,True,False,1,span.cmake,cmake,2,2,4
62704d90ff1bbd575d4d2222bc85354ed5c50bf2,aleks.raiden@gmail.com,2024-02-09 14:30:44+02:00,noreply@github.com,2024-02-09 21:30:44+09:00,"Bump typo checker in CI to 1.18.1 (#2093)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,kvrocks.yaml,yaml,1,1,2
4fb22bec34560a6f1776763684e70bb8943d2f14,twice.mliu@gmail.com,2024-02-10 10:45:55+09:00,noreply@github.com,2024-02-10 10:45:55+09:00,Add a noindex flag to search metadata (#2094),unstable,True,False,1,search_encoding.h,h,29,1,30
58d177fc1d78198a3bfa21f53db8c6a5031dc380,twice.mliu@gmail.com,2024-02-10 18:46:54+09:00,noreply@github.com,2024-02-10 18:46:54+09:00,Unify the workflow of command executing in connection and scripting (#2095),unstable,True,False,6,commander.h,h,4,0,4
58d177fc1d78198a3bfa21f53db8c6a5031dc380,twice.mliu@gmail.com,2024-02-10 18:46:54+09:00,noreply@github.com,2024-02-10 18:46:54+09:00,Unify the workflow of command executing in connection and scripting (#2095),unstable,True,False,6,redis_connection.cc,cc,23,18,41
58d177fc1d78198a3bfa21f53db8c6a5031dc380,twice.mliu@gmail.com,2024-02-10 18:46:54+09:00,noreply@github.com,2024-02-10 18:46:54+09:00,Unify the workflow of command executing in connection and scripting (#2095),unstable,True,False,6,redis_connection.h,h,2,0,2
58d177fc1d78198a3bfa21f53db8c6a5031dc380,twice.mliu@gmail.com,2024-02-10 18:46:54+09:00,noreply@github.com,2024-02-10 18:46:54+09:00,Unify the workflow of command executing in connection and scripting (#2095),unstable,True,False,6,server.cc,cc,6,6,12
58d177fc1d78198a3bfa21f53db8c6a5031dc380,twice.mliu@gmail.com,2024-02-10 18:46:54+09:00,noreply@github.com,2024-02-10 18:46:54+09:00,Unify the workflow of command executing in connection and scripting (#2095),unstable,True,False,6,server.h,h,1,1,2
58d177fc1d78198a3bfa21f53db8c6a5031dc380,twice.mliu@gmail.com,2024-02-10 18:46:54+09:00,noreply@github.com,2024-02-10 18:46:54+09:00,Unify the workflow of command executing in connection and scripting (#2095),unstable,True,False,6,scripting.cc,cc,13,25,38
af1842017cba2a0f36d3f2288805a2ea2d3a630a,twice.mliu@gmail.com,2024-02-10 22:26:02+09:00,noreply@github.com,2024-02-10 22:26:02+09:00,Improve code style for auth in ExecuteCommands (#2096),unstable,True,False,1,redis_connection.cc,cc,12,14,26
eee6486a3227ae6c3dc49e33833a3227f535b59c,torwigua@gmail.com,2024-02-13 07:16:42+02:00,noreply@github.com,2024-02-13 13:16:42+08:00,Add usage of std::move where compiler suggested (#2099),unstable,True,False,2,config_type.h,h,2,2,4
eee6486a3227ae6c3dc49e33833a3227f535b59c,torwigua@gmail.com,2024-02-13 07:16:42+02:00,noreply@github.com,2024-02-13 13:16:42+08:00,Add usage of std::move where compiler suggested (#2099),unstable,True,False,2,storage.cc,cc,3,2,5
cf2f4ad7d95d7c792ff93e7cd83403b8c7434eda,jihuayu123@gmail.com,2024-02-13 19:12:13+08:00,noreply@github.com,2024-02-13 19:12:13+08:00,"test: Use require.JSONEq instead of require.Equal for the JSON string (#2100)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,json_test.go,go,62,59,121
444976a97401d961557faff9c436516cd1cf875f,aleks.raiden@gmail.com,2024-02-15 13:36:04+02:00,noreply@github.com,2024-02-15 19:36:04+08:00,"ci: Update actions to avoid Node.js deprecated warning (#2098)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,kvrocks.yaml,yaml,22,19,41
444976a97401d961557faff9c436516cd1cf875f,aleks.raiden@gmail.com,2024-02-15 13:36:04+02:00,noreply@github.com,2024-02-15 19:36:04+08:00,"ci: Update actions to avoid Node.js deprecated warning (#2098)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,nightly.yaml,yaml,6,6,12
444976a97401d961557faff9c436516cd1cf875f,aleks.raiden@gmail.com,2024-02-15 13:36:04+02:00,noreply@github.com,2024-02-15 19:36:04+08:00,"ci: Update actions to avoid Node.js deprecated warning (#2098)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,sonar.yaml,yaml,3,3,6
1052bab819c8fb199622745eea2e25124d4c7a5d,jihuayu123@gmail.com,2024-02-17 18:37:02+08:00,noreply@github.com,2024-02-17 18:37:02+08:00,Set the redis-cursor-compatible field to yes in the initial configuration (#2103),unstable,True,False,1,kvrocks.conf,conf,1,1,2
e8c05a38441c2bcdd82410f68b12b51af71e399d,hulk.website@gmail.com,2024-02-17 21:39:31+08:00,noreply@github.com,2024-02-17 21:39:31+08:00,"Fix flaky test cases in keyspace_test.go (#2104)

We expired a key with 1 second which is too short for testing the expiration time,
because `Metadata::ExpireMsToS` function will use rounding to get a closer time value if
METADATA_64BIT_ENCODING_MASK was disabled.

This closes #2091",unstable,True,False,1,keyspace_test.go,go,1,1,2
7fe2bc2e072ab0a9b1643a4852ea43889b38f0b6,Wse1714401046@gmail.com,2024-02-18 15:45:24+08:00,noreply@github.com,2024-02-18 15:45:24+08:00,Add support of RESP3 verbatim string (#2102),unstable,True,False,4,cmd_cluster.cc,cc,2,2,4
7fe2bc2e072ab0a9b1643a4852ea43889b38f0b6,Wse1714401046@gmail.com,2024-02-18 15:45:24+08:00,noreply@github.com,2024-02-18 15:45:24+08:00,Add support of RESP3 verbatim string (#2102),unstable,True,False,4,cmd_server.cc,cc,7,5,12
7fe2bc2e072ab0a9b1643a4852ea43889b38f0b6,Wse1714401046@gmail.com,2024-02-18 15:45:24+08:00,noreply@github.com,2024-02-18 15:45:24+08:00,Add support of RESP3 verbatim string (#2102),unstable,True,False,4,redis_connection.h,h,11,0,11
7fe2bc2e072ab0a9b1643a4852ea43889b38f0b6,Wse1714401046@gmail.com,2024-02-18 15:45:24+08:00,noreply@github.com,2024-02-18 15:45:24+08:00,Add support of RESP3 verbatim string (#2102),unstable,True,False,4,protocol_test.go,go,24,22,46
fb7acf6a5f3c010fa61f30f1f8fbef63efd0b31d,maplewish117@gmail.com,2024-02-19 17:20:30+08:00,noreply@github.com,2024-02-19 18:20:30+09:00,"Bitmap: Extract common bit operations like GetBit and SetBitTo (#2105)

This is a refactor, see: https://github.com/apache/kvrocks/issues/2076

Previously, adhoc bit operations are used. This patch extract `GetBit` and `SetBitTo` operation to simplify the impl.

Also, because the LSB/MSB format we're using it different in BitmapString and Bitmap( see https://github.com/apache/kvrocks-website/pull/198 ), `lsb` and `msb` is extracted to prevent from mistakes.",unstable,True,False,6,bit_util.h,h,149,0,149
fb7acf6a5f3c010fa61f30f1f8fbef63efd0b31d,maplewish117@gmail.com,2024-02-19 17:20:30+08:00,noreply@github.com,2024-02-19 18:20:30+09:00,"Bitmap: Extract common bit operations like GetBit and SetBitTo (#2105)

This is a refactor, see: https://github.com/apache/kvrocks/issues/2076

Previously, adhoc bit operations are used. This patch extract `GetBit` and `SetBitTo` operation to simplify the impl.

Also, because the LSB/MSB format we're using it different in BitmapString and Bitmap( see https://github.com/apache/kvrocks-website/pull/198 ), `lsb` and `msb` is extracted to prevent from mistakes.",unstable,True,False,6,batch_extractor.cc,cc,1,2,3
fb7acf6a5f3c010fa61f30f1f8fbef63efd0b31d,maplewish117@gmail.com,2024-02-19 17:20:30+08:00,noreply@github.com,2024-02-19 18:20:30+09:00,"Bitmap: Extract common bit operations like GetBit and SetBitTo (#2105)

This is a refactor, see: https://github.com/apache/kvrocks/issues/2076

Previously, adhoc bit operations are used. This patch extract `GetBit` and `SetBitTo` operation to simplify the impl.

Also, because the LSB/MSB format we're using it different in BitmapString and Bitmap( see https://github.com/apache/kvrocks-website/pull/198 ), `lsb` and `msb` is extracted to prevent from mistakes.",unstable,True,False,6,redis_bitmap.cc,cc,39,30,69
fb7acf6a5f3c010fa61f30f1f8fbef63efd0b31d,maplewish117@gmail.com,2024-02-19 17:20:30+08:00,noreply@github.com,2024-02-19 18:20:30+09:00,"Bitmap: Extract common bit operations like GetBit and SetBitTo (#2105)

This is a refactor, see: https://github.com/apache/kvrocks/issues/2076

Previously, adhoc bit operations are used. This patch extract `GetBit` and `SetBitTo` operation to simplify the impl.

Also, because the LSB/MSB format we're using it different in BitmapString and Bitmap( see https://github.com/apache/kvrocks-website/pull/198 ), `lsb` and `msb` is extracted to prevent from mistakes.",unstable,True,False,6,redis_bitmap.h,h,6,3,9
fb7acf6a5f3c010fa61f30f1f8fbef63efd0b31d,maplewish117@gmail.com,2024-02-19 17:20:30+08:00,noreply@github.com,2024-02-19 18:20:30+09:00,"Bitmap: Extract common bit operations like GetBit and SetBitTo (#2105)

This is a refactor, see: https://github.com/apache/kvrocks/issues/2076

Previously, adhoc bit operations are used. This patch extract `GetBit` and `SetBitTo` operation to simplify the impl.

Also, because the LSB/MSB format we're using it different in BitmapString and Bitmap( see https://github.com/apache/kvrocks-website/pull/198 ), `lsb` and `msb` is extracted to prevent from mistakes.",unstable,True,False,6,redis_bitmap_string.cc,cc,14,99,113
fb7acf6a5f3c010fa61f30f1f8fbef63efd0b31d,maplewish117@gmail.com,2024-02-19 17:20:30+08:00,noreply@github.com,2024-02-19 18:20:30+09:00,"Bitmap: Extract common bit operations like GetBit and SetBitTo (#2105)

This is a refactor, see: https://github.com/apache/kvrocks/issues/2076

Previously, adhoc bit operations are used. This patch extract `GetBit` and `SetBitTo` operation to simplify the impl.

Also, because the LSB/MSB format we're using it different in BitmapString and Bitmap( see https://github.com/apache/kvrocks-website/pull/198 ), `lsb` and `msb` is extracted to prevent from mistakes.",unstable,True,False,6,redis_bitmap_string.h,h,3,5,8
30f6bee42d4352715ce254a52c4403fe6b0ab5e7,aleks.raiden@gmail.com,2024-02-21 04:11:22+02:00,noreply@github.com,2024-02-21 10:11:22+08:00,"Small corrections of spelling in a config file (#2107)

Just a small corrections of spelling in config file:
- rites changes to writes
- Removed describing a compression level because we use
  a hardcode compress_level and no config options for her",unstable,True,False,1,kvrocks.conf,conf,2,3,5
199a77090dc5d4cc2204406c92bbf98a374c4fc2,aleks.raiden@gmail.com,2024-02-21 13:19:28+02:00,noreply@github.com,2024-02-21 20:19:28+09:00,Bump rocksdb to 8.10.2 (#2110),unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
5fb607900d4d288faf1eea49e7e21a489b2cd888,maplewish117@gmail.com,2024-02-21 23:48:38+08:00,noreply@github.com,2024-02-21 23:48:38+08:00,Minor refactor BitOp (#2108),unstable,True,False,1,redis_bitmap.cc,cc,49,53,102
8a19bd50b0127f1d4882459d85eb6ea03a0d45c6,jihuayu123@gmail.com,2024-02-23 11:58:51+08:00,noreply@github.com,2024-02-23 11:58:51+08:00,Check if the type is an entry  while iterating the stream subkeys (#2112),unstable,True,False,3,redis_stream.cc,cc,7,2,9
8a19bd50b0127f1d4882459d85eb6ea03a0d45c6,jihuayu123@gmail.com,2024-02-23 11:58:51+08:00,noreply@github.com,2024-02-23 11:58:51+08:00,Check if the type is an entry  while iterating the stream subkeys (#2112),unstable,True,False,3,redis_stream.h,h,1,1,2
8a19bd50b0127f1d4882459d85eb6ea03a0d45c6,jihuayu123@gmail.com,2024-02-23 11:58:51+08:00,noreply@github.com,2024-02-23 11:58:51+08:00,Check if the type is an entry  while iterating the stream subkeys (#2112),unstable,True,False,3,stream_test.go,go,15,0,15
7571034f3516594dd1169fdfcdea6cabd085fe5e,twice.mliu@gmail.com,2024-02-24 09:46:23+09:00,noreply@github.com,2024-02-24 09:46:23+09:00,Initialize the unified index updater for HASH and JSON data type (#2111),unstable,True,False,10,CMakeLists.txt,txt,2,0,2
7571034f3516594dd1169fdfcdea6cabd085fe5e,twice.mliu@gmail.com,2024-02-24 09:46:23+09:00,noreply@github.com,2024-02-24 09:46:23+09:00,Initialize the unified index updater for HASH and JSON data type (#2111),unstable,True,False,10,NOTICE,None,1,0,1
7571034f3516594dd1169fdfcdea6cabd085fe5e,twice.mliu@gmail.com,2024-02-24 09:46:23+09:00,noreply@github.com,2024-02-24 09:46:23+09:00,Initialize the unified index updater for HASH and JSON data type (#2111),unstable,True,False,10,trie.cmake,cmake,27,0,27
7571034f3516594dd1169fdfcdea6cabd085fe5e,twice.mliu@gmail.com,2024-02-24 09:46:23+09:00,noreply@github.com,2024-02-24 09:46:23+09:00,Initialize the unified index updater for HASH and JSON data type (#2111),unstable,True,False,10,LICENSE-hat-trie.txt,txt,21,0,21
7571034f3516594dd1169fdfcdea6cabd085fe5e,twice.mliu@gmail.com,2024-02-24 09:46:23+09:00,noreply@github.com,2024-02-24 09:46:23+09:00,Initialize the unified index updater for HASH and JSON data type (#2111),unstable,True,False,10,status.h,h,3,0,3
7571034f3516594dd1169fdfcdea6cabd085fe5e,twice.mliu@gmail.com,2024-02-24 09:46:23+09:00,noreply@github.com,2024-02-24 09:46:23+09:00,Initialize the unified index updater for HASH and JSON data type (#2111),unstable,True,False,10,indexer.cc,cc,118,0,118
7571034f3516594dd1169fdfcdea6cabd085fe5e,twice.mliu@gmail.com,2024-02-24 09:46:23+09:00,noreply@github.com,2024-02-24 09:46:23+09:00,Initialize the unified index updater for HASH and JSON data type (#2111),unstable,True,False,10,indexer.h,h,92,0,92
7571034f3516594dd1169fdfcdea6cabd085fe5e,twice.mliu@gmail.com,2024-02-24 09:46:23+09:00,noreply@github.com,2024-02-24 09:46:23+09:00,Initialize the unified index updater for HASH and JSON data type (#2111),unstable,True,False,10,search_encoding.h,h,4,4,8
7571034f3516594dd1169fdfcdea6cabd085fe5e,twice.mliu@gmail.com,2024-02-24 09:46:23+09:00,noreply@github.com,2024-02-24 09:46:23+09:00,Initialize the unified index updater for HASH and JSON data type (#2111),unstable,True,False,10,redis_hash.h,h,2,0,2
7571034f3516594dd1169fdfcdea6cabd085fe5e,twice.mliu@gmail.com,2024-02-24 09:46:23+09:00,noreply@github.com,2024-02-24 09:46:23+09:00,Initialize the unified index updater for HASH and JSON data type (#2111),unstable,True,False,10,redis_json.h,h,2,0,2
80ca6b091bdc8f649fd3e625cfe420e146461983,maplewish117@gmail.com,2024-02-26 20:53:12+08:00,noreply@github.com,2024-02-26 21:53:12+09:00,"Extract a rand sample helper and support negative sample count in ""Set"" (#2113)",unstable,True,False,5,redis_hash.cc,cc,21,33,54
80ca6b091bdc8f649fd3e625cfe420e146461983,maplewish117@gmail.com,2024-02-26 20:53:12+08:00,noreply@github.com,2024-02-26 21:53:12+09:00,"Extract a rand sample helper and support negative sample count in ""Set"" (#2113)",unstable,True,False,5,redis_set.cc,cc,29,43,72
80ca6b091bdc8f649fd3e625cfe420e146461983,maplewish117@gmail.com,2024-02-26 20:53:12+08:00,noreply@github.com,2024-02-26 21:53:12+09:00,"Extract a rand sample helper and support negative sample count in ""Set"" (#2113)",unstable,True,False,5,redis_zset.cc,cc,7,30,37
80ca6b091bdc8f649fd3e625cfe420e146461983,maplewish117@gmail.com,2024-02-26 20:53:12+08:00,noreply@github.com,2024-02-26 21:53:12+09:00,"Extract a rand sample helper and support negative sample count in ""Set"" (#2113)",unstable,True,False,5,sample_helper.h,h,67,0,67
80ca6b091bdc8f649fd3e625cfe420e146461983,maplewish117@gmail.com,2024-02-26 20:53:12+08:00,noreply@github.com,2024-02-26 21:53:12+09:00,"Extract a rand sample helper and support negative sample count in ""Set"" (#2113)",unstable,True,False,5,set_test.cc,cc,5,10,15
0d8f7381a57791593d2d91c9a75421c489aadad4,twice.mliu@gmail.com,2024-02-27 08:52:01+09:00,noreply@github.com,2024-02-27 08:52:01+09:00,Implement index updating for numeric and tag field (#2115),unstable,True,False,8,status.h,h,3,11,14
0d8f7381a57791593d2d91c9a75421c489aadad4,twice.mliu@gmail.com,2024-02-27 08:52:01+09:00,noreply@github.com,2024-02-27 08:52:01+09:00,Implement index updating for numeric and tag field (#2115),unstable,True,False,8,string_util.cc,cc,6,6,12
0d8f7381a57791593d2d91c9a75421c489aadad4,twice.mliu@gmail.com,2024-02-27 08:52:01+09:00,noreply@github.com,2024-02-27 08:52:01+09:00,Implement index updating for numeric and tag field (#2115),unstable,True,False,8,string_util.h,h,4,4,8
0d8f7381a57791593d2d91c9a75421c489aadad4,twice.mliu@gmail.com,2024-02-27 08:52:01+09:00,noreply@github.com,2024-02-27 08:52:01+09:00,Implement index updating for numeric and tag field (#2115),unstable,True,False,8,indexer.cc,cc,118,5,123
0d8f7381a57791593d2d91c9a75421c489aadad4,twice.mliu@gmail.com,2024-02-27 08:52:01+09:00,noreply@github.com,2024-02-27 08:52:01+09:00,Implement index updating for numeric and tag field (#2115),unstable,True,False,8,indexer.h,h,10,2,12
0d8f7381a57791593d2d91c9a75421c489aadad4,twice.mliu@gmail.com,2024-02-27 08:52:01+09:00,noreply@github.com,2024-02-27 08:52:01+09:00,Implement index updating for numeric and tag field (#2115),unstable,True,False,8,search_encoding.h,h,2,0,2
0d8f7381a57791593d2d91c9a75421c489aadad4,twice.mliu@gmail.com,2024-02-27 08:52:01+09:00,noreply@github.com,2024-02-27 08:52:01+09:00,Implement index updating for numeric and tag field (#2115),unstable,True,False,8,storage.cc,cc,6,2,8
0d8f7381a57791593d2d91c9a75421c489aadad4,twice.mliu@gmail.com,2024-02-27 08:52:01+09:00,noreply@github.com,2024-02-27 08:52:01+09:00,Implement index updating for numeric and tag field (#2115),unstable,True,False,8,storage.h,h,2,0,2
350816c2cc3beba75b938b40db54268b8d80edc9,caipengbo@outlook.com,2024-02-28 22:05:41+08:00,noreply@github.com,2024-02-28 22:05:41+08:00,Make COMMAND command consistent with redis when the renamed command exists (#2123),unstable,True,False,2,commander.cc,cc,4,4,8
350816c2cc3beba75b938b40db54268b8d80edc9,caipengbo@outlook.com,2024-02-28 22:05:41+08:00,noreply@github.com,2024-02-28 22:05:41+08:00,Make COMMAND command consistent with redis when the renamed command exists (#2123),unstable,True,False,2,command_test.go,go,39,1,40
019faed9201ea7cc07bb748f0dba9aa645da692c,caipengbo@outlook.com,2024-02-28 23:29:42+08:00,noreply@github.com,2024-02-28 23:29:42+08:00,Fallback to use the redis command migration type if the target don't support the ApplyBatch command (#2117),unstable,True,False,3,slot_migrate.cc,cc,43,4,47
019faed9201ea7cc07bb748f0dba9aa645da692c,caipengbo@outlook.com,2024-02-28 23:29:42+08:00,noreply@github.com,2024-02-28 23:29:42+08:00,Fallback to use the redis command migration type if the target don't support the ApplyBatch command (#2117),unstable,True,False,3,slot_migrate.h,h,2,0,2
019faed9201ea7cc07bb748f0dba9aa645da692c,caipengbo@outlook.com,2024-02-28 23:29:42+08:00,noreply@github.com,2024-02-28 23:29:42+08:00,Fallback to use the redis command migration type if the target don't support the ApplyBatch command (#2117),unstable,True,False,3,slotmigrate_test.go,go,44,0,44
67208e6e94a7a98477ee214cda3dd7e890da5a55,hulk.website@gmail.com,2024-02-29 00:37:05+08:00,noreply@github.com,2024-02-29 00:37:05+08:00,"Fix incorrent bytes to calculate length of ziplist/listpack 32bit string (#2124)

Currently, it calculates the length of 32-bit string from position 0 to 3,
but the right position should be 1 to 4 in ziplist/listpack.
So it will retrieve a wrong length and throw an error.",unstable,True,False,4,rdb_listpack.cc,cc,2,2,4
67208e6e94a7a98477ee214cda3dd7e890da5a55,hulk.website@gmail.com,2024-02-29 00:37:05+08:00,noreply@github.com,2024-02-29 00:37:05+08:00,"Fix incorrent bytes to calculate length of ziplist/listpack 32bit string (#2124)

Currently, it calculates the length of 32-bit string from position 0 to 3,
but the right position should be 1 to 4 in ziplist/listpack.
So it will retrieve a wrong length and throw an error.",unstable,True,False,4,rdb_ziplist.cc,cc,2,2,4
67208e6e94a7a98477ee214cda3dd7e890da5a55,hulk.website@gmail.com,2024-02-29 00:37:05+08:00,noreply@github.com,2024-02-29 00:37:05+08:00,"Fix incorrent bytes to calculate length of ziplist/listpack 32bit string (#2124)

Currently, it calculates the length of 32-bit string from position 0 to 3,
but the right position should be 1 to 4 in ziplist/listpack.
So it will retrieve a wrong length and throw an error.",unstable,True,False,4,rdb_test.go,go,61,0,61
67208e6e94a7a98477ee214cda3dd7e890da5a55,hulk.website@gmail.com,2024-02-29 00:37:05+08:00,noreply@github.com,2024-02-29 00:37:05+08:00,"Fix incorrent bytes to calculate length of ziplist/listpack 32bit string (#2124)

Currently, it calculates the length of 32-bit string from position 0 to 3,
but the right position should be 1 to 4 in ziplist/listpack.
So it will retrieve a wrong length and throw an error.",unstable,True,False,4,restore_test.go,go,7,0,7
1e320582486fdd0560541c53ffe9e1cd056a345d,aleks.raiden@gmail.com,2024-02-29 02:27:02+02:00,noreply@github.com,2024-02-29 08:27:02+08:00,"Bump rocksdb to 8.11.3 (#2122)

Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
db2d244ffd8ef9c5fdb8e4c3c346cef4a195da02,hulk.website@gmail.com,2024-02-29 19:00:38+08:00,noreply@github.com,2024-02-29 19:00:38+08:00,Add support of RESP3 in Lua (#2119),unstable,True,False,3,scripting.cc,cc,151,9,160
db2d244ffd8ef9c5fdb8e4c3c346cef4a195da02,hulk.website@gmail.com,2024-02-29 19:00:38+08:00,noreply@github.com,2024-02-29 19:00:38+08:00,Add support of RESP3 in Lua (#2119),unstable,True,False,3,scripting.h,h,2,0,2
db2d244ffd8ef9c5fdb8e4c3c346cef4a195da02,hulk.website@gmail.com,2024-02-29 19:00:38+08:00,noreply@github.com,2024-02-29 19:00:38+08:00,Add support of RESP3 in Lua (#2119),unstable,True,False,3,scripting_test.go,go,64,0,64
79ad8a52840af5fe6a046a19b7329a84855452a0,85615957+Yangsx-1@users.noreply.github.com,2024-03-01 16:19:14+08:00,noreply@github.com,2024-03-01 16:19:14+08:00,Add the support of the XREADGROUP command (#2120),unstable,True,False,5,cmd_stream.cc,cc,298,0,298
79ad8a52840af5fe6a046a19b7329a84855452a0,85615957+Yangsx-1@users.noreply.github.com,2024-03-01 16:19:14+08:00,noreply@github.com,2024-03-01 16:19:14+08:00,Add the support of the XREADGROUP command (#2120),unstable,True,False,5,redis_stream.cc,cc,192,3,195
79ad8a52840af5fe6a046a19b7329a84855452a0,85615957+Yangsx-1@users.noreply.github.com,2024-03-01 16:19:14+08:00,noreply@github.com,2024-03-01 16:19:14+08:00,Add the support of the XREADGROUP command (#2120),unstable,True,False,5,redis_stream.h,h,10,0,10
79ad8a52840af5fe6a046a19b7329a84855452a0,85615957+Yangsx-1@users.noreply.github.com,2024-03-01 16:19:14+08:00,noreply@github.com,2024-03-01 16:19:14+08:00,Add the support of the XREADGROUP command (#2120),unstable,True,False,5,redis_stream_base.h,h,6,0,6
79ad8a52840af5fe6a046a19b7329a84855452a0,85615957+Yangsx-1@users.noreply.github.com,2024-03-01 16:19:14+08:00,noreply@github.com,2024-03-01 16:19:14+08:00,Add the support of the XREADGROUP command (#2120),unstable,True,False,5,stream_test.go,go,138,0,138
4a8fb4b86a9249777b470d3aa41374793eede86c,hulk.website@gmail.com,2024-03-01 20:06:15+08:00,noreply@github.com,2024-03-01 20:06:15+08:00,"Add support of lua function 'redis.setresp()' (#2130)

Except for the `redis.setresp` function, it fixes the different behavior with Redis in Lua script.

Before applying this PR, the Lua script will return the result in RESP3 format
if the connection is connected with `HELLO 3` command. But for Redis,
it will always use RESP2 unless users explicitly set it with `redis.setresp(3)`.

```
// Kvrocks

❯ redis-cli -3 -p 6666

127.0.0.1:6666> EVAL 'return redis.call(""hgetall"",""hash"")' 0
1# ""f1"" => ""v1""

// Redis

❯ redis-cli -3 
127.0.0.1:6379> EVAL 'return redis.call(""hgetall"",""hash"")' 0
1) ""f1""
2) ""v1""
```

After applying this PR, it will behaves consistently with Redis:

```
❯ redis-cli -3 -p 6666
127.0.0.1:6666> EVAL 'redis.setresp(3);return redis.call(""hgetall"",""hash"")' 0
1# ""f1"" => ""v1""
127.0.0.1:6666> EVAL 'return redis.call(""hgetall"",""hash"")' 0
1) ""f1""
2) ""v1""
```


Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,3,scripting.cc,cc,34,0,34
4a8fb4b86a9249777b470d3aa41374793eede86c,hulk.website@gmail.com,2024-03-01 20:06:15+08:00,noreply@github.com,2024-03-01 20:06:15+08:00,"Add support of lua function 'redis.setresp()' (#2130)

Except for the `redis.setresp` function, it fixes the different behavior with Redis in Lua script.

Before applying this PR, the Lua script will return the result in RESP3 format
if the connection is connected with `HELLO 3` command. But for Redis,
it will always use RESP2 unless users explicitly set it with `redis.setresp(3)`.

```
// Kvrocks

❯ redis-cli -3 -p 6666

127.0.0.1:6666> EVAL 'return redis.call(""hgetall"",""hash"")' 0
1# ""f1"" => ""v1""

// Redis

❯ redis-cli -3 
127.0.0.1:6379> EVAL 'return redis.call(""hgetall"",""hash"")' 0
1) ""f1""
2) ""v1""
```

After applying this PR, it will behaves consistently with Redis:

```
❯ redis-cli -3 -p 6666
127.0.0.1:6666> EVAL 'redis.setresp(3);return redis.call(""hgetall"",""hash"")' 0
1# ""f1"" => ""v1""
127.0.0.1:6666> EVAL 'return redis.call(""hgetall"",""hash"")' 0
1) ""f1""
2) ""v1""
```


Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,3,scripting.h,h,1,0,1
4a8fb4b86a9249777b470d3aa41374793eede86c,hulk.website@gmail.com,2024-03-01 20:06:15+08:00,noreply@github.com,2024-03-01 20:06:15+08:00,"Add support of lua function 'redis.setresp()' (#2130)

Except for the `redis.setresp` function, it fixes the different behavior with Redis in Lua script.

Before applying this PR, the Lua script will return the result in RESP3 format
if the connection is connected with `HELLO 3` command. But for Redis,
it will always use RESP2 unless users explicitly set it with `redis.setresp(3)`.

```
// Kvrocks

❯ redis-cli -3 -p 6666

127.0.0.1:6666> EVAL 'return redis.call(""hgetall"",""hash"")' 0
1# ""f1"" => ""v1""

// Redis

❯ redis-cli -3 
127.0.0.1:6379> EVAL 'return redis.call(""hgetall"",""hash"")' 0
1) ""f1""
2) ""v1""
```

After applying this PR, it will behaves consistently with Redis:

```
❯ redis-cli -3 -p 6666
127.0.0.1:6666> EVAL 'redis.setresp(3);return redis.call(""hgetall"",""hash"")' 0
1# ""f1"" => ""v1""
127.0.0.1:6666> EVAL 'return redis.call(""hgetall"",""hash"")' 0
1) ""f1""
2) ""v1""
```


Co-authored-by: Binbin <binloveplay1314@qq.com>",unstable,True,False,3,scripting_test.go,go,37,6,43
2ec78bc44453a14c75588fd64c8a7416c97fe744,i18n.site@gmail.com,2024-03-02 17:09:25+08:00,noreply@github.com,2024-03-02 17:09:25+08:00,Fix glog may buffer the stdout's output (#2131),unstable,True,False,1,main.cc,cc,1,0,1
8a939dd2d065a586923d787960e7f2c57c1e025a,hulk.website@gmail.com,2024-03-02 18:24:54+08:00,noreply@github.com,2024-03-02 18:24:54+08:00,"Fix incorrect ZRANGE command response format in RESP3 mode (#2132)

Currently, ZRANGE command with scores will always return an array of string and double type:

```
1) ""a""
2) (double) 1.2
3) ""b""
4) (double) 1.5
```

But in Redis, it will return an array of arrays if the RESP3 was enabled:

```
1) 1) ""a""
   2) (double) 1.2
2) 1) ""b""
   2) (double) 1.5
```

This different behavior cannot be found with go-redis client since it will be always parsed as the corrent member-score pairs, but using ZRANGE command in Lua script this inconsistent result format might be awareness.",unstable,True,False,2,cmd_zset.cc,cc,5,1,6
8a939dd2d065a586923d787960e7f2c57c1e025a,hulk.website@gmail.com,2024-03-02 18:24:54+08:00,noreply@github.com,2024-03-02 18:24:54+08:00,"Fix incorrect ZRANGE command response format in RESP3 mode (#2132)

Currently, ZRANGE command with scores will always return an array of string and double type:

```
1) ""a""
2) (double) 1.2
3) ""b""
4) (double) 1.5
```

But in Redis, it will return an array of arrays if the RESP3 was enabled:

```
1) 1) ""a""
   2) (double) 1.2
2) 1) ""b""
   2) (double) 1.5
```

This different behavior cannot be found with go-redis client since it will be always parsed as the corrent member-score pairs, but using ZRANGE command in Lua script this inconsistent result format might be awareness.",unstable,True,False,2,protocol_test.go,go,75,0,75
be072b4f9f665826699275477da21613698dd69e,twice.mliu@gmail.com,2024-03-03 11:32:05+09:00,noreply@github.com,2024-03-03 11:32:05+09:00,Add unit test for index updater (#2134),unstable,True,False,4,indexer.cc,cc,17,3,20
be072b4f9f665826699275477da21613698dd69e,twice.mliu@gmail.com,2024-03-03 11:32:05+09:00,noreply@github.com,2024-03-03 11:32:05+09:00,Add unit test for index updater (#2134),unstable,True,False,4,indexer.h,h,8,0,8
be072b4f9f665826699275477da21613698dd69e,twice.mliu@gmail.com,2024-03-03 11:32:05+09:00,noreply@github.com,2024-03-03 11:32:05+09:00,Add unit test for index updater (#2134),unstable,True,False,4,indexer_test.cc,cc,269,0,269
8a4457aeb3592d2961c97e6456c09c32ea4620f4,joverzh@gmail.com,2024-03-03 20:45:53+08:00,noreply@github.com,2024-03-03 21:45:53+09:00,"Add the support of the LCS command (#2116)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,cmd_string.cc,cc,84,2,86
8a4457aeb3592d2961c97e6456c09c32ea4620f4,joverzh@gmail.com,2024-03-03 20:45:53+08:00,noreply@github.com,2024-03-03 21:45:53+09:00,"Add the support of the LCS command (#2116)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,redis_request.cc,cc,0,4,4
8a4457aeb3592d2961c97e6456c09c32ea4620f4,joverzh@gmail.com,2024-03-03 20:45:53+08:00,noreply@github.com,2024-03-03 21:45:53+09:00,"Add the support of the LCS command (#2116)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,redis_request.h,h,4,0,4
8a4457aeb3592d2961c97e6456c09c32ea4620f4,joverzh@gmail.com,2024-03-03 20:45:53+08:00,noreply@github.com,2024-03-03 21:45:53+09:00,"Add the support of the LCS command (#2116)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,redis_string.cc,cc,153,0,153
8a4457aeb3592d2961c97e6456c09c32ea4620f4,joverzh@gmail.com,2024-03-03 20:45:53+08:00,noreply@github.com,2024-03-03 21:45:53+09:00,"Add the support of the LCS command (#2116)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,redis_string.h,h,32,1,33
8a4457aeb3592d2961c97e6456c09c32ea4620f4,joverzh@gmail.com,2024-03-03 20:45:53+08:00,noreply@github.com,2024-03-03 21:45:53+09:00,"Add the support of the LCS command (#2116)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,string_test.cc,cc,51,0,51
8a4457aeb3592d2961c97e6456c09c32ea4620f4,joverzh@gmail.com,2024-03-03 20:45:53+08:00,noreply@github.com,2024-03-03 21:45:53+09:00,"Add the support of the LCS command (#2116)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,strings_test.go,go,104,0,104
1c21a909e2d1d461d2520fd7b3944ec40d7b7282,aleks.raiden@gmail.com,2024-03-06 15:59:40+02:00,noreply@github.com,2024-03-06 21:59:40+08:00,Uniform image update/upgrade in Dockerfile (#2138),unstable,True,False,1,Dockerfile,None,2,2,4
83b3adfdeabec572ec00bb15e93eb6f4000dfb59,aleks.raiden@gmail.com,2024-03-07 03:55:34+02:00,noreply@github.com,2024-03-07 09:55:34+08:00,Fix duplicate flag for build rocksdb (#2139),unstable,True,False,1,rocksdb.cmake,cmake,0,1,1
7d61e94007098f759a630ff9e04c5b44a3f69c3c,85615957+Yangsx-1@users.noreply.github.com,2024-03-09 21:41:21+08:00,noreply@github.com,2024-03-09 22:41:21+09:00,Add support of the command XGROUP DELCONSUMER (#2141),unstable,True,False,4,cmd_stream.cc,cc,11,1,12
7d61e94007098f759a630ff9e04c5b44a3f69c3c,85615957+Yangsx-1@users.noreply.github.com,2024-03-09 21:41:21+08:00,noreply@github.com,2024-03-09 22:41:21+09:00,Add support of the command XGROUP DELCONSUMER (#2141),unstable,True,False,4,redis_stream.cc,cc,71,0,71
7d61e94007098f759a630ff9e04c5b44a3f69c3c,85615957+Yangsx-1@users.noreply.github.com,2024-03-09 21:41:21+08:00,noreply@github.com,2024-03-09 22:41:21+09:00,Add support of the command XGROUP DELCONSUMER (#2141),unstable,True,False,4,redis_stream.h,h,2,0,2
7d61e94007098f759a630ff9e04c5b44a3f69c3c,85615957+Yangsx-1@users.noreply.github.com,2024-03-09 21:41:21+08:00,noreply@github.com,2024-03-09 22:41:21+09:00,Add support of the command XGROUP DELCONSUMER (#2141),unstable,True,False,4,stream_test.go,go,78,0,78
19d7bad87c0b147c96d94b79c1b1ed1e0d894e38,maplewish117@gmail.com,2024-03-10 14:43:25+08:00,noreply@github.com,2024-03-10 14:43:25+08:00,Extract common/port.h and optimize dbstats (#2145),unstable,True,False,4,port.h,h,37,0,37
19d7bad87c0b147c96d94b79c1b1ed1e0d894e38,maplewish117@gmail.com,2024-03-10 14:43:25+08:00,noreply@github.com,2024-03-10 14:43:25+08:00,Extract common/port.h and optimize dbstats (#2145),unstable,True,False,4,storage.cc,cc,9,5,14
19d7bad87c0b147c96d94b79c1b1ed1e0d894e38,maplewish117@gmail.com,2024-03-10 14:43:25+08:00,noreply@github.com,2024-03-10 14:43:25+08:00,Extract common/port.h and optimize dbstats (#2145),unstable,True,False,4,storage.h,h,8,7,15
19d7bad87c0b147c96d94b79c1b1ed1e0d894e38,maplewish117@gmail.com,2024-03-10 14:43:25+08:00,noreply@github.com,2024-03-10 14:43:25+08:00,Extract common/port.h and optimize dbstats (#2145),unstable,True,False,4,redis_bitmap.h,h,1,4,5
030d15ef289517226703087997f1394016e63cd8,aleks.raiden@gmail.com,2024-03-10 16:30:41+02:00,noreply@github.com,2024-03-10 22:30:41+08:00,Fix build warnings that local variable 's' will be copied despite being returned by name (#2148),unstable,True,False,1,replication.cc,cc,1,1,2
86d34ac766d2765223594cdb11f03b5eef33345e,hulk.website@gmail.com,2024-03-11 13:54:57+08:00,noreply@github.com,2024-03-11 13:54:57+08:00,"Fix missing fields in HELLO command response (#2150)

Currently, we're missing the 'version', 'role', 'modules' in the HELLO command which may cause compatibility issue in some clients like Java lettuce:

```
Caused by: java.lang.IllegalArgumentException: Version must not be null
	at io.lettuce.core.internal.LettuceAssert.notNull(LettuceAssert.java:71)
	at io.lettuce.core.RedisHandshake$RedisVersion.<init>(RedisHandshake.java:333)
	at io.lettuce.core.RedisHandshake$RedisVersion.of(RedisHandshake.java:362)
	at io.lettuce.core.RedisHandshake.applyPostHandshake(RedisHandshake.java:249)
	at io.lettuce.core.RedisHandshake.lambda$initialize$0(RedisHandshake.java:99)
```

For the HELLO command response refer: https://redis.io/commands/hello/",unstable,True,False,5,cmd_server.cc,cc,8,0,8
86d34ac766d2765223594cdb11f03b5eef33345e,hulk.website@gmail.com,2024-03-11 13:54:57+08:00,noreply@github.com,2024-03-11 13:54:57+08:00,"Fix missing fields in HELLO command response (#2150)

Currently, we're missing the 'version', 'role', 'modules' in the HELLO command which may cause compatibility issue in some clients like Java lettuce:

```
Caused by: java.lang.IllegalArgumentException: Version must not be null
	at io.lettuce.core.internal.LettuceAssert.notNull(LettuceAssert.java:71)
	at io.lettuce.core.RedisHandshake$RedisVersion.<init>(RedisHandshake.java:333)
	at io.lettuce.core.RedisHandshake$RedisVersion.of(RedisHandshake.java:362)
	at io.lettuce.core.RedisHandshake.applyPostHandshake(RedisHandshake.java:249)
	at io.lettuce.core.RedisHandshake.lambda$initialize$0(RedisHandshake.java:99)
```

For the HELLO command response refer: https://redis.io/commands/hello/",unstable,True,False,5,server.cc,cc,0,2,2
86d34ac766d2765223594cdb11f03b5eef33345e,hulk.website@gmail.com,2024-03-11 13:54:57+08:00,noreply@github.com,2024-03-11 13:54:57+08:00,"Fix missing fields in HELLO command response (#2150)

Currently, we're missing the 'version', 'role', 'modules' in the HELLO command which may cause compatibility issue in some clients like Java lettuce:

```
Caused by: java.lang.IllegalArgumentException: Version must not be null
	at io.lettuce.core.internal.LettuceAssert.notNull(LettuceAssert.java:71)
	at io.lettuce.core.RedisHandshake$RedisVersion.<init>(RedisHandshake.java:333)
	at io.lettuce.core.RedisHandshake$RedisVersion.of(RedisHandshake.java:362)
	at io.lettuce.core.RedisHandshake.applyPostHandshake(RedisHandshake.java:249)
	at io.lettuce.core.RedisHandshake.lambda$initialize$0(RedisHandshake.java:99)
```

For the HELLO command response refer: https://redis.io/commands/hello/",unstable,True,False,5,server.h,h,2,0,2
86d34ac766d2765223594cdb11f03b5eef33345e,hulk.website@gmail.com,2024-03-11 13:54:57+08:00,noreply@github.com,2024-03-11 13:54:57+08:00,"Fix missing fields in HELLO command response (#2150)

Currently, we're missing the 'version', 'role', 'modules' in the HELLO command which may cause compatibility issue in some clients like Java lettuce:

```
Caused by: java.lang.IllegalArgumentException: Version must not be null
	at io.lettuce.core.internal.LettuceAssert.notNull(LettuceAssert.java:71)
	at io.lettuce.core.RedisHandshake$RedisVersion.<init>(RedisHandshake.java:333)
	at io.lettuce.core.RedisHandshake$RedisVersion.of(RedisHandshake.java:362)
	at io.lettuce.core.RedisHandshake.applyPostHandshake(RedisHandshake.java:249)
	at io.lettuce.core.RedisHandshake.lambda$initialize$0(RedisHandshake.java:99)
```

For the HELLO command response refer: https://redis.io/commands/hello/",unstable,True,False,5,hello_test.go,go,16,12,28
86d34ac766d2765223594cdb11f03b5eef33345e,hulk.website@gmail.com,2024-03-11 13:54:57+08:00,noreply@github.com,2024-03-11 13:54:57+08:00,"Fix missing fields in HELLO command response (#2150)

Currently, we're missing the 'version', 'role', 'modules' in the HELLO command which may cause compatibility issue in some clients like Java lettuce:

```
Caused by: java.lang.IllegalArgumentException: Version must not be null
	at io.lettuce.core.internal.LettuceAssert.notNull(LettuceAssert.java:71)
	at io.lettuce.core.RedisHandshake$RedisVersion.<init>(RedisHandshake.java:333)
	at io.lettuce.core.RedisHandshake$RedisVersion.of(RedisHandshake.java:362)
	at io.lettuce.core.RedisHandshake.applyPostHandshake(RedisHandshake.java:249)
	at io.lettuce.core.RedisHandshake.lambda$initialize$0(RedisHandshake.java:99)
```

For the HELLO command response refer: https://redis.io/commands/hello/",unstable,True,False,5,protocol_test.go,go,16,2,18
2c07b1607d7a5e60eaa7059773f522d4d7865e30,85615957+Yangsx-1@users.noreply.github.com,2024-03-11 20:18:02+08:00,noreply@github.com,2024-03-11 20:18:02+08:00,Fix XREADGROUP command didn't fetch the latest metadata after creating a consumer (#2153),unstable,True,False,2,redis_stream.cc,cc,1,0,1
2c07b1607d7a5e60eaa7059773f522d4d7865e30,85615957+Yangsx-1@users.noreply.github.com,2024-03-11 20:18:02+08:00,noreply@github.com,2024-03-11 20:18:02+08:00,Fix XREADGROUP command didn't fetch the latest metadata after creating a consumer (#2153),unstable,True,False,2,stream_test.go,go,24,0,24
1f3913f7942e370581a6c7ca7f9c99cdb7f58479,twice.mliu@gmail.com,2024-03-11 22:18:54+09:00,noreply@github.com,2024-03-11 22:18:54+09:00,"Add macos arm64 runner to actions workflow (#2155)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,kvrocks.yaml,yaml,4,1,5
fc5d32f0cd6d544bdf817c87b9cb9e7ec9a6a0e7,zakelly.lan@gmail.com,2024-03-12 23:28:16+08:00,noreply@github.com,2024-03-12 23:28:16+08:00,"Update the redis-py version in README of kvrocks2redis tests (#2160)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,1,README.md,md,1,1,2
2465803000fe8799f2f91799592cef04f8a9d057,hulk.website@gmail.com,2024-03-13 11:19:01+08:00,noreply@github.com,2024-03-13 11:19:01+08:00,"Try to workaround the broken ubuntu image (#2161)

refer https://github.com/apache/kvrocks/pull/2159#issuecomment-1991711351

This PR is a temporary workaround for actions/runner-images#9491 to avoid
blocking the PR merged. Can revert the change once the image issue is resolved.",unstable,True,False,1,kvrocks.yaml,yaml,5,0,5
ca1d5e0cd8f7ada18d021b6291ffdc4bd03a5e79,hulk.website@gmail.com,2024-03-13 13:10:28+08:00,noreply@github.com,2024-03-13 13:10:28+08:00,Use the PUSH type in PubSub output if the RESP3 was enabled (#2159),unstable,True,False,4,cmd_pubsub.cc,cc,1,1,2
ca1d5e0cd8f7ada18d021b6291ffdc4bd03a5e79,hulk.website@gmail.com,2024-03-13 13:10:28+08:00,noreply@github.com,2024-03-13 13:10:28+08:00,Use the PUSH type in PubSub output if the RESP3 was enabled (#2159),unstable,True,False,4,redis_connection.h,h,3,0,3
ca1d5e0cd8f7ada18d021b6291ffdc4bd03a5e79,hulk.website@gmail.com,2024-03-13 13:10:28+08:00,noreply@github.com,2024-03-13 13:10:28+08:00,Use the PUSH type in PubSub output if the RESP3 was enabled (#2159),unstable,True,False,4,protocol_test.go,go,27,25,52
ca1d5e0cd8f7ada18d021b6291ffdc4bd03a5e79,hulk.website@gmail.com,2024-03-13 13:10:28+08:00,noreply@github.com,2024-03-13 13:10:28+08:00,Use the PUSH type in PubSub output if the RESP3 was enabled (#2159),unstable,True,False,4,pubsub_test.go,go,12,2,14
d0f435491862b3dd201c3f8ce7c194e3a33f1ffc,85615957+Yangsx-1@users.noreply.github.com,2024-03-15 08:45:46+08:00,noreply@github.com,2024-03-15 08:45:46+08:00,Add support of the XACK command (#2169),unstable,True,False,4,cmd_stream.cc,cc,37,1,38
d0f435491862b3dd201c3f8ce7c194e3a33f1ffc,85615957+Yangsx-1@users.noreply.github.com,2024-03-15 08:45:46+08:00,noreply@github.com,2024-03-15 08:45:46+08:00,Add support of the XACK command (#2169),unstable,True,False,4,redis_stream.cc,cc,42,0,42
d0f435491862b3dd201c3f8ce7c194e3a33f1ffc,85615957+Yangsx-1@users.noreply.github.com,2024-03-15 08:45:46+08:00,noreply@github.com,2024-03-15 08:45:46+08:00,Add support of the XACK command (#2169),unstable,True,False,4,redis_stream.h,h,2,0,2
d0f435491862b3dd201c3f8ce7c194e3a33f1ffc,85615957+Yangsx-1@users.noreply.github.com,2024-03-15 08:45:46+08:00,noreply@github.com,2024-03-15 08:45:46+08:00,Add support of the XACK command (#2169),unstable,True,False,4,stream_test.go,go,54,0,54
787555ea756884a981f96896a66e117ecba8db3b,68083940+Beihao-Zhou@users.noreply.github.com,2024-03-15 21:46:44-04:00,noreply@github.com,2024-03-16 09:46:44+08:00,Add support of the compression level option (#2171),unstable,True,False,5,kvrocks.conf,conf,23,0,23
787555ea756884a981f96896a66e117ecba8db3b,68083940+Beihao-Zhou@users.noreply.github.com,2024-03-15 21:46:44-04:00,noreply@github.com,2024-03-16 09:46:44+08:00,Add support of the compression level option (#2171),unstable,True,False,5,config.cc,cc,1,0,1
787555ea756884a981f96896a66e117ecba8db3b,68083940+Beihao-Zhou@users.noreply.github.com,2024-03-15 21:46:44-04:00,noreply@github.com,2024-03-16 09:46:44+08:00,Add support of the compression level option (#2171),unstable,True,False,5,config.h,h,1,0,1
787555ea756884a981f96896a66e117ecba8db3b,68083940+Beihao-Zhou@users.noreply.github.com,2024-03-15 21:46:44-04:00,noreply@github.com,2024-03-16 09:46:44+08:00,Add support of the compression level option (#2171),unstable,True,False,5,storage.cc,cc,1,0,1
787555ea756884a981f96896a66e117ecba8db3b,68083940+Beihao-Zhou@users.noreply.github.com,2024-03-15 21:46:44-04:00,noreply@github.com,2024-03-16 09:46:44+08:00,Add support of the compression level option (#2171),unstable,True,False,5,config_test.cc,cc,1,0,1
20e01c454bbebbefe312d5906bd147a70a058cd0,liuyuhui002@gmail.com,2024-03-17 21:54:37+08:00,noreply@github.com,2024-03-17 21:54:37+08:00,"Add support of READONLY and READWRITE (#2173)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,4,cluster.cc,cc,2,1,3
20e01c454bbebbefe312d5906bd147a70a058cd0,liuyuhui002@gmail.com,2024-03-17 21:54:37+08:00,noreply@github.com,2024-03-17 21:54:37+08:00,"Add support of READONLY and READWRITE (#2173)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,4,cmd_cluster.cc,cc,22,2,24
20e01c454bbebbefe312d5906bd147a70a058cd0,liuyuhui002@gmail.com,2024-03-17 21:54:37+08:00,noreply@github.com,2024-03-17 21:54:37+08:00,"Add support of READONLY and READWRITE (#2173)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,4,redis_connection.h,h,1,0,1
20e01c454bbebbefe312d5906bd147a70a058cd0,liuyuhui002@gmail.com,2024-03-17 21:54:37+08:00,noreply@github.com,2024-03-17 21:54:37+08:00,"Add support of READONLY and READWRITE (#2173)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,4,cluster_test.go,go,19,0,19
9d83653f5bbed5b13610697a357c0fe0870f9c4a,twice.mliu@gmail.com,2024-03-18 21:06:41+09:00,noreply@github.com,2024-03-18 21:06:41+09:00,Support value setting for nonexistent paths in JSON.SET (#2178),unstable,True,False,2,json.h,h,29,3,32
9d83653f5bbed5b13610697a357c0fe0870f9c4a,twice.mliu@gmail.com,2024-03-18 21:06:41+09:00,noreply@github.com,2024-03-18 21:06:41+09:00,Support value setting for nonexistent paths in JSON.SET (#2178),unstable,True,False,2,json_test.cc,cc,8,0,8
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,indexer.cc,cc,1,1,2
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,disk_stats.cc,cc,7,7,14
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_db.cc,cc,15,17,32
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_db.h,h,41,5,46
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_metadata.h,h,1,1,2
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_bitmap.cc,cc,21,15,36
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_bitmap.h,h,2,1,3
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_bloom_chain.cc,cc,7,6,13
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_bloom_chain.h,h,2,1,3
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_geo.cc,cc,1,1,2
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_hash.cc,cc,16,16,32
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_hash.h,h,1,1,2
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_json.cc,cc,2,2,4
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_list.cc,cc,17,17,34
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_list.h,h,1,1,2
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_set.cc,cc,12,10,22
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_set.h,h,1,1,2
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_sortedint.cc,cc,12,11,23
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_sortedint.h,h,1,1,2
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_stream.cc,cc,20,19,39
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_stream.h,h,1,1,2
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_string.cc,cc,1,1,2
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_zset.cc,cc,19,19,38
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,redis_zset.h,h,1,1,2
9879fa325531ecabf5a275064b15530b6cea3f2d,maplewish117@gmail.com,2024-03-19 15:27:00+08:00,noreply@github.com,2024-03-19 15:27:00+08:00,"Add snapshot option for Geting Metadata (#2174)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,25,metadata_test.cc,cc,1,1,2
b5207f307a7c61814a4806667be6a3f9d4b85243,twice.mliu@gmail.com,2024-03-20 15:01:45+09:00,noreply@github.com,2024-03-20 15:01:45+09:00,Initialize the data structure of KQIR (#2183),unstable,True,False,1,ir.h,h,106,0,106
1be51b1287c0c028660750c5ce49ab523f816db4,sheharyaar48@gmail.com,2024-03-20 19:34:47+05:30,noreply@github.com,2024-03-20 22:04:47+08:00,"Add BIT support to BITPOS (#2170)

Signed-off-by: Mohammad Shehar Yaar Tausif <sheharyaar48@gmail.com>
Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,7,cmd_bit.cc,cc,7,1,8
1be51b1287c0c028660750c5ce49ab523f816db4,sheharyaar48@gmail.com,2024-03-20 19:34:47+05:30,noreply@github.com,2024-03-20 22:04:47+08:00,"Add BIT support to BITPOS (#2170)

Signed-off-by: Mohammad Shehar Yaar Tausif <sheharyaar48@gmail.com>
Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,7,redis_bitmap.cc,cc,65,14,79
1be51b1287c0c028660750c5ce49ab523f816db4,sheharyaar48@gmail.com,2024-03-20 19:34:47+05:30,noreply@github.com,2024-03-20 22:04:47+08:00,"Add BIT support to BITPOS (#2170)

Signed-off-by: Mohammad Shehar Yaar Tausif <sheharyaar48@gmail.com>
Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,7,redis_bitmap.h,h,2,1,3
1be51b1287c0c028660750c5ce49ab523f816db4,sheharyaar48@gmail.com,2024-03-20 19:34:47+05:30,noreply@github.com,2024-03-20 22:04:47+08:00,"Add BIT support to BITPOS (#2170)

Signed-off-by: Mohammad Shehar Yaar Tausif <sheharyaar48@gmail.com>
Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,7,redis_bitmap_string.cc,cc,64,15,79
1be51b1287c0c028660750c5ce49ab523f816db4,sheharyaar48@gmail.com,2024-03-20 19:34:47+05:30,noreply@github.com,2024-03-20 22:04:47+08:00,"Add BIT support to BITPOS (#2170)

Signed-off-by: Mohammad Shehar Yaar Tausif <sheharyaar48@gmail.com>
Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,7,redis_bitmap_string.h,h,1,1,2
1be51b1287c0c028660750c5ce49ab523f816db4,sheharyaar48@gmail.com,2024-03-20 19:34:47+05:30,noreply@github.com,2024-03-20 22:04:47+08:00,"Add BIT support to BITPOS (#2170)

Signed-off-by: Mohammad Shehar Yaar Tausif <sheharyaar48@gmail.com>
Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,7,bitmap_test.cc,cc,11,11,22
1be51b1287c0c028660750c5ce49ab523f816db4,sheharyaar48@gmail.com,2024-03-20 19:34:47+05:30,noreply@github.com,2024-03-20 22:04:47+08:00,"Add BIT support to BITPOS (#2170)

Signed-off-by: Mohammad Shehar Yaar Tausif <sheharyaar48@gmail.com>
Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,7,bitmap_test.go,go,190,0,190
a9259a79f5b57501959a072e1a5629fd524d9f10,hulk.website@gmail.com,2024-03-21 12:24:23+08:00,noreply@github.com,2024-03-21 12:24:23+08:00,Fix the pidfile and backup_dir will be rewritten even though they weren't modified (#2186),unstable,True,False,5,main.cc,cc,2,2,4
a9259a79f5b57501959a072e1a5629fd524d9f10,hulk.website@gmail.com,2024-03-21 12:24:23+08:00,noreply@github.com,2024-03-21 12:24:23+08:00,Fix the pidfile and backup_dir will be rewritten even though they weren't modified (#2186),unstable,True,False,5,config.cc,cc,10,7,17
a9259a79f5b57501959a072e1a5629fd524d9f10,hulk.website@gmail.com,2024-03-21 12:24:23+08:00,noreply@github.com,2024-03-21 12:24:23+08:00,Fix the pidfile and backup_dir will be rewritten even though they weren't modified (#2186),unstable,True,False,5,config.h,h,2,4,6
a9259a79f5b57501959a072e1a5629fd524d9f10,hulk.website@gmail.com,2024-03-21 12:24:23+08:00,noreply@github.com,2024-03-21 12:24:23+08:00,Fix the pidfile and backup_dir will be rewritten even though they weren't modified (#2186),unstable,True,False,5,storage.cc,cc,2,2,4
a9259a79f5b57501959a072e1a5629fd524d9f10,hulk.website@gmail.com,2024-03-21 12:24:23+08:00,noreply@github.com,2024-03-21 12:24:23+08:00,Fix the pidfile and backup_dir will be rewritten even though they weren't modified (#2186),unstable,True,False,5,config_test.cc,cc,2,0,2
a93fe12cbefad92fc394593e249e396561eb366d,binloveplay1314@qq.com,2024-03-21 23:09:26+08:00,noreply@github.com,2024-03-21 23:09:26+08:00,"Revert broken ubuntu image temporary fix (#2189)

Now actions/runner-images#9491 have been fixed and closed.
This revert is #2161. I've tested and everything works fine.",unstable,True,False,1,kvrocks.yaml,yaml,0,5,5
54d00847ad6a7a5c3bed0f13f94f298557a36e15,twice.mliu@gmail.com,2024-03-23 13:52:44+09:00,noreply@github.com,2024-03-23 13:52:44+09:00,Add SQL SELECT parser via PEGTL for search module (#2184),unstable,True,False,12,kvrocks.yaml,yaml,3,2,5
54d00847ad6a7a5c3bed0f13f94f298557a36e15,twice.mliu@gmail.com,2024-03-23 13:52:44+09:00,noreply@github.com,2024-03-23 13:52:44+09:00,Add SQL SELECT parser via PEGTL for search module (#2184),unstable,True,False,12,CMakeLists.txt,txt,2,0,2
54d00847ad6a7a5c3bed0f13f94f298557a36e15,twice.mliu@gmail.com,2024-03-23 13:52:44+09:00,noreply@github.com,2024-03-23 13:52:44+09:00,Add SQL SELECT parser via PEGTL for search module (#2184),unstable,True,False,12,NOTICE,None,1,0,1
54d00847ad6a7a5c3bed0f13f94f298557a36e15,twice.mliu@gmail.com,2024-03-23 13:52:44+09:00,noreply@github.com,2024-03-23 13:52:44+09:00,Add SQL SELECT parser via PEGTL for search module (#2184),unstable,True,False,12,pegtl.cmake,cmake,27,0,27
54d00847ad6a7a5c3bed0f13f94f298557a36e15,twice.mliu@gmail.com,2024-03-23 13:52:44+09:00,noreply@github.com,2024-03-23 13:52:44+09:00,Add SQL SELECT parser via PEGTL for search module (#2184),unstable,True,False,12,utils.cmake,cmake,7,0,7
54d00847ad6a7a5c3bed0f13f94f298557a36e15,twice.mliu@gmail.com,2024-03-23 13:52:44+09:00,noreply@github.com,2024-03-23 13:52:44+09:00,Add SQL SELECT parser via PEGTL for search module (#2184),unstable,True,False,12,LICENSE-pegtl.txt,txt,21,0,21
54d00847ad6a7a5c3bed0f13f94f298557a36e15,twice.mliu@gmail.com,2024-03-23 13:52:44+09:00,noreply@github.com,2024-03-23 13:52:44+09:00,Add SQL SELECT parser via PEGTL for search module (#2184),unstable,True,False,12,string_util.cc,cc,6,0,6
54d00847ad6a7a5c3bed0f13f94f298557a36e15,twice.mliu@gmail.com,2024-03-23 13:52:44+09:00,noreply@github.com,2024-03-23 13:52:44+09:00,Add SQL SELECT parser via PEGTL for search module (#2184),unstable,True,False,12,string_util.h,h,16,0,16
54d00847ad6a7a5c3bed0f13f94f298557a36e15,twice.mliu@gmail.com,2024-03-23 13:52:44+09:00,noreply@github.com,2024-03-23 13:52:44+09:00,Add SQL SELECT parser via PEGTL for search module (#2184),unstable,True,False,12,ir.h,h,191,35,226
54d00847ad6a7a5c3bed0f13f94f298557a36e15,twice.mliu@gmail.com,2024-03-23 13:52:44+09:00,noreply@github.com,2024-03-23 13:52:44+09:00,Add SQL SELECT parser via PEGTL for search module (#2184),unstable,True,False,12,sql_parser.h,h,115,0,115
54d00847ad6a7a5c3bed0f13f94f298557a36e15,twice.mliu@gmail.com,2024-03-23 13:52:44+09:00,noreply@github.com,2024-03-23 13:52:44+09:00,Add SQL SELECT parser via PEGTL for search module (#2184),unstable,True,False,12,sql_transformer.h,h,242,0,242
54d00847ad6a7a5c3bed0f13f94f298557a36e15,twice.mliu@gmail.com,2024-03-23 13:52:44+09:00,noreply@github.com,2024-03-23 13:52:44+09:00,Add SQL SELECT parser via PEGTL for search module (#2184),unstable,True,False,12,sql_parser_test.cc,cc,135,0,135
03a332b621013cf1d1b8cdfa1f83af6406a3a192,twice.mliu@gmail.com,2024-03-23 17:49:21+09:00,noreply@github.com,2024-03-23 17:49:21+09:00,Add Redis query parser via PEGTL for search module (#2192),unstable,True,False,8,common_parser.h,h,56,0,56
03a332b621013cf1d1b8cdfa1f83af6406a3a192,twice.mliu@gmail.com,2024-03-23 17:49:21+09:00,noreply@github.com,2024-03-23 17:49:21+09:00,Add Redis query parser via PEGTL for search module (#2192),unstable,True,False,8,common_transformer.h,h,91,0,91
03a332b621013cf1d1b8cdfa1f83af6406a3a192,twice.mliu@gmail.com,2024-03-23 17:49:21+09:00,noreply@github.com,2024-03-23 17:49:21+09:00,Add Redis query parser via PEGTL for search module (#2192),unstable,True,False,8,redis_query_parser.h,h,67,0,67
03a332b621013cf1d1b8cdfa1f83af6406a3a192,twice.mliu@gmail.com,2024-03-23 17:49:21+09:00,noreply@github.com,2024-03-23 17:49:21+09:00,Add Redis query parser via PEGTL for search module (#2192),unstable,True,False,8,redis_query_transformer.h,h,159,0,159
03a332b621013cf1d1b8cdfa1f83af6406a3a192,twice.mliu@gmail.com,2024-03-23 17:49:21+09:00,noreply@github.com,2024-03-23 17:49:21+09:00,Add Redis query parser via PEGTL for search module (#2192),unstable,True,False,8,sql_parser.h,h,6,30,36
03a332b621013cf1d1b8cdfa1f83af6406a3a192,twice.mliu@gmail.com,2024-03-23 17:49:21+09:00,noreply@github.com,2024-03-23 17:49:21+09:00,Add Redis query parser via PEGTL for search module (#2192),unstable,True,False,8,sql_transformer.h,h,6,62,68
03a332b621013cf1d1b8cdfa1f83af6406a3a192,twice.mliu@gmail.com,2024-03-23 17:49:21+09:00,noreply@github.com,2024-03-23 17:49:21+09:00,Add Redis query parser via PEGTL for search module (#2192),unstable,True,False,8,redis_query_parser_test.cc,cc,92,0,92
03a332b621013cf1d1b8cdfa1f83af6406a3a192,twice.mliu@gmail.com,2024-03-23 17:49:21+09:00,noreply@github.com,2024-03-23 17:49:21+09:00,Add Redis query parser via PEGTL for search module (#2192),unstable,True,False,8,sql_parser_test.cc,cc,0,1,1
c4956d6f52b4d4ea91e19b9efb8d8f0b4788f614,hulk.website@gmail.com,2024-03-24 10:15:19+08:00,noreply@github.com,2024-03-24 10:15:19+08:00,Allow to retrieve the cluster node id via the CLUSTERX command (#2194),unstable,True,False,2,cmd_cluster.cc,cc,4,2,6
c4956d6f52b4d4ea91e19b9efb8d8f0b4788f614,hulk.website@gmail.com,2024-03-24 10:15:19+08:00,noreply@github.com,2024-03-24 10:15:19+08:00,Allow to retrieve the cluster node id via the CLUSTERX command (#2194),unstable,True,False,2,cluster_test.go,go,9,0,9
3938a951b8a01ce6eb3bfcb0cbb5ba4ce2e17f2a,hulk.website@gmail.com,2024-03-25 08:47:10+08:00,noreply@github.com,2024-03-25 08:47:10+08:00,"Fix missing migrating/importing information in the CLUSTER NODES command (#2196)

In Redis, it will add the migrating/importing slot section
for the source and target node. For the migrating source node,
it will contain the below section:

```
[{slot_id}->-{target_node_id}]
```

And for the importing node, it will add:

```
[{slot_id}-<-{source_node_id}]
```",unstable,True,False,8,cluster.cc,cc,35,21,56
3938a951b8a01ce6eb3bfcb0cbb5ba4ce2e17f2a,hulk.website@gmail.com,2024-03-25 08:47:10+08:00,noreply@github.com,2024-03-25 08:47:10+08:00,"Fix missing migrating/importing information in the CLUSTER NODES command (#2196)

In Redis, it will add the migrating/importing slot section
for the source and target node. For the migrating source node,
it will contain the below section:

```
[{slot_id}->-{target_node_id}]
```

And for the importing node, it will add:

```
[{slot_id}-<-{source_node_id}]
```",unstable,True,False,8,cluster.h,h,1,0,1
3938a951b8a01ce6eb3bfcb0cbb5ba4ce2e17f2a,hulk.website@gmail.com,2024-03-25 08:47:10+08:00,noreply@github.com,2024-03-25 08:47:10+08:00,"Fix missing migrating/importing information in the CLUSTER NODES command (#2196)

In Redis, it will add the migrating/importing slot section
for the source and target node. For the migrating source node,
it will contain the below section:

```
[{slot_id}->-{target_node_id}]
```

And for the importing node, it will add:

```
[{slot_id}-<-{source_node_id}]
```",unstable,True,False,8,slot_import.cc,cc,21,37,58
3938a951b8a01ce6eb3bfcb0cbb5ba4ce2e17f2a,hulk.website@gmail.com,2024-03-25 08:47:10+08:00,noreply@github.com,2024-03-25 08:47:10+08:00,"Fix missing migrating/importing information in the CLUSTER NODES command (#2196)

In Redis, it will add the migrating/importing slot section
for the source and target node. For the migrating source node,
it will contain the below section:

```
[{slot_id}->-{target_node_id}]
```

And for the importing node, it will add:

```
[{slot_id}-<-{source_node_id}]
```",unstable,True,False,8,slot_import.h,h,4,5,9
3938a951b8a01ce6eb3bfcb0cbb5ba4ce2e17f2a,hulk.website@gmail.com,2024-03-25 08:47:10+08:00,noreply@github.com,2024-03-25 08:47:10+08:00,"Fix missing migrating/importing information in the CLUSTER NODES command (#2196)

In Redis, it will add the migrating/importing slot section
for the source and target node. For the migrating source node,
it will contain the below section:

```
[{slot_id}->-{target_node_id}]
```

And for the importing node, it will add:

```
[{slot_id}-<-{source_node_id}]
```",unstable,True,False,8,slot_migrate.h,h,1,0,1
3938a951b8a01ce6eb3bfcb0cbb5ba4ce2e17f2a,hulk.website@gmail.com,2024-03-25 08:47:10+08:00,noreply@github.com,2024-03-25 08:47:10+08:00,"Fix missing migrating/importing information in the CLUSTER NODES command (#2196)

In Redis, it will add the migrating/importing slot section
for the source and target node. For the migrating source node,
it will contain the below section:

```
[{slot_id}->-{target_node_id}]
```

And for the importing node, it will add:

```
[{slot_id}-<-{source_node_id}]
```",unstable,True,False,8,cluster_test.cc,cc,21,6,27
3938a951b8a01ce6eb3bfcb0cbb5ba4ce2e17f2a,hulk.website@gmail.com,2024-03-25 08:47:10+08:00,noreply@github.com,2024-03-25 08:47:10+08:00,"Fix missing migrating/importing information in the CLUSTER NODES command (#2196)

In Redis, it will add the migrating/importing slot section
for the source and target node. For the migrating source node,
it will contain the below section:

```
[{slot_id}->-{target_node_id}]
```

And for the importing node, it will add:

```
[{slot_id}-<-{source_node_id}]
```",unstable,True,False,8,slotimport_test.go,go,6,0,6
3938a951b8a01ce6eb3bfcb0cbb5ba4ce2e17f2a,hulk.website@gmail.com,2024-03-25 08:47:10+08:00,noreply@github.com,2024-03-25 08:47:10+08:00,"Fix missing migrating/importing information in the CLUSTER NODES command (#2196)

In Redis, it will add the migrating/importing slot section
for the source and target node. For the migrating source node,
it will contain the below section:

```
[{slot_id}->-{target_node_id}]
```

And for the importing node, it will add:

```
[{slot_id}-<-{source_node_id}]
```",unstable,True,False,8,slotmigrate_test.go,go,4,0,4
62631223abc0fc4a462380bdb38172129dc6180b,lloydzhou@users.noreply.github.com,2024-03-27 09:53:23+08:00,noreply@github.com,2024-03-27 09:53:23+08:00,Fix wrongly append the ERR prefix in no script error (#2201),unstable,True,False,1,scripting.cc,cc,3,1,4
ef1d72c0ded4f6e61b3de5f64f20a918c9ec8224,aleks.raiden@gmail.com,2024-03-28 03:39:38+02:00,noreply@github.com,2024-03-28 09:39:38+08:00,Bump zstd to v1.5.6 (#2204),unstable,True,False,1,zstd.cmake,cmake,2,2,4
7e063030519b1b5a5367a5921a0a5ee2b389d0b7,twice.mliu@gmail.com,2024-03-29 18:22:47+09:00,noreply@github.com,2024-03-29 18:22:47+09:00,Add support for dumping DOT graphs from KQIR (#2205),unstable,True,False,7,type_util.h,h,8,0,8
7e063030519b1b5a5367a5921a0a5ee2b389d0b7,twice.mliu@gmail.com,2024-03-29 18:22:47+09:00,noreply@github.com,2024-03-29 18:22:47+09:00,Add support for dumping DOT graphs from KQIR (#2205),unstable,True,False,7,ir.h,h,74,5,79
7e063030519b1b5a5367a5921a0a5ee2b389d0b7,twice.mliu@gmail.com,2024-03-29 18:22:47+09:00,noreply@github.com,2024-03-29 18:22:47+09:00,Add support for dumping DOT graphs from KQIR (#2205),unstable,True,False,7,ir_dot_dumper.h,h,54,0,54
7e063030519b1b5a5367a5921a0a5ee2b389d0b7,twice.mliu@gmail.com,2024-03-29 18:22:47+09:00,noreply@github.com,2024-03-29 18:22:47+09:00,Add support for dumping DOT graphs from KQIR (#2205),unstable,True,False,7,ir_iterator.h,h,92,0,92
7e063030519b1b5a5367a5921a0a5ee2b389d0b7,twice.mliu@gmail.com,2024-03-29 18:22:47+09:00,noreply@github.com,2024-03-29 18:22:47+09:00,Add support for dumping DOT graphs from KQIR (#2205),unstable,True,False,7,redis_query_transformer.h,h,15,15,30
7e063030519b1b5a5367a5921a0a5ee2b389d0b7,twice.mliu@gmail.com,2024-03-29 18:22:47+09:00,noreply@github.com,2024-03-29 18:22:47+09:00,Add support for dumping DOT graphs from KQIR (#2205),unstable,True,False,7,sql_transformer.h,h,13,12,25
7e063030519b1b5a5367a5921a0a5ee2b389d0b7,twice.mliu@gmail.com,2024-03-29 18:22:47+09:00,noreply@github.com,2024-03-29 18:22:47+09:00,Add support for dumping DOT graphs from KQIR (#2205),unstable,True,False,7,ir_dot_dumper_test.cc,cc,55,0,55
1af42d7b2ea8244182127c3f87522701bc5fc76b,twice.mliu@gmail.com,2024-03-29 23:45:15+09:00,noreply@github.com,2024-03-29 23:45:15+09:00,Add semantics checker for KQIR (#2207),unstable,True,False,3,ir_dot_dumper.h,h,2,0,2
1af42d7b2ea8244182127c3f87522701bc5fc76b,twice.mliu@gmail.com,2024-03-29 23:45:15+09:00,noreply@github.com,2024-03-29 23:45:15+09:00,Add semantics checker for KQIR (#2207),unstable,True,False,3,ir_sema_checker.h,h,145,0,145
1af42d7b2ea8244182127c3f87522701bc5fc76b,twice.mliu@gmail.com,2024-03-29 23:45:15+09:00,noreply@github.com,2024-03-29 23:45:15+09:00,Add semantics checker for KQIR (#2207),unstable,True,False,3,ir_sema_checker_test.cc,cc,82,0,82
a59eac91048700e8df2c398b6603ffaaf5ed0406,470623352@qq.com,2024-03-30 10:01:30+08:00,noreply@github.com,2024-03-30 10:01:30+08:00,"Ignore case on the dbsize cmd (#2206)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Myth <caipengbo@outlook.com>",unstable,True,False,1,cmd_server.cc,cc,1,1,2
ded67cae86f990296614a3cde65b18535c469e19,twice.mliu@gmail.com,2024-03-30 21:26:15+09:00,noreply@github.com,2024-03-30 21:26:15+09:00,Add Docker Hub link to README (#2208),unstable,True,False,1,README.md,md,2,0,2
bb665f6fc2de7cb1215240866d48e92adfed43b1,hulk.website@gmail.com,2024-03-30 22:58:10+08:00,noreply@github.com,2024-03-30 22:58:10+08:00,Fix should forbid importing the slot which belongs to itself in cluster mode (#2209),unstable,True,False,3,cluster.cc,cc,4,0,4
bb665f6fc2de7cb1215240866d48e92adfed43b1,hulk.website@gmail.com,2024-03-30 22:58:10+08:00,noreply@github.com,2024-03-30 22:58:10+08:00,Fix should forbid importing the slot which belongs to itself in cluster mode (#2209),unstable,True,False,3,slot_import.cc,cc,4,0,4
bb665f6fc2de7cb1215240866d48e92adfed43b1,hulk.website@gmail.com,2024-03-30 22:58:10+08:00,noreply@github.com,2024-03-30 22:58:10+08:00,Fix should forbid importing the slot which belongs to itself in cluster mode (#2209),unstable,True,False,3,slotimport_test.go,go,60,36,96
35c9e937341a82e494be678bc56e518ab71fff2e,twice.mliu@gmail.com,2024-03-31 18:25:01+09:00,noreply@github.com,2024-03-31 18:25:01+09:00,Add IR visitor and boolean simplification pass (#2211),unstable,True,False,5,kvrocks.yaml,yaml,2,2,4
35c9e937341a82e494be678bc56e518ab71fff2e,twice.mliu@gmail.com,2024-03-31 18:25:01+09:00,noreply@github.com,2024-03-31 18:25:01+09:00,Add IR visitor and boolean simplification pass (#2211),unstable,True,False,5,ir.h,h,6,5,11
35c9e937341a82e494be678bc56e518ab71fff2e,twice.mliu@gmail.com,2024-03-31 18:25:01+09:00,noreply@github.com,2024-03-31 18:25:01+09:00,Add IR visitor and boolean simplification pass (#2211),unstable,True,False,5,ir_pass.h,h,144,0,144
35c9e937341a82e494be678bc56e518ab71fff2e,twice.mliu@gmail.com,2024-03-31 18:25:01+09:00,noreply@github.com,2024-03-31 18:25:01+09:00,Add IR visitor and boolean simplification pass (#2211),unstable,True,False,5,simplify_boolean.h,h,92,0,92
35c9e937341a82e494be678bc56e518ab71fff2e,twice.mliu@gmail.com,2024-03-31 18:25:01+09:00,noreply@github.com,2024-03-31 18:25:01+09:00,Add IR visitor and boolean simplification pass (#2211),unstable,True,False,5,ir_pass_test.cc,cc,64,0,64
5c8b6cbab40a6d01fea7087fb0220a1cc8caa9e3,hulk.website@gmail.com,2024-04-01 11:55:36+08:00,noreply@github.com,2024-04-01 11:55:36+08:00,Add support of the CLUSTER RESET command (#2210),unstable,True,False,6,cluster.cc,cc,29,1,30
5c8b6cbab40a6d01fea7087fb0220a1cc8caa9e3,hulk.website@gmail.com,2024-04-01 11:55:36+08:00,noreply@github.com,2024-04-01 11:55:36+08:00,Add support of the CLUSTER RESET command (#2210),unstable,True,False,6,cluster.h,h,1,0,1
5c8b6cbab40a6d01fea7087fb0220a1cc8caa9e3,hulk.website@gmail.com,2024-04-01 11:55:36+08:00,noreply@github.com,2024-04-01 11:55:36+08:00,Add support of the CLUSTER RESET command (#2210),unstable,True,False,6,cmd_cluster.cc,cc,10,2,12
5c8b6cbab40a6d01fea7087fb0220a1cc8caa9e3,hulk.website@gmail.com,2024-04-01 11:55:36+08:00,noreply@github.com,2024-04-01 11:55:36+08:00,Add support of the CLUSTER RESET command (#2210),unstable,True,False,6,storage.cc,cc,13,0,13
5c8b6cbab40a6d01fea7087fb0220a1cc8caa9e3,hulk.website@gmail.com,2024-04-01 11:55:36+08:00,noreply@github.com,2024-04-01 11:55:36+08:00,Add support of the CLUSTER RESET command (#2210),unstable,True,False,6,storage.h,h,1,0,1
5c8b6cbab40a6d01fea7087fb0220a1cc8caa9e3,hulk.website@gmail.com,2024-04-01 11:55:36+08:00,noreply@github.com,2024-04-01 11:55:36+08:00,Add support of the CLUSTER RESET command (#2210),unstable,True,False,6,cluster_test.go,go,80,0,80
c588a6d8f46f92627bb3928ea3f6cf1e7ef3ff8a,maplewish117@gmail.com,2024-04-01 19:32:30+08:00,noreply@github.com,2024-04-01 19:32:30+08:00,"Fix GetOptions in C++17 build (#2213)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,redis_db.cc,cc,1,1,2
c588a6d8f46f92627bb3928ea3f6cf1e7ef3ff8a,maplewish117@gmail.com,2024-04-01 19:32:30+08:00,noreply@github.com,2024-04-01 19:32:30+08:00,"Fix GetOptions in C++17 build (#2213)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,redis_db.h,h,3,0,3
c588a6d8f46f92627bb3928ea3f6cf1e7ef3ff8a,maplewish117@gmail.com,2024-04-01 19:32:30+08:00,noreply@github.com,2024-04-01 19:32:30+08:00,"Fix GetOptions in C++17 build (#2213)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,redis_bitmap.cc,cc,4,4,8
c588a6d8f46f92627bb3928ea3f6cf1e7ef3ff8a,maplewish117@gmail.com,2024-04-01 19:32:30+08:00,noreply@github.com,2024-04-01 19:32:30+08:00,"Fix GetOptions in C++17 build (#2213)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,redis_hash.cc,cc,4,4,8
c588a6d8f46f92627bb3928ea3f6cf1e7ef3ff8a,maplewish117@gmail.com,2024-04-01 19:32:30+08:00,noreply@github.com,2024-04-01 19:32:30+08:00,"Fix GetOptions in C++17 build (#2213)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,redis_list.cc,cc,2,2,4
c588a6d8f46f92627bb3928ea3f6cf1e7ef3ff8a,maplewish117@gmail.com,2024-04-01 19:32:30+08:00,noreply@github.com,2024-04-01 19:32:30+08:00,"Fix GetOptions in C++17 build (#2213)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,redis_set.cc,cc,2,2,4
c588a6d8f46f92627bb3928ea3f6cf1e7ef3ff8a,maplewish117@gmail.com,2024-04-01 19:32:30+08:00,noreply@github.com,2024-04-01 19:32:30+08:00,"Fix GetOptions in C++17 build (#2213)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,redis_sortedint.cc,cc,3,3,6
c588a6d8f46f92627bb3928ea3f6cf1e7ef3ff8a,maplewish117@gmail.com,2024-04-01 19:32:30+08:00,noreply@github.com,2024-04-01 19:32:30+08:00,"Fix GetOptions in C++17 build (#2213)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,8,redis_zset.cc,cc,4,4,8
dd4a26867c356dad1f8478f879eeebf4b0607854,twice.mliu@gmail.com,2024-04-03 08:47:48+09:00,noreply@github.com,2024-04-03 08:47:48+09:00,Add a simple AND/OR expression simplification pass for KQIR (#2216),unstable,True,False,3,simplify_and_or_expr.h,h,66,0,66
dd4a26867c356dad1f8478f879eeebf4b0607854,twice.mliu@gmail.com,2024-04-03 08:47:48+09:00,noreply@github.com,2024-04-03 08:47:48+09:00,Add a simple AND/OR expression simplification pass for KQIR (#2216),unstable,True,False,3,simplify_boolean.h,h,0,1,1
dd4a26867c356dad1f8478f879eeebf4b0607854,twice.mliu@gmail.com,2024-04-03 08:47:48+09:00,noreply@github.com,2024-04-03 08:47:48+09:00,Add a simple AND/OR expression simplification pass for KQIR (#2216),unstable,True,False,3,ir_pass_test.cc,cc,18,0,18
9dc0dc268385301b823506f4d834b766ac984447,kinoute@gmail.com,2024-04-03 12:31:26+02:00,noreply@github.com,2024-04-03 18:31:26+08:00,Add cron to recalculate db size (#2217),unstable,True,False,5,kvrocks.conf,conf,7,0,7
9dc0dc268385301b823506f4d834b766ac984447,kinoute@gmail.com,2024-04-03 12:31:26+02:00,noreply@github.com,2024-04-03 18:31:26+08:00,Add cron to recalculate db size (#2217),unstable,True,False,5,config.cc,cc,6,0,6
9dc0dc268385301b823506f4d834b766ac984447,kinoute@gmail.com,2024-04-03 12:31:26+02:00,noreply@github.com,2024-04-03 18:31:26+08:00,Add cron to recalculate db size (#2217),unstable,True,False,5,config.h,h,2,0,2
9dc0dc268385301b823506f4d834b766ac984447,kinoute@gmail.com,2024-04-03 12:31:26+02:00,noreply@github.com,2024-04-03 18:31:26+08:00,Add cron to recalculate db size (#2217),unstable,True,False,5,server.cc,cc,18,0,18
9dc0dc268385301b823506f4d834b766ac984447,kinoute@gmail.com,2024-04-03 12:31:26+02:00,noreply@github.com,2024-04-03 18:31:26+08:00,Add cron to recalculate db size (#2217),unstable,True,False,5,config_test.cc,cc,1,0,1
35348467a639bf786ea974057aad3ec338ba0850,twice.mliu@gmail.com,2024-04-03 23:37:45+09:00,noreply@github.com,2024-04-03 23:37:45+09:00,Add NotExpr pushing pass for KQIR (#2218),unstable,True,False,2,push_down_not_expr.h,h,59,0,59
35348467a639bf786ea974057aad3ec338ba0850,twice.mliu@gmail.com,2024-04-03 23:37:45+09:00,noreply@github.com,2024-04-03 23:37:45+09:00,Add NotExpr pushing pass for KQIR (#2218),unstable,True,False,2,ir_pass_test.cc,cc,16,0,16
bf5ba41dcdaba15c975ef204acef706db0bac37e,twice.mliu@gmail.com,2024-04-04 19:55:41+09:00,noreply@github.com,2024-04-04 19:55:41+09:00,Fix write flag for FUNCTION and SCRIPT commands (#2219),unstable,True,False,5,cmd_cluster.cc,cc,3,3,6
bf5ba41dcdaba15c975ef204acef706db0bac37e,twice.mliu@gmail.com,2024-04-04 19:55:41+09:00,noreply@github.com,2024-04-04 19:55:41+09:00,Fix write flag for FUNCTION and SCRIPT commands (#2219),unstable,True,False,5,cmd_function.cc,cc,10,1,11
bf5ba41dcdaba15c975ef204acef706db0bac37e,twice.mliu@gmail.com,2024-04-04 19:55:41+09:00,noreply@github.com,2024-04-04 19:55:41+09:00,Fix write flag for FUNCTION and SCRIPT commands (#2219),unstable,True,False,5,cmd_script.cc,cc,8,0,8
bf5ba41dcdaba15c975ef204acef706db0bac37e,twice.mliu@gmail.com,2024-04-04 19:55:41+09:00,noreply@github.com,2024-04-04 19:55:41+09:00,Fix write flag for FUNCTION and SCRIPT commands (#2219),unstable,True,False,5,cmd_server.cc,cc,4,6,10
bf5ba41dcdaba15c975ef204acef706db0bac37e,twice.mliu@gmail.com,2024-04-04 19:55:41+09:00,noreply@github.com,2024-04-04 19:55:41+09:00,Fix write flag for FUNCTION and SCRIPT commands (#2219),unstable,True,False,5,commander.h,h,2,2,4
7e1b797920517edf9c798cd4b440789b524d7956,hulk.website@gmail.com,2024-04-05 09:40:59+08:00,noreply@github.com,2024-04-05 09:40:59+08:00,"Fix wrongly try to rewrite the namespace in the cluster mode (#2221)

This closes #2214

The namespace mechanism is NOT allowed in cluster mode, so it's
unnecessary to rewrite while the cluster mode is enabled. This
config rewrite behavior will cause the replication issue 
mentioned in #2214 when starting the cluster node.

The root cause is that the server will try to rewrite the namespace
into the rocksdb if the option `repl-namespace-enabled` is enabled.
So it will increase the server's rocksdb sequence and replication will
start with the wrong offset. We have checked if the role is a slave 
before rewriting, but the cluster replication is NOT set at that time(master-replica is good).

The good news is it only affects the cluster users who enabled
the option `repl-namespace-enabled`, so I guess almost no user
will do this since the namespace replication is meaningless to the cluster mode.

```
=== RUN   TestClusterReplication/Cluster_replication_should_work_normally_after_restart
    replication_test.go:88: 
        	Error Trace:	/Users/hulk/code/cxx/kvrocks/tests/gocase/integration/replication/replication_test.go:88
        	Error:      	Not equal: 
        	            	expected: ""v1""
        	            	actual  : ""v0""
```

And it works well after this patch.",unstable,True,False,5,namespace.cc,cc,3,0,3
7e1b797920517edf9c798cd4b440789b524d7956,hulk.website@gmail.com,2024-04-05 09:40:59+08:00,noreply@github.com,2024-04-05 09:40:59+08:00,"Fix wrongly try to rewrite the namespace in the cluster mode (#2221)

This closes #2214

The namespace mechanism is NOT allowed in cluster mode, so it's
unnecessary to rewrite while the cluster mode is enabled. This
config rewrite behavior will cause the replication issue 
mentioned in #2214 when starting the cluster node.

The root cause is that the server will try to rewrite the namespace
into the rocksdb if the option `repl-namespace-enabled` is enabled.
So it will increase the server's rocksdb sequence and replication will
start with the wrong offset. We have checked if the role is a slave 
before rewriting, but the cluster replication is NOT set at that time(master-replica is good).

The good news is it only affects the cluster users who enabled
the option `repl-namespace-enabled`, so I guess almost no user
will do this since the namespace replication is meaningless to the cluster mode.

```
=== RUN   TestClusterReplication/Cluster_replication_should_work_normally_after_restart
    replication_test.go:88: 
        	Error Trace:	/Users/hulk/code/cxx/kvrocks/tests/gocase/integration/replication/replication_test.go:88
        	Error:      	Not equal: 
        	            	expected: ""v1""
        	            	actual  : ""v0""
```

And it works well after this patch.",unstable,True,False,5,redis_pubsub.cc,cc,3,0,3
7e1b797920517edf9c798cd4b440789b524d7956,hulk.website@gmail.com,2024-04-05 09:40:59+08:00,noreply@github.com,2024-04-05 09:40:59+08:00,"Fix wrongly try to rewrite the namespace in the cluster mode (#2221)

This closes #2214

The namespace mechanism is NOT allowed in cluster mode, so it's
unnecessary to rewrite while the cluster mode is enabled. This
config rewrite behavior will cause the replication issue 
mentioned in #2214 when starting the cluster node.

The root cause is that the server will try to rewrite the namespace
into the rocksdb if the option `repl-namespace-enabled` is enabled.
So it will increase the server's rocksdb sequence and replication will
start with the wrong offset. We have checked if the role is a slave 
before rewriting, but the cluster replication is NOT set at that time(master-replica is good).

The good news is it only affects the cluster users who enabled
the option `repl-namespace-enabled`, so I guess almost no user
will do this since the namespace replication is meaningless to the cluster mode.

```
=== RUN   TestClusterReplication/Cluster_replication_should_work_normally_after_restart
    replication_test.go:88: 
        	Error Trace:	/Users/hulk/code/cxx/kvrocks/tests/gocase/integration/replication/replication_test.go:88
        	Error:      	Not equal: 
        	            	expected: ""v1""
        	            	actual  : ""v0""
```

And it works well after this patch.",unstable,True,False,5,storage.cc,cc,3,0,3
7e1b797920517edf9c798cd4b440789b524d7956,hulk.website@gmail.com,2024-04-05 09:40:59+08:00,noreply@github.com,2024-04-05 09:40:59+08:00,"Fix wrongly try to rewrite the namespace in the cluster mode (#2221)

This closes #2214

The namespace mechanism is NOT allowed in cluster mode, so it's
unnecessary to rewrite while the cluster mode is enabled. This
config rewrite behavior will cause the replication issue 
mentioned in #2214 when starting the cluster node.

The root cause is that the server will try to rewrite the namespace
into the rocksdb if the option `repl-namespace-enabled` is enabled.
So it will increase the server's rocksdb sequence and replication will
start with the wrong offset. We have checked if the role is a slave 
before rewriting, but the cluster replication is NOT set at that time(master-replica is good).

The good news is it only affects the cluster users who enabled
the option `repl-namespace-enabled`, so I guess almost no user
will do this since the namespace replication is meaningless to the cluster mode.

```
=== RUN   TestClusterReplication/Cluster_replication_should_work_normally_after_restart
    replication_test.go:88: 
        	Error Trace:	/Users/hulk/code/cxx/kvrocks/tests/gocase/integration/replication/replication_test.go:88
        	Error:      	Not equal: 
        	            	expected: ""v1""
        	            	actual  : ""v0""
```

And it works well after this patch.",unstable,True,False,5,replication_test.go,go,58,0,58
7e1b797920517edf9c798cd4b440789b524d7956,hulk.website@gmail.com,2024-04-05 09:40:59+08:00,noreply@github.com,2024-04-05 09:40:59+08:00,"Fix wrongly try to rewrite the namespace in the cluster mode (#2221)

This closes #2214

The namespace mechanism is NOT allowed in cluster mode, so it's
unnecessary to rewrite while the cluster mode is enabled. This
config rewrite behavior will cause the replication issue 
mentioned in #2214 when starting the cluster node.

The root cause is that the server will try to rewrite the namespace
into the rocksdb if the option `repl-namespace-enabled` is enabled.
So it will increase the server's rocksdb sequence and replication will
start with the wrong offset. We have checked if the role is a slave 
before rewriting, but the cluster replication is NOT set at that time(master-replica is good).

The good news is it only affects the cluster users who enabled
the option `repl-namespace-enabled`, so I guess almost no user
will do this since the namespace replication is meaningless to the cluster mode.

```
=== RUN   TestClusterReplication/Cluster_replication_should_work_normally_after_restart
    replication_test.go:88: 
        	Error Trace:	/Users/hulk/code/cxx/kvrocks/tests/gocase/integration/replication/replication_test.go:88
        	Error:      	Not equal: 
        	            	expected: ""v1""
        	            	actual  : ""v0""
```

And it works well after this patch.",unstable,True,False,5,server.go,go,3,0,3
05ce50a92d4cc8f2fcc028e3938a9067d86d231e,twice.mliu@gmail.com,2024-04-05 15:44:32+09:00,noreply@github.com,2024-04-05 15:44:32+09:00,Disable the ANALYZE command to reconsider the design (#2220),unstable,True,False,1,cmd_server.cc,cc,0,65,65
d7b845091a7d6388d2db20aecd136d4f63a12737,aleks.raiden@gmail.com,2024-04-05 15:39:59+03:00,noreply@github.com,2024-04-05 20:39:59+08:00,Bump Snappy to 1.2.0 (#2224),unstable,True,False,1,snappy.cmake,cmake,2,2,4
8ecccdd148963080e5ed8c3a41f2c1aa0240fb6c,twice.mliu@gmail.com,2024-04-06 08:40:28+09:00,noreply@github.com,2024-04-06 08:40:28+09:00,"Skip noindex fields in indexer (#2223)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,indexer.cc,cc,9,1,10
1c4334367f52ee2be0d62fbe3cf3f0f03f0e4294,twice.mliu@gmail.com,2024-04-06 18:38:34+09:00,noreply@github.com,2024-04-06 18:38:34+09:00,Add a simple pass manager for KQIR (#2226),unstable,True,False,2,manager.h,h,51,0,51
1c4334367f52ee2be0d62fbe3cf3f0f03f0e4294,twice.mliu@gmail.com,2024-04-06 18:38:34+09:00,noreply@github.com,2024-04-06 18:38:34+09:00,Add a simple pass manager for KQIR (#2226),unstable,True,False,2,ir_pass_test.cc,cc,7,0,7
b60ccb3bf6bf3a0929ea5a9446de80367e0f60ff,44946252+Chiro11@users.noreply.github.com,2024-04-07 21:31:05+08:00,noreply@github.com,2024-04-07 21:31:05+08:00,Add support of the command MOVEX (#2225),unstable,True,False,11,cmd_key.cc,cc,46,3,49
b60ccb3bf6bf3a0929ea5a9446de80367e0f60ff,44946252+Chiro11@users.noreply.github.com,2024-04-07 21:31:05+08:00,noreply@github.com,2024-04-07 21:31:05+08:00,Add support of the command MOVEX (#2225),unstable,True,False,11,cmd_server.cc,cc,23,39,62
b60ccb3bf6bf3a0929ea5a9446de80367e0f60ff,44946252+Chiro11@users.noreply.github.com,2024-04-07 21:31:05+08:00,noreply@github.com,2024-04-07 21:31:05+08:00,Add support of the command MOVEX (#2225),unstable,True,False,11,config.cc,cc,1,1,2
b60ccb3bf6bf3a0929ea5a9446de80367e0f60ff,44946252+Chiro11@users.noreply.github.com,2024-04-07 21:31:05+08:00,noreply@github.com,2024-04-07 21:31:05+08:00,Add support of the command MOVEX (#2225),unstable,True,False,11,server.cc,cc,19,0,19
b60ccb3bf6bf3a0929ea5a9446de80367e0f60ff,44946252+Chiro11@users.noreply.github.com,2024-04-07 21:31:05+08:00,noreply@github.com,2024-04-07 21:31:05+08:00,Add support of the command MOVEX (#2225),unstable,True,False,11,server.h,h,9,0,9
b60ccb3bf6bf3a0929ea5a9446de80367e0f60ff,44946252+Chiro11@users.noreply.github.com,2024-04-07 21:31:05+08:00,noreply@github.com,2024-04-07 21:31:05+08:00,Add support of the command MOVEX (#2225),unstable,True,False,11,redis_db.cc,cc,65,51,116
b60ccb3bf6bf3a0929ea5a9446de80367e0f60ff,44946252+Chiro11@users.noreply.github.com,2024-04-07 21:31:05+08:00,noreply@github.com,2024-04-07 21:31:05+08:00,Add support of the command MOVEX (#2225),unstable,True,False,11,redis_db.h,h,9,2,11
b60ccb3bf6bf3a0929ea5a9446de80367e0f60ff,44946252+Chiro11@users.noreply.github.com,2024-04-07 21:31:05+08:00,noreply@github.com,2024-04-07 21:31:05+08:00,Add support of the command MOVEX (#2225),unstable,True,False,11,redis_zset.h,h,1,1,2
b60ccb3bf6bf3a0929ea5a9446de80367e0f60ff,44946252+Chiro11@users.noreply.github.com,2024-04-07 21:31:05+08:00,noreply@github.com,2024-04-07 21:31:05+08:00,Add support of the command MOVEX (#2225),unstable,True,False,11,auth_test.go,go,1,1,2
b60ccb3bf6bf3a0929ea5a9446de80367e0f60ff,44946252+Chiro11@users.noreply.github.com,2024-04-07 21:31:05+08:00,noreply@github.com,2024-04-07 21:31:05+08:00,Add support of the command MOVEX (#2225),unstable,True,False,11,hello_test.go,go,2,2,4
b60ccb3bf6bf3a0929ea5a9446de80367e0f60ff,44946252+Chiro11@users.noreply.github.com,2024-04-07 21:31:05+08:00,noreply@github.com,2024-04-07 21:31:05+08:00,Add support of the command MOVEX (#2225),unstable,True,False,11,movex_test.go,go,157,0,157
738b6cd9922b5e4745a9b71ef26d0f7993195178,AntiTopQuark1350@outlook.com,2024-04-08 19:02:03+08:00,noreply@github.com,2024-04-08 19:02:03+08:00,Add support of  the command DUMP (#2227),unstable,True,False,6,cmd_server.cc,cc,44,1,45
738b6cd9922b5e4745a9b71ef26d0f7993195178,AntiTopQuark1350@outlook.com,2024-04-08 19:02:03+08:00,noreply@github.com,2024-04-08 19:02:03+08:00,Add support of  the command DUMP (#2227),unstable,True,False,6,rdb_stream.cc,cc,5,0,5
738b6cd9922b5e4745a9b71ef26d0f7993195178,AntiTopQuark1350@outlook.com,2024-04-08 19:02:03+08:00,noreply@github.com,2024-04-08 19:02:03+08:00,Add support of  the command DUMP (#2227),unstable,True,False,6,rdb_stream.h,h,4,0,4
738b6cd9922b5e4745a9b71ef26d0f7993195178,AntiTopQuark1350@outlook.com,2024-04-08 19:02:03+08:00,noreply@github.com,2024-04-08 19:02:03+08:00,Add support of  the command DUMP (#2227),unstable,True,False,6,rdb.cc,cc,321,2,323
738b6cd9922b5e4745a9b71ef26d0f7993195178,AntiTopQuark1350@outlook.com,2024-04-08 19:02:03+08:00,noreply@github.com,2024-04-08 19:02:03+08:00,Add support of  the command DUMP (#2227),unstable,True,False,6,rdb.h,h,28,0,28
738b6cd9922b5e4745a9b71ef26d0f7993195178,AntiTopQuark1350@outlook.com,2024-04-08 19:02:03+08:00,noreply@github.com,2024-04-08 19:02:03+08:00,Add support of  the command DUMP (#2227),unstable,True,False,6,dump_test.go,go,101,0,101
0638c4687271f6d6ce82cb5ab1cba341f5aeef45,89204657+zjregee@users.noreply.github.com,2024-04-08 20:07:06+08:00,noreply@github.com,2024-04-08 20:07:06+08:00,"Add support of the command JSON.MSET (#2228)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,cmd_json.cc,cc,27,1,28
0638c4687271f6d6ce82cb5ab1cba341f5aeef45,89204657+zjregee@users.noreply.github.com,2024-04-08 20:07:06+08:00,noreply@github.com,2024-04-08 20:07:06+08:00,"Add support of the command JSON.MSET (#2228)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,redis_json.cc,cc,57,0,57
0638c4687271f6d6ce82cb5ab1cba341f5aeef45,89204657+zjregee@users.noreply.github.com,2024-04-08 20:07:06+08:00,noreply@github.com,2024-04-08 20:07:06+08:00,"Add support of the command JSON.MSET (#2228)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,redis_json.h,h,2,0,2
0638c4687271f6d6ce82cb5ab1cba341f5aeef45,89204657+zjregee@users.noreply.github.com,2024-04-08 20:07:06+08:00,noreply@github.com,2024-04-08 20:07:06+08:00,"Add support of the command JSON.MSET (#2228)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,json_test.go,go,14,0,14
66595db3f89c3b4738703fe84e8d94ac51cb30e2,twice.mliu@gmail.com,2024-04-09 20:38:33+09:00,noreply@github.com,2024-04-09 20:38:33+09:00,Initialize the query plan part of KQIR (#2232),unstable,True,False,5,ir.h,h,11,10,21
66595db3f89c3b4738703fe84e8d94ac51cb30e2,twice.mliu@gmail.com,2024-04-09 20:38:33+09:00,noreply@github.com,2024-04-09 20:38:33+09:00,Initialize the query plan part of KQIR (#2232),unstable,True,False,5,ir_pass.h,h,6,6,12
66595db3f89c3b4738703fe84e8d94ac51cb30e2,twice.mliu@gmail.com,2024-04-09 20:38:33+09:00,noreply@github.com,2024-04-09 20:38:33+09:00,Initialize the query plan part of KQIR (#2232),unstable,True,False,5,ir_plan.h,h,113,0,113
66595db3f89c3b4738703fe84e8d94ac51cb30e2,twice.mliu@gmail.com,2024-04-09 20:38:33+09:00,noreply@github.com,2024-04-09 20:38:33+09:00,Initialize the query plan part of KQIR (#2232),unstable,True,False,5,ir_sema_checker.h,h,2,2,4
66595db3f89c3b4738703fe84e8d94ac51cb30e2,twice.mliu@gmail.com,2024-04-09 20:38:33+09:00,noreply@github.com,2024-04-09 20:38:33+09:00,Initialize the query plan part of KQIR (#2232),unstable,True,False,5,sql_transformer.h,h,8,8,16
70581d0097e0203ff516e8803adde14deac4cb50,aleks.raiden@gmail.com,2024-04-09 16:37:38+03:00,noreply@github.com,2024-04-09 21:37:38+08:00,"Bump rocksdb to v9.0.0 (#2182)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
fd5c376d2a18c57563435f15249b3b473712328b,twice.mliu@gmail.com,2024-04-10 22:32:15+09:00,noreply@github.com,2024-04-10 22:32:15+09:00,Add clone method to KQIR Node (#2234),unstable,True,False,2,ir.h,h,76,6,82
fd5c376d2a18c57563435f15249b3b473712328b,twice.mliu@gmail.com,2024-04-10 22:32:15+09:00,noreply@github.com,2024-04-10 22:32:15+09:00,Add clone method to KQIR Node (#2234),unstable,True,False,2,ir_plan.h,h,55,3,58
8c1b0adfbfb7a3552120633fee24d462ec964f0c,twice.mliu@gmail.com,2024-04-10 23:53:32+09:00,noreply@github.com,2024-04-10 23:53:32+09:00,Make query expression always present in SearchStmt (#2233),unstable,True,False,5,ir.h,h,2,3,5
8c1b0adfbfb7a3552120633fee24d462ec964f0c,twice.mliu@gmail.com,2024-04-10 23:53:32+09:00,noreply@github.com,2024-04-10 23:53:32+09:00,Make query expression always present in SearchStmt (#2233),unstable,True,False,5,ir_pass.h,h,1,1,2
8c1b0adfbfb7a3552120633fee24d462ec964f0c,twice.mliu@gmail.com,2024-04-10 23:53:32+09:00,noreply@github.com,2024-04-10 23:53:32+09:00,Make query expression always present in SearchStmt (#2233),unstable,True,False,5,ir_sema_checker.h,h,1,1,2
8c1b0adfbfb7a3552120633fee24d462ec964f0c,twice.mliu@gmail.com,2024-04-10 23:53:32+09:00,noreply@github.com,2024-04-10 23:53:32+09:00,Make query expression always present in SearchStmt (#2233),unstable,True,False,5,sql_transformer.h,h,4,0,4
8c1b0adfbfb7a3552120633fee24d462ec964f0c,twice.mliu@gmail.com,2024-04-10 23:53:32+09:00,noreply@github.com,2024-04-10 23:53:32+09:00,Make query expression always present in SearchStmt (#2233),unstable,True,False,5,sql_parser_test.cc,cc,12,12,24
ab3a61dc32c02c10ce21ce550ab6b7c9ab6ef863,twice.mliu@gmail.com,2024-04-12 18:16:19+09:00,noreply@github.com,2024-04-12 18:16:19+09:00,Rename SelectExpr to SelectClause to prevent misunderstanding (#2239),unstable,True,False,5,ir.h,h,10,10,20
ab3a61dc32c02c10ce21ce550ab6b7c9ab6ef863,twice.mliu@gmail.com,2024-04-12 18:16:19+09:00,noreply@github.com,2024-04-12 18:16:19+09:00,Rename SelectExpr to SelectClause to prevent misunderstanding (#2239),unstable,True,False,5,ir_pass.h,h,3,3,6
ab3a61dc32c02c10ce21ce550ab6b7c9ab6ef863,twice.mliu@gmail.com,2024-04-12 18:16:19+09:00,noreply@github.com,2024-04-12 18:16:19+09:00,Rename SelectExpr to SelectClause to prevent misunderstanding (#2239),unstable,True,False,5,ir_plan.h,h,3,3,6
ab3a61dc32c02c10ce21ce550ab6b7c9ab6ef863,twice.mliu@gmail.com,2024-04-12 18:16:19+09:00,noreply@github.com,2024-04-12 18:16:19+09:00,Rename SelectExpr to SelectClause to prevent misunderstanding (#2239),unstable,True,False,5,ir_sema_checker.h,h,2,2,4
ab3a61dc32c02c10ce21ce550ab6b7c9ab6ef863,twice.mliu@gmail.com,2024-04-12 18:16:19+09:00,noreply@github.com,2024-04-12 18:16:19+09:00,Rename SelectExpr to SelectClause to prevent misunderstanding (#2239),unstable,True,False,5,sql_transformer.h,h,3,3,6
ed5937ce391c3949439d58ceba89908bf0c2c34d,44946252+Chiro11@users.noreply.github.com,2024-04-12 21:03:11+08:00,noreply@github.com,2024-04-12 21:03:11+08:00,Add support of the command COPY (#2238),unstable,True,False,5,cmd_key.cc,cc,65,19,84
ed5937ce391c3949439d58ceba89908bf0c2c34d,44946252+Chiro11@users.noreply.github.com,2024-04-12 21:03:11+08:00,noreply@github.com,2024-04-12 21:03:11+08:00,Add support of the command COPY (#2238),unstable,True,False,5,redis_db.cc,cc,9,7,16
ed5937ce391c3949439d58ceba89908bf0c2c34d,44946252+Chiro11@users.noreply.github.com,2024-04-12 21:03:11+08:00,noreply@github.com,2024-04-12 21:03:11+08:00,Add support of the command COPY (#2238),unstable,True,False,5,redis_db.h,h,5,3,8
ed5937ce391c3949439d58ceba89908bf0c2c34d,44946252+Chiro11@users.noreply.github.com,2024-04-12 21:03:11+08:00,noreply@github.com,2024-04-12 21:03:11+08:00,Add support of the command COPY (#2238),unstable,True,False,5,copy_test.go,go,1115,0,1115
ed5937ce391c3949439d58ceba89908bf0c2c34d,44946252+Chiro11@users.noreply.github.com,2024-04-12 21:03:11+08:00,noreply@github.com,2024-04-12 21:03:11+08:00,Add support of the command COPY (#2238),unstable,True,False,5,rename_test.go,go,11,11,22
8fae903350c00b60bc780e5217eecbad649c2d6c,twice.mliu@gmail.com,2024-04-13 14:42:47+09:00,noreply@github.com,2024-04-13 14:42:47+09:00,Unify index info structure between indexer and sema checker (#2240),unstable,True,False,7,index_info.h,h,61,0,61
8fae903350c00b60bc780e5217eecbad649c2d6c,twice.mliu@gmail.com,2024-04-13 14:42:47+09:00,noreply@github.com,2024-04-13 14:42:47+09:00,Unify index info structure between indexer and sema checker (#2240),unstable,True,False,7,indexer.cc,cc,22,22,44
8fae903350c00b60bc780e5217eecbad649c2d6c,twice.mliu@gmail.com,2024-04-13 14:42:47+09:00,noreply@github.com,2024-04-13 14:42:47+09:00,Unify index info structure between indexer and sema checker (#2240),unstable,True,False,7,indexer.h,h,8,17,25
8fae903350c00b60bc780e5217eecbad649c2d6c,twice.mliu@gmail.com,2024-04-13 14:42:47+09:00,noreply@github.com,2024-04-13 14:42:47+09:00,Unify index info structure between indexer and sema checker (#2240),unstable,True,False,7,ir.h,h,3,0,3
8fae903350c00b60bc780e5217eecbad649c2d6c,twice.mliu@gmail.com,2024-04-13 14:42:47+09:00,noreply@github.com,2024-04-13 14:42:47+09:00,Unify index info structure between indexer and sema checker (#2240),unstable,True,False,7,ir_sema_checker.h,h,6,37,43
8fae903350c00b60bc780e5217eecbad649c2d6c,twice.mliu@gmail.com,2024-04-13 14:42:47+09:00,noreply@github.com,2024-04-13 14:42:47+09:00,Unify index info structure between indexer and sema checker (#2240),unstable,True,False,7,indexer_test.cc,cc,20,12,32
8fae903350c00b60bc780e5217eecbad649c2d6c,twice.mliu@gmail.com,2024-04-13 14:42:47+09:00,noreply@github.com,2024-04-13 14:42:47+09:00,Unify index info structure between indexer and sema checker (#2240),unstable,True,False,7,ir_sema_checker_test.cc,cc,0,2,2
135dbc340492b631b8161980fdadb6db9e27fcc6,aleks.raiden@gmail.com,2024-04-13 11:38:45+03:00,noreply@github.com,2024-04-13 16:38:45+08:00,"Bump apache/skywalking-eyes to 0.6.0 (#2241)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,kvrocks.yaml,yaml,1,1,2
6aabd8050a7d2cb26dee78906d448514f79fff26,jwalag87@gmail.com,2024-04-13 18:39:10+09:00,noreply@github.com,2024-04-13 17:39:10+08:00,Add support of the CLUSTER REPLICAS command (#2244),unstable,True,False,5,cluster.cc,cc,42,0,42
6aabd8050a7d2cb26dee78906d448514f79fff26,jwalag87@gmail.com,2024-04-13 18:39:10+09:00,noreply@github.com,2024-04-13 17:39:10+08:00,Add support of the CLUSTER REPLICAS command (#2244),unstable,True,False,5,cluster.h,h,1,0,1
6aabd8050a7d2cb26dee78906d448514f79fff26,jwalag87@gmail.com,2024-04-13 18:39:10+09:00,noreply@github.com,2024-04-13 17:39:10+08:00,Add support of the CLUSTER REPLICAS command (#2244),unstable,True,False,5,cmd_cluster.cc,cc,11,1,12
6aabd8050a7d2cb26dee78906d448514f79fff26,jwalag87@gmail.com,2024-04-13 18:39:10+09:00,noreply@github.com,2024-04-13 17:39:10+08:00,Add support of the CLUSTER REPLICAS command (#2244),unstable,True,False,5,cluster_test.cc,cc,46,0,46
6aabd8050a7d2cb26dee78906d448514f79fff26,jwalag87@gmail.com,2024-04-13 18:39:10+09:00,noreply@github.com,2024-04-13 17:39:10+08:00,Add support of the CLUSTER REPLICAS command (#2244),unstable,True,False,5,cluster_test.go,go,57,1,58
955350e11023e31aa990e329c2cdd3deab37d6a1,twice.mliu@gmail.com,2024-04-13 20:21:18+09:00,noreply@github.com,2024-04-13 20:21:18+09:00,"Reject invalid flags in the parsing of SCAN (#2245)

Co-authored-by: lizhenglei <127465317+jackyyyyyssss@users.noreply.github.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,cmd_server.cc,cc,0,22,22
955350e11023e31aa990e329c2cdd3deab37d6a1,twice.mliu@gmail.com,2024-04-13 20:21:18+09:00,noreply@github.com,2024-04-13 20:21:18+09:00,"Reject invalid flags in the parsing of SCAN (#2245)

Co-authored-by: lizhenglei <127465317+jackyyyyyssss@users.noreply.github.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,scan_base.h,h,32,35,67
955350e11023e31aa990e329c2cdd3deab37d6a1,twice.mliu@gmail.com,2024-04-13 20:21:18+09:00,noreply@github.com,2024-04-13 20:21:18+09:00,"Reject invalid flags in the parsing of SCAN (#2245)

Co-authored-by: lizhenglei <127465317+jackyyyyyssss@users.noreply.github.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,scan_test.go,go,11,0,11
a2380535d5602692f3746783c48ccc7bb05cc58e,aleks.raiden@gmail.com,2024-04-13 15:30:55+03:00,noreply@github.com,2024-04-13 21:30:55+09:00,"Bump oneTBB to 2021.12.0 (#2246)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,tbb.cmake,cmake,2,2,4
91509c724270bbff4742d66fc72d20a0aec0be74,twice.mliu@gmail.com,2024-04-14 18:59:33+09:00,noreply@github.com,2024-04-14 18:59:33+09:00,Add plan lowering pass for KQIR (#2247),unstable,True,False,9,index_info.h,h,2,0,2
91509c724270bbff4742d66fc72d20a0aec0be74,twice.mliu@gmail.com,2024-04-14 18:59:33+09:00,noreply@github.com,2024-04-14 18:59:33+09:00,Add plan lowering pass for KQIR (#2247),unstable,True,False,9,ir.h,h,11,6,17
91509c724270bbff4742d66fc72d20a0aec0be74,twice.mliu@gmail.com,2024-04-14 18:59:33+09:00,noreply@github.com,2024-04-14 18:59:33+09:00,Add plan lowering pass for KQIR (#2247),unstable,True,False,9,ir_pass.h,h,70,2,72
91509c724270bbff4742d66fc72d20a0aec0be74,twice.mliu@gmail.com,2024-04-14 18:59:33+09:00,noreply@github.com,2024-04-14 18:59:33+09:00,Add plan lowering pass for KQIR (#2247),unstable,True,False,9,ir_plan.h,h,78,13,91
91509c724270bbff4742d66fc72d20a0aec0be74,twice.mliu@gmail.com,2024-04-14 18:59:33+09:00,noreply@github.com,2024-04-14 18:59:33+09:00,Add plan lowering pass for KQIR (#2247),unstable,True,False,9,ir_sema_checker.h,h,4,1,5
91509c724270bbff4742d66fc72d20a0aec0be74,twice.mliu@gmail.com,2024-04-14 18:59:33+09:00,noreply@github.com,2024-04-14 18:59:33+09:00,Add plan lowering pass for KQIR (#2247),unstable,True,False,9,lower_to_plan.h,h,51,0,51
91509c724270bbff4742d66fc72d20a0aec0be74,twice.mliu@gmail.com,2024-04-14 18:59:33+09:00,noreply@github.com,2024-04-14 18:59:33+09:00,Add plan lowering pass for KQIR (#2247),unstable,True,False,9,search_encoding.h,h,3,1,4
91509c724270bbff4742d66fc72d20a0aec0be74,twice.mliu@gmail.com,2024-04-14 18:59:33+09:00,noreply@github.com,2024-04-14 18:59:33+09:00,Add plan lowering pass for KQIR (#2247),unstable,True,False,9,sql_transformer.h,h,1,1,2
91509c724270bbff4742d66fc72d20a0aec0be74,twice.mliu@gmail.com,2024-04-14 18:59:33+09:00,noreply@github.com,2024-04-14 18:59:33+09:00,Add plan lowering pass for KQIR (#2247),unstable,True,False,9,ir_pass_test.cc,cc,14,0,14
433dcfb39b689503b747eabaf922a8718a1d4575,470623352@qq.com,2024-04-14 21:20:57+08:00,noreply@github.com,2024-04-14 21:20:57+08:00,Remove redundant info about `block_cache_usage` field (#2242),unstable,True,False,1,server.cc,cc,10,3,13
aa7c7454eb69fc1c7819f707fb3a4d562df89d06,twice.mliu@gmail.com,2024-04-15 18:18:18+09:00,noreply@github.com,2024-04-15 18:18:18+09:00,"Refactor TTL processing in string type (#2250)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,cmd_string.cc,cc,22,37,59
aa7c7454eb69fc1c7819f707fb3a4d562df89d06,twice.mliu@gmail.com,2024-04-15 18:18:18+09:00,noreply@github.com,2024-04-15 18:18:18+09:00,"Refactor TTL processing in string type (#2250)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,ttl_util.h,h,5,5,10
aa7c7454eb69fc1c7819f707fb3a4d562df89d06,twice.mliu@gmail.com,2024-04-15 18:18:18+09:00,noreply@github.com,2024-04-15 18:18:18+09:00,"Refactor TTL processing in string type (#2250)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,rdb.cc,cc,5,1,6
aa7c7454eb69fc1c7819f707fb3a4d562df89d06,twice.mliu@gmail.com,2024-04-15 18:18:18+09:00,noreply@github.com,2024-04-15 18:18:18+09:00,"Refactor TTL processing in string type (#2250)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,redis_string.cc,cc,17,34,51
aa7c7454eb69fc1c7819f707fb3a4d562df89d06,twice.mliu@gmail.com,2024-04-15 18:18:18+09:00,noreply@github.com,2024-04-15 18:18:18+09:00,"Refactor TTL processing in string type (#2250)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,redis_string.h,h,8,8,16
aa7c7454eb69fc1c7819f707fb3a4d562df89d06,twice.mliu@gmail.com,2024-04-15 18:18:18+09:00,noreply@github.com,2024-04-15 18:18:18+09:00,"Refactor TTL processing in string type (#2250)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,iterator_test.cc,cc,1,1,2
aa7c7454eb69fc1c7819f707fb3a4d562df89d06,twice.mliu@gmail.com,2024-04-15 18:18:18+09:00,noreply@github.com,2024-04-15 18:18:18+09:00,"Refactor TTL processing in string type (#2250)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,string_test.cc,cc,9,8,17
4ecb35b9c11a6b2cd961222bbf7a17d4d79cc8a3,hulk.website@gmail.com,2024-04-16 15:24:24+08:00,noreply@github.com,2024-04-16 15:24:24+08:00,"Fix should use the minimum compatible RDB version when dumping the payload (#2252)

Currently, we're using the maximum RDB version(12) when dumping the payload which is not allowed in the old Redis versions(before Redis 7), so it will throw the error:

```
127.0.0.1:6379> RESTORE a 0 ""\x00\xc0{\x0c\x00\x83\x94g!\xfaP\xf9\xf0""
(error) ERR DUMP payload version or checksum are wrong
```

This PR changes the payload's RDB version to 6 to make it work with the old Redis versions. And after applying this PR, it works well in Redis 4/6:

```
127.0.0.1:6379> RESTORE a 0 ""\x00\xc0{\x06\x00\xde\x0f;a\xf5/[*""
OK
127.0.0.1:6379> get a
""123""

127.0.0.1:6379> RESTORE a 0 ""\x00\xc0{\x06\x00\xde\x0f;a\xf5/[*""
OK
127.0.0.1:6379> get a
""123""
```

Fixes #2251",unstable,True,False,3,rdb.cc,cc,5,3,8
4ecb35b9c11a6b2cd961222bbf7a17d4d79cc8a3,hulk.website@gmail.com,2024-04-16 15:24:24+08:00,noreply@github.com,2024-04-16 15:24:24+08:00,"Fix should use the minimum compatible RDB version when dumping the payload (#2252)

Currently, we're using the maximum RDB version(12) when dumping the payload which is not allowed in the old Redis versions(before Redis 7), so it will throw the error:

```
127.0.0.1:6379> RESTORE a 0 ""\x00\xc0{\x0c\x00\x83\x94g!\xfaP\xf9\xf0""
(error) ERR DUMP payload version or checksum are wrong
```

This PR changes the payload's RDB version to 6 to make it work with the old Redis versions. And after applying this PR, it works well in Redis 4/6:

```
127.0.0.1:6379> RESTORE a 0 ""\x00\xc0{\x06\x00\xde\x0f;a\xf5/[*""
OK
127.0.0.1:6379> get a
""123""

127.0.0.1:6379> RESTORE a 0 ""\x00\xc0{\x06\x00\xde\x0f;a\xf5/[*""
OK
127.0.0.1:6379> get a
""123""
```

Fixes #2251",unstable,True,False,3,rdb.h,h,4,0,4
4ecb35b9c11a6b2cd961222bbf7a17d4d79cc8a3,hulk.website@gmail.com,2024-04-16 15:24:24+08:00,noreply@github.com,2024-04-16 15:24:24+08:00,"Fix should use the minimum compatible RDB version when dumping the payload (#2252)

Currently, we're using the maximum RDB version(12) when dumping the payload which is not allowed in the old Redis versions(before Redis 7), so it will throw the error:

```
127.0.0.1:6379> RESTORE a 0 ""\x00\xc0{\x0c\x00\x83\x94g!\xfaP\xf9\xf0""
(error) ERR DUMP payload version or checksum are wrong
```

This PR changes the payload's RDB version to 6 to make it work with the old Redis versions. And after applying this PR, it works well in Redis 4/6:

```
127.0.0.1:6379> RESTORE a 0 ""\x00\xc0{\x06\x00\xde\x0f;a\xf5/[*""
OK
127.0.0.1:6379> get a
""123""

127.0.0.1:6379> RESTORE a 0 ""\x00\xc0{\x06\x00\xde\x0f;a\xf5/[*""
OK
127.0.0.1:6379> get a
""123""
```

Fixes #2251",unstable,True,False,3,dump_test.go,go,61,22,83
bc1fc9fc6611b11009d35dac131dcc0142f9affd,twice.mliu@gmail.com,2024-04-20 12:16:08+09:00,noreply@github.com,2024-04-20 12:16:08+09:00,Add a univariate interval analysis pass for KQIR (#2256),unstable,True,False,8,interval.h,h,185,0,185
bc1fc9fc6611b11009d35dac131dcc0142f9affd,twice.mliu@gmail.com,2024-04-20 12:16:08+09:00,noreply@github.com,2024-04-20 12:16:08+09:00,Add a univariate interval analysis pass for KQIR (#2256),unstable,True,False,8,ir_pass.h,h,2,0,2
bc1fc9fc6611b11009d35dac131dcc0142f9affd,twice.mliu@gmail.com,2024-04-20 12:16:08+09:00,noreply@github.com,2024-04-20 12:16:08+09:00,Add a univariate interval analysis pass for KQIR (#2256),unstable,True,False,8,ir_plan.h,h,1,8,9
bc1fc9fc6611b11009d35dac131dcc0142f9affd,twice.mliu@gmail.com,2024-04-20 12:16:08+09:00,noreply@github.com,2024-04-20 12:16:08+09:00,Add a univariate interval analysis pass for KQIR (#2256),unstable,True,False,8,interval_analysis.h,h,98,0,98
bc1fc9fc6611b11009d35dac131dcc0142f9affd,twice.mliu@gmail.com,2024-04-20 12:16:08+09:00,noreply@github.com,2024-04-20 12:16:08+09:00,Add a univariate interval analysis pass for KQIR (#2256),unstable,True,False,8,manager.h,h,14,11,25
bc1fc9fc6611b11009d35dac131dcc0142f9affd,twice.mliu@gmail.com,2024-04-20 12:16:08+09:00,noreply@github.com,2024-04-20 12:16:08+09:00,Add a univariate interval analysis pass for KQIR (#2256),unstable,True,False,8,simplify_and_or_expr.h,h,10,2,12
bc1fc9fc6611b11009d35dac131dcc0142f9affd,twice.mliu@gmail.com,2024-04-20 12:16:08+09:00,noreply@github.com,2024-04-20 12:16:08+09:00,Add a univariate interval analysis pass for KQIR (#2256),unstable,True,False,8,interval_test.cc,cc,76,0,76
bc1fc9fc6611b11009d35dac131dcc0142f9affd,twice.mliu@gmail.com,2024-04-20 12:16:08+09:00,noreply@github.com,2024-04-20 12:16:08+09:00,Add a univariate interval analysis pass for KQIR (#2256),unstable,True,False,8,ir_pass_test.cc,cc,17,3,20
1b18b792e1e2fb476b8d8952e2f018db392bc7c5,470623352@qq.com,2024-04-20 22:40:13+08:00,noreply@github.com,2024-04-20 22:40:13+08:00,Unified the leading `k` in connection flags (#2260),unstable,True,False,3,cluster.cc,cc,1,1,2
1b18b792e1e2fb476b8d8952e2f018db392bc7c5,470623352@qq.com,2024-04-20 22:40:13+08:00,noreply@github.com,2024-04-20 22:40:13+08:00,Unified the leading `k` in connection flags (#2260),unstable,True,False,3,cmd_cluster.cc,cc,2,2,4
1b18b792e1e2fb476b8d8952e2f018db392bc7c5,470623352@qq.com,2024-04-20 22:40:13+08:00,noreply@github.com,2024-04-20 22:40:13+08:00,Unified the leading `k` in connection flags (#2260),unstable,True,False,3,redis_connection.h,h,1,1,2
3dc16f3459ed6602824135fdfc6ee56ca0af5a3e,hulk.website@gmail.com,2024-04-20 23:38:04+08:00,noreply@github.com,2024-04-20 23:38:04+08:00,"Fix the replica should remove the master link when receiving the CLUSTER RESET command (#2259)

This PR also allows using SOFT|HARD in the CLUSTER RESET command,
but it has the same meaning in the Kvrocks cluster since keeping
the cluster's current epoch(version) is meaningless to it.",unstable,True,False,3,cluster.cc,cc,6,0,6
3dc16f3459ed6602824135fdfc6ee56ca0af5a3e,hulk.website@gmail.com,2024-04-20 23:38:04+08:00,noreply@github.com,2024-04-20 23:38:04+08:00,"Fix the replica should remove the master link when receiving the CLUSTER RESET command (#2259)

This PR also allows using SOFT|HARD in the CLUSTER RESET command,
but it has the same meaning in the Kvrocks cluster since keeping
the cluster's current epoch(version) is meaningless to it.",unstable,True,False,3,cmd_cluster.cc,cc,9,2,11
3dc16f3459ed6602824135fdfc6ee56ca0af5a3e,hulk.website@gmail.com,2024-04-20 23:38:04+08:00,noreply@github.com,2024-04-20 23:38:04+08:00,"Fix the replica should remove the master link when receiving the CLUSTER RESET command (#2259)

This PR also allows using SOFT|HARD in the CLUSTER RESET command,
but it has the same meaning in the Kvrocks cluster since keeping
the cluster's current epoch(version) is meaningless to it.",unstable,True,False,3,cluster_test.go,go,25,7,32
eb94fbbe53504a7a0e2d80df33a5e4235cc34cb0,127465317+jackyyyyyssss@users.noreply.github.com,2024-04-21 09:12:44+08:00,noreply@github.com,2024-04-21 09:12:44+08:00,Support TYPE flag in the SCAN command (#2255),unstable,True,False,5,cmd_server.cc,cc,1,1,2
eb94fbbe53504a7a0e2d80df33a5e4235cc34cb0,127465317+jackyyyyyssss@users.noreply.github.com,2024-04-21 09:12:44+08:00,noreply@github.com,2024-04-21 09:12:44+08:00,Support TYPE flag in the SCAN command (#2255),unstable,True,False,5,scan_base.h,h,8,1,9
eb94fbbe53504a7a0e2d80df33a5e4235cc34cb0,127465317+jackyyyyyssss@users.noreply.github.com,2024-04-21 09:12:44+08:00,noreply@github.com,2024-04-21 09:12:44+08:00,Support TYPE flag in the SCAN command (#2255),unstable,True,False,5,redis_db.cc,cc,3,1,4
eb94fbbe53504a7a0e2d80df33a5e4235cc34cb0,127465317+jackyyyyyssss@users.noreply.github.com,2024-04-21 09:12:44+08:00,noreply@github.com,2024-04-21 09:12:44+08:00,Support TYPE flag in the SCAN command (#2255),unstable,True,False,5,redis_db.h,h,2,1,3
eb94fbbe53504a7a0e2d80df33a5e4235cc34cb0,127465317+jackyyyyyssss@users.noreply.github.com,2024-04-21 09:12:44+08:00,noreply@github.com,2024-04-21 09:12:44+08:00,Support TYPE flag in the SCAN command (#2255),unstable,True,False,5,scan_test.go,go,67,0,67
0f2de7d0a275028cd9519a5ae22f0f97af1ffa2f,zakelly.lan@gmail.com,2024-04-21 11:11:07+08:00,noreply@github.com,2024-04-21 12:11:07+09:00,"Enable CI for kvrocks2redis (#2175)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,kvrocks.yaml,yaml,71,12,83
0f2de7d0a275028cd9519a5ae22f0f97af1ffa2f,zakelly.lan@gmail.com,2024-04-21 11:11:07+08:00,noreply@github.com,2024-04-21 12:11:07+09:00,"Enable CI for kvrocks2redis (#2175)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,populate-kvrocks.py,py,9,2,11
899216db7316083b5de9cef03dd0e818ededed96,twice.mliu@gmail.com,2024-04-21 15:17:24+09:00,noreply@github.com,2024-04-21 15:17:24+09:00,"Optimize numeric comparison via interval analysis in KQIR (#2257)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,ir.h,h,1,0,1
899216db7316083b5de9cef03dd0e818ededed96,twice.mliu@gmail.com,2024-04-21 15:17:24+09:00,noreply@github.com,2024-04-21 15:17:24+09:00,"Optimize numeric comparison via interval analysis in KQIR (#2257)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,ir_pass.h,h,2,0,2
899216db7316083b5de9cef03dd0e818ededed96,twice.mliu@gmail.com,2024-04-21 15:17:24+09:00,noreply@github.com,2024-04-21 15:17:24+09:00,"Optimize numeric comparison via interval analysis in KQIR (#2257)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,interval_analysis.h,h,97,18,115
899216db7316083b5de9cef03dd0e818ededed96,twice.mliu@gmail.com,2024-04-21 15:17:24+09:00,noreply@github.com,2024-04-21 15:17:24+09:00,"Optimize numeric comparison via interval analysis in KQIR (#2257)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,manager.h,h,1,0,1
899216db7316083b5de9cef03dd0e818ededed96,twice.mliu@gmail.com,2024-04-21 15:17:24+09:00,noreply@github.com,2024-04-21 15:17:24+09:00,"Optimize numeric comparison via interval analysis in KQIR (#2257)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,ir_pass_test.cc,cc,32,0,32
0e2273aa282e8b0c44f5e37cc78609c7e94ac433,maplewish117@gmail.com,2024-04-22 17:54:54+08:00,noreply@github.com,2024-04-22 18:54:54+09:00,Minor code style enhancement for src/server (#2264),unstable,True,False,2,redis_connection.cc,cc,6,5,11
0e2273aa282e8b0c44f5e37cc78609c7e94ac433,maplewish117@gmail.com,2024-04-22 17:54:54+08:00,noreply@github.com,2024-04-22 18:54:54+09:00,Minor code style enhancement for src/server (#2264),unstable,True,False,2,server.cc,cc,13,10,23
e780939689ff1b031a44640a00a91ecbd85e7439,54363053+13015517713@users.noreply.github.com,2024-04-22 22:11:12+08:00,noreply@github.com,2024-04-22 23:11:12+09:00,"Fix unused-variable error for lower gcc version due to structure bindings (#2265)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,CMakeLists.txt,txt,10,1,11
e780939689ff1b031a44640a00a91ecbd85e7439,54363053+13015517713@users.noreply.github.com,2024-04-22 22:11:12+08:00,noreply@github.com,2024-04-22 23:11:12+09:00,"Fix unused-variable error for lower gcc version due to structure bindings (#2265)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,server.cc,cc,1,1,2
51ce175d2fc3239a8319b5df9fda118860b3edb0,aleks.raiden@gmail.com,2024-04-23 18:12:33+03:00,noreply@github.com,2024-04-23 18:12:33+03:00,Bump jsoncons to v0.174.0 (#2270),unstable,True,False,1,jsoncons.cmake,cmake,2,2,4
ae5784dbe83bce07f0e5534f84404e7e075daaa4,twice.mliu@gmail.com,2024-04-25 23:01:29+09:00,noreply@github.com,2024-04-25 23:01:29+09:00,Use jsonpath::replace instead of jsonpointer::replace (#2271),unstable,True,False,1,json.h,h,2,25,27
83c0c0ede0e5e24e989ba2e594215ffda65b3477,maplewish117@gmail.com,2024-04-27 12:11:40+08:00,noreply@github.com,2024-04-27 13:11:40+09:00,Trying to set rocksdb iterator lower_bound if possible (#2275),unstable,True,False,5,slot_migrate.cc,cc,20,12,32
83c0c0ede0e5e24e989ba2e594215ffda65b3477,maplewish117@gmail.com,2024-04-27 12:11:40+08:00,noreply@github.com,2024-04-27 13:11:40+09:00,Trying to set rocksdb iterator lower_bound if possible (#2275),unstable,True,False,5,redis_db.cc,cc,2,11,13
83c0c0ede0e5e24e989ba2e594215ffda65b3477,maplewish117@gmail.com,2024-04-27 12:11:40+08:00,noreply@github.com,2024-04-27 13:11:40+09:00,Trying to set rocksdb iterator lower_bound if possible (#2275),unstable,True,False,5,storage.cc,cc,10,10,20
83c0c0ede0e5e24e989ba2e594215ffda65b3477,maplewish117@gmail.com,2024-04-27 12:11:40+08:00,noreply@github.com,2024-04-27 13:11:40+09:00,Trying to set rocksdb iterator lower_bound if possible (#2275),unstable,True,False,5,storage.h,h,2,2,4
83c0c0ede0e5e24e989ba2e594215ffda65b3477,maplewish117@gmail.com,2024-04-27 12:11:40+08:00,noreply@github.com,2024-04-27 13:11:40+09:00,Trying to set rocksdb iterator lower_bound if possible (#2275),unstable,True,False,5,redis_bitmap.cc,cc,2,0,2
3ce7c509951107afd34405b1da53eb380865eaa1,470623352@qq.com,2024-04-28 17:03:52+08:00,noreply@github.com,2024-04-28 17:03:52+08:00,Add support of the ASKING command (#2273),unstable,True,False,5,cluster.cc,cc,3,2,5
3ce7c509951107afd34405b1da53eb380865eaa1,470623352@qq.com,2024-04-28 17:03:52+08:00,noreply@github.com,2024-04-28 17:03:52+08:00,Add support of the ASKING command (#2273),unstable,True,False,5,cmd_cluster.cc,cc,11,1,12
3ce7c509951107afd34405b1da53eb380865eaa1,470623352@qq.com,2024-04-28 17:03:52+08:00,noreply@github.com,2024-04-28 17:03:52+08:00,Add support of the ASKING command (#2273),unstable,True,False,5,redis_connection.cc,cc,6,0,6
3ce7c509951107afd34405b1da53eb380865eaa1,470623352@qq.com,2024-04-28 17:03:52+08:00,noreply@github.com,2024-04-28 17:03:52+08:00,Add support of the ASKING command (#2273),unstable,True,False,5,redis_connection.h,h,1,0,1
3ce7c509951107afd34405b1da53eb380865eaa1,470623352@qq.com,2024-04-28 17:03:52+08:00,noreply@github.com,2024-04-28 17:03:52+08:00,Add support of the ASKING command (#2273),unstable,True,False,5,slotimport_test.go,go,41,0,41
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,CMakeLists.txt,txt,2,0,2
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,NOTICE,None,2,1,3
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,rangev3.cmake,cmake,48,0,48
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,LICENSE-range-v3.txt,txt,151,0,151
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,index_info.h,h,6,0,6
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,interval.h,h,6,2,8
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,ir.h,h,20,0,20
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,ir_plan.h,h,17,3,20
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,ir_sema_checker.h,h,2,2,4
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,cost_model.h,h,89,0,89
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,index_selection.h,h,323,0,323
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,interval_analysis.h,h,19,7,26
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,lower_to_plan.h,h,18,8,26
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,manager.h,h,32,3,35
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,sort_limit_fuse.h,h,43,0,43
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,ir_pass_test.cc,cc,108,2,110
9bfb05ecc7edf0331c71d7d66b15fcc455170a20,twice.mliu@gmail.com,2024-04-29 12:23:08+09:00,noreply@github.com,2024-04-29 12:23:08+09:00,Add index selection pass for KQIR planning (#2278),unstable,True,False,17,ir_sema_checker_test.cc,cc,1,1,2
9d9dff26d53579c7816c7b8050cf2272c1ed0ccf,hulk.website@gmail.com,2024-04-29 13:25:40+08:00,noreply@github.com,2024-04-29 13:25:40+08:00,Fix the error logging when the importer is not in a started state (#2280),unstable,True,False,2,cluster.cc,cc,5,5,10
9d9dff26d53579c7816c7b8050cf2272c1ed0ccf,hulk.website@gmail.com,2024-04-29 13:25:40+08:00,noreply@github.com,2024-04-29 13:25:40+08:00,Fix the error logging when the importer is not in a started state (#2280),unstable,True,False,2,slot_import.cc,cc,2,1,3
1834ce81823fb5fa1442c24b9d7a84f950438124,twice.mliu@gmail.com,2024-04-30 01:02:25+09:00,noreply@github.com,2024-04-30 01:02:25+09:00,Fix plan operator child iterator in KQIR (#2282),unstable,True,False,2,ir_plan.h,h,11,5,16
1834ce81823fb5fa1442c24b9d7a84f950438124,twice.mliu@gmail.com,2024-04-30 01:02:25+09:00,noreply@github.com,2024-04-30 01:02:25+09:00,Fix plan operator child iterator in KQIR (#2282),unstable,True,False,2,ir_dot_dumper_test.cc,cc,59,0,59
9b2ee7e4b2f9ebcaf49692157c99077e9de49cf8,AntiTopQuark1350@outlook.com,2024-04-30 12:17:20+08:00,noreply@github.com,2024-04-30 12:17:20+08:00,Use the QUICKLIST encoding to dump the list payload to compatible with Redis >= 4 (#2277),unstable,True,False,5,rdb.cc,cc,34,7,41
9b2ee7e4b2f9ebcaf49692157c99077e9de49cf8,AntiTopQuark1350@outlook.com,2024-04-30 12:17:20+08:00,noreply@github.com,2024-04-30 12:17:20+08:00,Use the QUICKLIST encoding to dump the list payload to compatible with Redis >= 4 (#2277),unstable,True,False,5,rdb.h,h,1,0,1
9b2ee7e4b2f9ebcaf49692157c99077e9de49cf8,AntiTopQuark1350@outlook.com,2024-04-30 12:17:20+08:00,noreply@github.com,2024-04-30 12:17:20+08:00,Use the QUICKLIST encoding to dump the list payload to compatible with Redis >= 4 (#2277),unstable,True,False,5,rdb_ziplist.cc,cc,74,7,81
9b2ee7e4b2f9ebcaf49692157c99077e9de49cf8,AntiTopQuark1350@outlook.com,2024-04-30 12:17:20+08:00,noreply@github.com,2024-04-30 12:17:20+08:00,Use the QUICKLIST encoding to dump the list payload to compatible with Redis >= 4 (#2277),unstable,True,False,5,rdb_ziplist.h,h,12,0,12
9b2ee7e4b2f9ebcaf49692157c99077e9de49cf8,AntiTopQuark1350@outlook.com,2024-04-30 12:17:20+08:00,noreply@github.com,2024-04-30 12:17:20+08:00,Use the QUICKLIST encoding to dump the list payload to compatible with Redis >= 4 (#2277),unstable,True,False,5,dump_test.go,go,11,0,11
a6d8386ed407f28af4ff8d91fcb358dfd652ccd7,127465317+jackyyyyyssss@users.noreply.github.com,2024-04-30 18:52:50+08:00,noreply@github.com,2024-04-30 18:52:50+08:00,"Fix  JSON.STRLEN not_exists return null (#2285)

Co-authored-by: 80597928 <673421862@qq.com>",unstable,True,False,2,cmd_json.cc,cc,5,0,5
a6d8386ed407f28af4ff8d91fcb358dfd652ccd7,127465317+jackyyyyyssss@users.noreply.github.com,2024-04-30 18:52:50+08:00,noreply@github.com,2024-04-30 18:52:50+08:00,"Fix  JSON.STRLEN not_exists return null (#2285)

Co-authored-by: 80597928 <673421862@qq.com>",unstable,True,False,2,json_test.go,go,1,0,1
76757e118052ec7a1ffa121c40276e264c215c98,jihuayu123@gmail.com,2024-05-01 21:56:40+08:00,noreply@github.com,2024-05-01 21:56:40+08:00,"Improve code style in cluster (#2272)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,2,cluster.cc,cc,48,48,96
76757e118052ec7a1ffa121c40276e264c215c98,jihuayu123@gmail.com,2024-05-01 21:56:40+08:00,noreply@github.com,2024-05-01 21:56:40+08:00,"Improve code style in cluster (#2272)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,2,cluster.h,h,6,6,12
7bbacc894c42e7b8fada15505fff8a0779203383,aleks.raiden@gmail.com,2024-05-03 03:41:34+03:00,noreply@github.com,2024-05-03 08:41:34+08:00,Using ubuntu-22.04 for build docker image  (#2286),unstable,True,False,1,kvrocks.yaml,yaml,1,1,2
021c7de21cb02cdc0f74bc6c744d5317497eb76d,aleks.raiden@gmail.com,2024-05-03 15:24:40+03:00,noreply@github.com,2024-05-03 21:24:40+09:00,Bump jsoncons to v0.175.0 (#2288),unstable,True,False,1,jsoncons.cmake,cmake,2,2,4
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,filter_executor.h,h,129,0,129
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,full_index_scan_executor.h,h,76,0,76
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,limit_executor.h,h,57,0,57
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,merge_executor.h,h,54,0,54
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,mock_executor.h,h,57,0,57
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,noop_executor.h,h,35,0,35
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,projection_executor.h,h,59,0,59
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,sort_executor.h,h,39,0,39
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,topn_sort_executor.h,h,104,0,104
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,index_info.h,h,2,1,3
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,indexer.cc,cc,2,2,4
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,ir.h,h,9,0,9
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,ir_sema_checker.h,h,1,1,2
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,plan_executor.cc,cc,149,0,149
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,plan_executor.h,h,101,0,101
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,search_encoding.h,h,10,0,10
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,indexer_test.cc,cc,10,10,20
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,ir_dot_dumper_test.cc,cc,8,8,16
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,ir_pass_test.cc,cc,7,7,14
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,ir_sema_checker_test.cc,cc,5,5,10
dfffffefffd1bd693eb5ae9078a46debabddb6de,twice.mliu@gmail.com,2024-05-04 11:52:31+09:00,noreply@github.com,2024-05-04 11:52:31+09:00,Add plan executors for KQIR via iterator model (#2281),unstable,True,False,21,plan_executor_test.cc,cc,297,0,297
02ff978955758adfa689062b9abdd1d4e1c300b8,twice.mliu@gmail.com,2024-05-04 21:08:00+09:00,noreply@github.com,2024-05-04 21:08:00+09:00,Add plan executor for KQIR numeric/tag scan operator (#2289),unstable,True,False,6,encoding.h,h,15,0,15
02ff978955758adfa689062b9abdd1d4e1c300b8,twice.mliu@gmail.com,2024-05-04 21:08:00+09:00,noreply@github.com,2024-05-04 21:08:00+09:00,Add plan executor for KQIR numeric/tag scan operator (#2289),unstable,True,False,6,numeric_field_scan_executor.h,h,113,0,113
02ff978955758adfa689062b9abdd1d4e1c300b8,twice.mliu@gmail.com,2024-05-04 21:08:00+09:00,noreply@github.com,2024-05-04 21:08:00+09:00,Add plan executor for KQIR numeric/tag scan operator (#2289),unstable,True,False,6,tag_field_scan_executor.h,h,100,0,100
02ff978955758adfa689062b9abdd1d4e1c300b8,twice.mliu@gmail.com,2024-05-04 21:08:00+09:00,noreply@github.com,2024-05-04 21:08:00+09:00,Add plan executor for KQIR numeric/tag scan operator (#2289),unstable,True,False,6,plan_executor.cc,cc,14,0,14
02ff978955758adfa689062b9abdd1d4e1c300b8,twice.mliu@gmail.com,2024-05-04 21:08:00+09:00,noreply@github.com,2024-05-04 21:08:00+09:00,Add plan executor for KQIR numeric/tag scan operator (#2289),unstable,True,False,6,search_encoding.h,h,5,10,15
02ff978955758adfa689062b9abdd1d4e1c300b8,twice.mliu@gmail.com,2024-05-04 21:08:00+09:00,noreply@github.com,2024-05-04 21:08:00+09:00,Add plan executor for KQIR numeric/tag scan operator (#2289),unstable,True,False,6,plan_executor_test.cc,cc,119,0,119
82f03ca5edc6640a46a8f26d63ceb9385f30f744,twice.mliu@gmail.com,2024-05-05 15:03:13+09:00,noreply@github.com,2024-05-05 15:03:13+09:00,Move logo acknowledgement to NOTICE (#2290),unstable,True,False,2,NOTICE,None,4,0,4
82f03ca5edc6640a46a8f26d63ceb9385f30f744,twice.mliu@gmail.com,2024-05-05 15:03:13+09:00,noreply@github.com,2024-05-05 15:03:13+09:00,Move logo acknowledgement to NOTICE (#2290),unstable,True,False,2,README.md,md,0,2,2
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,replication.cc,cc,1,1,2
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,replication.h,h,2,2,4
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,cmd_replication.cc,cc,4,4,8
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,cmd_stream.cc,cc,3,3,6
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,cron.cc,cc,1,1,2
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,cron.h,h,1,1,2
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,time_util.h,h,1,0,1
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,server.cc,cc,37,36,73
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,server.h,h,7,6,13
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,stats.cc,cc,4,4,8
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,stats.h,h,2,2,4
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,rdb.cc,cc,10,11,21
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,storage.cc,cc,17,16,33
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,storage.h,h,9,6,15
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,redis_stream.cc,cc,12,12,24
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,redis_stream_base.h,h,3,3,6
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,redis_string.cc,cc,10,10,20
93ce7925b26d619ad81c077191ddd69a7fb55d42,maplewish117@gmail.com,2024-05-07 14:01:25+08:00,noreply@github.com,2024-05-07 14:01:25+08:00,"Trying to add the unit of time in variable name (#2276)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,18,redis_string.h,h,8,7,15
3b8c69fa33967bd3e3f623ffcb8f2591dd7ea340,zhousile@foxmail.com,2024-05-07 15:02:38+08:00,noreply@github.com,2024-05-07 15:02:38+08:00,"Add support of the SORT command (#2262)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,4,cmd_key.cc,cc,117,1,118
3b8c69fa33967bd3e3f623ffcb8f2591dd7ea340,zhousile@foxmail.com,2024-05-07 15:02:38+08:00,noreply@github.com,2024-05-07 15:02:38+08:00,"Add support of the SORT command (#2262)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,4,redis_db.cc,cc,212,0,212
3b8c69fa33967bd3e3f623ffcb8f2591dd7ea340,zhousile@foxmail.com,2024-05-07 15:02:38+08:00,noreply@github.com,2024-05-07 15:02:38+08:00,"Add support of the SORT command (#2262)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,4,redis_db.h,h,63,0,63
3b8c69fa33967bd3e3f623ffcb8f2591dd7ea340,zhousile@foxmail.com,2024-05-07 15:02:38+08:00,noreply@github.com,2024-05-07 15:02:38+08:00,"Add support of the SORT command (#2262)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,4,sort_test.go,go,881,0,881
d0b13bd1fd7c0b5c13868dbfffc114304c74f720,hulk.website@gmail.com,2024-05-07 21:48:41+08:00,noreply@github.com,2024-05-07 21:48:41+08:00,Remove the performance benchmark result section in README.md (#2299),unstable,True,False,4,README.md,md,0,35,35
82e0219eef119aa334b46eb72280e621c5d4e520,twice.mliu@gmail.com,2024-05-10 11:56:18+09:00,noreply@github.com,2024-05-10 11:56:18+09:00,Add README for KQIR (#2304),unstable,True,False,2,KQIR.png,png,0,0,0
82e0219eef119aa334b46eb72280e621c5d4e520,twice.mliu@gmail.com,2024-05-10 11:56:18+09:00,noreply@github.com,2024-05-10 11:56:18+09:00,Add README for KQIR (#2304),unstable,True,False,2,README.md,md,27,0,27
23370922986f9fa45773f004315f8b9e03d1c431,twice.mliu@gmail.com,2024-05-11 14:24:03+09:00,noreply@github.com,2024-05-11 14:24:03+09:00,Fix minica version in CI workflow to prevent TLS test failure (#2307),unstable,True,False,1,kvrocks.yaml,yaml,1,1,2
b2347f31ef39f982067f41cd0310f7c802cc787a,raffertyyu@tencent.com,2024-05-11 14:25:12+08:00,noreply@github.com,2024-05-11 14:25:12+08:00,"Fix compiler warnings in KQIR and RDB (#2303)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,filter_executor.h,h,3,0,3
b2347f31ef39f982067f41cd0310f7c802cc787a,raffertyyu@tencent.com,2024-05-11 14:25:12+08:00,noreply@github.com,2024-05-11 14:25:12+08:00,"Fix compiler warnings in KQIR and RDB (#2303)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,rdb_ziplist.cc,cc,1,1,2
1e23484fbd88a7169859e66f398dd695fdf36128,54363053+13015517713@users.noreply.github.com,2024-05-11 15:58:26+08:00,noreply@github.com,2024-05-11 15:58:26+08:00,"Optimize the implementation of IntervalSet intersection (#2300)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,redis_slot.cc,cc,0,2,2
1e23484fbd88a7169859e66f398dd695fdf36128,54363053+13015517713@users.noreply.github.com,2024-05-11 15:58:26+08:00,noreply@github.com,2024-05-11 15:58:26+08:00,"Optimize the implementation of IntervalSet intersection (#2300)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,interval.h,h,24,3,27
1e23484fbd88a7169859e66f398dd695fdf36128,54363053+13015517713@users.noreply.github.com,2024-05-11 15:58:26+08:00,noreply@github.com,2024-05-11 15:58:26+08:00,"Optimize the implementation of IntervalSet intersection (#2300)

Co-authored-by: mwish <maplewish117@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,interval_test.cc,cc,23,3,26
a0dae44d2f2cbf37fdeecbffcb3e16b7b2c3ff12,68083940+Beihao-Zhou@users.noreply.github.com,2024-05-13 05:53:28-04:00,noreply@github.com,2024-05-13 17:53:28+08:00,"Add support of the command XCLAIM (#2202)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,5,cmd_stream.cc,cc,123,0,123
a0dae44d2f2cbf37fdeecbffcb3e16b7b2c3ff12,68083940+Beihao-Zhou@users.noreply.github.com,2024-05-13 05:53:28-04:00,noreply@github.com,2024-05-13 17:53:28+08:00,"Add support of the command XCLAIM (#2202)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,5,redis_stream.cc,cc,132,0,132
a0dae44d2f2cbf37fdeecbffcb3e16b7b2c3ff12,68083940+Beihao-Zhou@users.noreply.github.com,2024-05-13 05:53:28-04:00,noreply@github.com,2024-05-13 17:53:28+08:00,"Add support of the command XCLAIM (#2202)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,5,redis_stream.h,h,4,0,4
a0dae44d2f2cbf37fdeecbffcb3e16b7b2c3ff12,68083940+Beihao-Zhou@users.noreply.github.com,2024-05-13 05:53:28-04:00,noreply@github.com,2024-05-13 17:53:28+08:00,"Add support of the command XCLAIM (#2202)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,5,redis_stream_base.h,h,17,0,17
a0dae44d2f2cbf37fdeecbffcb3e16b7b2c3ff12,68083940+Beihao-Zhou@users.noreply.github.com,2024-05-13 05:53:28-04:00,noreply@github.com,2024-05-13 17:53:28+08:00,"Add support of the command XCLAIM (#2202)

Co-authored-by: 纪华裕 <jihuayu123@gmail.com>",unstable,True,False,5,stream_test.go,go,171,0,171
a538b90b28527212d226c8dd6cb3136ed656b89f,maplewish117@gmail.com,2024-05-13 21:09:03+08:00,noreply@github.com,2024-05-13 22:09:03+09:00,"Add UBSan build support and UBSan CI workflow (#2298)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,4,kvrocks.yaml,yaml,5,0,5
a538b90b28527212d226c8dd6cb3136ed656b89f,maplewish117@gmail.com,2024-05-13 21:09:03+08:00,noreply@github.com,2024-05-13 22:09:03+09:00,"Add UBSan build support and UBSan CI workflow (#2298)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,4,CMakeLists.txt,txt,28,0,28
a538b90b28527212d226c8dd6cb3136ed656b89f,maplewish117@gmail.com,2024-05-13 21:09:03+08:00,noreply@github.com,2024-05-13 22:09:03+09:00,"Add UBSan build support and UBSan CI workflow (#2298)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,4,cmd_replication.cc,cc,9,7,16
a538b90b28527212d226c8dd6cb3136ed656b89f,maplewish117@gmail.com,2024-05-13 21:09:03+08:00,noreply@github.com,2024-05-13 22:09:03+09:00,"Add UBSan build support and UBSan CI workflow (#2298)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,4,ir_iterator.h,h,1,0,1
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,replication.cc,cc,4,3,7
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,slot_migrate.cc,cc,13,5,18
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,full_index_scan_executor.h,h,1,2,3
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,numeric_field_scan_executor.h,h,1,2,3
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,tag_field_scan_executor.h,h,1,2,3
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,indexer.cc,cc,2,2,4
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,namespace.h,h,2,3,5
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,server.cc,cc,8,9,17
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,disk_stats.cc,cc,8,8,16
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,batch_extractor.cc,cc,8,8,16
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,compaction_checker.cc,cc,8,7,15
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,compaction_checker.h,h,1,1,2
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,iterator.cc,cc,6,4,10
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,redis_db.cc,cc,5,4,9
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,redis_pubsub.h,h,2,1,3
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,scripting.cc,cc,3,3,6
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,storage.cc,cc,18,34,52
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,storage.h,h,91,19,110
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,redis_stream.h,h,1,1,2
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,redis_string.cc,cc,2,2,4
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,redis_zset.h,h,1,1,2
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,compact_test.cc,cc,9,9,18
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,indexer_test.cc,cc,2,2,4
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,iterator_test.cc,cc,14,14,28
90e05f19a20cf8a852dd51059a7f5fbc23d6fb76,maplewish117@gmail.com,2024-05-14 19:34:57+08:00,noreply@github.com,2024-05-14 20:34:57+09:00,Refactor Column Family Handling (#2296),unstable,True,False,25,parser.cc,cc,1,1,2
a6f0de2256cece9d51e64b8d4bec4fe62719f8e1,101383635+VasuDevrani@users.noreply.github.com,2024-05-15 15:11:29+05:30,noreply@github.com,2024-05-15 17:41:29+08:00,Set new data type encoding ON by default (#2311),unstable,True,False,1,CMakeLists.txt,txt,1,1,2
15d81f05b3dfb8b936dc54a6fe8bd1fd58960e67,101383635+VasuDevrani@users.noreply.github.com,2024-05-17 17:04:26+05:30,noreply@github.com,2024-05-17 20:34:26+09:00,"Improve logging message for retryable background IO errors (#2317)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Myth <caipengbo@outlook.com>",unstable,True,False,1,server.cc,cc,6,2,8
d5b724aff55cd9e5d17105cb49d49dcd5f6a00c5,hulk.website@gmail.com,2024-05-18 22:11:52+08:00,noreply@github.com,2024-05-18 22:11:52+08:00,Remove x.py build inside sonar.yml (#2320),unstable,True,False,1,sonar.yaml,yaml,0,3,3
60c1f7e2c8713243436f52a16ab1a55ac9013524,hulk.website@gmail.com,2024-05-19 16:49:14+08:00,noreply@github.com,2024-05-19 16:49:14+08:00,Upload build artifact for the sonar scan (#2321),unstable,True,False,2,kvrocks.yaml,yaml,5,1,6
60c1f7e2c8713243436f52a16ab1a55ac9013524,hulk.website@gmail.com,2024-05-19 16:49:14+08:00,noreply@github.com,2024-05-19 16:49:14+08:00,Upload build artifact for the sonar scan (#2321),unstable,True,False,2,sonar.yaml,yaml,3,2,5
acddc28de42ca41d64feea78691d877a2297932c,hulk.website@gmail.com,2024-05-20 09:45:31+08:00,noreply@github.com,2024-05-20 09:45:31+08:00,Fix missing temp dir while running sonar scan (#2322),unstable,True,False,1,sonar.yaml,yaml,1,0,1
9b1ebcd65a111ab8f8aded158d7427b7409ec4cc,aleks.raiden@gmail.com,2024-05-22 12:38:01+03:00,noreply@github.com,2024-05-22 18:38:01+09:00,Bump Snappy v1.2.1 (#2325),unstable,True,False,1,snappy.cmake,cmake,2,2,4
b42259eb536e3cd88ffd072a9fa409f5d7fede1d,twice.mliu@gmail.com,2024-05-26 13:15:31+09:00,noreply@github.com,2024-05-26 13:15:31+09:00,Set ENABLE_NEW_ENCODING=FALSE in CI workflow (#2333),unstable,True,False,1,kvrocks.yaml,yaml,4,4,8
ff05ed0ebcf8bbc74867a2d25e7d0a405d84c704,aleks.raiden@gmail.com,2024-05-27 08:31:17+03:00,noreply@github.com,2024-05-27 13:31:17+08:00,"Use hset instead of hmset at test kvrocks2redis (#2328)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,check_consistency.py,py,2,2,4
479338deddfba1dee8f8d36ad32c1528b860e3da,aleks.raiden@gmail.com,2024-05-29 12:23:58+03:00,noreply@github.com,2024-05-29 18:23:58+09:00,Remove 'ps aux' command from kvrocks2redis test in CI (#2337),unstable,True,False,1,kvrocks.yaml,yaml,0,1,1
5e99b276e5983acc142a7606fd62445b4914b41a,twice.mliu@gmail.com,2024-05-29 21:17:50+09:00,noreply@github.com,2024-05-29 21:17:50+09:00,Improve RESP handling code in replication (#2334),unstable,True,False,10,replication.cc,cc,18,15,33
5e99b276e5983acc142a7606fd62445b4914b41a,twice.mliu@gmail.com,2024-05-29 21:17:50+09:00,noreply@github.com,2024-05-29 21:17:50+09:00,Improve RESP handling code in replication (#2334),unstable,True,False,10,replication.h,h,3,3,6
5e99b276e5983acc142a7606fd62445b4914b41a,twice.mliu@gmail.com,2024-05-29 21:17:50+09:00,noreply@github.com,2024-05-29 21:17:50+09:00,Improve RESP handling code in replication (#2334),unstable,True,False,10,cmd_replication.cc,cc,3,2,5
5e99b276e5983acc142a7606fd62445b4914b41a,twice.mliu@gmail.com,2024-05-29 21:17:50+09:00,noreply@github.com,2024-05-29 21:17:50+09:00,Improve RESP handling code in replication (#2334),unstable,True,False,10,cmd_server.cc,cc,3,1,4
5e99b276e5983acc142a7606fd62445b4914b41a,twice.mliu@gmail.com,2024-05-29 21:17:50+09:00,noreply@github.com,2024-05-29 21:17:50+09:00,Improve RESP handling code in replication (#2334),unstable,True,False,10,error_constants.h,h,2,0,2
5e99b276e5983acc142a7606fd62445b4914b41a,twice.mliu@gmail.com,2024-05-29 21:17:50+09:00,noreply@github.com,2024-05-29 21:17:50+09:00,Improve RESP handling code in replication (#2334),unstable,True,False,10,event_util.h,h,3,0,3
5e99b276e5983acc142a7606fd62445b4914b41a,twice.mliu@gmail.com,2024-05-29 21:17:50+09:00,noreply@github.com,2024-05-29 21:17:50+09:00,Improve RESP handling code in replication (#2334),unstable,True,False,10,redis_connection.cc,cc,5,3,8
5e99b276e5983acc142a7606fd62445b4914b41a,twice.mliu@gmail.com,2024-05-29 21:17:50+09:00,noreply@github.com,2024-05-29 21:17:50+09:00,Improve RESP handling code in replication (#2334),unstable,True,False,10,redis_reply.cc,cc,2,2,4
5e99b276e5983acc142a7606fd62445b4914b41a,twice.mliu@gmail.com,2024-05-29 21:17:50+09:00,noreply@github.com,2024-05-29 21:17:50+09:00,Improve RESP handling code in replication (#2334),unstable,True,False,10,redis_reply.h,h,3,1,4
5e99b276e5983acc142a7606fd62445b4914b41a,twice.mliu@gmail.com,2024-05-29 21:17:50+09:00,noreply@github.com,2024-05-29 21:17:50+09:00,Improve RESP handling code in replication (#2334),unstable,True,False,10,hello_test.go,go,2,2,4
3bdf1ecf3cb23007fbfb68b5275f644719f91f43,85615957+Yangsx-1@users.noreply.github.com,2024-05-30 17:15:48+08:00,noreply@github.com,2024-05-30 17:15:48+08:00,Rename last_idle_ms and last_active_ms in stream consumer metadata (#2341),unstable,True,False,3,cmd_stream.cc,cc,2,2,4
3bdf1ecf3cb23007fbfb68b5275f644719f91f43,85615957+Yangsx-1@users.noreply.github.com,2024-05-30 17:15:48+08:00,noreply@github.com,2024-05-30 17:15:48+08:00,Rename last_idle_ms and last_active_ms in stream consumer metadata (#2341),unstable,True,False,3,redis_stream.cc,cc,10,10,20
3bdf1ecf3cb23007fbfb68b5275f644719f91f43,85615957+Yangsx-1@users.noreply.github.com,2024-05-30 17:15:48+08:00,noreply@github.com,2024-05-30 17:15:48+08:00,Rename last_idle_ms and last_active_ms in stream consumer metadata (#2341),unstable,True,False,3,redis_stream_base.h,h,2,2,4
5e0445573313ea564eaf19ba0ea5176e9caf9ec4,127465317+jackyyyyyssss@users.noreply.github.com,2024-05-30 19:18:56+08:00,noreply@github.com,2024-05-30 20:18:56+09:00,"Fix JSON.[STRLEN|OBJLEN] response inconsistently with Redis when the path doesn't exist (#2336)

Co-authored-by: 80597928 <673421862@qq.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,cmd_json.cc,cc,12,4,16
5e0445573313ea564eaf19ba0ea5176e9caf9ec4,127465317+jackyyyyyssss@users.noreply.github.com,2024-05-30 19:18:56+08:00,noreply@github.com,2024-05-30 20:18:56+09:00,"Fix JSON.[STRLEN|OBJLEN] response inconsistently with Redis when the path doesn't exist (#2336)

Co-authored-by: 80597928 <673421862@qq.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,json_test.go,go,6,2,8
bd3c0532e6f959098331e51f0b9459a4ce872d17,twice.mliu@gmail.com,2024-05-31 00:08:09+09:00,noreply@github.com,2024-05-31 00:08:09+09:00,Implement the new encoding for search framework (#2338),unstable,True,False,16,filter_executor.h,h,1,1,2
bd3c0532e6f959098331e51f0b9459a4ce872d17,twice.mliu@gmail.com,2024-05-31 00:08:09+09:00,noreply@github.com,2024-05-31 00:08:09+09:00,Implement the new encoding for search framework (#2338),unstable,True,False,16,numeric_field_scan_executor.h,h,24,21,45
bd3c0532e6f959098331e51f0b9459a4ce872d17,twice.mliu@gmail.com,2024-05-31 00:08:09+09:00,noreply@github.com,2024-05-31 00:08:09+09:00,Implement the new encoding for search framework (#2338),unstable,True,False,16,tag_field_scan_executor.h,h,25,23,48
bd3c0532e6f959098331e51f0b9459a4ce872d17,twice.mliu@gmail.com,2024-05-31 00:08:09+09:00,noreply@github.com,2024-05-31 00:08:09+09:00,Implement the new encoding for search framework (#2338),unstable,True,False,16,index_info.h,h,6,6,12
bd3c0532e6f959098331e51f0b9459a4ce872d17,twice.mliu@gmail.com,2024-05-31 00:08:09+09:00,noreply@github.com,2024-05-31 00:08:09+09:00,Implement the new encoding for search framework (#2338),unstable,True,False,16,indexer.cc,cc,84,75,159
bd3c0532e6f959098331e51f0b9459a4ce872d17,twice.mliu@gmail.com,2024-05-31 00:08:09+09:00,noreply@github.com,2024-05-31 00:08:09+09:00,Implement the new encoding for search framework (#2338),unstable,True,False,16,indexer.h,h,6,1,7
bd3c0532e6f959098331e51f0b9459a4ce872d17,twice.mliu@gmail.com,2024-05-31 00:08:09+09:00,noreply@github.com,2024-05-31 00:08:09+09:00,Implement the new encoding for search framework (#2338),unstable,True,False,16,ir_sema_checker.h,h,2,2,4
bd3c0532e6f959098331e51f0b9459a4ce872d17,twice.mliu@gmail.com,2024-05-31 00:08:09+09:00,noreply@github.com,2024-05-31 00:08:09+09:00,Implement the new encoding for search framework (#2338),unstable,True,False,16,index_selection.h,h,1,1,2
bd3c0532e6f959098331e51f0b9459a4ce872d17,twice.mliu@gmail.com,2024-05-31 00:08:09+09:00,noreply@github.com,2024-05-31 00:08:09+09:00,Implement the new encoding for search framework (#2338),unstable,True,False,16,search_encoding.h,h,146,44,190
bd3c0532e6f959098331e51f0b9459a4ce872d17,twice.mliu@gmail.com,2024-05-31 00:08:09+09:00,noreply@github.com,2024-05-31 00:08:09+09:00,Implement the new encoding for search framework (#2338),unstable,True,False,16,redis_metadata.cc,cc,1,18,19
bd3c0532e6f959098331e51f0b9459a4ce872d17,twice.mliu@gmail.com,2024-05-31 00:08:09+09:00,noreply@github.com,2024-05-31 00:08:09+09:00,Implement the new encoding for search framework (#2338),unstable,True,False,16,redis_metadata.h,h,0,16,16
bd3c0532e6f959098331e51f0b9459a4ce872d17,twice.mliu@gmail.com,2024-05-31 00:08:09+09:00,noreply@github.com,2024-05-31 00:08:09+09:00,Implement the new encoding for search framework (#2338),unstable,True,False,16,indexer_test.cc,cc,40,72,112
bd3c0532e6f959098331e51f0b9459a4ce872d17,twice.mliu@gmail.com,2024-05-31 00:08:09+09:00,noreply@github.com,2024-05-31 00:08:09+09:00,Implement the new encoding for search framework (#2338),unstable,True,False,16,ir_dot_dumper_test.cc,cc,7,6,13
bd3c0532e6f959098331e51f0b9459a4ce872d17,twice.mliu@gmail.com,2024-05-31 00:08:09+09:00,noreply@github.com,2024-05-31 00:08:09+09:00,Implement the new encoding for search framework (#2338),unstable,True,False,16,ir_pass_test.cc,cc,6,6,12
bd3c0532e6f959098331e51f0b9459a4ce872d17,twice.mliu@gmail.com,2024-05-31 00:08:09+09:00,noreply@github.com,2024-05-31 00:08:09+09:00,Implement the new encoding for search framework (#2338),unstable,True,False,16,ir_sema_checker_test.cc,cc,4,4,8
bd3c0532e6f959098331e51f0b9459a4ce872d17,twice.mliu@gmail.com,2024-05-31 00:08:09+09:00,noreply@github.com,2024-05-31 00:08:09+09:00,Implement the new encoding for search framework (#2338),unstable,True,False,16,plan_executor_test.cc,cc,5,5,10
c750a167e2ebac3244b73a1189920aadd83ede26,twice.mliu@gmail.com,2024-05-31 12:27:05+09:00,noreply@github.com,2024-05-31 12:27:05+09:00,ci(pr-lint): force the PR title to follow the conventional commits (#2342),unstable,True,False,1,pr-lint.yaml,yaml,91,0,91
a4982669419a06b6e467372c32a72d91d7e8d55a,twice.mliu@gmail.com,2024-05-31 20:07:40+09:00,noreply@github.com,2024-05-31 20:07:40+09:00,chore(storage): remove FindKeyRangeWithPrefix and fix DeleteRange (#2343),unstable,True,False,7,cmd_server.cc,cc,2,12,14
a4982669419a06b6e467372c32a72d91d7e8d55a,twice.mliu@gmail.com,2024-05-31 20:07:40+09:00,noreply@github.com,2024-05-31 20:07:40+09:00,chore(storage): remove FindKeyRangeWithPrefix and fix DeleteRange (#2343),unstable,True,False,7,string_util.cc,cc,10,0,10
a4982669419a06b6e467372c32a72d91d7e8d55a,twice.mliu@gmail.com,2024-05-31 20:07:40+09:00,noreply@github.com,2024-05-31 20:07:40+09:00,chore(storage): remove FindKeyRangeWithPrefix and fix DeleteRange (#2343),unstable,True,False,7,string_util.h,h,1,0,1
a4982669419a06b6e467372c32a72d91d7e8d55a,twice.mliu@gmail.com,2024-05-31 20:07:40+09:00,noreply@github.com,2024-05-31 20:07:40+09:00,chore(storage): remove FindKeyRangeWithPrefix and fix DeleteRange (#2343),unstable,True,False,7,redis_db.cc,cc,4,55,59
a4982669419a06b6e467372c32a72d91d7e8d55a,twice.mliu@gmail.com,2024-05-31 20:07:40+09:00,noreply@github.com,2024-05-31 20:07:40+09:00,chore(storage): remove FindKeyRangeWithPrefix and fix DeleteRange (#2343),unstable,True,False,7,redis_db.h,h,0,3,3
a4982669419a06b6e467372c32a72d91d7e8d55a,twice.mliu@gmail.com,2024-05-31 20:07:40+09:00,noreply@github.com,2024-05-31 20:07:40+09:00,chore(storage): remove FindKeyRangeWithPrefix and fix DeleteRange (#2343),unstable,True,False,7,storage.cc,cc,9,13,22
a4982669419a06b6e467372c32a72d91d7e8d55a,twice.mliu@gmail.com,2024-05-31 20:07:40+09:00,noreply@github.com,2024-05-31 20:07:40+09:00,chore(storage): remove FindKeyRangeWithPrefix and fix DeleteRange (#2343),unstable,True,False,7,storage.h,h,3,1,4
3557ad3f9f862ea421f5a94ec6d026b3517487e0,127465317+jackyyyyyssss@users.noreply.github.com,2024-05-31 22:24:54+08:00,noreply@github.com,2024-05-31 23:24:54+09:00,"feat(json): add support of the command JSON.DEBUG MEMORY (#2323)

Co-authored-by: 80597928 <673421862@qq.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,cmd_json.cc,cc,44,1,45
3557ad3f9f862ea421f5a94ec6d026b3517487e0,127465317+jackyyyyyssss@users.noreply.github.com,2024-05-31 22:24:54+08:00,noreply@github.com,2024-05-31 23:24:54+09:00,"feat(json): add support of the command JSON.DEBUG MEMORY (#2323)

Co-authored-by: 80597928 <673421862@qq.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,json.h,h,24,0,24
3557ad3f9f862ea421f5a94ec6d026b3517487e0,127465317+jackyyyyyssss@users.noreply.github.com,2024-05-31 22:24:54+08:00,noreply@github.com,2024-05-31 23:24:54+09:00,"feat(json): add support of the command JSON.DEBUG MEMORY (#2323)

Co-authored-by: 80597928 <673421862@qq.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,redis_json.cc,cc,20,0,20
3557ad3f9f862ea421f5a94ec6d026b3517487e0,127465317+jackyyyyyssss@users.noreply.github.com,2024-05-31 22:24:54+08:00,noreply@github.com,2024-05-31 23:24:54+09:00,"feat(json): add support of the command JSON.DEBUG MEMORY (#2323)

Co-authored-by: 80597928 <673421862@qq.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,redis_json.h,h,1,0,1
3557ad3f9f862ea421f5a94ec6d026b3517487e0,127465317+jackyyyyyssss@users.noreply.github.com,2024-05-31 22:24:54+08:00,noreply@github.com,2024-05-31 23:24:54+09:00,"feat(json): add support of the command JSON.DEBUG MEMORY (#2323)

Co-authored-by: 80597928 <673421862@qq.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,json_test.go,go,23,0,23
6baed12dc7776c6a4a199993bd93d317f876fb2a,twice.mliu@gmail.com,2024-06-01 15:15:52+09:00,noreply@github.com,2024-06-01 15:15:52+09:00,fix(json): NumOp crash on large numbers (#2345),unstable,True,False,4,json.h,h,20,18,38
6baed12dc7776c6a4a199993bd93d317f876fb2a,twice.mliu@gmail.com,2024-06-01 15:15:52+09:00,noreply@github.com,2024-06-01 15:15:52+09:00,fix(json): NumOp crash on large numbers (#2345),unstable,True,False,4,redis_json.cc,cc,3,4,7
6baed12dc7776c6a4a199993bd93d317f876fb2a,twice.mliu@gmail.com,2024-06-01 15:15:52+09:00,noreply@github.com,2024-06-01 15:15:52+09:00,fix(json): NumOp crash on large numbers (#2345),unstable,True,False,4,json_test.cc,cc,2,2,4
6baed12dc7776c6a4a199993bd93d317f876fb2a,twice.mliu@gmail.com,2024-06-01 15:15:52+09:00,noreply@github.com,2024-06-01 15:15:52+09:00,fix(json): NumOp crash on large numbers (#2345),unstable,True,False,4,json_test.go,go,3,0,3
d2e0feb989bd5855480deee61ebf932327e5ca93,twice.mliu@gmail.com,2024-06-01 16:32:06+09:00,noreply@github.com,2024-06-01 16:32:06+09:00,feat(search): add index building method to IndexUpdater (#2346),unstable,True,False,9,db_util.h,h,2,0,2
d2e0feb989bd5855480deee61ebf932327e5ca93,twice.mliu@gmail.com,2024-06-01 16:32:06+09:00,noreply@github.com,2024-06-01 16:32:06+09:00,feat(search): add index building method to IndexUpdater (#2346),unstable,True,False,9,index_info.h,h,3,1,4
d2e0feb989bd5855480deee61ebf932327e5ca93,twice.mliu@gmail.com,2024-06-01 16:32:06+09:00,noreply@github.com,2024-06-01 16:32:06+09:00,feat(search): add index building method to IndexUpdater (#2346),unstable,True,False,9,indexer.cc,cc,40,11,51
d2e0feb989bd5855480deee61ebf932327e5ca93,twice.mliu@gmail.com,2024-06-01 16:32:06+09:00,noreply@github.com,2024-06-01 16:32:06+09:00,feat(search): add index building method to IndexUpdater (#2346),unstable,True,False,9,indexer.h,h,7,4,11
d2e0feb989bd5855480deee61ebf932327e5ca93,twice.mliu@gmail.com,2024-06-01 16:32:06+09:00,noreply@github.com,2024-06-01 16:32:06+09:00,feat(search): add index building method to IndexUpdater (#2346),unstable,True,False,9,indexer_test.cc,cc,42,7,49
d2e0feb989bd5855480deee61ebf932327e5ca93,twice.mliu@gmail.com,2024-06-01 16:32:06+09:00,noreply@github.com,2024-06-01 16:32:06+09:00,feat(search): add index building method to IndexUpdater (#2346),unstable,True,False,9,ir_dot_dumper_test.cc,cc,1,1,2
d2e0feb989bd5855480deee61ebf932327e5ca93,twice.mliu@gmail.com,2024-06-01 16:32:06+09:00,noreply@github.com,2024-06-01 16:32:06+09:00,feat(search): add index building method to IndexUpdater (#2346),unstable,True,False,9,ir_pass_test.cc,cc,1,1,2
d2e0feb989bd5855480deee61ebf932327e5ca93,twice.mliu@gmail.com,2024-06-01 16:32:06+09:00,noreply@github.com,2024-06-01 16:32:06+09:00,feat(search): add index building method to IndexUpdater (#2346),unstable,True,False,9,ir_sema_checker_test.cc,cc,1,1,2
d2e0feb989bd5855480deee61ebf932327e5ca93,twice.mliu@gmail.com,2024-06-01 16:32:06+09:00,noreply@github.com,2024-06-01 16:32:06+09:00,feat(search): add index building method to IndexUpdater (#2346),unstable,True,False,9,plan_executor_test.cc,cc,2,3,5
c65e505fa6fe1e248c93aedb2668b8fc7f415bd4,hulk.website@gmail.com,2024-06-02 00:20:38+08:00,noreply@github.com,2024-06-02 00:20:38+08:00,"fix(config): avoid rewriting the config file if it's unnecessary (#2347)

The server will start by rewriting the config file to persist namespace/token pairs
if namespace replication is enabled. But it's unnecessary if the namespace replication
is disabled or no tokens are loaded from the configuration file because the purpose of
this rewrite is to remove tokens from the config file and write them to the database.",unstable,True,False,5,cmd_server.cc,cc,1,1,2
c65e505fa6fe1e248c93aedb2668b8fc7f415bd4,hulk.website@gmail.com,2024-06-02 00:20:38+08:00,noreply@github.com,2024-06-02 00:20:38+08:00,"fix(config): avoid rewriting the config file if it's unnecessary (#2347)

The server will start by rewriting the config file to persist namespace/token pairs
if namespace replication is enabled. But it's unnecessary if the namespace replication
is disabled or no tokens are loaded from the configuration file because the purpose of
this rewrite is to remove tokens from the config file and write them to the database.",unstable,True,False,5,config.cc,cc,10,1,11
c65e505fa6fe1e248c93aedb2668b8fc7f415bd4,hulk.website@gmail.com,2024-06-02 00:20:38+08:00,noreply@github.com,2024-06-02 00:20:38+08:00,"fix(config): avoid rewriting the config file if it's unnecessary (#2347)

The server will start by rewriting the config file to persist namespace/token pairs
if namespace replication is enabled. But it's unnecessary if the namespace replication
is disabled or no tokens are loaded from the configuration file because the purpose of
this rewrite is to remove tokens from the config file and write them to the database.",unstable,True,False,5,namespace.cc,cc,57,36,93
c65e505fa6fe1e248c93aedb2668b8fc7f415bd4,hulk.website@gmail.com,2024-06-02 00:20:38+08:00,noreply@github.com,2024-06-02 00:20:38+08:00,"fix(config): avoid rewriting the config file if it's unnecessary (#2347)

The server will start by rewriting the config file to persist namespace/token pairs
if namespace replication is enabled. But it's unnecessary if the namespace replication
is disabled or no tokens are loaded from the configuration file because the purpose of
this rewrite is to remove tokens from the config file and write them to the database.",unstable,True,False,5,namespace.h,h,7,3,10
c65e505fa6fe1e248c93aedb2668b8fc7f415bd4,hulk.website@gmail.com,2024-06-02 00:20:38+08:00,noreply@github.com,2024-06-02 00:20:38+08:00,"fix(config): avoid rewriting the config file if it's unnecessary (#2347)

The server will start by rewriting the config file to persist namespace/token pairs
if namespace replication is enabled. But it's unnecessary if the namespace replication
is disabled or no tokens are loaded from the configuration file because the purpose of
this rewrite is to remove tokens from the config file and write them to the database.",unstable,True,False,5,namespace_test.go,go,9,0,9
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,cmd_search.cc,cc,289,0,289
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,commander.h,h,28,0,28
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,index_info.h,h,10,1,11
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,index_manager.h,h,209,0,209
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,indexer.cc,cc,5,5,10
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,indexer.h,h,6,3,9
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,ir_sema_checker.h,h,2,1,3
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,search_encoding.h,h,18,1,19
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,namespace.h,h,1,0,1
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,redis_connection.cc,cc,32,0,32
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,server.cc,cc,14,1,15
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,server.h,h,6,0,6
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,compact_filter.h,h,19,0,19
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,storage.cc,cc,8,1,9
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,json.h,h,1,0,1
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,indexer_test.cc,cc,14,14,28
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,ir_dot_dumper_test.cc,cc,2,2,4
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,ir_pass_test.cc,cc,1,2,3
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,ir_sema_checker_test.cc,cc,1,2,3
2d89629854c1100236e1aa84d01c6d838777846e,twice.mliu@gmail.com,2024-06-02 17:04:42+09:00,noreply@github.com,2024-06-02 17:04:42+09:00,feat(search): implement IndexManager and command FT.CREATE|INFO|_LIST|SEARCH|SEARCHSQL (#2349),unstable,True,False,20,plan_executor_test.cc,cc,4,5,9
309ea7b1726a3a6bb874d770f4e6950dcef08358,twice.mliu@gmail.com,2024-06-02 19:52:49+09:00,noreply@github.com,2024-06-02 19:52:49+09:00,feat(search): improve the response format of FT.SEARCH|SEARCHSQL (#2351),unstable,True,False,2,cmd_search.cc,cc,16,18,34
309ea7b1726a3a6bb874d770f4e6950dcef08358,twice.mliu@gmail.com,2024-06-02 19:52:49+09:00,noreply@github.com,2024-06-02 19:52:49+09:00,feat(search): improve the response format of FT.SEARCH|SEARCHSQL (#2351),unstable,True,False,2,index_manager.h,h,1,1,2
5744d1b9c540266a68e1a9ab8d37f5d656650b27,aleks.raiden@gmail.com,2024-06-03 05:28:00+03:00,noreply@github.com,2024-06-03 11:28:00+09:00,build: Change base Docker image from Alpine to Debian (#2348),unstable,True,False,1,Dockerfile,None,7,6,13
eaf6b2e2d292b980e6c65b8f9ec855ae2388ace9,xuxiangad@foxmail.com,2024-06-03 13:13:54+08:00,noreply@github.com,2024-06-03 13:13:54+08:00,"fix(stream): make consumer decrement pending number when message is acknowledged. (#2352)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,redis_stream.cc,cc,22,0,22
eaf6b2e2d292b980e6c65b8f9ec855ae2388ace9,xuxiangad@foxmail.com,2024-06-03 13:13:54+08:00,noreply@github.com,2024-06-03 13:13:54+08:00,"fix(stream): make consumer decrement pending number when message is acknowledged. (#2352)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,stream_test.go,go,35,0,35
9d65dcee4f30fe0de93e2f0af4bb5d492d9faa1a,aleks.raiden@gmail.com,2024-06-03 14:57:48+03:00,noreply@github.com,2024-06-03 20:57:48+09:00,chore: bump rocksdb to v9.2.1 (#2327),unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
02d047dfdf7bc47c964b983bebaa0b8cd4ae72a9,twice.mliu@gmail.com,2024-06-03 22:35:08+09:00,noreply@github.com,2024-06-03 22:35:08+09:00,chore(search): replace KQIR arch graph with a high-resolution one (#2354),unstable,True,False,1,KQIR.png,png,0,0,0
74281828726a6f23f7f192fce496545a83c44aef,twice.mliu@gmail.com,2024-06-04 00:25:10+09:00,noreply@github.com,2024-06-04 00:25:10+09:00,feat(search): add support for command FT.DROPINDEX (#2353),unstable,True,False,5,cmd_search.cc,cc,14,1,15
74281828726a6f23f7f192fce496545a83c44aef,twice.mliu@gmail.com,2024-06-04 00:25:10+09:00,noreply@github.com,2024-06-04 00:25:10+09:00,feat(search): add support for command FT.DROPINDEX (#2353),unstable,True,False,5,index_manager.h,h,38,4,42
74281828726a6f23f7f192fce496545a83c44aef,twice.mliu@gmail.com,2024-06-04 00:25:10+09:00,noreply@github.com,2024-06-04 00:25:10+09:00,feat(search): add support for command FT.DROPINDEX (#2353),unstable,True,False,5,indexer.cc,cc,14,0,14
74281828726a6f23f7f192fce496545a83c44aef,twice.mliu@gmail.com,2024-06-04 00:25:10+09:00,noreply@github.com,2024-06-04 00:25:10+09:00,feat(search): add support for command FT.DROPINDEX (#2353),unstable,True,False,5,indexer.h,h,2,0,2
74281828726a6f23f7f192fce496545a83c44aef,twice.mliu@gmail.com,2024-06-04 00:25:10+09:00,noreply@github.com,2024-06-04 00:25:10+09:00,feat(search): add support for command FT.DROPINDEX (#2353),unstable,True,False,5,search_encoding.h,h,36,0,36
8fc2dc4cec2b86e273bb319e1cf4fab5732782a6,52393536+xiaobiaozhao@users.noreply.github.com,2024-06-04 11:32:18+08:00,noreply@github.com,2024-06-04 11:32:18+08:00,"perf: Set async_io default value to yes (#2308)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,kvrocks.conf,conf,2,2,4
8fc2dc4cec2b86e273bb319e1cf4fab5732782a6,52393536+xiaobiaozhao@users.noreply.github.com,2024-06-04 11:32:18+08:00,noreply@github.com,2024-06-04 11:32:18+08:00,"perf: Set async_io default value to yes (#2308)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,config.cc,cc,1,1,2
8fc2dc4cec2b86e273bb319e1cf4fab5732782a6,52393536+xiaobiaozhao@users.noreply.github.com,2024-06-04 11:32:18+08:00,noreply@github.com,2024-06-04 11:32:18+08:00,"perf: Set async_io default value to yes (#2308)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,hash_test.go,go,41,0,41
8805c9a83cdb98dee72652187734252fa64b6ecc,twice.mliu@gmail.com,2024-06-08 13:56:29+09:00,noreply@github.com,2024-06-08 13:56:29+09:00,feat(search): add support of command FT.EXPLAIN/EXPLAINSQL (#2357),unstable,True,False,2,cmd_search.cc,cc,74,35,109
8805c9a83cdb98dee72652187734252fa64b6ecc,twice.mliu@gmail.com,2024-06-08 13:56:29+09:00,noreply@github.com,2024-06-08 13:56:29+09:00,feat(search): add support of command FT.EXPLAIN/EXPLAINSQL (#2357),unstable,True,False,2,index_manager.h,h,15,2,17
c7a12727aa0c857570fdd952c9b340ab86b6da26,twice.mliu@gmail.com,2024-06-08 19:44:25+09:00,noreply@github.com,2024-06-08 19:44:25+09:00,chore(test): add basic go test cases for search commands (#2356),unstable,True,False,1,search_test.go,go,121,0,121
358bb1d5e886029f1ad5eff9d455bbcba31d973d,twice.mliu@gmail.com,2024-06-10 00:01:32+09:00,noreply@github.com,2024-06-10 00:01:32+09:00,feat(stacktrace): replace backtrace and google::Symbolize with cpptrace (#2358),unstable,True,False,7,CMakeLists.txt,txt,3,1,4
358bb1d5e886029f1ad5eff9d455bbcba31d973d,twice.mliu@gmail.com,2024-06-10 00:01:32+09:00,noreply@github.com,2024-06-10 00:01:32+09:00,feat(stacktrace): replace backtrace and google::Symbolize with cpptrace (#2358),unstable,True,False,7,NOTICE,None,1,0,1
358bb1d5e886029f1ad5eff9d455bbcba31d973d,twice.mliu@gmail.com,2024-06-10 00:01:32+09:00,noreply@github.com,2024-06-10 00:01:32+09:00,feat(stacktrace): replace backtrace and google::Symbolize with cpptrace (#2358),unstable,True,False,7,cpptrace.cmake,cmake,37,0,37
358bb1d5e886029f1ad5eff9d455bbcba31d973d,twice.mliu@gmail.com,2024-06-10 00:01:32+09:00,noreply@github.com,2024-06-10 00:01:32+09:00,feat(stacktrace): replace backtrace and google::Symbolize with cpptrace (#2358),unstable,True,False,7,glog.cmake,cmake,0,1,1
358bb1d5e886029f1ad5eff9d455bbcba31d973d,twice.mliu@gmail.com,2024-06-10 00:01:32+09:00,noreply@github.com,2024-06-10 00:01:32+09:00,feat(stacktrace): replace backtrace and google::Symbolize with cpptrace (#2358),unstable,True,False,7,utils.cmake,cmake,1,0,1
358bb1d5e886029f1ad5eff9d455bbcba31d973d,twice.mliu@gmail.com,2024-06-10 00:01:32+09:00,noreply@github.com,2024-06-10 00:01:32+09:00,feat(stacktrace): replace backtrace and google::Symbolize with cpptrace (#2358),unstable,True,False,7,LICENSE-cpptrace.txt,txt,18,0,18
358bb1d5e886029f1ad5eff9d455bbcba31d973d,twice.mliu@gmail.com,2024-06-10 00:01:32+09:00,noreply@github.com,2024-06-10 00:01:32+09:00,feat(stacktrace): replace backtrace and google::Symbolize with cpptrace (#2358),unstable,True,False,7,signal_util.h,h,7,27,34
9ef83f349baea553afad43acf00ac7cfa08a5ad1,aleks.raiden@gmail.com,2024-06-12 16:46:18+03:00,noreply@github.com,2024-06-12 21:46:18+08:00,chore: bump cpptrace to v0.6.1 (#2363),unstable,True,False,1,cpptrace.cmake,cmake,2,2,4
93c8dc23c81c985be16307a5e14b450dc49e8c8d,yann@defret.in,2024-06-14 07:05:16+02:00,noreply@github.com,2024-06-14 13:05:16+08:00,"feat(cron): add support for ""*/n"" interval cronjob syntax (#2360)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,4,kvrocks.conf,conf,3,3,6
93c8dc23c81c985be16307a5e14b450dc49e8c8d,yann@defret.in,2024-06-14 07:05:16+02:00,noreply@github.com,2024-06-14 13:05:16+08:00,"feat(cron): add support for ""*/n"" interval cronjob syntax (#2360)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,4,cron.cc,cc,38,12,50
93c8dc23c81c985be16307a5e14b450dc49e8c8d,yann@defret.in,2024-06-14 07:05:16+02:00,noreply@github.com,2024-06-14 13:05:16+08:00,"feat(cron): add support for ""*/n"" interval cronjob syntax (#2360)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,4,cron.h,h,8,1,9
93c8dc23c81c985be16307a5e14b450dc49e8c8d,yann@defret.in,2024-06-14 07:05:16+02:00,noreply@github.com,2024-06-14 13:05:16+08:00,"feat(cron): add support for ""*/n"" interval cronjob syntax (#2360)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,4,cron_test.cc,cc,327,5,332
84a3559be87ef623d9a2cbca51018be7218835ce,zhousile@foxmail.com,2024-06-14 16:58:02+08:00,noreply@github.com,2024-06-14 16:58:02+08:00,"feat: git hook pre-push (#2359)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,pre-push,None,41,0,41
84a3559be87ef623d9a2cbca51018be7218835ce,zhousile@foxmail.com,2024-06-14 16:58:02+08:00,noreply@github.com,2024-06-14 16:58:02+08:00,"feat: git hook pre-push (#2359)

Signed-off-by: tison <wander4096@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,x.py,py,28,2,30
bf579dc151d95f590868112a8932a8f5e7721832,aleks.raiden@gmail.com,2024-06-15 05:25:54+03:00,noreply@github.com,2024-06-15 11:25:54+09:00,"chore: bump jsoncons to v176.0 (#2361)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,jsoncons.cmake,cmake,2,2,4
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,cluster.cc,cc,9,10,19
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,cluster_defs.h,h,1,1,2
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,replication.cc,cc,6,3,9
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,sync_migrate_context.cc,cc,1,1,2
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,cmd_bloom_filter.cc,cc,4,4,8
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,cmd_cluster.cc,cc,10,10,20
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,cmd_hash.cc,cc,2,7,9
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,cmd_key.cc,cc,5,9,14
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,cmd_list.cc,cc,3,3,6
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,cmd_replication.cc,cc,2,2,4
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,cmd_script.cc,cc,1,2,3
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,cmd_server.cc,cc,14,18,32
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,cmd_stream.cc,cc,7,17,24
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,cmd_txn.cc,cc,1,2,3
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,cmd_zset.cc,cc,6,14,20
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,error_constants.h,h,3,3,6
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,status.h,h,13,1,14
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,redis_connection.cc,cc,14,14,28
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,redis_reply.cc,cc,23,1,24
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,redis_reply.h,h,5,1,6
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,worker.cc,cc,2,3,5
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,rdb.cc,cc,24,85,109
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,scripting.cc,cc,5,6,11
8f1d2add8836b5a70a313df8a4802fdcc1817741,hulk.website@gmail.com,2024-06-15 11:43:33+08:00,noreply@github.com,2024-06-15 11:43:33+08:00,"chore(error): unify error by adding Redis error codes for Status (#2362)

This PR introduces new error codes to identify Redis error prefixes,
and forces using status to unify Redis errors. You MUST convert
it to Status to send a Redis error response.",unstable,True,False,24,json.h,h,1,1,2
717e52f3c142939fe36f427cbf9a9b143f2f516f,twice.mliu@gmail.com,2024-06-15 16:16:52+09:00,noreply@github.com,2024-06-15 16:16:52+09:00,feat(search): add a flag to dump DOT graphs in FT.EXPLAINSQL (#2366),unstable,True,False,3,cmd_search.cc,cc,36,5,41
717e52f3c142939fe36f427cbf9a9b143f2f516f,twice.mliu@gmail.com,2024-06-15 16:16:52+09:00,noreply@github.com,2024-06-15 16:16:52+09:00,feat(search): add a flag to dump DOT graphs in FT.EXPLAINSQL (#2366),unstable,True,False,3,index_manager.h,h,0,6,6
717e52f3c142939fe36f427cbf9a9b143f2f516f,twice.mliu@gmail.com,2024-06-15 16:16:52+09:00,noreply@github.com,2024-06-15 16:16:52+09:00,feat(search): add a flag to dump DOT graphs in FT.EXPLAINSQL (#2366),unstable,True,False,3,ir.h,h,2,2,4
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,cmd_search.cc,cc,1,1,2
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,string_util.h,h,1,1,2
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,common_parser.h,h,1,1,2
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,filter_executor.h,h,5,5,10
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,numeric_field_scan_executor.h,h,2,1,3
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,topn_sort_executor.h,h,3,3,6
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,indexer.cc,cc,70,26,96
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,indexer.h,h,7,6,13
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,ir.h,h,1,1,2
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,plan_executor.cc,cc,4,5,9
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,plan_executor.h,h,5,3,8
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,redis_query_parser.h,h,1,1,2
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,redis_query_transformer.h,h,1,1,2
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,sql_parser.h,h,1,1,2
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,sql_transformer.h,h,2,2,4
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,value.h,h,101,0,101
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,indexer_test.cc,cc,4,2,6
47e6705cd1c3939b540f09bc022e2587f56015df,twice.mliu@gmail.com,2024-06-19 18:38:12+09:00,noreply@github.com,2024-06-19 18:38:12+09:00,feat(search): add a value type system to KQIR (#2369),unstable,True,False,18,plan_executor_test.cc,cc,26,21,47
7d48490ba1890d9bb0510c11350d7ae1a1f14dd0,twice.mliu@gmail.com,2024-06-20 00:49:49+09:00,noreply@github.com,2024-06-20 00:49:49+09:00,feat(search): add vector type to kqir::Value (#2371),unstable,True,False,3,indexer.cc,cc,69,36,105
7d48490ba1890d9bb0510c11350d7ae1a1f14dd0,twice.mliu@gmail.com,2024-06-20 00:49:49+09:00,noreply@github.com,2024-06-20 00:49:49+09:00,feat(search): add vector type to kqir::Value (#2371),unstable,True,False,3,indexer.h,h,3,0,3
7d48490ba1890d9bb0510c11350d7ae1a1f14dd0,twice.mliu@gmail.com,2024-06-20 00:49:49+09:00,noreply@github.com,2024-06-20 00:49:49+09:00,feat(search): add vector type to kqir::Value (#2371),unstable,True,False,3,value.h,h,7,2,9
92df2b802cec24790a35ebee09f45e8c5beedc81,aleks.raiden@gmail.com,2024-06-20 17:47:57+03:00,noreply@github.com,2024-06-20 22:47:57+08:00,chore: Bump cpptrace to v0.6.2 (#2372),unstable,True,False,1,cpptrace.cmake,cmake,2,2,4
c05f22a0d31f069f7993f20496e1c42c9be550f7,127465317+jackyyyyyssss@users.noreply.github.com,2024-06-24 15:42:20+08:00,noreply@github.com,2024-06-24 15:42:20+08:00,fix(json):  JSON.ARRTRIM key no exists  (#2374),unstable,True,False,2,cmd_json.cc,cc,1,2,3
c05f22a0d31f069f7993f20496e1c42c9be550f7,127465317+jackyyyyyssss@users.noreply.github.com,2024-06-24 15:42:20+08:00,noreply@github.com,2024-06-24 15:42:20+08:00,fix(json):  JSON.ARRTRIM key no exists  (#2374),unstable,True,False,2,json_test.go,go,1,1,2
f03d48caab79aba468957ccc782e47989960e609,xuxiangad@foxmail.com,2024-06-27 18:41:42+08:00,noreply@github.com,2024-06-27 19:41:42+09:00,feat(stream): add support of the `XAUTOCLAIM` command (#2373),unstable,True,False,5,cmd_stream.cc,cc,94,0,94
f03d48caab79aba468957ccc782e47989960e609,xuxiangad@foxmail.com,2024-06-27 18:41:42+08:00,noreply@github.com,2024-06-27 19:41:42+09:00,feat(stream): add support of the `XAUTOCLAIM` command (#2373),unstable,True,False,5,redis_stream.cc,cc,160,0,160
f03d48caab79aba468957ccc782e47989960e609,xuxiangad@foxmail.com,2024-06-27 18:41:42+08:00,noreply@github.com,2024-06-27 19:41:42+09:00,feat(stream): add support of the `XAUTOCLAIM` command (#2373),unstable,True,False,5,redis_stream.h,h,2,0,2
f03d48caab79aba468957ccc782e47989960e609,xuxiangad@foxmail.com,2024-06-27 18:41:42+08:00,noreply@github.com,2024-06-27 19:41:42+09:00,feat(stream): add support of the `XAUTOCLAIM` command (#2373),unstable,True,False,5,redis_stream_base.h,h,15,0,15
f03d48caab79aba468957ccc782e47989960e609,xuxiangad@foxmail.com,2024-06-27 18:41:42+08:00,noreply@github.com,2024-06-27 19:41:42+09:00,feat(stream): add support of the `XAUTOCLAIM` command (#2373),unstable,True,False,5,stream_test.go,go,404,0,404
bd8b209fe06084dd1c814c118ff7544ec7c0a0e6,twice.mliu@gmail.com,2024-06-28 00:12:38+09:00,noreply@github.com,2024-06-28 00:12:38+09:00,fix(search): make scan/filter executor follow case-sensitive attribute (#2376),unstable,True,False,2,filter_executor.h,h,9,2,11
bd8b209fe06084dd1c814c118ff7544ec7c0a0e6,twice.mliu@gmail.com,2024-06-28 00:12:38+09:00,noreply@github.com,2024-06-28 00:12:38+09:00,fix(search): make scan/filter executor follow case-sensitive attribute (#2376),unstable,True,False,2,tag_field_scan_executor.h,h,5,2,7
8547cfb48cb30dc3ad26214980e2c6a61c0e609a,twice.mliu@gmail.com,2024-06-29 21:00:07+09:00,noreply@github.com,2024-06-29 21:00:07+09:00,"refactor(cron): add CronPattern and implement more cron syntax (#2377)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,kvrocks.yaml,yaml,16,15,31
8547cfb48cb30dc3ad26214980e2c6a61c0e609a,twice.mliu@gmail.com,2024-06-29 21:00:07+09:00,noreply@github.com,2024-06-29 21:00:07+09:00,"refactor(cron): add CronPattern and implement more cron syntax (#2377)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,cron.cc,cc,32,62,94
8547cfb48cb30dc3ad26214980e2c6a61c0e609a,twice.mliu@gmail.com,2024-06-29 21:00:07+09:00,noreply@github.com,2024-06-29 21:00:07+09:00,"refactor(cron): add CronPattern and implement more cron syntax (#2377)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,3,cron.h,h,123,18,141
447b8c2adccb195e5c61e712ee9a69be4a7ae1bd,aleks.raiden@gmail.com,2024-06-29 18:04:40+03:00,noreply@github.com,2024-06-30 00:04:40+09:00,"ci: Bump build-push-action to v6 (#2367)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,kvrocks.yaml,yaml,1,1,2
447b8c2adccb195e5c61e712ee9a69be4a7ae1bd,aleks.raiden@gmail.com,2024-06-29 18:04:40+03:00,noreply@github.com,2024-06-30 00:04:40+09:00,"ci: Bump build-push-action to v6 (#2367)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,nightly.yaml,yaml,1,1,2
ee69364df483badcb53bf0feac98391c18a2ffe3,twice.mliu@gmail.com,2024-06-30 12:15:11+09:00,noreply@github.com,2024-06-30 12:15:11+09:00,feat(config): add compaction-checker-cron to extend original compaction-checker-range (#2383),unstable,True,False,7,kvrocks.conf,conf,14,6,20
ee69364df483badcb53bf0feac98391c18a2ffe3,twice.mliu@gmail.com,2024-06-30 12:15:11+09:00,noreply@github.com,2024-06-30 12:15:11+09:00,feat(config): add compaction-checker-cron to extend original compaction-checker-range (#2383),unstable,True,False,7,cron.cc,cc,2,0,2
ee69364df483badcb53bf0feac98391c18a2ffe3,twice.mliu@gmail.com,2024-06-30 12:15:11+09:00,noreply@github.com,2024-06-30 12:15:11+09:00,feat(config): add compaction-checker-cron to extend original compaction-checker-range (#2383),unstable,True,False,7,cron.h,h,7,5,12
ee69364df483badcb53bf0feac98391c18a2ffe3,twice.mliu@gmail.com,2024-06-30 12:15:11+09:00,noreply@github.com,2024-06-30 12:15:11+09:00,feat(config): add compaction-checker-cron to extend original compaction-checker-range (#2383),unstable,True,False,7,config.cc,cc,11,12,23
ee69364df483badcb53bf0feac98391c18a2ffe3,twice.mliu@gmail.com,2024-06-30 12:15:11+09:00,noreply@github.com,2024-06-30 12:15:11+09:00,feat(config): add compaction-checker-cron to extend original compaction-checker-range (#2383),unstable,True,False,7,config.h,h,2,9,11
ee69364df483badcb53bf0feac98391c18a2ffe3,twice.mliu@gmail.com,2024-06-30 12:15:11+09:00,noreply@github.com,2024-06-30 12:15:11+09:00,feat(config): add compaction-checker-cron to extend original compaction-checker-range (#2383),unstable,True,False,7,server.cc,cc,7,5,12
ee69364df483badcb53bf0feac98391c18a2ffe3,twice.mliu@gmail.com,2024-06-30 12:15:11+09:00,noreply@github.com,2024-06-30 12:15:11+09:00,feat(config): add compaction-checker-cron to extend original compaction-checker-range (#2383),unstable,True,False,7,cron_test.cc,cc,40,0,40
e2cd4b1eff79e688f4acc44c407e8e1379db5162,twice.mliu@gmail.com,2024-06-30 12:39:57+09:00,noreply@github.com,2024-06-30 12:39:57+09:00,chore: protect release branches in .asf.yaml (#2385),unstable,True,False,1,.asf.yaml,yaml,10,0,10
6feb0f595308fe62616a876e029b0347ad9bf30a,twice.mliu@gmail.com,2024-06-30 12:56:02+09:00,noreply@github.com,2024-06-30 12:56:02+09:00,fix(.asf.yaml): branch protection cannot be created (#2386),unstable,True,False,1,.asf.yaml,yaml,10,10,20
12067d9fba666e21e85019827212e8346183a3e9,shoothzj@gmail.com,2024-07-01 17:59:37+08:00,noreply@github.com,2024-07-01 17:59:37+08:00,"ci: use official typos github action (#2388)

Signed-off-by: ZhangJian He <shoothzj@gmail.com>",unstable,True,False,1,kvrocks.yaml,yaml,4,4,8
f1c5acbd7410994acb0d4910bb98775539ddf2f8,hulk.website@gmail.com,2024-07-02 21:34:16+08:00,noreply@github.com,2024-07-02 21:34:16+08:00,chore(ci): drop CentOS7 in CI since it's EOL now (#2393),unstable,True,False,1,kvrocks.yaml,yaml,2,23,25
5712cbdcced08a6ce648fda7eec49f2d6f78b393,shoothzj@gmail.com,2024-07-02 22:42:56+08:00,noreply@github.com,2024-07-02 22:42:56+08:00,refactor: rename variable names for clarity in LCS method (#2392),unstable,True,False,2,kvrocks.yaml,yaml,1,1,2
5712cbdcced08a6ce648fda7eec49f2d6f78b393,shoothzj@gmail.com,2024-07-02 22:42:56+08:00,noreply@github.com,2024-07-02 22:42:56+08:00,refactor: rename variable names for clarity in LCS method (#2392),unstable,True,False,2,redis_string.cc,cc,18,18,36
7ed512e835201abe3f68f3c795dabb13acdc6733,aleks.raiden@gmail.com,2024-07-02 20:46:34+03:00,noreply@github.com,2024-07-03 01:46:34+08:00,"chore: Bump fmtlib to 11.0.0. (#2391)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,fmt.cmake,cmake,2,2,4
5ff2d5407e8b4d3a5a7264d32d60e29399de0568,aleks.raiden@gmail.com,2024-07-06 17:00:19+03:00,noreply@github.com,2024-07-06 22:00:19+08:00,chore: Bump fmtlib to 11.0.1 (#2394),unstable,True,False,1,fmt.cmake,cmake,2,2,4
dcb407525df8d0234f3f878945d73b4fa36b57b7,aleks.raiden@gmail.com,2024-07-06 20:28:58+03:00,noreply@github.com,2024-07-07 02:28:58+09:00,"chore: Bump rocksdb to v9.3.1 (#2380)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
7dd0248e267d864190be1a5a90ad3ebfdec35e09,aleks.raiden@gmail.com,2024-07-07 07:14:41+03:00,noreply@github.com,2024-07-07 13:14:41+09:00,"chore: Bump oneTBB to 2021.13.0 (#2375)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,tbb.cmake,cmake,2,2,4
51569adcd23e196fc2dabb425c1fc6375d0f3b70,xuxiangad@foxmail.com,2024-07-07 19:50:05+08:00,noreply@github.com,2024-07-07 19:50:05+08:00,feat: add `iter->status()` check for loop iterators (#2395),unstable,True,False,6,slot_migrate.cc,cc,16,0,16
51569adcd23e196fc2dabb425c1fc6375d0f3b70,xuxiangad@foxmail.com,2024-07-07 19:50:05+08:00,noreply@github.com,2024-07-07 19:50:05+08:00,feat: add `iter->status()` check for loop iterators (#2395),unstable,True,False,6,index_manager.h,h,4,0,4
51569adcd23e196fc2dabb425c1fc6375d0f3b70,xuxiangad@foxmail.com,2024-07-07 19:50:05+08:00,noreply@github.com,2024-07-07 19:50:05+08:00,feat: add `iter->status()` check for loop iterators (#2395),unstable,True,False,6,indexer.cc,cc,4,0,4
51569adcd23e196fc2dabb425c1fc6375d0f3b70,xuxiangad@foxmail.com,2024-07-07 19:50:05+08:00,noreply@github.com,2024-07-07 19:50:05+08:00,feat: add `iter->status()` check for loop iterators (#2395),unstable,True,False,6,redis_db.cc,cc,10,1,11
51569adcd23e196fc2dabb425c1fc6375d0f3b70,xuxiangad@foxmail.com,2024-07-07 19:50:05+08:00,noreply@github.com,2024-07-07 19:50:05+08:00,feat: add `iter->status()` check for loop iterators (#2395),unstable,True,False,6,scripting.cc,cc,8,0,8
51569adcd23e196fc2dabb425c1fc6375d0f3b70,xuxiangad@foxmail.com,2024-07-07 19:50:05+08:00,noreply@github.com,2024-07-07 19:50:05+08:00,feat: add `iter->status()` check for loop iterators (#2395),unstable,True,False,6,redis_stream.cc,cc,27,2,29
e2c5b9763cba4c8dbac6a998f8f6f38c5462558b,twice.mliu@gmail.com,2024-07-09 21:47:19+09:00,noreply@github.com,2024-07-09 21:47:19+09:00,chore(.asf.yaml): add release branch 2.9 to protected branches (#2396),unstable,True,False,1,.asf.yaml,yaml,1,0,1
02e97074eb7921a611928a9f2fdfb5b358e00367,hulk.website@gmail.com,2024-07-10 09:14:58+08:00,noreply@github.com,2024-07-10 09:14:58+08:00,fix(stream): NOGROUP/BUSYGROUP error message should return without 'ERR' prefix (#2397),unstable,True,False,5,cmd_stream.cc,cc,16,6,22
02e97074eb7921a611928a9f2fdfb5b358e00367,hulk.website@gmail.com,2024-07-10 09:14:58+08:00,noreply@github.com,2024-07-10 09:14:58+08:00,fix(stream): NOGROUP/BUSYGROUP error message should return without 'ERR' prefix (#2397),unstable,True,False,5,status.h,h,2,0,2
02e97074eb7921a611928a9f2fdfb5b358e00367,hulk.website@gmail.com,2024-07-10 09:14:58+08:00,noreply@github.com,2024-07-10 09:14:58+08:00,fix(stream): NOGROUP/BUSYGROUP error message should return without 'ERR' prefix (#2397),unstable,True,False,5,redis_reply.cc,cc,8,7,15
02e97074eb7921a611928a9f2fdfb5b358e00367,hulk.website@gmail.com,2024-07-10 09:14:58+08:00,noreply@github.com,2024-07-10 09:14:58+08:00,fix(stream): NOGROUP/BUSYGROUP error message should return without 'ERR' prefix (#2397),unstable,True,False,5,redis_stream.cc,cc,7,37,44
02e97074eb7921a611928a9f2fdfb5b358e00367,hulk.website@gmail.com,2024-07-10 09:14:58+08:00,noreply@github.com,2024-07-10 09:14:58+08:00,fix(stream): NOGROUP/BUSYGROUP error message should return without 'ERR' prefix (#2397),unstable,True,False,5,stream_test.go,go,30,2,32
121b78074879aa6819e682fcbfb9f19f1a84d46d,aleks.raiden@gmail.com,2024-07-10 17:07:13+03:00,noreply@github.com,2024-07-10 22:07:13+08:00,chore(test): bump dependencies of go test (#2400),unstable,True,False,3,go.mod,mod,15,14,29
121b78074879aa6819e682fcbfb9f19f1a84d46d,aleks.raiden@gmail.com,2024-07-10 17:07:13+03:00,noreply@github.com,2024-07-10 22:07:13+08:00,chore(test): bump dependencies of go test (#2400),unstable,True,False,3,go.sum,sum,35,43,78
121b78074879aa6819e682fcbfb9f19f1a84d46d,aleks.raiden@gmail.com,2024-07-10 17:07:13+03:00,noreply@github.com,2024-07-10 22:07:13+08:00,chore(test): bump dependencies of go test (#2400),unstable,True,False,3,zset_test.go,go,6,6,12
12269d7c36afa933c6eaa9bf75029acb5ebc59b9,68083940+Beihao-Zhou@users.noreply.github.com,2024-07-12 21:55:49-07:00,noreply@github.com,2024-07-13 13:55:49+09:00,"feat(search): Add HNSW encoding index & insertion/deletion algorithm (#2368)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,hnsw_indexer.cc,cc,552,0,552
12269d7c36afa933c6eaa9bf75029acb5ebc59b9,68083940+Beihao-Zhou@users.noreply.github.com,2024-07-12 21:55:49-07:00,noreply@github.com,2024-07-13 13:55:49+09:00,"feat(search): Add HNSW encoding index & insertion/deletion algorithm (#2368)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,hnsw_indexer.h,h,115,0,115
12269d7c36afa933c6eaa9bf75029acb5ebc59b9,68083940+Beihao-Zhou@users.noreply.github.com,2024-07-12 21:55:49-07:00,noreply@github.com,2024-07-13 13:55:49+09:00,"feat(search): Add HNSW encoding index & insertion/deletion algorithm (#2368)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,indexer.cc,cc,34,9,43
12269d7c36afa933c6eaa9bf75029acb5ebc59b9,68083940+Beihao-Zhou@users.noreply.github.com,2024-07-12 21:55:49-07:00,noreply@github.com,2024-07-13 13:55:49+09:00,"feat(search): Add HNSW encoding index & insertion/deletion algorithm (#2368)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,indexer.h,h,2,0,2
12269d7c36afa933c6eaa9bf75029acb5ebc59b9,68083940+Beihao-Zhou@users.noreply.github.com,2024-07-12 21:55:49-07:00,noreply@github.com,2024-07-13 13:55:49+09:00,"feat(search): Add HNSW encoding index & insertion/deletion algorithm (#2368)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,search_encoding.h,h,161,0,161
12269d7c36afa933c6eaa9bf75029acb5ebc59b9,68083940+Beihao-Zhou@users.noreply.github.com,2024-07-12 21:55:49-07:00,noreply@github.com,2024-07-13 13:55:49+09:00,"feat(search): Add HNSW encoding index & insertion/deletion algorithm (#2368)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,hnsw_index_test.cc,cc,664,0,664
12269d7c36afa933c6eaa9bf75029acb5ebc59b9,68083940+Beihao-Zhou@users.noreply.github.com,2024-07-12 21:55:49-07:00,noreply@github.com,2024-07-13 13:55:49+09:00,"feat(search): Add HNSW encoding index & insertion/deletion algorithm (#2368)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,7,hnsw_node_test.cc,cc,165,0,165
e49a8e1c6f574d854ed37dc3247a4f2e68920444,twice.mliu@gmail.com,2024-07-13 17:47:01+09:00,noreply@github.com,2024-07-13 17:47:01+09:00,perf(conn): skip index matching when index map is empty (#2405),unstable,True,False,1,redis_connection.cc,cc,2,1,3
32062061a0952df7a77b0d047d6577acee503edf,aleks.raiden@gmail.com,2024-07-13 16:31:50+03:00,noreply@github.com,2024-07-13 22:31:50+09:00,"chore(test): bump dependencies of go-redis (#2407)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,go.mod,mod,1,1,2
32062061a0952df7a77b0d047d6577acee503edf,aleks.raiden@gmail.com,2024-07-13 16:31:50+03:00,noreply@github.com,2024-07-13 22:31:50+09:00,"chore(test): bump dependencies of go-redis (#2407)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,go.sum,sum,2,2,4
ffdce20de4142a00caa33534903ac5a763a56ff6,twice.mliu@gmail.com,2024-07-14 01:21:36+09:00,noreply@github.com,2024-07-13 19:21:36+03:00,chore(resp): extract RESP functions from Connection (#2406),unstable,True,False,4,redis_connection.cc,cc,0,52,52
ffdce20de4142a00caa33534903ac5a763a56ff6,twice.mliu@gmail.com,2024-07-14 01:21:36+09:00,noreply@github.com,2024-07-13 19:21:36+03:00,chore(resp): extract RESP functions from Connection (#2406),unstable,True,False,4,redis_connection.h,h,22,27,49
ffdce20de4142a00caa33534903ac5a763a56ff6,twice.mliu@gmail.com,2024-07-14 01:21:36+09:00,noreply@github.com,2024-07-13 19:21:36+03:00,chore(resp): extract RESP functions from Connection (#2406),unstable,True,False,4,redis_reply.cc,cc,52,0,52
ffdce20de4142a00caa33534903ac5a763a56ff6,twice.mliu@gmail.com,2024-07-14 01:21:36+09:00,noreply@github.com,2024-07-13 19:21:36+03:00,chore(resp): extract RESP functions from Connection (#2406),unstable,True,False,4,redis_reply.h,h,46,1,47
d3115ba5fc6de39dd9cdf2bc74ef29f1d44e0914,torwigua@gmail.com,2024-07-14 00:54:58+03:00,noreply@github.com,2024-07-14 05:54:58+08:00,fix: Add timeouts to go-redis client and ping on client creation (#2404),unstable,True,False,1,server.go,go,9,1,10
504322caa037a5553bc7d07f6fc282cb8b1dd776,aleks.raiden@gmail.com,2024-07-14 08:01:09+03:00,noreply@github.com,2024-07-14 14:01:09+09:00,"chore: bump RocksDB to v9.4.0 (#2408)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
fd4b6e003d79412f7c71a5360daf36e1902b2e2a,aleks.raiden@gmail.com,2024-07-14 09:24:18+03:00,noreply@github.com,2024-07-14 15:24:18+09:00,"ci: Update MacOS runner to macos13 (#2324)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,2,kvrocks.yaml,yaml,16,17,33
fd4b6e003d79412f7c71a5360daf36e1902b2e2a,aleks.raiden@gmail.com,2024-07-14 09:24:18+03:00,noreply@github.com,2024-07-14 15:24:18+09:00,"ci: Update MacOS runner to macos13 (#2324)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: tison <wander4096@gmail.com>",unstable,True,False,2,x.py,py,1,1,2
bfde4588ab3d09bf82e4ce15299885914dc6ee55,twice.mliu@gmail.com,2024-07-14 17:07:33+09:00,noreply@github.com,2024-07-14 17:07:33+09:00,ci: update runner os from ubuntu 20 to 22 (#2409),unstable,True,False,1,kvrocks.yaml,yaml,18,17,35
6473d6ca95016476ef6743d36e6987edd0616890,twice.mliu@gmail.com,2024-07-14 18:50:12+09:00,noreply@github.com,2024-07-14 18:50:12+09:00,chore(x.py): improve style of commit message for release (#2410),unstable,True,False,2,pr-lint.yaml,yaml,1,0,1
6473d6ca95016476ef6743d36e6987edd0616890,twice.mliu@gmail.com,2024-07-14 18:50:12+09:00,noreply@github.com,2024-07-14 18:50:12+09:00,chore(x.py): improve style of commit message for release (#2410),unstable,True,False,2,x.py,py,3,3,6
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,cluster.cc,cc,62,43,105
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,cluster.h,h,6,5,11
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,cluster_defs.h,h,34,1,35
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,slot_import.cc,cc,26,23,49
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,slot_import.h,h,6,5,11
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,slot_migrate.cc,cc,84,66,150
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,slot_migrate.h,h,16,12,28
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,cmd_cluster.cc,cc,14,6,20
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,batch_extractor.cc,cc,8,4,12
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,batch_extractor.h,h,6,3,9
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,iterator.cc,cc,5,3,8
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,iterator.h,h,8,4,12
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,redis_db.cc,cc,4,8,12
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,redis_db.h,h,2,1,3
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,cluster_test.go,go,2,2,4
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,slotimport_test.go,go,7,7,14
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,slotmigrate_test.go,go,167,11,178
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,geo_test.go,go,14,13,27
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,list_test.go,go,0,3,3
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,zset_test.go,go,1,1,2
beb1979f14c5af2ca3b4f7a2f42bd0ce857ab85a,zhousile@foxmail.com,2024-07-14 21:19:21+08:00,noreply@github.com,2024-07-14 21:19:21+08:00,feat(cluster): support migrate slot range (#2389),unstable,True,False,21,random.go,go,40,0,40
79d53a171517c220003365f864a1e0be78afc094,aleks.raiden@gmail.com,2024-07-14 18:52:47+03:00,noreply@github.com,2024-07-15 00:52:47+09:00,"chore(x.py): revert gotest timeout to 1800sec (#2413)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,x.py,py,1,1,2
2b9fd532bb8243a8f3ae97f20f576197ed55938a,aleks.raiden@gmail.com,2024-07-16 11:24:26+03:00,noreply@github.com,2024-07-16 16:24:26+08:00,chore: bump googletest to v1.15.0 (#2430),unstable,True,False,1,gtest.cmake,cmake,2,2,4
e55ac720effb6ac123e71ad389f57a39b8a5f2e7,jihuayu123@gmail.com,2024-07-16 18:48:21+08:00,noreply@github.com,2024-07-16 19:48:21+09:00,feat(config): change redis-cursor-compatible default value to yes (#2429),unstable,True,False,2,kvrocks.conf,conf,1,1,2
e55ac720effb6ac123e71ad389f57a39b8a5f2e7,jihuayu123@gmail.com,2024-07-16 18:48:21+08:00,noreply@github.com,2024-07-16 19:48:21+09:00,feat(config): change redis-cursor-compatible default value to yes (#2429),unstable,True,False,2,config.cc,cc,1,1,2
40be51ed14ad810fe84142b59d28b81dfac0ace2,aleks.raiden@gmail.com,2024-07-16 15:35:27+03:00,noreply@github.com,2024-07-16 21:35:27+09:00,"chore: bump cpptrace to v0.6.3 (#2412)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,cpptrace.cmake,cmake,2,2,4
a2a3826a3b78e36089de1cc862d4f88e99034a82,85615957+Yangsx-1@users.noreply.github.com,2024-07-17 12:23:16+08:00,noreply@github.com,2024-07-17 13:23:16+09:00,refactor(stream): change the encoding of stream consumer group (#2384),unstable,True,False,6,cmd_stream.cc,cc,4,4,8
a2a3826a3b78e36089de1cc862d4f88e99034a82,85615957+Yangsx-1@users.noreply.github.com,2024-07-17 12:23:16+08:00,noreply@github.com,2024-07-17 13:23:16+09:00,refactor(stream): change the encoding of stream consumer group (#2384),unstable,True,False,6,redis_stream.cc,cc,109,113,222
a2a3826a3b78e36089de1cc862d4f88e99034a82,85615957+Yangsx-1@users.noreply.github.com,2024-07-17 12:23:16+08:00,noreply@github.com,2024-07-17 13:23:16+09:00,refactor(stream): change the encoding of stream consumer group (#2384),unstable,True,False,6,redis_stream_base.cc,cc,5,5,10
a2a3826a3b78e36089de1cc862d4f88e99034a82,85615957+Yangsx-1@users.noreply.github.com,2024-07-17 12:23:16+08:00,noreply@github.com,2024-07-17 13:23:16+09:00,refactor(stream): change the encoding of stream consumer group (#2384),unstable,True,False,6,redis_stream_base.h,h,2,2,4
a2a3826a3b78e36089de1cc862d4f88e99034a82,85615957+Yangsx-1@users.noreply.github.com,2024-07-17 12:23:16+08:00,noreply@github.com,2024-07-17 13:23:16+09:00,refactor(stream): change the encoding of stream consumer group (#2384),unstable,True,False,6,stream_test.cc,cc,5,5,10
a2a3826a3b78e36089de1cc862d4f88e99034a82,85615957+Yangsx-1@users.noreply.github.com,2024-07-17 12:23:16+08:00,noreply@github.com,2024-07-17 13:23:16+09:00,refactor(stream): change the encoding of stream consumer group (#2384),unstable,True,False,6,stream_test.go,go,3,3,6
f6640f6f46fd4aeddb0b85c528c14e885bda669d,470623352@qq.com,2024-07-18 21:57:05+08:00,noreply@github.com,2024-07-18 22:57:05+09:00,chore: fix complier warning in cluster and HNSW indexing (#2436),unstable,True,False,2,cmd_cluster.cc,cc,0,1,1
f6640f6f46fd4aeddb0b85c528c14e885bda669d,470623352@qq.com,2024-07-18 21:57:05+08:00,noreply@github.com,2024-07-18 22:57:05+09:00,chore: fix complier warning in cluster and HNSW indexing (#2436),unstable,True,False,2,hnsw_indexer.h,h,2,2,4
ec3d9032deb7aef3e238570cfa9eeb607491e2e6,twice.mliu@gmail.com,2024-07-21 17:37:24+09:00,noreply@github.com,2024-07-21 17:37:24+09:00,fix(search): misidentify DESC token in SQL parser (#2439),unstable,True,False,6,ir.h,h,2,2,4
ec3d9032deb7aef3e238570cfa9eeb607491e2e6,twice.mliu@gmail.com,2024-07-21 17:37:24+09:00,noreply@github.com,2024-07-21 17:37:24+09:00,fix(search): misidentify DESC token in SQL parser (#2439),unstable,True,False,6,manager.h,h,14,0,14
ec3d9032deb7aef3e238570cfa9eeb607491e2e6,twice.mliu@gmail.com,2024-07-21 17:37:24+09:00,noreply@github.com,2024-07-21 17:37:24+09:00,fix(search): misidentify DESC token in SQL parser (#2439),unstable,True,False,6,recorder.h,h,41,0,41
ec3d9032deb7aef3e238570cfa9eeb607491e2e6,twice.mliu@gmail.com,2024-07-21 17:37:24+09:00,noreply@github.com,2024-07-21 17:37:24+09:00,fix(search): misidentify DESC token in SQL parser (#2439),unstable,True,False,6,sql_parser.h,h,2,2,4
ec3d9032deb7aef3e238570cfa9eeb607491e2e6,twice.mliu@gmail.com,2024-07-21 17:37:24+09:00,noreply@github.com,2024-07-21 17:37:24+09:00,fix(search): misidentify DESC token in SQL parser (#2439),unstable,True,False,6,sql_transformer.h,h,1,2,3
ec3d9032deb7aef3e238570cfa9eeb607491e2e6,twice.mliu@gmail.com,2024-07-21 17:37:24+09:00,noreply@github.com,2024-07-21 17:37:24+09:00,fix(search): misidentify DESC token in SQL parser (#2439),unstable,True,False,6,sql_parser_test.cc,cc,1,0,1
68523ac35dcb2d712dfac363c4cabe774ff927f6,85615957+Yangsx-1@users.noreply.github.com,2024-07-21 22:01:50+08:00,noreply@github.com,2024-07-21 23:01:50+09:00,"feat(stream): add support of XPENDING command (#2387)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,cmd_stream.cc,cc,93,0,93
68523ac35dcb2d712dfac363c4cabe774ff927f6,85615957+Yangsx-1@users.noreply.github.com,2024-07-21 22:01:50+08:00,noreply@github.com,2024-07-21 23:01:50+09:00,"feat(stream): add support of XPENDING command (#2387)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,redis_stream.cc,cc,88,0,88
68523ac35dcb2d712dfac363c4cabe774ff927f6,85615957+Yangsx-1@users.noreply.github.com,2024-07-21 22:01:50+08:00,noreply@github.com,2024-07-21 23:01:50+09:00,"feat(stream): add support of XPENDING command (#2387)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,redis_stream.h,h,2,0,2
68523ac35dcb2d712dfac363c4cabe774ff927f6,85615957+Yangsx-1@users.noreply.github.com,2024-07-21 22:01:50+08:00,noreply@github.com,2024-07-21 23:01:50+09:00,"feat(stream): add support of XPENDING command (#2387)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,redis_stream_base.h,h,28,0,28
68523ac35dcb2d712dfac363c4cabe774ff927f6,85615957+Yangsx-1@users.noreply.github.com,2024-07-21 22:01:50+08:00,noreply@github.com,2024-07-21 23:01:50+09:00,"feat(stream): add support of XPENDING command (#2387)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,stream_test.go,go,76,0,76
6b23c5ac2cf17558d167a3305c8f10ecb944637f,aleks.raiden@gmail.com,2024-07-22 16:33:39+03:00,noreply@github.com,2024-07-22 22:33:39+09:00,chore: bump fmtlib to v11.0.2 (#2440),unstable,True,False,1,fmt.cmake,cmake,2,2,4
9bd993c985a2f1d0e8c90fde9d00c40744ce579a,127465317+jackyyyyyssss@users.noreply.github.com,2024-07-23 15:54:02+08:00,noreply@github.com,2024-07-23 15:54:02+08:00,"feat(json): add support of JSON.RESP command (#2390)

Co-authored-by: lizhenglei <673421862@qq.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,cmd_json.cc,cc,34,1,35
9bd993c985a2f1d0e8c90fde9d00c40744ce579a,127465317+jackyyyyyssss@users.noreply.github.com,2024-07-23 15:54:02+08:00,noreply@github.com,2024-07-23 15:54:02+08:00,"feat(json): add support of JSON.RESP command (#2390)

Co-authored-by: lizhenglei <673421862@qq.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,json.h,h,46,0,46
9bd993c985a2f1d0e8c90fde9d00c40744ce579a,127465317+jackyyyyyssss@users.noreply.github.com,2024-07-23 15:54:02+08:00,noreply@github.com,2024-07-23 15:54:02+08:00,"feat(json): add support of JSON.RESP command (#2390)

Co-authored-by: lizhenglei <673421862@qq.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,redis_json.cc,cc,14,0,14
9bd993c985a2f1d0e8c90fde9d00c40744ce579a,127465317+jackyyyyyssss@users.noreply.github.com,2024-07-23 15:54:02+08:00,noreply@github.com,2024-07-23 15:54:02+08:00,"feat(json): add support of JSON.RESP command (#2390)

Co-authored-by: lizhenglei <673421862@qq.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,redis_json.h,h,4,0,4
9bd993c985a2f1d0e8c90fde9d00c40744ce579a,127465317+jackyyyyyssss@users.noreply.github.com,2024-07-23 15:54:02+08:00,noreply@github.com,2024-07-23 15:54:02+08:00,"feat(json): add support of JSON.RESP command (#2390)

Co-authored-by: lizhenglei <673421862@qq.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,json_test.go,go,40,0,40
45ba475a20637e2177901f9cd3e5118cc2e95896,twice.mliu@gmail.com,2024-07-24 11:24:19+09:00,noreply@github.com,2024-07-24 11:24:19+09:00,feat(search): support query parameters in SQL and RediSearch query (#2443),unstable,True,False,10,cmd_search.cc,cc,68,17,85
45ba475a20637e2177901f9cd3e5118cc2e95896,twice.mliu@gmail.com,2024-07-24 11:24:19+09:00,noreply@github.com,2024-07-24 11:24:19+09:00,feat(search): support query parameters in SQL and RediSearch query (#2443),unstable,True,False,10,command_parser.h,h,3,0,3
45ba475a20637e2177901f9cd3e5118cc2e95896,twice.mliu@gmail.com,2024-07-24 11:24:19+09:00,noreply@github.com,2024-07-24 11:24:19+09:00,feat(search): support query parameters in SQL and RediSearch query (#2443),unstable,True,False,10,common_transformer.h,h,19,0,19
45ba475a20637e2177901f9cd3e5118cc2e95896,twice.mliu@gmail.com,2024-07-24 11:24:19+09:00,noreply@github.com,2024-07-24 11:24:19+09:00,feat(search): support query parameters in SQL and RediSearch query (#2443),unstable,True,False,10,redis_query_parser.h,h,7,3,10
45ba475a20637e2177901f9cd3e5118cc2e95896,twice.mliu@gmail.com,2024-07-24 11:24:19+09:00,noreply@github.com,2024-07-24 11:24:19+09:00,feat(search): support query parameters in SQL and RediSearch query (#2443),unstable,True,False,10,redis_query_transformer.h,h,42,17,59
45ba475a20637e2177901f9cd3e5118cc2e95896,twice.mliu@gmail.com,2024-07-24 11:24:19+09:00,noreply@github.com,2024-07-24 11:24:19+09:00,feat(search): support query parameters in SQL and RediSearch query (#2443),unstable,True,False,10,sql_parser.h,h,6,2,8
45ba475a20637e2177901f9cd3e5118cc2e95896,twice.mliu@gmail.com,2024-07-24 11:24:19+09:00,noreply@github.com,2024-07-24 11:24:19+09:00,feat(search): support query parameters in SQL and RediSearch query (#2443),unstable,True,False,10,sql_transformer.h,h,39,11,50
45ba475a20637e2177901f9cd3e5118cc2e95896,twice.mliu@gmail.com,2024-07-24 11:24:19+09:00,noreply@github.com,2024-07-24 11:24:19+09:00,feat(search): support query parameters in SQL and RediSearch query (#2443),unstable,True,False,10,value.h,h,11,2,13
45ba475a20637e2177901f9cd3e5118cc2e95896,twice.mliu@gmail.com,2024-07-24 11:24:19+09:00,noreply@github.com,2024-07-24 11:24:19+09:00,feat(search): support query parameters in SQL and RediSearch query (#2443),unstable,True,False,10,redis_query_parser_test.cc,cc,12,1,13
45ba475a20637e2177901f9cd3e5118cc2e95896,twice.mliu@gmail.com,2024-07-24 11:24:19+09:00,noreply@github.com,2024-07-24 11:24:19+09:00,feat(search): support query parameters in SQL and RediSearch query (#2443),unstable,True,False,10,sql_parser_test.cc,cc,14,1,15
79a740cf8c7aad157c7b3dd32581c5071d7d78b6,68083940+Beihao-Zhou@users.noreply.github.com,2024-07-24 00:21:08-07:00,noreply@github.com,2024-07-24 16:21:08+09:00,"feat(search): Hnsw Vector Search Plan Operator & Executor (#2434)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,hnsw_vector_field_knn_scan_executor.h,h,76,0,76
79a740cf8c7aad157c7b3dd32581c5071d7d78b6,68083940+Beihao-Zhou@users.noreply.github.com,2024-07-24 00:21:08-07:00,noreply@github.com,2024-07-24 16:21:08+09:00,"feat(search): Hnsw Vector Search Plan Operator & Executor (#2434)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,hnsw_vector_field_range_scan_executor.h,h,86,0,86
79a740cf8c7aad157c7b3dd32581c5071d7d78b6,68083940+Beihao-Zhou@users.noreply.github.com,2024-07-24 00:21:08-07:00,noreply@github.com,2024-07-24 16:21:08+09:00,"feat(search): Hnsw Vector Search Plan Operator & Executor (#2434)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,hnsw_indexer.cc,cc,89,10,99
79a740cf8c7aad157c7b3dd32581c5071d7d78b6,68083940+Beihao-Zhou@users.noreply.github.com,2024-07-24 00:21:08-07:00,noreply@github.com,2024-07-24 16:21:08+09:00,"feat(search): Hnsw Vector Search Plan Operator & Executor (#2434)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,hnsw_indexer.h,h,11,0,11
79a740cf8c7aad157c7b3dd32581c5071d7d78b6,68083940+Beihao-Zhou@users.noreply.github.com,2024-07-24 00:21:08-07:00,noreply@github.com,2024-07-24 16:21:08+09:00,"feat(search): Hnsw Vector Search Plan Operator & Executor (#2434)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,ir_plan.h,h,37,0,37
79a740cf8c7aad157c7b3dd32581c5071d7d78b6,68083940+Beihao-Zhou@users.noreply.github.com,2024-07-24 00:21:08-07:00,noreply@github.com,2024-07-24 16:21:08+09:00,"feat(search): Hnsw Vector Search Plan Operator & Executor (#2434)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,plan_executor.cc,cc,16,0,16
79a740cf8c7aad157c7b3dd32581c5071d7d78b6,68083940+Beihao-Zhou@users.noreply.github.com,2024-07-24 00:21:08-07:00,noreply@github.com,2024-07-24 16:21:08+09:00,"feat(search): Hnsw Vector Search Plan Operator & Executor (#2434)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,hnsw_index_test.cc,cc,176,242,418
79a740cf8c7aad157c7b3dd32581c5071d7d78b6,68083940+Beihao-Zhou@users.noreply.github.com,2024-07-24 00:21:08-07:00,noreply@github.com,2024-07-24 16:21:08+09:00,"feat(search): Hnsw Vector Search Plan Operator & Executor (#2434)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,indexer_test.cc,cc,44,0,44
79a740cf8c7aad157c7b3dd32581c5071d7d78b6,68083940+Beihao-Zhou@users.noreply.github.com,2024-07-24 00:21:08-07:00,noreply@github.com,2024-07-24 16:21:08+09:00,"feat(search): Hnsw Vector Search Plan Operator & Executor (#2434)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,9,plan_executor_test.cc,cc,99,1,100
de64c47f21fbcad3a5c4f1d3f8303f3e6782beee,aleks.raiden@gmail.com,2024-07-24 13:00:57+03:00,noreply@github.com,2024-07-24 18:00:57+08:00,chore: bump lz4 to v1.10.0 (#2441),unstable,True,False,1,lz4.cmake,cmake,2,2,4
5d287de082faaf84a04272cc00ed7919aac59c7b,hulk.website@gmail.com,2024-07-25 13:46:06+08:00,noreply@github.com,2024-07-25 14:46:06+09:00,feat(config): allow to change the max length of the bulk string (#2444),unstable,True,False,8,kvrocks.conf,conf,5,0,5
5d287de082faaf84a04272cc00ed7919aac59c7b,hulk.website@gmail.com,2024-07-25 13:46:06+08:00,noreply@github.com,2024-07-25 14:46:06+09:00,feat(config): allow to change the max length of the bulk string (#2444),unstable,True,False,8,config.cc,cc,1,0,1
5d287de082faaf84a04272cc00ed7919aac59c7b,hulk.website@gmail.com,2024-07-25 13:46:06+08:00,noreply@github.com,2024-07-25 14:46:06+09:00,feat(config): allow to change the max length of the bulk string (#2444),unstable,True,False,8,config.h,h,1,0,1
5d287de082faaf84a04272cc00ed7919aac59c7b,hulk.website@gmail.com,2024-07-25 13:46:06+08:00,noreply@github.com,2024-07-25 14:46:06+09:00,feat(config): allow to change the max length of the bulk string (#2444),unstable,True,False,8,config_type.h,h,1,0,1
5d287de082faaf84a04272cc00ed7919aac59c7b,hulk.website@gmail.com,2024-07-25 13:46:06+08:00,noreply@github.com,2024-07-25 14:46:06+09:00,feat(config): allow to change the max length of the bulk string (#2444),unstable,True,False,8,redis_request.cc,cc,1,1,2
5d287de082faaf84a04272cc00ed7919aac59c7b,hulk.website@gmail.com,2024-07-25 13:46:06+08:00,noreply@github.com,2024-07-25 14:46:06+09:00,feat(config): allow to change the max length of the bulk string (#2444),unstable,True,False,8,redis_request.h,h,0,1,1
5d287de082faaf84a04272cc00ed7919aac59c7b,hulk.website@gmail.com,2024-07-25 13:46:06+08:00,noreply@github.com,2024-07-25 14:46:06+09:00,feat(config): allow to change the max length of the bulk string (#2444),unstable,True,False,8,redis_string.cc,cc,1,2,3
5d287de082faaf84a04272cc00ed7919aac59c7b,hulk.website@gmail.com,2024-07-25 13:46:06+08:00,noreply@github.com,2024-07-25 14:46:06+09:00,feat(config): allow to change the max length of the bulk string (#2444),unstable,True,False,8,config_test.go,go,24,0,24
a9c1a341135475e6b229b1f6e72231abcd966588,52393536+xiaobiaozhao@users.noreply.github.com,2024-07-25 19:03:55+08:00,noreply@github.com,2024-07-25 19:03:55+08:00,docs: add build debug kvrocks doc (#2431),unstable,True,False,1,README.md,md,9,0,9
406ed6e3bd7d5a1a7ff6b764bf917f70eea6c5dd,52393536+xiaobiaozhao@users.noreply.github.com,2024-07-26 14:22:40+08:00,noreply@github.com,2024-07-26 15:22:40+09:00,docs: optimize the building section in README (#2447),unstable,True,False,1,README.md,md,3,3,6
e57192517b76515692a45726df7a0e071a7e6542,twice.mliu@gmail.com,2024-07-28 12:19:01+09:00,noreply@github.com,2024-07-28 12:19:01+09:00,feat(config): implement integer config option with unit (#2448),unstable,True,False,7,kvrocks.conf,conf,1,0,1
e57192517b76515692a45726df7a0e071a7e6542,twice.mliu@gmail.com,2024-07-28 12:19:01+09:00,noreply@github.com,2024-07-28 12:19:01+09:00,feat(config): implement integer config option with unit (#2448),unstable,True,False,7,bit_util.h,h,18,0,18
e57192517b76515692a45726df7a0e071a7e6542,twice.mliu@gmail.com,2024-07-28 12:19:01+09:00,noreply@github.com,2024-07-28 12:19:01+09:00,feat(config): implement integer config option with unit (#2448),unstable,True,False,7,parse_util.cc,cc,6,14,20
e57192517b76515692a45726df7a0e071a7e6542,twice.mliu@gmail.com,2024-07-28 12:19:01+09:00,noreply@github.com,2024-07-28 12:19:01+09:00,feat(config): implement integer config option with unit (#2448),unstable,True,False,7,config.cc,cc,5,3,8
e57192517b76515692a45726df7a0e071a7e6542,twice.mliu@gmail.com,2024-07-28 12:19:01+09:00,noreply@github.com,2024-07-28 12:19:01+09:00,feat(config): implement integer config option with unit (#2448),unstable,True,False,7,config_type.h,h,92,0,92
e57192517b76515692a45726df7a0e071a7e6542,twice.mliu@gmail.com,2024-07-28 12:19:01+09:00,noreply@github.com,2024-07-28 12:19:01+09:00,feat(config): implement integer config option with unit (#2448),unstable,True,False,7,redis_stream.cc,cc,2,1,3
e57192517b76515692a45726df7a0e071a7e6542,twice.mliu@gmail.com,2024-07-28 12:19:01+09:00,noreply@github.com,2024-07-28 12:19:01+09:00,feat(config): implement integer config option with unit (#2448),unstable,True,False,7,config_test.go,go,6,0,6
727bec2e69958a170fc94c4ffec77e07ced25fce,40481744+tutububug@users.noreply.github.com,2024-07-31 13:34:23+08:00,noreply@github.com,2024-07-31 13:34:23+08:00,"feat(hyperloglog): add support of the Hyperloglog data structure (#2142)

Co-authored-by: yangxiao <yangxiao@shopee.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,11,cmd_hll.cc,cc,81,0,81
727bec2e69958a170fc94c4ffec77e07ced25fce,40481744+tutububug@users.noreply.github.com,2024-07-31 13:34:23+08:00,noreply@github.com,2024-07-31 13:34:23+08:00,"feat(hyperloglog): add support of the Hyperloglog data structure (#2142)

Co-authored-by: yangxiao <yangxiao@shopee.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,11,redis_metadata.cc,cc,24,1,25
727bec2e69958a170fc94c4ffec77e07ced25fce,40481744+tutububug@users.noreply.github.com,2024-07-31 13:34:23+08:00,noreply@github.com,2024-07-31 13:34:23+08:00,"feat(hyperloglog): add support of the Hyperloglog data structure (#2142)

Co-authored-by: yangxiao <yangxiao@shopee.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,11,redis_metadata.h,h,24,2,26
727bec2e69958a170fc94c4ffec77e07ced25fce,40481744+tutububug@users.noreply.github.com,2024-07-31 13:34:23+08:00,noreply@github.com,2024-07-31 13:34:23+08:00,"feat(hyperloglog): add support of the Hyperloglog data structure (#2142)

Co-authored-by: yangxiao <yangxiao@shopee.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,11,storage.h,h,4,0,4
727bec2e69958a170fc94c4ffec77e07ced25fce,40481744+tutububug@users.noreply.github.com,2024-07-31 13:34:23+08:00,noreply@github.com,2024-07-31 13:34:23+08:00,"feat(hyperloglog): add support of the Hyperloglog data structure (#2142)

Co-authored-by: yangxiao <yangxiao@shopee.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,11,hyperloglog.cc,cc,232,0,232
727bec2e69958a170fc94c4ffec77e07ced25fce,40481744+tutububug@users.noreply.github.com,2024-07-31 13:34:23+08:00,noreply@github.com,2024-07-31 13:34:23+08:00,"feat(hyperloglog): add support of the Hyperloglog data structure (#2142)

Co-authored-by: yangxiao <yangxiao@shopee.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,11,hyperloglog.h,h,72,0,72
727bec2e69958a170fc94c4ffec77e07ced25fce,40481744+tutububug@users.noreply.github.com,2024-07-31 13:34:23+08:00,noreply@github.com,2024-07-31 13:34:23+08:00,"feat(hyperloglog): add support of the Hyperloglog data structure (#2142)

Co-authored-by: yangxiao <yangxiao@shopee.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,11,redis_bitmap.cc,cc,0,1,1
727bec2e69958a170fc94c4ffec77e07ced25fce,40481744+tutububug@users.noreply.github.com,2024-07-31 13:34:23+08:00,noreply@github.com,2024-07-31 13:34:23+08:00,"feat(hyperloglog): add support of the Hyperloglog data structure (#2142)

Co-authored-by: yangxiao <yangxiao@shopee.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,11,redis_hyperloglog.cc,cc,223,0,223
727bec2e69958a170fc94c4ffec77e07ced25fce,40481744+tutububug@users.noreply.github.com,2024-07-31 13:34:23+08:00,noreply@github.com,2024-07-31 13:34:23+08:00,"feat(hyperloglog): add support of the Hyperloglog data structure (#2142)

Co-authored-by: yangxiao <yangxiao@shopee.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,11,redis_hyperloglog.h,h,45,0,45
727bec2e69958a170fc94c4ffec77e07ced25fce,40481744+tutububug@users.noreply.github.com,2024-07-31 13:34:23+08:00,noreply@github.com,2024-07-31 13:34:23+08:00,"feat(hyperloglog): add support of the Hyperloglog data structure (#2142)

Co-authored-by: yangxiao <yangxiao@shopee.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,11,murmurhash2.h,h,106,0,106
727bec2e69958a170fc94c4ffec77e07ced25fce,40481744+tutububug@users.noreply.github.com,2024-07-31 13:34:23+08:00,noreply@github.com,2024-07-31 13:34:23+08:00,"feat(hyperloglog): add support of the Hyperloglog data structure (#2142)

Co-authored-by: yangxiao <yangxiao@shopee.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,11,hyperloglog_test.cc,cc,77,0,77
f436ebc1eade0bb857831c7a033dae5caf5fc412,spiffyeight77@gmail.com,2024-07-31 19:39:43+09:00,noreply@github.com,2024-07-31 19:39:43+09:00,"feat(ci): integrate Rocky Linux environment into the CI workflow (#2451)

Signed-off-by: Ruihua Wen <spiffyeight77@gmail.com>",unstable,True,False,1,kvrocks.yaml,yaml,30,0,30
b919343c70b9c20a627fc0dd8d79b3213910ed84,twice.mliu@gmail.com,2024-07-31 23:44:30+09:00,noreply@github.com,2024-07-31 23:44:30+09:00,build(cmake): update compiler version requirement (#2455),unstable,True,False,1,CMakeLists.txt,txt,7,7,14
a3863f9cb8f84c15bec97a5382cd4e1bb76aa04e,maplewish117@gmail.com,2024-08-01 20:58:11+08:00,noreply@github.com,2024-08-01 21:58:11+09:00,feat(hyperloglog): Add support of PFMERGE command (#2457),unstable,True,False,6,cmd_hll.cc,cc,30,8,38
a3863f9cb8f84c15bec97a5382cd4e1bb76aa04e,maplewish117@gmail.com,2024-08-01 20:58:11+08:00,noreply@github.com,2024-08-01 21:58:11+09:00,feat(hyperloglog): Add support of PFMERGE command (#2457),unstable,True,False,6,hyperloglog.cc,cc,25,0,25
a3863f9cb8f84c15bec97a5382cd4e1bb76aa04e,maplewish117@gmail.com,2024-08-01 20:58:11+08:00,noreply@github.com,2024-08-01 21:58:11+09:00,feat(hyperloglog): Add support of PFMERGE command (#2457),unstable,True,False,6,hyperloglog.h,h,6,0,6
a3863f9cb8f84c15bec97a5382cd4e1bb76aa04e,maplewish117@gmail.com,2024-08-01 20:58:11+08:00,noreply@github.com,2024-08-01 21:58:11+09:00,feat(hyperloglog): Add support of PFMERGE command (#2457),unstable,True,False,6,redis_hyperloglog.cc,cc,123,13,136
a3863f9cb8f84c15bec97a5382cd4e1bb76aa04e,maplewish117@gmail.com,2024-08-01 20:58:11+08:00,noreply@github.com,2024-08-01 21:58:11+09:00,feat(hyperloglog): Add support of PFMERGE command (#2457),unstable,True,False,6,redis_hyperloglog.h,h,15,5,20
a3863f9cb8f84c15bec97a5382cd4e1bb76aa04e,maplewish117@gmail.com,2024-08-01 20:58:11+08:00,noreply@github.com,2024-08-01 21:58:11+09:00,feat(hyperloglog): Add support of PFMERGE command (#2457),unstable,True,False,6,hyperloglog_test.cc,cc,99,0,99
0f5f18e106bf874efc8257b6653b2c9717c24c50,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-01 18:22:30-07:00,noreply@github.com,2024-08-02 10:22:30+09:00,"feat(search): implement vector query for sql/redisearch parser & transformer (#2450)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,11,common_transformer.h,h,20,0,20
0f5f18e106bf874efc8257b6653b2c9717c24c50,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-01 18:22:30-07:00,noreply@github.com,2024-08-02 10:22:30+09:00,"feat(search): implement vector query for sql/redisearch parser & transformer (#2450)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,11,ir.h,h,70,1,71
0f5f18e106bf874efc8257b6653b2c9717c24c50,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-01 18:22:30-07:00,noreply@github.com,2024-08-02 10:22:30+09:00,"feat(search): implement vector query for sql/redisearch parser & transformer (#2450)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,11,ir_sema_checker.h,h,63,0,63
0f5f18e106bf874efc8257b6653b2c9717c24c50,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-01 18:22:30-07:00,noreply@github.com,2024-08-02 10:22:30+09:00,"feat(search): implement vector query for sql/redisearch parser & transformer (#2450)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,11,redis_query_parser.h,h,13,3,16
0f5f18e106bf874efc8257b6653b2c9717c24c50,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-01 18:22:30-07:00,noreply@github.com,2024-08-02 10:22:30+09:00,"feat(search): implement vector query for sql/redisearch parser & transformer (#2450)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,11,redis_query_transformer.h,h,45,19,64
0f5f18e106bf874efc8257b6653b2c9717c24c50,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-01 18:22:30-07:00,noreply@github.com,2024-08-02 10:22:30+09:00,"feat(search): implement vector query for sql/redisearch parser & transformer (#2450)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,11,search_encoding.h,h,2,0,2
0f5f18e106bf874efc8257b6653b2c9717c24c50,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-01 18:22:30-07:00,noreply@github.com,2024-08-02 10:22:30+09:00,"feat(search): implement vector query for sql/redisearch parser & transformer (#2450)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,11,sql_parser.h,h,9,2,11
0f5f18e106bf874efc8257b6653b2c9717c24c50,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-01 18:22:30-07:00,noreply@github.com,2024-08-02 10:22:30+09:00,"feat(search): implement vector query for sql/redisearch parser & transformer (#2450)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,11,sql_transformer.h,h,50,24,74
0f5f18e106bf874efc8257b6653b2c9717c24c50,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-01 18:22:30-07:00,noreply@github.com,2024-08-02 10:22:30+09:00,"feat(search): implement vector query for sql/redisearch parser & transformer (#2450)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,11,ir_sema_checker_test.cc,cc,35,0,35
0f5f18e106bf874efc8257b6653b2c9717c24c50,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-01 18:22:30-07:00,noreply@github.com,2024-08-02 10:22:30+09:00,"feat(search): implement vector query for sql/redisearch parser & transformer (#2450)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,11,redis_query_parser_test.cc,cc,33,0,33
0f5f18e106bf874efc8257b6653b2c9717c24c50,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-01 18:22:30-07:00,noreply@github.com,2024-08-02 10:22:30+09:00,"feat(search): implement vector query for sql/redisearch parser & transformer (#2450)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,11,sql_parser_test.cc,cc,22,0,22
f9d7297630ecbf342bbed492061acb31fbfa3fd2,maplewish117@gmail.com,2024-08-04 14:00:41+08:00,noreply@github.com,2024-08-04 15:00:41+09:00,chore(hyperloglog): add go test cases and minor optimizations/bugfixes (#2463),unstable,True,False,4,cmd_hll.cc,cc,13,14,27
f9d7297630ecbf342bbed492061acb31fbfa3fd2,maplewish117@gmail.com,2024-08-04 14:00:41+08:00,noreply@github.com,2024-08-04 15:00:41+09:00,chore(hyperloglog): add go test cases and minor optimizations/bugfixes (#2463),unstable,True,False,4,hyperloglog.cc,cc,3,3,6
f9d7297630ecbf342bbed492061acb31fbfa3fd2,maplewish117@gmail.com,2024-08-04 14:00:41+08:00,noreply@github.com,2024-08-04 15:00:41+09:00,chore(hyperloglog): add go test cases and minor optimizations/bugfixes (#2463),unstable,True,False,4,redis_hyperloglog.cc,cc,24,15,39
f9d7297630ecbf342bbed492061acb31fbfa3fd2,maplewish117@gmail.com,2024-08-04 14:00:41+08:00,noreply@github.com,2024-08-04 15:00:41+09:00,chore(hyperloglog): add go test cases and minor optimizations/bugfixes (#2463),unstable,True,False,4,hyperloglog_test.go,go,216,0,216
bf56a05f93f6406f67db3bed54114a3e64ffe351,maplewish117@gmail.com,2024-08-05 16:34:31+08:00,noreply@github.com,2024-08-05 17:34:31+09:00,chore: improve the style and document for SlotMigration (#2465),unstable,True,False,3,slot_migrate.cc,cc,34,15,49
bf56a05f93f6406f67db3bed54114a3e64ffe351,maplewish117@gmail.com,2024-08-05 16:34:31+08:00,noreply@github.com,2024-08-05 17:34:31+09:00,chore: improve the style and document for SlotMigration (#2465),unstable,True,False,3,slot_migrate.h,h,18,11,29
bf56a05f93f6406f67db3bed54114a3e64ffe351,maplewish117@gmail.com,2024-08-05 16:34:31+08:00,noreply@github.com,2024-08-05 17:34:31+09:00,chore: improve the style and document for SlotMigration (#2465),unstable,True,False,3,stats.h,h,1,1,2
76cb42d6d0c505494c65699fcbb84d3a33dbf39f,aleks.raiden@gmail.com,2024-08-06 15:32:30+03:00,noreply@github.com,2024-08-06 20:32:30+08:00,chore: bump googletest to v1.15.2 (#2460),unstable,True,False,1,gtest.cmake,cmake,2,2,4
edcb7067453324f0bff1a4cca2d186730b31898e,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-07 06:41:11-07:00,noreply@github.com,2024-08-07 21:41:11+08:00,"feat(search): Hnsw Vector Search Optimizaton Pass (#2466)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,16,filter_executor.h,h,22,0,22
edcb7067453324f0bff1a4cca2d186730b31898e,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-07 06:41:11-07:00,noreply@github.com,2024-08-07 21:41:11+08:00,"feat(search): Hnsw Vector Search Optimizaton Pass (#2466)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,16,ir.h,h,9,10,19
edcb7067453324f0bff1a4cca2d186730b31898e,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-07 06:41:11-07:00,noreply@github.com,2024-08-07 21:41:11+08:00,"feat(search): Hnsw Vector Search Optimizaton Pass (#2466)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,16,ir_pass.h,h,29,0,29
edcb7067453324f0bff1a4cca2d186730b31898e,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-07 06:41:11-07:00,noreply@github.com,2024-08-07 21:41:11+08:00,"feat(search): Hnsw Vector Search Optimizaton Pass (#2466)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,16,ir_plan.h,h,1,1,2
edcb7067453324f0bff1a4cca2d186730b31898e,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-07 06:41:11-07:00,noreply@github.com,2024-08-07 21:41:11+08:00,"feat(search): Hnsw Vector Search Optimizaton Pass (#2466)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,16,ir_sema_checker.h,h,8,5,13
edcb7067453324f0bff1a4cca2d186730b31898e,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-07 06:41:11-07:00,noreply@github.com,2024-08-07 21:41:11+08:00,"feat(search): Hnsw Vector Search Optimizaton Pass (#2466)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,16,cost_model.h,h,10,0,10
edcb7067453324f0bff1a4cca2d186730b31898e,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-07 06:41:11-07:00,noreply@github.com,2024-08-07 21:41:11+08:00,"feat(search): Hnsw Vector Search Optimizaton Pass (#2466)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,16,index_selection.h,h,23,0,23
edcb7067453324f0bff1a4cca2d186730b31898e,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-07 06:41:11-07:00,noreply@github.com,2024-08-07 21:41:11+08:00,"feat(search): Hnsw Vector Search Optimizaton Pass (#2466)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,16,manager.h,h,3,1,4
edcb7067453324f0bff1a4cca2d186730b31898e,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-07 06:41:11-07:00,noreply@github.com,2024-08-07 21:41:11+08:00,"feat(search): Hnsw Vector Search Optimizaton Pass (#2466)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,16,sort_limit_to_knn.h,h,50,0,50
edcb7067453324f0bff1a4cca2d186730b31898e,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-07 06:41:11-07:00,noreply@github.com,2024-08-07 21:41:11+08:00,"feat(search): Hnsw Vector Search Optimizaton Pass (#2466)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,16,redis_query_parser.h,h,3,2,5
edcb7067453324f0bff1a4cca2d186730b31898e,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-07 06:41:11-07:00,noreply@github.com,2024-08-07 21:41:11+08:00,"feat(search): Hnsw Vector Search Optimizaton Pass (#2466)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,16,redis_query_transformer.h,h,10,6,16
edcb7067453324f0bff1a4cca2d186730b31898e,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-07 06:41:11-07:00,noreply@github.com,2024-08-07 21:41:11+08:00,"feat(search): Hnsw Vector Search Optimizaton Pass (#2466)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,16,sql_transformer.h,h,0,1,1
edcb7067453324f0bff1a4cca2d186730b31898e,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-07 06:41:11-07:00,noreply@github.com,2024-08-07 21:41:11+08:00,"feat(search): Hnsw Vector Search Optimizaton Pass (#2466)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,16,ir_pass_test.cc,cc,46,1,47
edcb7067453324f0bff1a4cca2d186730b31898e,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-07 06:41:11-07:00,noreply@github.com,2024-08-07 21:41:11+08:00,"feat(search): Hnsw Vector Search Optimizaton Pass (#2466)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,16,ir_sema_checker_test.cc,cc,7,0,7
edcb7067453324f0bff1a4cca2d186730b31898e,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-07 06:41:11-07:00,noreply@github.com,2024-08-07 21:41:11+08:00,"feat(search): Hnsw Vector Search Optimizaton Pass (#2466)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,16,plan_executor_test.cc,cc,36,0,36
edcb7067453324f0bff1a4cca2d186730b31898e,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-07 06:41:11-07:00,noreply@github.com,2024-08-07 21:41:11+08:00,"feat(search): Hnsw Vector Search Optimizaton Pass (#2466)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,16,redis_query_parser_test.cc,cc,10,4,14
01f353df677c390cd617bd32330da96f7f1902ce,hulk.website@gmail.com,2024-08-08 00:10:51+08:00,noreply@github.com,2024-08-08 00:10:51+08:00,chore(storage): Remove speedb due to lack of active (#2476),unstable,True,False,10,kvrocks.yaml,yaml,1,5,6
01f353df677c390cd617bd32330da96f7f1902ce,hulk.website@gmail.com,2024-08-08 00:10:51+08:00,noreply@github.com,2024-08-08 00:10:51+08:00,chore(storage): Remove speedb due to lack of active (#2476),unstable,True,False,10,CMakeLists.txt,txt,2,11,13
01f353df677c390cd617bd32330da96f7f1902ce,hulk.website@gmail.com,2024-08-08 00:10:51+08:00,noreply@github.com,2024-08-08 00:10:51+08:00,chore(storage): Remove speedb due to lack of active (#2476),unstable,True,False,10,NOTICE,None,0,1,1
01f353df677c390cd617bd32330da96f7f1902ce,hulk.website@gmail.com,2024-08-08 00:10:51+08:00,noreply@github.com,2024-08-08 00:10:51+08:00,chore(storage): Remove speedb due to lack of active (#2476),unstable,True,False,10,FindJeMalloc.cmake,cmake,0,1,1
01f353df677c390cd617bd32330da96f7f1902ce,hulk.website@gmail.com,2024-08-08 00:10:51+08:00,noreply@github.com,2024-08-08 00:10:51+08:00,chore(storage): Remove speedb due to lack of active (#2476),unstable,True,False,10,FindZLIB.cmake,cmake,0,1,1
01f353df677c390cd617bd32330da96f7f1902ce,hulk.website@gmail.com,2024-08-08 00:10:51+08:00,noreply@github.com,2024-08-08 00:10:51+08:00,chore(storage): Remove speedb due to lack of active (#2476),unstable,True,False,10,Findlz4.cmake,cmake,0,1,1
01f353df677c390cd617bd32330da96f7f1902ce,hulk.website@gmail.com,2024-08-08 00:10:51+08:00,noreply@github.com,2024-08-08 00:10:51+08:00,chore(storage): Remove speedb due to lack of active (#2476),unstable,True,False,10,Findzstd.cmake,cmake,0,1,1
01f353df677c390cd617bd32330da96f7f1902ce,hulk.website@gmail.com,2024-08-08 00:10:51+08:00,noreply@github.com,2024-08-08 00:10:51+08:00,chore(storage): Remove speedb due to lack of active (#2476),unstable,True,False,10,storage.h,h,0,1,1
01f353df677c390cd617bd32330da96f7f1902ce,hulk.website@gmail.com,2024-08-08 00:10:51+08:00,noreply@github.com,2024-08-08 00:10:51+08:00,chore(storage): Remove speedb due to lack of active (#2476),unstable,True,False,10,compact_test.cc,cc,0,1,1
7f812c7c0b4b9e893ba4ece4088dc555d2b2e4e8,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-08 15:44:38-07:00,noreply@github.com,2024-08-09 06:44:38+08:00,"feat(search): add support of HNSW vector fields for FT.CREATE (#2477)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,cmd_search.cc,cc,78,1,79
7f812c7c0b4b9e893ba4ece4088dc555d2b2e4e8,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-08 15:44:38-07:00,noreply@github.com,2024-08-09 06:44:38+08:00,"feat(search): add support of HNSW vector fields for FT.CREATE (#2477)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,error_constants.h,h,1,0,1
7f812c7c0b4b9e893ba4ece4088dc555d2b2e4e8,68083940+Beihao-Zhou@users.noreply.github.com,2024-08-08 15:44:38-07:00,noreply@github.com,2024-08-09 06:44:38+08:00,"feat(search): add support of HNSW vector fields for FT.CREATE (#2477)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,search_test.go,go,63,15,78
275ab32054faa72c59c2b40b4eff69a8011a6bbc,hulk.website@gmail.com,2024-08-09 09:56:20+08:00,noreply@github.com,2024-08-09 09:56:20+08:00,"feat(command): Implement the new command POLLUPDATES for polling updates by sequence (#2472)

As proposed in issue #2469, we would like to add a new command for
polling updates from Kvrocks. The main purpose is to allow to implement
features like CDC(Change Stream Capture) without running an agent
alongside Kvrocks instances to make it easier to operate.

The following is the command format:

```shell
POLLUPDATES <Sequence Number> [MAX <N>] [STRICT] [FORMAT <RAW>]
```

- `Sequence Number` represents the start sequence of the polling operation and it’s a required argument.
- `MAX` represents the maximum number of items that can be retrieved, it’s an optional argument and uses `16` as the default value if it’s missing
- `STRICT` is set means the update’s sequence MUST be exactly equal to the sequence number, it’s an optional argument. `GetUpdatesSince` will return the first available sequence if the sequence number is non-existent, so we allow users to specify if required to match the input sequence number.

The output contains the following sections:

- last_sequence
- updates
- next_sequence

For example, we assume the DB's latest sequence is 100 and we send the
command: `POLLUPDATES 90 MAX 3 FORMAT RAW`, it will return the following
response:

```shell
""latest_sequence""
100
""updates""
  {batch-0}
  {batch-1}
  {batch-2}
""next_sequence""
93
```

This will close #2469 

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,cmd_server.cc,cc,57,1,58
275ab32054faa72c59c2b40b4eff69a8011a6bbc,hulk.website@gmail.com,2024-08-09 09:56:20+08:00,noreply@github.com,2024-08-09 09:56:20+08:00,"feat(command): Implement the new command POLLUPDATES for polling updates by sequence (#2472)

As proposed in issue #2469, we would like to add a new command for
polling updates from Kvrocks. The main purpose is to allow to implement
features like CDC(Change Stream Capture) without running an agent
alongside Kvrocks instances to make it easier to operate.

The following is the command format:

```shell
POLLUPDATES <Sequence Number> [MAX <N>] [STRICT] [FORMAT <RAW>]
```

- `Sequence Number` represents the start sequence of the polling operation and it’s a required argument.
- `MAX` represents the maximum number of items that can be retrieved, it’s an optional argument and uses `16` as the default value if it’s missing
- `STRICT` is set means the update’s sequence MUST be exactly equal to the sequence number, it’s an optional argument. `GetUpdatesSince` will return the first available sequence if the sequence number is non-existent, so we allow users to specify if required to match the input sequence number.

The output contains the following sections:

- last_sequence
- updates
- next_sequence

For example, we assume the DB's latest sequence is 100 and we send the
command: `POLLUPDATES 90 MAX 3 FORMAT RAW`, it will return the following
response:

```shell
""latest_sequence""
100
""updates""
  {batch-0}
  {batch-1}
  {batch-2}
""next_sequence""
93
```

This will close #2469 

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,redis_connection.h,h,1,0,1
275ab32054faa72c59c2b40b4eff69a8011a6bbc,hulk.website@gmail.com,2024-08-09 09:56:20+08:00,noreply@github.com,2024-08-09 09:56:20+08:00,"feat(command): Implement the new command POLLUPDATES for polling updates by sequence (#2472)

As proposed in issue #2469, we would like to add a new command for
polling updates from Kvrocks. The main purpose is to allow to implement
features like CDC(Change Stream Capture) without running an agent
alongside Kvrocks instances to make it easier to operate.

The following is the command format:

```shell
POLLUPDATES <Sequence Number> [MAX <N>] [STRICT] [FORMAT <RAW>]
```

- `Sequence Number` represents the start sequence of the polling operation and it’s a required argument.
- `MAX` represents the maximum number of items that can be retrieved, it’s an optional argument and uses `16` as the default value if it’s missing
- `STRICT` is set means the update’s sequence MUST be exactly equal to the sequence number, it’s an optional argument. `GetUpdatesSince` will return the first available sequence if the sequence number is non-existent, so we allow users to specify if required to match the input sequence number.

The output contains the following sections:

- last_sequence
- updates
- next_sequence

For example, we assume the DB's latest sequence is 100 and we send the
command: `POLLUPDATES 90 MAX 3 FORMAT RAW`, it will return the following
response:

```shell
""latest_sequence""
100
""updates""
  {batch-0}
  {batch-1}
  {batch-2}
""next_sequence""
93
```

This will close #2469 

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,redis_reply.cc,cc,9,0,9
275ab32054faa72c59c2b40b4eff69a8011a6bbc,hulk.website@gmail.com,2024-08-09 09:56:20+08:00,noreply@github.com,2024-08-09 09:56:20+08:00,"feat(command): Implement the new command POLLUPDATES for polling updates by sequence (#2472)

As proposed in issue #2469, we would like to add a new command for
polling updates from Kvrocks. The main purpose is to allow to implement
features like CDC(Change Stream Capture) without running an agent
alongside Kvrocks instances to make it easier to operate.

The following is the command format:

```shell
POLLUPDATES <Sequence Number> [MAX <N>] [STRICT] [FORMAT <RAW>]
```

- `Sequence Number` represents the start sequence of the polling operation and it’s a required argument.
- `MAX` represents the maximum number of items that can be retrieved, it’s an optional argument and uses `16` as the default value if it’s missing
- `STRICT` is set means the update’s sequence MUST be exactly equal to the sequence number, it’s an optional argument. `GetUpdatesSince` will return the first available sequence if the sequence number is non-existent, so we allow users to specify if required to match the input sequence number.

The output contains the following sections:

- last_sequence
- updates
- next_sequence

For example, we assume the DB's latest sequence is 100 and we send the
command: `POLLUPDATES 90 MAX 3 FORMAT RAW`, it will return the following
response:

```shell
""latest_sequence""
100
""updates""
  {batch-0}
  {batch-1}
  {batch-2}
""next_sequence""
93
```

This will close #2469 

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,redis_reply.h,h,2,0,2
275ab32054faa72c59c2b40b4eff69a8011a6bbc,hulk.website@gmail.com,2024-08-09 09:56:20+08:00,noreply@github.com,2024-08-09 09:56:20+08:00,"feat(command): Implement the new command POLLUPDATES for polling updates by sequence (#2472)

As proposed in issue #2469, we would like to add a new command for
polling updates from Kvrocks. The main purpose is to allow to implement
features like CDC(Change Stream Capture) without running an agent
alongside Kvrocks instances to make it easier to operate.

The following is the command format:

```shell
POLLUPDATES <Sequence Number> [MAX <N>] [STRICT] [FORMAT <RAW>]
```

- `Sequence Number` represents the start sequence of the polling operation and it’s a required argument.
- `MAX` represents the maximum number of items that can be retrieved, it’s an optional argument and uses `16` as the default value if it’s missing
- `STRICT` is set means the update’s sequence MUST be exactly equal to the sequence number, it’s an optional argument. `GetUpdatesSince` will return the first available sequence if the sequence number is non-existent, so we allow users to specify if required to match the input sequence number.

The output contains the following sections:

- last_sequence
- updates
- next_sequence

For example, we assume the DB's latest sequence is 100 and we send the
command: `POLLUPDATES 90 MAX 3 FORMAT RAW`, it will return the following
response:

```shell
""latest_sequence""
100
""updates""
  {batch-0}
  {batch-1}
  {batch-2}
""next_sequence""
93
```

This will close #2469 

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,server.cc,cc,30,0,30
275ab32054faa72c59c2b40b4eff69a8011a6bbc,hulk.website@gmail.com,2024-08-09 09:56:20+08:00,noreply@github.com,2024-08-09 09:56:20+08:00,"feat(command): Implement the new command POLLUPDATES for polling updates by sequence (#2472)

As proposed in issue #2469, we would like to add a new command for
polling updates from Kvrocks. The main purpose is to allow to implement
features like CDC(Change Stream Capture) without running an agent
alongside Kvrocks instances to make it easier to operate.

The following is the command format:

```shell
POLLUPDATES <Sequence Number> [MAX <N>] [STRICT] [FORMAT <RAW>]
```

- `Sequence Number` represents the start sequence of the polling operation and it’s a required argument.
- `MAX` represents the maximum number of items that can be retrieved, it’s an optional argument and uses `16` as the default value if it’s missing
- `STRICT` is set means the update’s sequence MUST be exactly equal to the sequence number, it’s an optional argument. `GetUpdatesSince` will return the first available sequence if the sequence number is non-existent, so we allow users to specify if required to match the input sequence number.

The output contains the following sections:

- last_sequence
- updates
- next_sequence

For example, we assume the DB's latest sequence is 100 and we send the
command: `POLLUPDATES 90 MAX 3 FORMAT RAW`, it will return the following
response:

```shell
""latest_sequence""
100
""updates""
  {batch-0}
  {batch-1}
  {batch-2}
""next_sequence""
93
```

This will close #2469 

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,server.h,h,1,0,1
275ab32054faa72c59c2b40b4eff69a8011a6bbc,hulk.website@gmail.com,2024-08-09 09:56:20+08:00,noreply@github.com,2024-08-09 09:56:20+08:00,"feat(command): Implement the new command POLLUPDATES for polling updates by sequence (#2472)

As proposed in issue #2469, we would like to add a new command for
polling updates from Kvrocks. The main purpose is to allow to implement
features like CDC(Change Stream Capture) without running an agent
alongside Kvrocks instances to make it easier to operate.

The following is the command format:

```shell
POLLUPDATES <Sequence Number> [MAX <N>] [STRICT] [FORMAT <RAW>]
```

- `Sequence Number` represents the start sequence of the polling operation and it’s a required argument.
- `MAX` represents the maximum number of items that can be retrieved, it’s an optional argument and uses `16` as the default value if it’s missing
- `STRICT` is set means the update’s sequence MUST be exactly equal to the sequence number, it’s an optional argument. `GetUpdatesSince` will return the first available sequence if the sequence number is non-existent, so we allow users to specify if required to match the input sequence number.

The output contains the following sections:

- last_sequence
- updates
- next_sequence

For example, we assume the DB's latest sequence is 100 and we send the
command: `POLLUPDATES 90 MAX 3 FORMAT RAW`, it will return the following
response:

```shell
""latest_sequence""
100
""updates""
  {batch-0}
  {batch-1}
  {batch-2}
""next_sequence""
93
```

This will close #2469 

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,poll_updates_test.go,go,169,0,169
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_bit.cc,cc,1,1,2
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_bloom_filter.cc,cc,1,1,2
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_cluster.cc,cc,2,1,3
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_function.cc,cc,4,5,9
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_geo.cc,cc,1,1,2
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_hash.cc,cc,1,1,2
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_hll.cc,cc,1,1,2
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_json.cc,cc,1,1,2
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_key.cc,cc,1,1,2
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_list.cc,cc,1,1,2
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_pubsub.cc,cc,1,1,2
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_replication.cc,cc,6,7,13
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_script.cc,cc,6,7,13
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_search.cc,cc,2,1,3
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_server.cc,cc,1,1,2
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_set.cc,cc,1,1,2
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_sortedint.cc,cc,1,1,2
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_stream.cc,cc,1,1,2
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_string.cc,cc,2,1,3
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_txn.cc,cc,1,1,2
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,cmd_zset.cc,cc,1,1,2
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,commander.cc,cc,4,2,6
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,commander.h,h,35,9,44
0d3898b865fd74a5181f000d8212c9fe33510d81,twice.mliu@gmail.com,2024-08-09 21:20:36+08:00,noreply@github.com,2024-08-09 21:20:36+08:00,feat(command): add category enum for every command (#2479),unstable,True,False,24,redis_connection.cc,cc,5,4,9
9335032f8e3961f90b6eedc0b72a19b821f0f411,twice.mliu@gmail.com,2024-08-10 08:21:31+08:00,noreply@github.com,2024-08-10 08:21:31+08:00,chore(dockerfile): add binutils for addr2line in dockerfile (#2480),unstable,True,False,1,Dockerfile,None,1,1,2
2d2d98173836b3945083a77f27f89f9c618efcba,twice.mliu@gmail.com,2024-08-10 10:34:33+08:00,noreply@github.com,2024-08-10 10:34:33+08:00,fix: monitor dumps 0xffffff prefix for signed char (#2482),unstable,True,False,1,string_util.cc,cc,1,3,4
5ace37dd3ece35511c045ec79e0f756e3fabfdbc,twice.mliu@gmail.com,2024-08-10 15:07:30+08:00,noreply@github.com,2024-08-10 15:07:30+08:00,chore: use `StringJoin` in `EnumField::Set` (#2485),unstable,True,False,2,cmd_hll.cc,cc,3,3,6
5ace37dd3ece35511c045ec79e0f756e3fabfdbc,twice.mliu@gmail.com,2024-08-10 15:07:30+08:00,noreply@github.com,2024-08-10 15:07:30+08:00,chore: use `StringJoin` in `EnumField::Set` (#2485),unstable,True,False,2,config_type.h,h,1,6,7
a63d48eb3b77311ed128426cded53810ecb62a5d,twice.mliu@gmail.com,2024-08-10 16:19:21+08:00,noreply@github.com,2024-08-10 16:19:21+08:00,feat(conn): add arguments for unknown command message (#2483),unstable,True,False,1,redis_connection.cc,cc,6,1,7
3408318934cb68c0c1f2ffa937f19f02346d0672,twice.mliu@gmail.com,2024-08-10 17:53:44+08:00,noreply@github.com,2024-08-10 17:53:44+08:00,feat(search): allow to omit `ON HASH|JSON` in FT.CREATE (#2484),unstable,True,False,2,cmd_search.cc,cc,3,9,12
3408318934cb68c0c1f2ffa937f19f02346d0672,twice.mliu@gmail.com,2024-08-10 17:53:44+08:00,noreply@github.com,2024-08-10 17:53:44+08:00,feat(search): allow to omit `ON HASH|JSON` in FT.CREATE (#2484),unstable,True,False,2,search_test.go,go,3,0,3
89b6a1114f499833a7a7c420872f6d529ffa7bf0,yann@defret.in,2024-08-14 08:43:56+02:00,noreply@github.com,2024-08-14 14:43:56+08:00,chore(dockerfile): use non-root user in Docker image (#2488),unstable,True,False,1,Dockerfile,None,8,1,9
a86d31731774d165f6c3669c508eac5f2774d8de,zhousile@foxmail.com,2024-08-14 19:49:09+08:00,noreply@github.com,2024-08-14 19:49:09+08:00,"feat(script): support script flags of Eval script and Function (#2446)

This PR is designed to support three script flags within Eval Script and Function: `no-writes`, `no-cluster`, and `allow-cross-slot-keys`.

Before executing the Lua script, `SaveOnRegistry` stores the parsed flags in `REGISTRY_SCRIPT_RUN_CTX_NAME`. During the execution of the Lua script, `GetFromRegistry` retrieves the flags of the currently executing script. After the script execution ends, it should be set to `nil`.

For APIs like `EVAL`, `SCRIPT LOAD`, and `FUNCTION LOAD`, the flags parsed from the Eval Script will be stored in Lua's global variable `f_<sha>_flags_`. The flags parsed by FUNCTION `register_function()` will be stored in the Lua global variable `_registered_flags_<funcname>`.",unstable,True,False,7,cluster.cc,cc,21,2,23
a86d31731774d165f6c3669c508eac5f2774d8de,zhousile@foxmail.com,2024-08-14 19:49:09+08:00,noreply@github.com,2024-08-14 19:49:09+08:00,"feat(script): support script flags of Eval script and Function (#2446)

This PR is designed to support three script flags within Eval Script and Function: `no-writes`, `no-cluster`, and `allow-cross-slot-keys`.

Before executing the Lua script, `SaveOnRegistry` stores the parsed flags in `REGISTRY_SCRIPT_RUN_CTX_NAME`. During the execution of the Lua script, `GetFromRegistry` retrieves the flags of the currently executing script. After the script execution ends, it should be set to `nil`.

For APIs like `EVAL`, `SCRIPT LOAD`, and `FUNCTION LOAD`, the flags parsed from the Eval Script will be stored in Lua's global variable `f_<sha>_flags_`. The flags parsed by FUNCTION `register_function()` will be stored in the Lua global variable `_registered_flags_<funcname>`.",unstable,True,False,7,cluster.h,h,2,1,3
a86d31731774d165f6c3669c508eac5f2774d8de,zhousile@foxmail.com,2024-08-14 19:49:09+08:00,noreply@github.com,2024-08-14 19:49:09+08:00,"feat(script): support script flags of Eval script and Function (#2446)

This PR is designed to support three script flags within Eval Script and Function: `no-writes`, `no-cluster`, and `allow-cross-slot-keys`.

Before executing the Lua script, `SaveOnRegistry` stores the parsed flags in `REGISTRY_SCRIPT_RUN_CTX_NAME`. During the execution of the Lua script, `GetFromRegistry` retrieves the flags of the currently executing script. After the script execution ends, it should be set to `nil`.

For APIs like `EVAL`, `SCRIPT LOAD`, and `FUNCTION LOAD`, the flags parsed from the Eval Script will be stored in Lua's global variable `f_<sha>_flags_`. The flags parsed by FUNCTION `register_function()` will be stored in the Lua global variable `_registered_flags_<funcname>`.",unstable,True,False,7,worker.cc,cc,1,1,2
a86d31731774d165f6c3669c508eac5f2774d8de,zhousile@foxmail.com,2024-08-14 19:49:09+08:00,noreply@github.com,2024-08-14 19:49:09+08:00,"feat(script): support script flags of Eval script and Function (#2446)

This PR is designed to support three script flags within Eval Script and Function: `no-writes`, `no-cluster`, and `allow-cross-slot-keys`.

Before executing the Lua script, `SaveOnRegistry` stores the parsed flags in `REGISTRY_SCRIPT_RUN_CTX_NAME`. During the execution of the Lua script, `GetFromRegistry` retrieves the flags of the currently executing script. After the script execution ends, it should be set to `nil`.

For APIs like `EVAL`, `SCRIPT LOAD`, and `FUNCTION LOAD`, the flags parsed from the Eval Script will be stored in Lua's global variable `f_<sha>_flags_`. The flags parsed by FUNCTION `register_function()` will be stored in the Lua global variable `_registered_flags_<funcname>`.",unstable,True,False,7,scripting.cc,cc,207,45,252
a86d31731774d165f6c3669c508eac5f2774d8de,zhousile@foxmail.com,2024-08-14 19:49:09+08:00,noreply@github.com,2024-08-14 19:49:09+08:00,"feat(script): support script flags of Eval script and Function (#2446)

This PR is designed to support three script flags within Eval Script and Function: `no-writes`, `no-cluster`, and `allow-cross-slot-keys`.

Before executing the Lua script, `SaveOnRegistry` stores the parsed flags in `REGISTRY_SCRIPT_RUN_CTX_NAME`. During the execution of the Lua script, `GetFromRegistry` retrieves the flags of the currently executing script. After the script execution ends, it should be set to `nil`.

For APIs like `EVAL`, `SCRIPT LOAD`, and `FUNCTION LOAD`, the flags parsed from the Eval Script will be stored in Lua's global variable `f_<sha>_flags_`. The flags parsed by FUNCTION `register_function()` will be stored in the Lua global variable `_registered_flags_<funcname>`.",unstable,True,False,7,scripting.h,h,88,2,90
a86d31731774d165f6c3669c508eac5f2774d8de,zhousile@foxmail.com,2024-08-14 19:49:09+08:00,noreply@github.com,2024-08-14 19:49:09+08:00,"feat(script): support script flags of Eval script and Function (#2446)

This PR is designed to support three script flags within Eval Script and Function: `no-writes`, `no-cluster`, and `allow-cross-slot-keys`.

Before executing the Lua script, `SaveOnRegistry` stores the parsed flags in `REGISTRY_SCRIPT_RUN_CTX_NAME`. During the execution of the Lua script, `GetFromRegistry` retrieves the flags of the currently executing script. After the script execution ends, it should be set to `nil`.

For APIs like `EVAL`, `SCRIPT LOAD`, and `FUNCTION LOAD`, the flags parsed from the Eval Script will be stored in Lua's global variable `f_<sha>_flags_`. The flags parsed by FUNCTION `register_function()` will be stored in the Lua global variable `_registered_flags_<funcname>`.",unstable,True,False,7,function_test.go,go,270,3,273
a86d31731774d165f6c3669c508eac5f2774d8de,zhousile@foxmail.com,2024-08-14 19:49:09+08:00,noreply@github.com,2024-08-14 19:49:09+08:00,"feat(script): support script flags of Eval script and Function (#2446)

This PR is designed to support three script flags within Eval Script and Function: `no-writes`, `no-cluster`, and `allow-cross-slot-keys`.

Before executing the Lua script, `SaveOnRegistry` stores the parsed flags in `REGISTRY_SCRIPT_RUN_CTX_NAME`. During the execution of the Lua script, `GetFromRegistry` retrieves the flags of the currently executing script. After the script execution ends, it should be set to `nil`.

For APIs like `EVAL`, `SCRIPT LOAD`, and `FUNCTION LOAD`, the flags parsed from the Eval Script will be stored in Lua's global variable `f_<sha>_flags_`. The flags parsed by FUNCTION `register_function()` will be stored in the Lua global variable `_registered_flags_<funcname>`.",unstable,True,False,7,scripting_test.go,go,278,0,278
f38557b1d87eca93c8e360f4f450bfdf4103ed61,86070045+jonathanc-n@users.noreply.github.com,2024-08-19 04:42:48-04:00,noreply@github.com,2024-08-19 16:42:48+08:00,"feat: add slow flags for commands with heavy disk I/O (#2494)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,cmd_hash.cc,cc,3,3,6
f38557b1d87eca93c8e360f4f450bfdf4103ed61,86070045+jonathanc-n@users.noreply.github.com,2024-08-19 04:42:48-04:00,noreply@github.com,2024-08-19 16:42:48+08:00,"feat: add slow flags for commands with heavy disk I/O (#2494)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,cmd_list.cc,cc,2,2,4
f38557b1d87eca93c8e360f4f450bfdf4103ed61,86070045+jonathanc-n@users.noreply.github.com,2024-08-19 04:42:48-04:00,noreply@github.com,2024-08-19 16:42:48+08:00,"feat: add slow flags for commands with heavy disk I/O (#2494)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,cmd_set.cc,cc,8,8,16
f38557b1d87eca93c8e360f4f450bfdf4103ed61,86070045+jonathanc-n@users.noreply.github.com,2024-08-19 04:42:48-04:00,noreply@github.com,2024-08-19 16:42:48+08:00,"feat: add slow flags for commands with heavy disk I/O (#2494)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,cmd_zset.cc,cc,7,7,14
f38557b1d87eca93c8e360f4f450bfdf4103ed61,86070045+jonathanc-n@users.noreply.github.com,2024-08-19 04:42:48-04:00,noreply@github.com,2024-08-19 16:42:48+08:00,"feat: add slow flags for commands with heavy disk I/O (#2494)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,commander.h,h,3,0,3
afd0a1b22631148dae7fee6b621da2328be50ccb,ChrisZMF@163.com,2024-08-21 09:55:30+08:00,noreply@github.com,2024-08-21 09:55:30+08:00,fix(config):  wrong rocksdb config name max_sub_compactions (#2499),unstable,True,False,5,kvrocks.conf,conf,21,21,42
afd0a1b22631148dae7fee6b621da2328be50ccb,ChrisZMF@163.com,2024-08-21 09:55:30+08:00,noreply@github.com,2024-08-21 09:55:30+08:00,fix(config):  wrong rocksdb config name max_sub_compactions (#2499),unstable,True,False,5,config.cc,cc,2,1,3
afd0a1b22631148dae7fee6b621da2328be50ccb,ChrisZMF@163.com,2024-08-21 09:55:30+08:00,noreply@github.com,2024-08-21 09:55:30+08:00,fix(config):  wrong rocksdb config name max_sub_compactions (#2499),unstable,True,False,5,config.h,h,1,1,2
afd0a1b22631148dae7fee6b621da2328be50ccb,ChrisZMF@163.com,2024-08-21 09:55:30+08:00,noreply@github.com,2024-08-21 09:55:30+08:00,fix(config):  wrong rocksdb config name max_sub_compactions (#2499),unstable,True,False,5,storage.cc,cc,1,1,2
afd0a1b22631148dae7fee6b621da2328be50ccb,ChrisZMF@163.com,2024-08-21 09:55:30+08:00,noreply@github.com,2024-08-21 09:55:30+08:00,fix(config):  wrong rocksdb config name max_sub_compactions (#2499),unstable,True,False,5,config_test.cc,cc,1,1,2
111d4e8f17958696b67b7ff2d342f9826da29c05,aleks.raiden@gmail.com,2024-08-23 14:00:23+03:00,noreply@github.com,2024-08-23 19:00:23+08:00,chore: Bump cpptrace to v0.7.0 (#2501),unstable,True,False,1,cpptrace.cmake,cmake,2,2,4
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cluster.cc,cc,4,2,6
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,slot_import.cc,cc,6,3,9
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,slot_migrate.cc,cc,2,1,3
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_bit.cc,cc,13,7,20
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_bloom_filter.cc,cc,16,8,24
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_function.cc,cc,3,2,5
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_geo.cc,cc,17,9,26
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_hash.cc,cc,32,16,48
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_hll.cc,cc,7,4,11
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_json.cc,cc,48,27,75
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_key.cc,cc,40,21,61
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_list.cc,cc,45,27,72
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_pubsub.cc,cc,4,4,8
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_search.cc,cc,2,2,4
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_server.cc,cc,23,19,42
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_set.cc,cc,34,17,51
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_sortedint.cc,cc,12,6,18
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_stream.cc,cc,47,29,76
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_string.cc,cc,49,27,76
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cmd_zset.cc,cc,67,37,104
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,db_util.h,h,6,7,13
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,filter_executor.h,h,3,3,6
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,full_index_scan_executor.h,h,3,5,8
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,hnsw_vector_field_knn_scan_executor.h,h,1,3,4
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,hnsw_vector_field_range_scan_executor.h,h,2,4,6
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,numeric_field_scan_executor.h,h,2,6,8
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,projection_executor.h,h,2,3,5
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,tag_field_scan_executor.h,h,2,6,8
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,topn_sort_executor.h,h,1,1,2
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,hnsw_indexer.cc,cc,54,47,101
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,hnsw_indexer.h,h,19,16,35
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,index_manager.h,h,11,9,20
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,indexer.cc,cc,39,38,77
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,indexer.h,h,17,15,32
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,plan_executor.cc,cc,6,4,10
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,plan_executor.h,h,2,1,3
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,namespace.cc,cc,4,2,6
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_connection.cc,cc,3,2,5
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,server.cc,cc,22,11,33
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,disk_stats.cc,cc,22,22,44
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,disk_stats.h,h,8,8,16
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,batch_indexer.h,h,93,0,93
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,iterator.cc,cc,10,8,18
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,iterator.h,h,3,2,5
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,rdb.cc,cc,19,17,36
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,rdb.h,h,4,3,7
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_db.cc,cc,85,109,194
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_db.h,h,34,55,89
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_pubsub.cc,cc,2,2,4
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_pubsub.h,h,1,1,2
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,scripting.cc,cc,11,13,24
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,scripting.h,h,5,1,6
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,storage.cc,cc,102,33,135
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,storage.h,h,96,19,115
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_bitmap.cc,cc,57,63,120
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_bitmap.h,h,16,14,30
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_bitmap_string.cc,cc,5,5,10
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_bitmap_string.h,h,4,3,7
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_bloom_chain.cc,cc,29,30,59
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_bloom_chain.h,h,13,12,25
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_geo.cc,cc,47,44,91
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_geo.h,h,24,20,44
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_hash.cc,cc,52,53,105
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_hash.h,h,21,16,37
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_hyperloglog.cc,cc,35,48,83
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_hyperloglog.h,h,9,9,18
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_json.cc,cc,100,90,190
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_json.h,h,51,40,91
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_list.cc,cc,67,72,139
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_list.h,h,27,18,45
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_set.cc,cc,62,59,121
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_set.h,h,26,18,44
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_sortedint.cc,cc,28,33,61
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_sortedint.h,h,12,8,20
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_stream.cc,cc,132,149,281
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_stream.h,h,39,32,71
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_string.cc,cc,80,68,148
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_string.h,h,38,27,65
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_zset.cc,cc,95,104,199
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,redis_zset.h,h,39,31,70
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,cluster_test.cc,cc,40,4,44
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,compact_test.cc,cc,14,11,25
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,disk_test.cc,cc,39,32,71
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,hnsw_index_test.cc,cc,91,87,178
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,hnsw_node_test.cc,cc,22,20,42
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,indexer_test.cc,cc,40,40,80
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,iterator_test.cc,cc,60,60,120
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,metadata_test.cc,cc,21,21,42
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,plan_executor_test.cc,cc,53,50,103
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,rdb_test.cc,cc,8,9,17
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,storage_test.cc,cc,3,1,4
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,test_base.h,h,3,0,3
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,bitmap_test.cc,cc,102,96,198
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,bloom_chain_test.cc,cc,9,9,18
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,geo_test.cc,cc,19,19,38
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,hash_test.cc,cc,66,66,132
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,hyperloglog_test.cc,cc,42,42,84
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,json_test.cc,cc,216,215,431
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,list_test.cc,cc,133,133,266
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,set_test.cc,cc,80,80,160
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,sortedint_test.cc,cc,9,9,18
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,stream_test.cc,cc,314,315,629
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,string_test.cc,cc,79,79,158
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,zset_test.cc,cc,81,81,162
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,writebatch_indexer_test.cc,cc,106,0,106
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,replication_test.go,go,0,1,1
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,regression_test.go,go,3,1,4
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,list_test.go,go,54,11,65
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,zset_test.go,go,7,0,7
a1e0957ce598fa2d062dd57158127db406940f2e,zhousile@foxmail.com,2024-08-24 19:49:42+08:00,noreply@github.com,2024-08-24 19:49:42+08:00,"refactor: Improve consistency and isolation semantics by adding Context parameter to DB API (#2332)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,110,parser.cc,cc,2,1,3
756777cd55867918d0a2ee6439c56f4e28d5338d,aleks.raiden@gmail.com,2024-08-25 05:32:30+03:00,noreply@github.com,2024-08-25 10:32:30+08:00,chore: Bump rocksdb to v9.5.2 (#2502),unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
39aeefecf630e1ddcccb27641413f463ab3c322b,hulk.website@gmail.com,2024-08-25 14:18:42+08:00,noreply@github.com,2024-08-25 14:18:42+08:00,fix(configuration): wrong comment line about the pidfile in configuration file (#2505),unstable,True,False,1,kvrocks.conf,conf,1,1,2
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,CMakeLists.txt,txt,1,0,1
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,main.cc,cc,1,1,2
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,signal_util.h,h,1,1,2
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,cluster.cc,cc,1,1,2
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,replication.h,h,5,3,8
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,sync_migrate_context.cc,cc,1,1,2
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,cmd_cluster.cc,cc,3,3,6
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,cmd_function.cc,cc,1,1,2
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,cmd_geo.cc,cc,3,1,4
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,cmd_json.cc,cc,2,2,4
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,cmd_list.cc,cc,1,1,2
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,cmd_pubsub.cc,cc,6,6,12
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,cmd_replication.cc,cc,6,6,12
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,cmd_script.cc,cc,2,2,4
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,cmd_search.cc,cc,1,1,2
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,cmd_server.cc,cc,15,15,30
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,cmd_stream.cc,cc,11,7,18
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,cmd_txn.cc,cc,1,1,2
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,commander.h,h,4,3,7
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,scan_base.h,h,1,1,2
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,io_util.cc,cc,7,6,13
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,rdb_stream.h,h,3,1,4
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,config.cc,cc,40,37,77
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,config_type.h,h,2,2,4
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,indexer.cc,cc,1,1,2
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,cost_model.h,h,4,4,8
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,redis_connection.cc,cc,2,2,4
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,worker.cc,cc,5,3,8
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,batch_extractor.cc,cc,3,2,5
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,compact_filter.cc,cc,7,6,13
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,compact_filter.h,h,11,8,19
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,event_listener.cc,cc,4,4,8
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,rdb.cc,cc,1,1,2
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,rdb_ziplist.cc,cc,6,6,12
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,scripting.cc,cc,1,1,2
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,storage.cc,cc,7,4,11
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,table_properties_collector.cc,cc,1,1,2
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,redis_bitmap_string.cc,cc,1,1,2
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,rand.cc,cc,0,5,5
fa3290c44efbb3546f22f7457c758ab504623b58,c8ef@outlook.com,2024-08-27 19:17:32+08:00,noreply@github.com,2024-08-27 19:17:32+08:00,chore: Enable -Werror=unused-parameter flag (#2507),unstable,True,False,40,main.cc,cc,1,1,2
6e7476fb2cf9c20ab045ec54108c5877d0fca8d8,c8ef@outlook.com,2024-08-30 13:29:16+08:00,noreply@github.com,2024-08-30 13:29:16+08:00,ci: add Debian environment to CI workflow (#2510),unstable,True,False,1,kvrocks.yaml,yaml,18,2,20
6c85004431d065a6d9c0fd0932c087f9e2e290be,zhousile@foxmail.com,2024-09-01 01:07:42+08:00,noreply@github.com,2024-09-01 01:07:42+08:00,"feat(config): add `txn_context_enabled` to allow to enable the transaction feature (#2506)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,4,kvrocks.conf,conf,14,0,14
6c85004431d065a6d9c0fd0932c087f9e2e290be,zhousile@foxmail.com,2024-09-01 01:07:42+08:00,noreply@github.com,2024-09-01 01:07:42+08:00,"feat(config): add `txn_context_enabled` to allow to enable the transaction feature (#2506)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,4,config.cc,cc,1,0,1
6c85004431d065a6d9c0fd0932c087f9e2e290be,zhousile@foxmail.com,2024-09-01 01:07:42+08:00,noreply@github.com,2024-09-01 01:07:42+08:00,"feat(config): add `txn_context_enabled` to allow to enable the transaction feature (#2506)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,4,config.h,h,3,0,3
6c85004431d065a6d9c0fd0932c087f9e2e290be,zhousile@foxmail.com,2024-09-01 01:07:42+08:00,noreply@github.com,2024-09-01 01:07:42+08:00,"feat(config): add `txn_context_enabled` to allow to enable the transaction feature (#2506)

Co-authored-by: mwish <maplewish117@gmail.com>",unstable,True,False,4,storage.h,h,6,1,7
0329170d60d67a5f0f62ee565a1a14f0bbfb81da,zhousile@foxmail.com,2024-09-02 12:34:21+08:00,noreply@github.com,2024-09-02 12:34:21+08:00,fix(test): remove meaningless `list-max-ziplist-size` (#2517),unstable,True,False,1,list_test.go,go,2,6,8
ab41cbb69d081711437e25846c86c920cb5253e1,hulk.website@gmail.com,2024-09-02 15:10:02+08:00,noreply@github.com,2024-09-02 15:10:02+08:00,"fix(replication): potential deadlock  when switching master frequently (#2516)

This closes #2512.

Currently, the replication thread will wait for the worker's exclusive guard stop before closing db.
But it now stops the worker from running new commands after acquiring the worker's exclusive guard,
and it might cause deadlock if switches at the same time.

The following steps will show how it may happen:

- T0: client A sent `slaveof MASTER_IP0 MASTER_PORT0`, then the replication thread was started and waiting for the exclusive guard.

- T1: client B sent `slaveof MASTER_IP1 MASTER_PORT1` and `AddMaster` will stop the previous replication thread, which is waiting for the exclusive guard. But the exclusive guard is acquired by the current thread.

The workaround is also straightforward, just stop workers from running new commands by enabling `is_loading_` to 
true before acquiring the lock in the replication thread.",unstable,True,False,1,server.cc,cc,6,4,10
68516e59a56361a61963cde430ecc02988d47fad,AntiTopQuark1350@outlook.com,2024-09-02 20:23:37+08:00,noreply@github.com,2024-09-02 20:23:37+08:00,fix(typo): `filed -> field` (#2519),unstable,True,False,2,rdb.cc,cc,4,4,8
68516e59a56361a61963cde430ecc02988d47fad,AntiTopQuark1350@outlook.com,2024-09-02 20:23:37+08:00,noreply@github.com,2024-09-02 20:23:37+08:00,fix(typo): `filed -> field` (#2519),unstable,True,False,2,rdb.h,h,1,1,2
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,kvrocks.conf,conf,7,0,7
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,config.cc,cc,2,0,2
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,config.h,h,1,0,1
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,hnsw_indexer.cc,cc,46,18,64
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,hnsw_indexer.h,h,2,2,4
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,index_manager.h,h,28,7,35
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,indexer.cc,cc,16,4,20
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,redis_db.cc,cc,34,9,43
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,redis_pubsub.cc,cc,4,1,5
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,storage.cc,cc,11,5,16
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,storage.h,h,1,0,1
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,redis_bitmap.cc,cc,28,11,39
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,redis_bitmap_string.cc,cc,16,4,20
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,redis_bloom_chain.cc,cc,22,11,33
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,redis_bloom_chain.h,h,2,2,4
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,redis_hash.cc,cc,25,13,38
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,redis_hyperloglog.cc,cc,12,6,18
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,redis_json.cc,cc,17,11,28
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,redis_list.cc,cc,65,33,98
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,redis_set.cc,cc,26,13,39
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,redis_sortedint.cc,cc,12,6,18
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,redis_stream.cc,cc,112,57,169
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,redis_stream.h,h,2,2,4
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,redis_string.cc,cc,12,6,18
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,redis_zset.cc,cc,60,30,90
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,hnsw_index_test.cc,cc,18,10,28
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,hnsw_node_test.cc,cc,26,15,41
c75ad64d39fa057f850b53bb0fa3a644006309d4,AntiTopQuark1350@outlook.com,2024-09-04 10:36:51+08:00,noreply@github.com,2024-09-04 10:36:51+08:00,"feat: support limit WriteBatch size (#2508)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,28,limits_test.go,go,36,0,36
2836bf02877fa9853af6047dc35b206dea7330f6,hulk.website@gmail.com,2024-09-06 12:08:44+08:00,noreply@github.com,2024-09-06 12:08:44+08:00,chore(tests): add basic test case for the full+partial sync (#2522),unstable,True,False,7,cluster_test.go,go,2,2,4
2836bf02877fa9853af6047dc35b206dea7330f6,hulk.website@gmail.com,2024-09-06 12:08:44+08:00,noreply@github.com,2024-09-06 12:08:44+08:00,chore(tests): add basic test case for the full+partial sync (#2522),unstable,True,False,7,replication_test.go,go,47,3,50
2836bf02877fa9853af6047dc35b206dea7330f6,hulk.website@gmail.com,2024-09-06 12:08:44+08:00,noreply@github.com,2024-09-06 12:08:44+08:00,chore(tests): add basic test case for the full+partial sync (#2522),unstable,True,False,7,rsid_test.go,go,1,1,2
2836bf02877fa9853af6047dc35b206dea7330f6,hulk.website@gmail.com,2024-09-06 12:08:44+08:00,noreply@github.com,2024-09-06 12:08:44+08:00,chore(tests): add basic test case for the full+partial sync (#2522),unstable,True,False,7,tls_test.go,go,2,2,4
2836bf02877fa9853af6047dc35b206dea7330f6,hulk.website@gmail.com,2024-09-06 12:08:44+08:00,noreply@github.com,2024-09-06 12:08:44+08:00,chore(tests): add basic test case for the full+partial sync (#2522),unstable,True,False,7,namespace_test.go,go,4,3,7
2836bf02877fa9853af6047dc35b206dea7330f6,hulk.website@gmail.com,2024-09-06 12:08:44+08:00,noreply@github.com,2024-09-06 12:08:44+08:00,chore(tests): add basic test case for the full+partial sync (#2522),unstable,True,False,7,scripting_test.go,go,3,2,5
2836bf02877fa9853af6047dc35b206dea7330f6,hulk.website@gmail.com,2024-09-06 12:08:44+08:00,noreply@github.com,2024-09-06 12:08:44+08:00,chore(tests): add basic test case for the full+partial sync (#2522),unstable,True,False,7,client.go,go,2,2,4
1d450ee6f5a4169866fbea6786e678925afa797d,aleks.raiden@gmail.com,2024-09-08 13:13:49+03:00,noreply@github.com,2024-09-08 18:13:49+08:00,chore: bump rocksdb to v9.6.1 (#2525),unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
a29df097dd23c36a749e5c616f4d1cae1051e853,hulk.website@gmail.com,2024-09-08 20:21:54+08:00,noreply@github.com,2024-09-08 20:21:54+08:00,"fix(namespace): didn't reload namespaces from DB after the full sync (#2527)

Namespaces would store inside DB if the repl-namespace-enabled was set to yes.
Then replicas will intercept and parse the increment replication log to
see if it needs to reload namespaces. But it won't have the namespace update log
when doing the full sync, so we need to reload from DB once the full replication is done.",unstable,True,False,4,replication.cc,cc,7,0,7
a29df097dd23c36a749e5c616f4d1cae1051e853,hulk.website@gmail.com,2024-09-08 20:21:54+08:00,noreply@github.com,2024-09-08 20:21:54+08:00,"fix(namespace): didn't reload namespaces from DB after the full sync (#2527)

Namespaces would store inside DB if the repl-namespace-enabled was set to yes.
Then replicas will intercept and parse the increment replication log to
see if it needs to reload namespaces. But it won't have the namespace update log
when doing the full sync, so we need to reload from DB once the full replication is done.",unstable,True,False,4,namespace.cc,cc,2,1,3
a29df097dd23c36a749e5c616f4d1cae1051e853,hulk.website@gmail.com,2024-09-08 20:21:54+08:00,noreply@github.com,2024-09-08 20:21:54+08:00,"fix(namespace): didn't reload namespaces from DB after the full sync (#2527)

Namespaces would store inside DB if the repl-namespace-enabled was set to yes.
Then replicas will intercept and parse the increment replication log to
see if it needs to reload namespaces. But it won't have the namespace update log
when doing the full sync, so we need to reload from DB once the full replication is done.",unstable,True,False,4,namespace.h,h,1,3,4
a29df097dd23c36a749e5c616f4d1cae1051e853,hulk.website@gmail.com,2024-09-08 20:21:54+08:00,noreply@github.com,2024-09-08 20:21:54+08:00,"fix(namespace): didn't reload namespaces from DB after the full sync (#2527)

Namespaces would store inside DB if the repl-namespace-enabled was set to yes.
Then replicas will intercept and parse the increment replication log to
see if it needs to reload namespaces. But it won't have the namespace update log
when doing the full sync, so we need to reload from DB once the full replication is done.",unstable,True,False,4,namespace_test.go,go,39,0,39
9fc8ffa24c938bee7f848191d524bc1f795a0d0a,zhousile@foxmail.com,2024-09-10 21:31:19+08:00,noreply@github.com,2024-09-10 21:31:19+08:00,test: add go test cases for `txn-context-enabled` config (#2530),unstable,True,False,15,config_test.go,go,45,0,45
9fc8ffa24c938bee7f848191d524bc1f795a0d0a,zhousile@foxmail.com,2024-09-10 21:31:19+08:00,noreply@github.com,2024-09-10 21:31:19+08:00,test: add go test cases for `txn-context-enabled` config (#2530),unstable,True,False,15,geo_test.go,go,21,9,30
9fc8ffa24c938bee7f848191d524bc1f795a0d0a,zhousile@foxmail.com,2024-09-10 21:31:19+08:00,noreply@github.com,2024-09-10 21:31:19+08:00,test: add go test cases for `txn-context-enabled` config (#2530),unstable,True,False,15,pubsub_test.go,go,21,9,30
9fc8ffa24c938bee7f848191d524bc1f795a0d0a,zhousile@foxmail.com,2024-09-10 21:31:19+08:00,noreply@github.com,2024-09-10 21:31:19+08:00,test: add go test cases for `txn-context-enabled` config (#2530),unstable,True,False,15,function_test.go,go,21,9,30
9fc8ffa24c938bee7f848191d524bc1f795a0d0a,zhousile@foxmail.com,2024-09-10 21:31:19+08:00,noreply@github.com,2024-09-10 21:31:19+08:00,test: add go test cases for `txn-context-enabled` config (#2530),unstable,True,False,15,bloom_test.go,go,18,2,20
9fc8ffa24c938bee7f848191d524bc1f795a0d0a,zhousile@foxmail.com,2024-09-10 21:31:19+08:00,noreply@github.com,2024-09-10 21:31:19+08:00,test: add go test cases for `txn-context-enabled` config (#2530),unstable,True,False,15,hash_test.go,go,21,9,30
9fc8ffa24c938bee7f848191d524bc1f795a0d0a,zhousile@foxmail.com,2024-09-10 21:31:19+08:00,noreply@github.com,2024-09-10 21:31:19+08:00,test: add go test cases for `txn-context-enabled` config (#2530),unstable,True,False,15,incr_test.go,go,18,1,19
9fc8ffa24c938bee7f848191d524bc1f795a0d0a,zhousile@foxmail.com,2024-09-10 21:31:19+08:00,noreply@github.com,2024-09-10 21:31:19+08:00,test: add go test cases for `txn-context-enabled` config (#2530),unstable,True,False,15,json_test.go,go,17,1,18
9fc8ffa24c938bee7f848191d524bc1f795a0d0a,zhousile@foxmail.com,2024-09-10 21:31:19+08:00,noreply@github.com,2024-09-10 21:31:19+08:00,test: add go test cases for `txn-context-enabled` config (#2530),unstable,True,False,15,list_test.go,go,59,3,62
9fc8ffa24c938bee7f848191d524bc1f795a0d0a,zhousile@foxmail.com,2024-09-10 21:31:19+08:00,noreply@github.com,2024-09-10 21:31:19+08:00,test: add go test cases for `txn-context-enabled` config (#2530),unstable,True,False,15,set_test.go,go,20,8,28
9fc8ffa24c938bee7f848191d524bc1f795a0d0a,zhousile@foxmail.com,2024-09-10 21:31:19+08:00,noreply@github.com,2024-09-10 21:31:19+08:00,test: add go test cases for `txn-context-enabled` config (#2530),unstable,True,False,15,sint_test.go,go,19,2,21
9fc8ffa24c938bee7f848191d524bc1f795a0d0a,zhousile@foxmail.com,2024-09-10 21:31:19+08:00,noreply@github.com,2024-09-10 21:31:19+08:00,test: add go test cases for `txn-context-enabled` config (#2530),unstable,True,False,15,stream_test.go,go,21,9,30
9fc8ffa24c938bee7f848191d524bc1f795a0d0a,zhousile@foxmail.com,2024-09-10 21:31:19+08:00,noreply@github.com,2024-09-10 21:31:19+08:00,test: add go test cases for `txn-context-enabled` config (#2530),unstable,True,False,15,strings_test.go,go,16,0,16
9fc8ffa24c938bee7f848191d524bc1f795a0d0a,zhousile@foxmail.com,2024-09-10 21:31:19+08:00,noreply@github.com,2024-09-10 21:31:19+08:00,test: add go test cases for `txn-context-enabled` config (#2530),unstable,True,False,15,zset_test.go,go,22,10,32
9fc8ffa24c938bee7f848191d524bc1f795a0d0a,zhousile@foxmail.com,2024-09-10 21:31:19+08:00,noreply@github.com,2024-09-10 21:31:19+08:00,test: add go test cases for `txn-context-enabled` config (#2530),unstable,True,False,15,configs.go,go,88,0,88
51104869a19daa086b34881a7f7eb94e7e9ae5b2,82707867+poipoiPIO@users.noreply.github.com,2024-09-14 19:14:40+03:00,noreply@github.com,2024-09-15 00:14:40+08:00,feat: add support of Bitmap type DUMP/RESTORE command support (#2535),unstable,True,False,2,rdb.cc,cc,14,1,15
51104869a19daa086b34881a7f7eb94e7e9ae5b2,82707867+poipoiPIO@users.noreply.github.com,2024-09-14 19:14:40+03:00,noreply@github.com,2024-09-15 00:14:40+08:00,feat: add support of Bitmap type DUMP/RESTORE command support (#2535),unstable,True,False,2,dump_test.go,go,18,0,18
28fc474b2aa63410dbf9da0c03a4f987fdb518b1,aleks.raiden@gmail.com,2024-09-15 14:50:51+03:00,noreply@github.com,2024-09-15 19:50:51+08:00,"chore: bump cpptrace to v0.7.1 (#2536)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,cpptrace.cmake,cmake,2,2,4
399961dd847faf0512b5cddb24bdce2977b07796,aleks.raiden@gmail.com,2024-09-15 16:47:52+03:00,noreply@github.com,2024-09-15 21:47:52+08:00,"chore: bump PEGTL to v3.2.8 (#2537)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,pegtl.cmake,cmake,2,2,4
89c5b2419bc66e35c5a2ff0c2d5d581033486ae4,86070045+jonathanc-n@users.noreply.github.com,2024-09-16 20:36:54-04:00,noreply@github.com,2024-09-17 08:36:54+08:00,chore(tests): add basic tests for the stream consumer group  (#2533),unstable,True,False,1,stream_test.go,go,108,0,108
2a0c57ac7fc4499a210bc452884025a0010cb470,hulk.website@gmail.com,2024-09-17 11:02:33+08:00,noreply@github.com,2024-09-17 11:02:33+08:00,chore(tests): enhance the namespace replication to prevent flaky test (#2540),unstable,True,False,1,namespace_test.go,go,4,3,7
a7dbd74664496c188c3c5b6b0c17b4c6018a0700,hulk.website@gmail.com,2024-09-20 21:02:19+08:00,noreply@github.com,2024-09-20 21:02:19+08:00,chore(tests): refactor and enhance test cases to prevent flaky test failure (#2544),unstable,True,False,2,logclean_test.go,go,31,32,63
a7dbd74664496c188c3c5b6b0c17b4c6018a0700,hulk.website@gmail.com,2024-09-20 21:02:19+08:00,noreply@github.com,2024-09-20 21:02:19+08:00,chore(tests): refactor and enhance test cases to prevent flaky test failure (#2544),unstable,True,False,2,check_consistency.py,py,9,4,13
f402be06d5a85b38ca36d4ff2ccadd04f60e1f2b,hulk.website@gmail.com,2024-09-21 14:09:28+08:00,noreply@github.com,2024-09-21 14:09:28+08:00,"fix(replication): didn't resume the db status after restarting full sync (#2549)

Currently, the pre_fullsync_cb will stop the task runner and set the DB loading status to yes,
but it didn't resume those states. This will cause the server to run in restoring status until
success in resyncing from the master. To fix this, we need to call the post_fullsync_cb to resume those statuses
before restarting full sync.

This PR also uses try_lock to allow the replication thread to be stopped while preparing the restore db.",unstable,True,False,5,replication.cc,cc,9,5,14
f402be06d5a85b38ca36d4ff2ccadd04f60e1f2b,hulk.website@gmail.com,2024-09-21 14:09:28+08:00,noreply@github.com,2024-09-21 14:09:28+08:00,"fix(replication): didn't resume the db status after restarting full sync (#2549)

Currently, the pre_fullsync_cb will stop the task runner and set the DB loading status to yes,
but it didn't resume those states. This will cause the server to run in restoring status until
success in resyncing from the master. To fix this, we need to call the post_fullsync_cb to resume those statuses
before restarting full sync.

This PR also uses try_lock to allow the replication thread to be stopped while preparing the restore db.",unstable,True,False,5,replication.h,h,3,2,5
f402be06d5a85b38ca36d4ff2ccadd04f60e1f2b,hulk.website@gmail.com,2024-09-21 14:09:28+08:00,noreply@github.com,2024-09-21 14:09:28+08:00,"fix(replication): didn't resume the db status after restarting full sync (#2549)

Currently, the pre_fullsync_cb will stop the task runner and set the DB loading status to yes,
but it didn't resume those states. This will cause the server to run in restoring status until
success in resyncing from the master. To fix this, we need to call the post_fullsync_cb to resume those statuses
before restarting full sync.

This PR also uses try_lock to allow the replication thread to be stopped while preparing the restore db.",unstable,True,False,5,server.cc,cc,18,10,28
f402be06d5a85b38ca36d4ff2ccadd04f60e1f2b,hulk.website@gmail.com,2024-09-21 14:09:28+08:00,noreply@github.com,2024-09-21 14:09:28+08:00,"fix(replication): didn't resume the db status after restarting full sync (#2549)

Currently, the pre_fullsync_cb will stop the task runner and set the DB loading status to yes,
but it didn't resume those states. This will cause the server to run in restoring status until
success in resyncing from the master. To fix this, we need to call the post_fullsync_cb to resume those statuses
before restarting full sync.

This PR also uses try_lock to allow the replication thread to be stopped while preparing the restore db.",unstable,True,False,5,server.h,h,1,1,2
f402be06d5a85b38ca36d4ff2ccadd04f60e1f2b,hulk.website@gmail.com,2024-09-21 14:09:28+08:00,noreply@github.com,2024-09-21 14:09:28+08:00,"fix(replication): didn't resume the db status after restarting full sync (#2549)

Currently, the pre_fullsync_cb will stop the task runner and set the DB loading status to yes,
but it didn't resume those states. This will cause the server to run in restoring status until
success in resyncing from the master. To fix this, we need to call the post_fullsync_cb to resume those statuses
before restarting full sync.

This PR also uses try_lock to allow the replication thread to be stopped while preparing the restore db.",unstable,True,False,5,storage.cc,cc,1,0,1
8c42aa0856e14e1c3c859e55e6832c0b3017c1cd,56252962+fstd2@users.noreply.github.com,2024-09-21 17:05:03+08:00,noreply@github.com,2024-09-21 17:05:03+08:00,"fix(rdb): incorrect type conversion during RDB loads the int8 encoding (#2547)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,rdb.cc,cc,1,1,2
8c42aa0856e14e1c3c859e55e6832c0b3017c1cd,56252962+fstd2@users.noreply.github.com,2024-09-21 17:05:03+08:00,noreply@github.com,2024-09-21 17:05:03+08:00,"fix(rdb): incorrect type conversion during RDB loads the int8 encoding (#2547)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,dump_test.go,go,26,0,26
f2bc224bc342f7e2b679cb2dc79d7a31067643ca,86070045+jonathanc-n@users.noreply.github.com,2024-09-22 00:53:36-04:00,noreply@github.com,2024-09-22 12:53:36+08:00,fix: add more check in cluster node parsing (#2538),unstable,True,False,2,cluster.cc,cc,5,0,5
f2bc224bc342f7e2b679cb2dc79d7a31067643ca,86070045+jonathanc-n@users.noreply.github.com,2024-09-22 00:53:36-04:00,noreply@github.com,2024-09-22 12:53:36+08:00,fix: add more check in cluster node parsing (#2538),unstable,True,False,2,cluster_test.go,go,22,1,23
b8cf118bbe56984c7112c0929402f79d81d8a0d7,14014471+LindaSummer@users.noreply.github.com,2024-09-27 18:35:30+08:00,noreply@github.com,2024-09-27 06:35:30-04:00,fix(test): use fixed seed to improve reproducibility. (#2557),unstable,True,False,3,hnsw_indexer.cc,cc,4,5,9
b8cf118bbe56984c7112c0929402f79d81d8a0d7,14014471+LindaSummer@users.noreply.github.com,2024-09-27 18:35:30+08:00,noreply@github.com,2024-09-27 06:35:30-04:00,fix(test): use fixed seed to improve reproducibility. (#2557),unstable,True,False,3,hnsw_indexer.h,h,2,1,3
b8cf118bbe56984c7112c0929402f79d81d8a0d7,14014471+LindaSummer@users.noreply.github.com,2024-09-27 18:35:30+08:00,noreply@github.com,2024-09-27 06:35:30-04:00,fix(test): use fixed seed to improve reproducibility. (#2557),unstable,True,False,3,hnsw_index_test.cc,cc,2,1,3
12662275e1474cc90fb3a71bdc174793a8f6d95c,twice.mliu@gmail.com,2024-10-03 14:25:03+08:00,noreply@github.com,2024-10-03 14:25:03+08:00,ci: disable kvrocks2redis test for archlinux (#2575),unstable,True,False,1,kvrocks.yaml,yaml,2,0,2
e3211c156f400788a9f1934736be0cddcd51bb12,twice.mliu@gmail.com,2024-10-03 16:02:34+08:00,noreply@github.com,2024-10-03 11:02:34+03:00,feat(command): add slow flag to more commands (#2570),unstable,True,False,6,cmd_hash.cc,cc,1,1,2
e3211c156f400788a9f1934736be0cddcd51bb12,twice.mliu@gmail.com,2024-10-03 16:02:34+08:00,noreply@github.com,2024-10-03 11:02:34+03:00,feat(command): add slow flag to more commands (#2570),unstable,True,False,6,cmd_key.cc,cc,2,2,4
e3211c156f400788a9f1934736be0cddcd51bb12,twice.mliu@gmail.com,2024-10-03 16:02:34+08:00,noreply@github.com,2024-10-03 11:02:34+03:00,feat(command): add slow flag to more commands (#2570),unstable,True,False,6,cmd_search.cc,cc,2,1,3
e3211c156f400788a9f1934736be0cddcd51bb12,twice.mliu@gmail.com,2024-10-03 16:02:34+08:00,noreply@github.com,2024-10-03 11:02:34+03:00,feat(command): add slow flag to more commands (#2570),unstable,True,False,6,cmd_server.cc,cc,1,1,2
e3211c156f400788a9f1934736be0cddcd51bb12,twice.mliu@gmail.com,2024-10-03 16:02:34+08:00,noreply@github.com,2024-10-03 11:02:34+03:00,feat(command): add slow flag to more commands (#2570),unstable,True,False,6,cmd_set.cc,cc,1,1,2
e3211c156f400788a9f1934736be0cddcd51bb12,twice.mliu@gmail.com,2024-10-03 16:02:34+08:00,noreply@github.com,2024-10-03 11:02:34+03:00,feat(command): add slow flag to more commands (#2570),unstable,True,False,6,cmd_txn.cc,cc,1,1,2
b6b4cbe8f624cb1232acdaa1e1c65382414fcfd5,twice.mliu@gmail.com,2024-10-03 18:02:52+08:00,noreply@github.com,2024-10-03 13:02:52+03:00,feat(json): change default max_nesting_depth to 1024 (#2572),unstable,True,False,1,json.h,h,9,7,16
91f69924fa7a43e929718167e993f73991823c1e,aleks.raiden@gmail.com,2024-10-03 15:03:44+03:00,noreply@github.com,2024-10-03 20:03:44+08:00,"chore: bump jsoncons to v0.177.0 (#2493)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,jsoncons.cmake,cmake,2,2,4
149d4fbdffd38ae34754313c4c8fdf5dd3f1ab9a,86070045+jonathanc-n@users.noreply.github.com,2024-10-03 09:53:00-04:00,noreply@github.com,2024-10-03 16:53:00+03:00,"fix(stream): change XREADGROUP response for empty read response (#2569)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,cmd_stream.cc,cc,12,2,14
149d4fbdffd38ae34754313c4c8fdf5dd3f1ab9a,86070045+jonathanc-n@users.noreply.github.com,2024-10-03 09:53:00-04:00,noreply@github.com,2024-10-03 16:53:00+03:00,"fix(stream): change XREADGROUP response for empty read response (#2569)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,stream_test.go,go,30,0,30
83650874f7953f402c65ee620d6d47870fc03023,twice.mliu@gmail.com,2024-10-04 08:31:19+08:00,noreply@github.com,2024-10-04 08:31:19+08:00,feat(search): add field options and definition part to FT.INFO (#2571),unstable,True,False,2,cmd_search.cc,cc,17,4,21
83650874f7953f402c65ee620d6d47870fc03023,twice.mliu@gmail.com,2024-10-04 08:31:19+08:00,noreply@github.com,2024-10-04 08:31:19+08:00,feat(search): add field options and definition part to FT.INFO (#2571),unstable,True,False,2,search_test.go,go,6,8,14
290012ec8eb1bd942675677f894eafe2e2d451f1,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-03 22:26:46-04:00,noreply@github.com,2024-10-04 10:26:46+08:00,"fix(stream): Fix XPENDING serialization issue (#2566)

Co-authored-by: Aleks Lozovyuk <aleks.raiden@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,cmd_stream.cc,cc,21,9,30
290012ec8eb1bd942675677f894eafe2e2d451f1,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-03 22:26:46-04:00,noreply@github.com,2024-10-04 10:26:46+08:00,"fix(stream): Fix XPENDING serialization issue (#2566)

Co-authored-by: Aleks Lozovyuk <aleks.raiden@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,stream_test.go,go,76,3,79
0a43bade1a4c3c885947fdd42eacefac934bf1bd,86070045+jonathanc-n@users.noreply.github.com,2024-10-04 05:38:32-04:00,noreply@github.com,2024-10-04 17:38:32+08:00,"feat(search): support the FT.TAGVALS command (#2564)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,cmd_search.cc,cc,18,1,19
0a43bade1a4c3c885947fdd42eacefac934bf1bd,86070045+jonathanc-n@users.noreply.github.com,2024-10-04 05:38:32-04:00,noreply@github.com,2024-10-04 17:38:32+08:00,"feat(search): support the FT.TAGVALS command (#2564)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,index_manager.h,h,62,1,63
0a43bade1a4c3c885947fdd42eacefac934bf1bd,86070045+jonathanc-n@users.noreply.github.com,2024-10-04 05:38:32-04:00,noreply@github.com,2024-10-04 17:38:32+08:00,"feat(search): support the FT.TAGVALS command (#2564)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,3,search_test.go,go,38,0,38
3b8dcf6e9eb53153c98213b173e9f20c34f2b163,14014471+LindaSummer@users.noreply.github.com,2024-10-05 00:13:35+08:00,noreply@github.com,2024-10-05 00:13:35+08:00,fix(stream): fix `XINFO` group metadata key overlapping (#2576),unstable,True,False,2,redis_stream.cc,cc,10,1,11
3b8dcf6e9eb53153c98213b173e9f20c34f2b163,14014471+LindaSummer@users.noreply.github.com,2024-10-05 00:13:35+08:00,noreply@github.com,2024-10-05 00:13:35+08:00,fix(stream): fix `XINFO` group metadata key overlapping (#2576),unstable,True,False,2,stream_test.go,go,38,0,38
0d5f8514b2f09f6d512fd17ae8d5a3ec57935eda,82707867+poipoiPIO@users.noreply.github.com,2024-10-05 17:37:22+03:00,noreply@github.com,2024-10-05 22:37:22+08:00,"fix(json): JSON.MSET handles different paths for the same key incorrectly (#2579)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,2,redis_json.cc,cc,27,10,37
0d5f8514b2f09f6d512fd17ae8d5a3ec57935eda,82707867+poipoiPIO@users.noreply.github.com,2024-10-05 17:37:22+03:00,noreply@github.com,2024-10-05 22:37:22+08:00,"fix(json): JSON.MSET handles different paths for the same key incorrectly (#2579)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,2,json_test.go,go,7,1,8
b8788bc693e1ff40a21a16d17fd72a58cb0606d3,twice.mliu@gmail.com,2024-10-05 23:20:14+08:00,noreply@github.com,2024-10-05 23:20:14+08:00,chore(search): update README to add some references for KQIR (#2581),unstable,True,False,1,README.md,md,15,8,23
efb489fa0528f0fdae532c0539592d3d62e16d50,aleks.raiden@gmail.com,2024-10-06 22:53:38+03:00,noreply@github.com,2024-10-07 03:53:38+08:00,ci: update github actions (#2584),unstable,True,False,4,kvrocks.yaml,yaml,6,5,11
efb489fa0528f0fdae532c0539592d3d62e16d50,aleks.raiden@gmail.com,2024-10-06 22:53:38+03:00,noreply@github.com,2024-10-07 03:53:38+08:00,ci: update github actions (#2584),unstable,True,False,4,sonar.yaml,yaml,1,1,2
efb489fa0528f0fdae532c0539592d3d62e16d50,aleks.raiden@gmail.com,2024-10-06 22:53:38+03:00,noreply@github.com,2024-10-07 03:53:38+08:00,ci: update github actions (#2584),unstable,True,False,4,geohash.cc,cc,1,1,2
efb489fa0528f0fdae532c0539592d3d62e16d50,aleks.raiden@gmail.com,2024-10-06 22:53:38+03:00,noreply@github.com,2024-10-07 03:53:38+08:00,ci: update github actions (#2584),unstable,True,False,4,slotmigrate_test.go,go,2,2,4
f2c423348d7bb3b475d988559068ba8e2697d497,aleks.raiden@gmail.com,2024-10-07 12:09:58+03:00,noreply@github.com,2024-10-07 12:09:58+03:00,chore: Bump cpptrace to v0.7.2 (#2585),unstable,True,False,1,cpptrace.cmake,cmake,2,2,4
57b585793c0428cab330ce059069e5675cf5a9cb,twice.mliu@gmail.com,2024-10-09 23:13:59+08:00,noreply@github.com,2024-10-09 23:13:59+08:00,docs: Add Zulip URL to README (#2588),unstable,True,False,1,README.md,md,1,1,2
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_bit.cc,cc,12,12,24
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_bloom_filter.cc,cc,16,16,32
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_cluster.cc,cc,8,5,13
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_function.cc,cc,4,3,7
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_geo.cc,cc,14,16,30
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_hash.cc,cc,31,32,63
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_hll.cc,cc,6,6,12
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_json.cc,cc,43,48,91
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_key.cc,cc,38,38,76
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_list.cc,cc,31,32,63
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_pubsub.cc,cc,16,11,27
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_replication.cc,cc,9,5,14
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_script.cc,cc,4,2,6
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_search.cc,cc,11,12,23
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_server.cc,cc,58,46,104
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_set.cc,cc,34,34,68
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_sortedint.cc,cc,12,12,24
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_stream.cc,cc,37,42,79
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_string.cc,cc,44,46,90
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_txn.cc,cc,6,5,11
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,cmd_zset.cc,cc,51,54,105
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,commander.h,h,6,2,8
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,index_manager.h,h,7,10,17
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,redis_connection.cc,cc,8,8,16
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,redis_connection.h,h,2,2,4
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,server.cc,cc,3,2,5
6eb923af90810758efdad98e859248d736a6a54f,zhousile@foxmail.com,2024-10-11 11:09:01+08:00,noreply@github.com,2024-10-11 11:09:01+08:00,"refactor: promote the `engine::Context` in the `Execute` (#2586)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,27,scripting.cc,cc,3,1,4
ff32f95b7d4308956e027914cbd90d62ba270482,sryan@qq.com,2024-10-11 20:33:40+08:00,noreply@github.com,2024-10-11 20:33:40+08:00,fix: some rocksdb properties are counted multiple times (#2589),unstable,True,False,1,server.cc,cc,5,3,8
9219363313d8e8b68e15abc8452e432475ce4c8b,twice.mliu@gmail.com,2024-10-12 00:56:14+08:00,noreply@github.com,2024-10-12 00:56:14+08:00,chore: add branch 2.10 as a protected branch in .asf.yaml (#2591),unstable,True,False,1,.asf.yaml,yaml,1,0,1
4fb04891e60b363833a4930fa2768820aece0ac3,sryan@qq.com,2024-10-12 19:20:57+08:00,noreply@github.com,2024-10-12 19:20:57+08:00,"feat(config): support retrieving configuration fields using glob patterns (#2592)

Co-authored-by: yxj25245 <yxj25245@ly.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,config.cc,cc,2,1,3
45b46d957348f8d53c3132588cab6d53baa35c9c,hulk.website@gmail.com,2024-10-12 19:24:31+08:00,noreply@github.com,2024-10-12 19:24:31+08:00,"docs: remove the Slack invitation link from README.md (#2593)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,README.md,md,0,1,1
80b7d85ad7bca744bdbf614de899040e86bb1b30,14014471+LindaSummer@users.noreply.github.com,2024-10-13 21:14:02+08:00,noreply@github.com,2024-10-13 21:14:02+08:00,refactor: move rdb related code to `storage/rdb` folder (#2595),unstable,True,False,12,cmd_server.cc,cc,1,1,2
80b7d85ad7bca744bdbf614de899040e86bb1b30,14014471+LindaSummer@users.noreply.github.com,2024-10-13 21:14:02+08:00,noreply@github.com,2024-10-13 21:14:02+08:00,refactor: move rdb related code to `storage/rdb` folder (#2595),unstable,True,False,12,rdb_test.cc,cc,1,1,2
94eb31cf98b80c3612bbc232aa3c1bb1d735f183,hulk.website@gmail.com,2024-10-15 00:48:13+08:00,noreply@github.com,2024-10-15 00:48:13+08:00,fix: should remove the db lock from the context to prevent blocking user requests (#2597),unstable,True,False,3,batch_indexer.h,h,2,1,3
94eb31cf98b80c3612bbc232aa3c1bb1d735f183,hulk.website@gmail.com,2024-10-15 00:48:13+08:00,noreply@github.com,2024-10-15 00:48:13+08:00,fix: should remove the db lock from the context to prevent blocking user requests (#2597),unstable,True,False,3,storage.cc,cc,13,14,27
94eb31cf98b80c3612bbc232aa3c1bb1d735f183,hulk.website@gmail.com,2024-10-15 00:48:13+08:00,noreply@github.com,2024-10-15 00:48:13+08:00,fix: should remove the db lock from the context to prevent blocking user requests (#2597),unstable,True,False,3,storage.h,h,27,23,50
fdf044dc09206d0bc2f800a2f36eee01fcc9a3f7,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-15 00:07:01-04:00,noreply@github.com,2024-10-15 12:07:01+08:00,fix: better checking for prefix matches (#2599),unstable,True,False,4,cmd_server.cc,cc,5,10,15
fdf044dc09206d0bc2f800a2f36eee01fcc9a3f7,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-15 00:07:01-04:00,noreply@github.com,2024-10-15 12:07:01+08:00,fix: better checking for prefix matches (#2599),unstable,True,False,4,scan_base.h,h,4,2,6
fdf044dc09206d0bc2f800a2f36eee01fcc9a3f7,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-15 00:07:01-04:00,noreply@github.com,2024-10-15 12:07:01+08:00,fix: better checking for prefix matches (#2599),unstable,True,False,4,keyspace_test.go,go,4,0,4
fdf044dc09206d0bc2f800a2f36eee01fcc9a3f7,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-15 00:07:01-04:00,noreply@github.com,2024-10-15 12:07:01+08:00,fix: better checking for prefix matches (#2599),unstable,True,False,4,scan_test.go,go,7,0,7
1d772322bac4df10b4b30831a07ae4ba5b81cfee,aleks.raiden@gmail.com,2024-10-17 19:30:22+03:00,noreply@github.com,2024-10-18 00:30:22+08:00,"chore: bump rocksdb to v9.7.2 (#2600)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
576c43145b4e78e475957d60cc71444fdf96ab94,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-17 21:46:42-04:00,noreply@github.com,2024-10-18 09:46:42+08:00,feat(worker): Allow passing a socket FD to dup and listen on (#2598),unstable,True,False,6,kvrocks.conf,conf,10,0,10
576c43145b4e78e475957d60cc71444fdf96ab94,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-17 21:46:42-04:00,noreply@github.com,2024-10-18 09:46:42+08:00,feat(worker): Allow passing a socket FD to dup and listen on (#2598),unstable,True,False,6,main.cc,cc,6,4,10
576c43145b4e78e475957d60cc71444fdf96ab94,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-17 21:46:42-04:00,noreply@github.com,2024-10-18 09:46:42+08:00,feat(worker): Allow passing a socket FD to dup and listen on (#2598),unstable,True,False,6,config.cc,cc,1,0,1
576c43145b4e78e475957d60cc71444fdf96ab94,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-17 21:46:42-04:00,noreply@github.com,2024-10-18 09:46:42+08:00,feat(worker): Allow passing a socket FD to dup and listen on (#2598),unstable,True,False,6,config.h,h,1,0,1
576c43145b4e78e475957d60cc71444fdf96ab94,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-17 21:46:42-04:00,noreply@github.com,2024-10-18 09:46:42+08:00,feat(worker): Allow passing a socket FD to dup and listen on (#2598),unstable,True,False,6,worker.cc,cc,32,12,44
576c43145b4e78e475957d60cc71444fdf96ab94,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-17 21:46:42-04:00,noreply@github.com,2024-10-18 09:46:42+08:00,feat(worker): Allow passing a socket FD to dup and listen on (#2598),unstable,True,False,6,worker.h,h,2,2,4
470973411a31f6efae1785fd52fae3a78fc9f987,31911894+paragor@users.noreply.github.com,2024-10-18 12:20:28+07:00,noreply@github.com,2024-10-18 13:20:28+08:00,"feat(config): add `rocksdb.wal_compression` to allow enable wal compression (#2607)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,kvrocks.conf,conf,10,0,10
470973411a31f6efae1785fd52fae3a78fc9f987,31911894+paragor@users.noreply.github.com,2024-10-18 12:20:28+07:00,noreply@github.com,2024-10-18 13:20:28+08:00,"feat(config): add `rocksdb.wal_compression` to allow enable wal compression (#2607)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,config.cc,cc,12,0,12
470973411a31f6efae1785fd52fae3a78fc9f987,31911894+paragor@users.noreply.github.com,2024-10-18 12:20:28+07:00,noreply@github.com,2024-10-18 13:20:28+08:00,"feat(config): add `rocksdb.wal_compression` to allow enable wal compression (#2607)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,config.h,h,1,0,1
470973411a31f6efae1785fd52fae3a78fc9f987,31911894+paragor@users.noreply.github.com,2024-10-18 12:20:28+07:00,noreply@github.com,2024-10-18 13:20:28+08:00,"feat(config): add `rocksdb.wal_compression` to allow enable wal compression (#2607)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,storage.cc,cc,1,0,1
470973411a31f6efae1785fd52fae3a78fc9f987,31911894+paragor@users.noreply.github.com,2024-10-18 12:20:28+07:00,noreply@github.com,2024-10-18 13:20:28+08:00,"feat(config): add `rocksdb.wal_compression` to allow enable wal compression (#2607)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,storage.h,h,5,0,5
470973411a31f6efae1785fd52fae3a78fc9f987,31911894+paragor@users.noreply.github.com,2024-10-18 12:20:28+07:00,noreply@github.com,2024-10-18 13:20:28+08:00,"feat(config): add `rocksdb.wal_compression` to allow enable wal compression (#2607)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,config_test.cc,cc,1,0,1
6ee41908514afa95ccc8e422acb802d151a64caa,twice.mliu@gmail.com,2024-10-19 16:55:42+08:00,noreply@github.com,2024-10-19 16:55:42+08:00,feat(conn): move time-consuming ops out of ExecuteCommand for context (#2611),unstable,True,False,2,redis_connection.cc,cc,31,27,58
6ee41908514afa95ccc8e422acb802d151a64caa,twice.mliu@gmail.com,2024-10-19 16:55:42+08:00,noreply@github.com,2024-10-19 16:55:42+08:00,feat(conn): move time-consuming ops out of ExecuteCommand for context (#2611),unstable,True,False,2,scripting.cc,cc,9,5,14
313a1d9674f8ac9b3fd39348f7185111f78f9f8e,hulk.website@gmail.com,2024-10-20 22:40:26+08:00,noreply@github.com,2024-10-20 22:40:26+08:00,fix(rocksdb): downgrade RocksDB to v9.3.1 due to a blobdb issue (#2614),unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
e0de9345c01f3d9ddbe48d5be9b50887330acfba,31911894+paragor@users.noreply.github.com,2024-10-21 20:01:31+07:00,noreply@github.com,2024-10-21 21:01:31+08:00,"feat(config): add `rocksdb.compression_start_level` to allow configure levels without compression (#2605)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,kvrocks.conf,conf,9,0,9
e0de9345c01f3d9ddbe48d5be9b50887330acfba,31911894+paragor@users.noreply.github.com,2024-10-21 20:01:31+07:00,noreply@github.com,2024-10-21 21:01:31+08:00,"feat(config): add `rocksdb.compression_start_level` to allow configure levels without compression (#2605)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,config.cc,cc,45,22,67
e0de9345c01f3d9ddbe48d5be9b50887330acfba,31911894+paragor@users.noreply.github.com,2024-10-21 20:01:31+07:00,noreply@github.com,2024-10-21 21:01:31+08:00,"feat(config): add `rocksdb.compression_start_level` to allow configure levels without compression (#2605)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,config.h,h,2,0,2
e0de9345c01f3d9ddbe48d5be9b50887330acfba,31911894+paragor@users.noreply.github.com,2024-10-21 20:01:31+07:00,noreply@github.com,2024-10-21 21:01:31+08:00,"feat(config): add `rocksdb.compression_start_level` to allow configure levels without compression (#2605)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,storage.cc,cc,2,3,5
e0de9345c01f3d9ddbe48d5be9b50887330acfba,31911894+paragor@users.noreply.github.com,2024-10-21 20:01:31+07:00,noreply@github.com,2024-10-21 21:01:31+08:00,"feat(config): add `rocksdb.compression_start_level` to allow configure levels without compression (#2605)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,5,config_test.cc,cc,1,0,1
a73812201b4131713253816380400df97ce4df94,maplewish117@gmail.com,2024-10-22 16:00:18+08:00,noreply@github.com,2024-10-22 16:00:18+08:00,feat(config): Minor update comment for compression_start_level error code (#2615),unstable,True,False,1,config.cc,cc,1,1,2
c525d7a8c6ba19f5b7e53726319cc578767a62d9,twice.mliu@gmail.com,2024-10-24 17:58:16+08:00,noreply@github.com,2024-10-24 17:58:16+08:00,feat(cmd): avoid to use CommandAttributes::flags directly (#2619),unstable,True,False,15,cluster.cc,cc,4,2,6
c525d7a8c6ba19f5b7e53726319cc578767a62d9,twice.mliu@gmail.com,2024-10-24 17:58:16+08:00,noreply@github.com,2024-10-24 17:58:16+08:00,feat(cmd): avoid to use CommandAttributes::flags directly (#2619),unstable,True,False,15,cmd_cluster.cc,cc,5,5,10
c525d7a8c6ba19f5b7e53726319cc578767a62d9,twice.mliu@gmail.com,2024-10-24 17:58:16+08:00,noreply@github.com,2024-10-24 17:58:16+08:00,feat(cmd): avoid to use CommandAttributes::flags directly (#2619),unstable,True,False,15,cmd_function.cc,cc,1,1,2
c525d7a8c6ba19f5b7e53726319cc578767a62d9,twice.mliu@gmail.com,2024-10-24 17:58:16+08:00,noreply@github.com,2024-10-24 17:58:16+08:00,feat(cmd): avoid to use CommandAttributes::flags directly (#2619),unstable,True,False,15,cmd_geo.cc,cc,1,1,2
c525d7a8c6ba19f5b7e53726319cc578767a62d9,twice.mliu@gmail.com,2024-10-24 17:58:16+08:00,noreply@github.com,2024-10-24 17:58:16+08:00,feat(cmd): avoid to use CommandAttributes::flags directly (#2619),unstable,True,False,15,cmd_pubsub.cc,cc,9,9,18
c525d7a8c6ba19f5b7e53726319cc578767a62d9,twice.mliu@gmail.com,2024-10-24 17:58:16+08:00,noreply@github.com,2024-10-24 17:58:16+08:00,feat(cmd): avoid to use CommandAttributes::flags directly (#2619),unstable,True,False,15,cmd_replication.cc,cc,5,5,10
c525d7a8c6ba19f5b7e53726319cc578767a62d9,twice.mliu@gmail.com,2024-10-24 17:58:16+08:00,noreply@github.com,2024-10-24 17:58:16+08:00,feat(cmd): avoid to use CommandAttributes::flags directly (#2619),unstable,True,False,15,cmd_script.cc,cc,1,1,2
c525d7a8c6ba19f5b7e53726319cc578767a62d9,twice.mliu@gmail.com,2024-10-24 17:58:16+08:00,noreply@github.com,2024-10-24 17:58:16+08:00,feat(cmd): avoid to use CommandAttributes::flags directly (#2619),unstable,True,False,15,cmd_search.cc,cc,10,10,20
c525d7a8c6ba19f5b7e53726319cc578767a62d9,twice.mliu@gmail.com,2024-10-24 17:58:16+08:00,noreply@github.com,2024-10-24 17:58:16+08:00,feat(cmd): avoid to use CommandAttributes::flags directly (#2619),unstable,True,False,15,cmd_server.cc,cc,37,37,74
c525d7a8c6ba19f5b7e53726319cc578767a62d9,twice.mliu@gmail.com,2024-10-24 17:58:16+08:00,noreply@github.com,2024-10-24 17:58:16+08:00,feat(cmd): avoid to use CommandAttributes::flags directly (#2619),unstable,True,False,15,cmd_stream.cc,cc,3,3,6
c525d7a8c6ba19f5b7e53726319cc578767a62d9,twice.mliu@gmail.com,2024-10-24 17:58:16+08:00,noreply@github.com,2024-10-24 17:58:16+08:00,feat(cmd): avoid to use CommandAttributes::flags directly (#2619),unstable,True,False,15,cmd_txn.cc,cc,4,4,8
c525d7a8c6ba19f5b7e53726319cc578767a62d9,twice.mliu@gmail.com,2024-10-24 17:58:16+08:00,noreply@github.com,2024-10-24 17:58:16+08:00,feat(cmd): avoid to use CommandAttributes::flags directly (#2619),unstable,True,False,15,commander.cc,cc,1,1,2
c525d7a8c6ba19f5b7e53726319cc578767a62d9,twice.mliu@gmail.com,2024-10-24 17:58:16+08:00,noreply@github.com,2024-10-24 17:58:16+08:00,feat(cmd): avoid to use CommandAttributes::flags directly (#2619),unstable,True,False,15,commander.h,h,74,25,99
c525d7a8c6ba19f5b7e53726319cc578767a62d9,twice.mliu@gmail.com,2024-10-24 17:58:16+08:00,noreply@github.com,2024-10-24 17:58:16+08:00,feat(cmd): avoid to use CommandAttributes::flags directly (#2619),unstable,True,False,15,redis_connection.cc,cc,5,5,10
c525d7a8c6ba19f5b7e53726319cc578767a62d9,twice.mliu@gmail.com,2024-10-24 17:58:16+08:00,noreply@github.com,2024-10-24 17:58:16+08:00,feat(cmd): avoid to use CommandAttributes::flags directly (#2619),unstable,True,False,15,server.cc,cc,1,1,2
5fccd57c66bc8f0e4138924fe6a0148931e5650f,twice.mliu@gmail.com,2024-10-24 23:09:05+08:00,noreply@github.com,2024-10-24 23:09:05+08:00,feat(cmd): make key range fields private in CommandAttributes (#2621),unstable,True,False,6,cluster.cc,cc,6,6,12
5fccd57c66bc8f0e4138924fe6a0148931e5650f,twice.mliu@gmail.com,2024-10-24 23:09:05+08:00,noreply@github.com,2024-10-24 23:09:05+08:00,feat(cmd): make key range fields private in CommandAttributes (#2621),unstable,True,False,6,cmd_server.cc,cc,5,7,12
5fccd57c66bc8f0e4138924fe6a0148931e5650f,twice.mliu@gmail.com,2024-10-24 23:09:05+08:00,noreply@github.com,2024-10-24 23:09:05+08:00,feat(cmd): make key range fields private in CommandAttributes (#2621),unstable,True,False,6,commander.cc,cc,22,30,52
5fccd57c66bc8f0e4138924fe6a0148931e5650f,twice.mliu@gmail.com,2024-10-24 23:09:05+08:00,noreply@github.com,2024-10-24 23:09:05+08:00,feat(cmd): make key range fields private in CommandAttributes (#2621),unstable,True,False,6,commander.h,h,53,30,83
5fccd57c66bc8f0e4138924fe6a0148931e5650f,twice.mliu@gmail.com,2024-10-24 23:09:05+08:00,noreply@github.com,2024-10-24 23:09:05+08:00,feat(cmd): make key range fields private in CommandAttributes (#2621),unstable,True,False,6,string_util.h,h,1,2,3
5fccd57c66bc8f0e4138924fe6a0148931e5650f,twice.mliu@gmail.com,2024-10-24 23:09:05+08:00,noreply@github.com,2024-10-24 23:09:05+08:00,feat(cmd): make key range fields private in CommandAttributes (#2621),unstable,True,False,6,server.cc,cc,3,21,24
c4664b1ab3f79196bb043fe2675305fcc57a1278,hulk.website@gmail.com,2024-10-26 13:42:06+08:00,noreply@github.com,2024-10-26 13:42:06+08:00,fix(command): wrong key range in commands: DISK/MEMORY/DUMP (#2623),unstable,True,False,1,cmd_server.cc,cc,3,3,6
c7b6b22efa25e31bab88f338073fa648e261833c,twice.mliu@gmail.com,2024-10-26 20:13:19+08:00,noreply@github.com,2024-10-26 20:13:19+08:00,fix(cmd): add exclusive flag to FLUSHDB/FLUSHALL (#2624),unstable,True,False,1,cmd_server.cc,cc,2,2,4
4aa36ec5efd4d4cb6e8250a674715c119d1c3b64,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-28 22:22:36-04:00,noreply@github.com,2024-10-29 10:22:36+08:00,feat(scan): Support arbitrary glob patterns (#2608),unstable,True,False,13,typos.toml,toml,5,0,5
4aa36ec5efd4d4cb6e8250a674715c119d1c3b64,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-28 22:22:36-04:00,noreply@github.com,2024-10-29 10:22:36+08:00,feat(scan): Support arbitrary glob patterns (#2608),unstable,True,False,13,cmd_server.cc,cc,8,8,16
4aa36ec5efd4d4cb6e8250a674715c119d1c3b64,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-28 22:22:36-04:00,noreply@github.com,2024-10-29 10:22:36+08:00,feat(scan): Support arbitrary glob patterns (#2608),unstable,True,False,13,scan_base.h,h,7,7,14
4aa36ec5efd4d4cb6e8250a674715c119d1c3b64,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-28 22:22:36-04:00,noreply@github.com,2024-10-29 10:22:36+08:00,feat(scan): Support arbitrary glob patterns (#2608),unstable,True,False,13,status.h,h,0,1,1
4aa36ec5efd4d4cb6e8250a674715c119d1c3b64,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-28 22:22:36-04:00,noreply@github.com,2024-10-29 10:22:36+08:00,feat(scan): Support arbitrary glob patterns (#2608),unstable,True,False,13,string_util.cc,cc,142,86,228
4aa36ec5efd4d4cb6e8250a674715c119d1c3b64,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-28 22:22:36-04:00,noreply@github.com,2024-10-29 10:22:36+08:00,feat(scan): Support arbitrary glob patterns (#2608),unstable,True,False,13,string_util.h,h,12,3,15
4aa36ec5efd4d4cb6e8250a674715c119d1c3b64,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-28 22:22:36-04:00,noreply@github.com,2024-10-29 10:22:36+08:00,feat(scan): Support arbitrary glob patterns (#2608),unstable,True,False,13,config.cc,cc,1,1,2
4aa36ec5efd4d4cb6e8250a674715c119d1c3b64,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-28 22:22:36-04:00,noreply@github.com,2024-10-29 10:22:36+08:00,feat(scan): Support arbitrary glob patterns (#2608),unstable,True,False,13,server.cc,cc,5,6,11
4aa36ec5efd4d4cb6e8250a674715c119d1c3b64,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-28 22:22:36-04:00,noreply@github.com,2024-10-29 10:22:36+08:00,feat(scan): Support arbitrary glob patterns (#2608),unstable,True,False,13,redis_db.cc,cc,17,11,28
4aa36ec5efd4d4cb6e8250a674715c119d1c3b64,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-28 22:22:36-04:00,noreply@github.com,2024-10-29 10:22:36+08:00,feat(scan): Support arbitrary glob patterns (#2608),unstable,True,False,13,redis_db.h,h,4,5,9
4aa36ec5efd4d4cb6e8250a674715c119d1c3b64,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-28 22:22:36-04:00,noreply@github.com,2024-10-29 10:22:36+08:00,feat(scan): Support arbitrary glob patterns (#2608),unstable,True,False,13,string_util_test.cc,cc,156,0,156
4aa36ec5efd4d4cb6e8250a674715c119d1c3b64,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-28 22:22:36-04:00,noreply@github.com,2024-10-29 10:22:36+08:00,feat(scan): Support arbitrary glob patterns (#2608),unstable,True,False,13,keyspace_test.go,go,47,4,51
4aa36ec5efd4d4cb6e8250a674715c119d1c3b64,151768548+nathanlo-hrt@users.noreply.github.com,2024-10-28 22:22:36-04:00,noreply@github.com,2024-10-29 10:22:36+08:00,feat(scan): Support arbitrary glob patterns (#2608),unstable,True,False,13,scan_test.go,go,44,7,51
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,replication.cc,cc,1,1,2
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,sync_migrate_context.cc,cc,1,1,2
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,cmd_bloom_filter.cc,cc,1,1,2
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,cmd_cluster.cc,cc,9,9,18
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,cmd_function.cc,cc,1,1,2
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,cmd_hash.cc,cc,1,1,2
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,cmd_hll.cc,cc,1,1,2
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,cmd_json.cc,cc,3,3,6
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,cmd_key.cc,cc,1,1,2
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,cmd_list.cc,cc,2,2,4
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,cmd_replication.cc,cc,1,1,2
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,cmd_script.cc,cc,1,1,2
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,cmd_search.cc,cc,2,2,4
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,cmd_server.cc,cc,26,26,52
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,cmd_stream.cc,cc,3,3,6
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,cmd_string.cc,cc,4,4,8
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,cmd_txn.cc,cc,5,5,10
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,redis_reply.cc,cc,8,1,9
3a51869677161092ec9c21dc3744debf70ea4698,riversjin@foxmail.com,2024-10-31 13:32:49+08:00,noreply@github.com,2024-10-31 13:32:49+08:00,"feat(resp): optimize simple string ""OK"" construction (#2627)",unstable,True,False,19,redis_reply.h,h,4,1,5
a7d5f4fa3d069c196fd75135642289e3e7967f02,twice.mliu@gmail.com,2024-10-31 15:42:24+08:00,noreply@github.com,2024-10-31 15:42:24+08:00,feat(status): support rocksdb::Status fowarding in GET_OR_RET (#2630),unstable,True,False,2,status.h,h,27,6,33
a7d5f4fa3d069c196fd75135642289e3e7967f02,twice.mliu@gmail.com,2024-10-31 15:42:24+08:00,noreply@github.com,2024-10-31 15:42:24+08:00,feat(status): support rocksdb::Status fowarding in GET_OR_RET (#2630),unstable,True,False,2,status_test.cc,cc,28,0,28
3a5eb97b830263471e74eed6701ac593a15ca5db,aleks.raiden@gmail.com,2024-11-01 06:03:23+02:00,noreply@github.com,2024-11-01 12:03:23+08:00,chore: bump oneTBB to v2022.0.0 (#2632),unstable,True,False,1,tbb.cmake,cmake,2,2,4
3a6a4be813c1903b8fb9f06abfeeaedc8efd512b,aleks.raiden@gmail.com,2024-11-01 08:47:46+02:00,noreply@github.com,2024-11-01 14:47:46+08:00,"chore: bump jsoncons to v0.178.0 (#2631)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,jsoncons.cmake,cmake,2,2,4
8cf3162a744aaebcfab73514e1564066b31abb7c,2454787428@qq.com,2024-11-02 21:36:13+08:00,noreply@github.com,2024-11-02 21:36:13+08:00,"chore: Add devcontainer config for Kvrocks (#2634)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,2,Dockerfile,None,9,0,9
8cf3162a744aaebcfab73514e1564066b31abb7c,2454787428@qq.com,2024-11-02 21:36:13+08:00,noreply@github.com,2024-11-02 21:36:13+08:00,"chore: Add devcontainer config for Kvrocks (#2634)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,2,devcontainer.json,json,5,0,5
7a3cc8cc32f0723ebe24c0d4340db864030f9b5a,twice.mliu@gmail.com,2024-11-03 00:50:08+08:00,noreply@github.com,2024-11-03 00:50:08+08:00,"feat(cmd): add blocking flag and remove useless flags (#2637)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,10,cmd_function.cc,cc,5,4,9
7a3cc8cc32f0723ebe24c0d4340db864030f9b5a,twice.mliu@gmail.com,2024-11-03 00:50:08+08:00,noreply@github.com,2024-11-03 00:50:08+08:00,"feat(cmd): add blocking flag and remove useless flags (#2637)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,10,cmd_list.cc,cc,5,4,9
7a3cc8cc32f0723ebe24c0d4340db864030f9b5a,twice.mliu@gmail.com,2024-11-03 00:50:08+08:00,noreply@github.com,2024-11-03 00:50:08+08:00,"feat(cmd): add blocking flag and remove useless flags (#2637)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,10,cmd_pubsub.cc,cc,9,10,19
7a3cc8cc32f0723ebe24c0d4340db864030f9b5a,twice.mliu@gmail.com,2024-11-03 00:50:08+08:00,noreply@github.com,2024-11-03 00:50:08+08:00,"feat(cmd): add blocking flag and remove useless flags (#2637)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,10,cmd_replication.cc,cc,5,6,11
7a3cc8cc32f0723ebe24c0d4340db864030f9b5a,twice.mliu@gmail.com,2024-11-03 00:50:08+08:00,noreply@github.com,2024-11-03 00:50:08+08:00,"feat(cmd): add blocking flag and remove useless flags (#2637)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,10,cmd_script.cc,cc,6,6,12
7a3cc8cc32f0723ebe24c0d4340db864030f9b5a,twice.mliu@gmail.com,2024-11-03 00:50:08+08:00,noreply@github.com,2024-11-03 00:50:08+08:00,"feat(cmd): add blocking flag and remove useless flags (#2637)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,10,cmd_server.cc,cc,1,1,2
7a3cc8cc32f0723ebe24c0d4340db864030f9b5a,twice.mliu@gmail.com,2024-11-03 00:50:08+08:00,noreply@github.com,2024-11-03 00:50:08+08:00,"feat(cmd): add blocking flag and remove useless flags (#2637)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,10,cmd_stream.cc,cc,2,2,4
7a3cc8cc32f0723ebe24c0d4340db864030f9b5a,twice.mliu@gmail.com,2024-11-03 00:50:08+08:00,noreply@github.com,2024-11-03 00:50:08+08:00,"feat(cmd): add blocking flag and remove useless flags (#2637)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,10,cmd_zset.cc,cc,3,3,6
7a3cc8cc32f0723ebe24c0d4340db864030f9b5a,twice.mliu@gmail.com,2024-11-03 00:50:08+08:00,noreply@github.com,2024-11-03 00:50:08+08:00,"feat(cmd): add blocking flag and remove useless flags (#2637)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,10,commander.h,h,5,12,17
7a3cc8cc32f0723ebe24c0d4340db864030f9b5a,twice.mliu@gmail.com,2024-11-03 00:50:08+08:00,noreply@github.com,2024-11-03 00:50:08+08:00,"feat(cmd): add blocking flag and remove useless flags (#2637)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,10,redis_connection.cc,cc,7,4,11
4b50c9b6b0d036d4e3607a0c8a1d164c37a9edae,aleks.raiden@gmail.com,2024-11-03 04:44:45+02:00,noreply@github.com,2024-11-03 10:44:45+08:00,"chore: bump rocksdb to v9.7.4 (#2639)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
2f520f918cdae701934f1b88fa49072a250389eb,twice.mliu@gmail.com,2024-11-03 12:26:11+08:00,noreply@github.com,2024-11-03 12:26:11+08:00,chore(cmd): add comments for command flags (#2641),unstable,True,False,2,cmd_cluster.cc,cc,5,6,11
2f520f918cdae701934f1b88fa49072a250389eb,twice.mliu@gmail.com,2024-11-03 12:26:11+08:00,noreply@github.com,2024-11-03 12:26:11+08:00,chore(cmd): add comments for command flags (#2641),unstable,True,False,2,commander.h,h,24,13,37
55e99f22f8a28cf64390963ef044e456f17fafb0,twice.mliu@gmail.com,2024-11-03 19:38:09+08:00,noreply@github.com,2024-11-03 19:38:09+08:00,fix(script): avoid SetCurrentConnection on read-only scripting (#2640),unstable,True,False,6,redis_connection.cc,cc,0,12,12
55e99f22f8a28cf64390963ef044e456f17fafb0,twice.mliu@gmail.com,2024-11-03 19:38:09+08:00,noreply@github.com,2024-11-03 19:38:09+08:00,fix(script): avoid SetCurrentConnection on read-only scripting (#2640),unstable,True,False,6,server.cc,cc,2,2,4
55e99f22f8a28cf64390963ef044e456f17fafb0,twice.mliu@gmail.com,2024-11-03 19:38:09+08:00,noreply@github.com,2024-11-03 19:38:09+08:00,fix(script): avoid SetCurrentConnection on read-only scripting (#2640),unstable,True,False,6,server.h,h,0,5,5
55e99f22f8a28cf64390963ef044e456f17fafb0,twice.mliu@gmail.com,2024-11-03 19:38:09+08:00,noreply@github.com,2024-11-03 19:38:09+08:00,fix(script): avoid SetCurrentConnection on read-only scripting (#2640),unstable,True,False,6,worker.cc,cc,1,1,2
55e99f22f8a28cf64390963ef044e456f17fafb0,twice.mliu@gmail.com,2024-11-03 19:38:09+08:00,noreply@github.com,2024-11-03 19:38:09+08:00,fix(script): avoid SetCurrentConnection on read-only scripting (#2640),unstable,True,False,6,scripting.cc,cc,21,17,38
55e99f22f8a28cf64390963ef044e456f17fafb0,twice.mliu@gmail.com,2024-11-03 19:38:09+08:00,noreply@github.com,2024-11-03 19:38:09+08:00,fix(script): avoid SetCurrentConnection on read-only scripting (#2640),unstable,True,False,6,scripting.h,h,3,3,6
c701b987b47965d91f1068254907f9c7e52db592,hulk.website@gmail.com,2024-11-04 12:12:24+08:00,noreply@github.com,2024-11-04 12:12:24+08:00,"fix(cluster): should remove the master if it's not node in the cluster (#2643)

Currently, the replica won't remove the master replication
while it's not a node in the cluster, which is an unexpected behavior
for the living master node in the cluster.

This fixes #2618.",unstable,True,False,2,cluster.cc,cc,10,9,19
c701b987b47965d91f1068254907f9c7e52db592,hulk.website@gmail.com,2024-11-04 12:12:24+08:00,noreply@github.com,2024-11-04 12:12:24+08:00,"fix(cluster): should remove the master if it's not node in the cluster (#2643)

Currently, the replica won't remove the master replication
while it's not a node in the cluster, which is an unexpected behavior
for the living master node in the cluster.

This fixes #2618.",unstable,True,False,2,cluster_test.go,go,36,15,51
d66e82750c5636c5674e66cbb6597c0a74bf3704,aleks.raiden@gmail.com,2024-11-04 13:35:39+02:00,noreply@github.com,2024-11-04 13:35:39+02:00,ci: update crate-ci/typos to 1.27.0 (#2645),unstable,True,False,2,kvrocks.yaml,yaml,1,1,2
d66e82750c5636c5674e66cbb6597c0a74bf3704,aleks.raiden@gmail.com,2024-11-04 13:35:39+02:00,noreply@github.com,2024-11-04 13:35:39+02:00,ci: update crate-ci/typos to 1.27.0 (#2645),unstable,True,False,2,redis_json.h,h,1,1,2
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,blocking_commander.h,h,10,1,11
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,cmd_list.cc,cc,29,0,29
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,cmd_stream.cc,cc,8,0,8
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,cmd_zset.cc,cc,20,0,20
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,redis_connection.cc,cc,16,2,18
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,redis_db.cc,cc,8,12,20
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,redis_bitmap.cc,cc,1,9,10
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,redis_bloom_chain.cc,cc,0,2,2
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,redis_hash.cc,cc,1,4,5
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,redis_hyperloglog.cc,cc,0,2,2
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,redis_json.cc,cc,1,20,21
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,redis_list.cc,cc,1,9,10
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,redis_set.cc,cc,0,30,30
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,redis_sortedint.cc,cc,0,2,2
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,redis_stream.cc,cc,4,16,20
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,redis_string.cc,cc,4,32,36
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,redis_string.h,h,1,2,3
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,redis_zset.cc,cc,0,36,36
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,regression_test.go,go,0,3,3
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,list_test.go,go,3,65,68
1e25be6a4e20242c6f87c7b561f87666c6359437,zhousile@foxmail.com,2024-11-05 00:25:14+08:00,noreply@github.com,2024-11-05 00:25:14+08:00,"refactor: hoist key mutexes to ExecuteCommands (#2620)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,21,zset_test.go,go,0,7,7
c01b00e61e0b913733bc2bc2b0945a9003a82aa1,maplewish117@gmail.com,2024-11-05 10:18:36+08:00,noreply@github.com,2024-11-05 10:18:36+08:00,"fix(bugfix): for txn_write_batch creation (#2648)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,storage.cc,cc,5,3,8
4de82cd172420325b5fc8a5fbfa172fcfb73ae4e,aleks.raiden@gmail.com,2024-11-05 15:51:35+02:00,noreply@github.com,2024-11-05 21:51:35+08:00,"ci: update sonarcloud-github-c-cpp to v3 (#2646)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,kvrocks.yaml,yaml,1,1,2
2fa2de7378a1a31740c64c36bb366dd320ff94d6,twice.mliu@gmail.com,2024-11-07 18:05:52+08:00,noreply@github.com,2024-11-07 18:05:52+08:00,feat(search): add mutex to HNSW index updating (#2649),unstable,True,False,7,cmd_search.cc,cc,1,1,2
2fa2de7378a1a31740c64c36bb366dd320ff94d6,twice.mliu@gmail.com,2024-11-07 18:05:52+08:00,noreply@github.com,2024-11-07 18:05:52+08:00,feat(search): add mutex to HNSW index updating (#2649),unstable,True,False,7,index_manager.h,h,6,6,12
2fa2de7378a1a31740c64c36bb366dd320ff94d6,twice.mliu@gmail.com,2024-11-07 18:05:52+08:00,noreply@github.com,2024-11-07 18:05:52+08:00,feat(search): add mutex to HNSW index updating (#2649),unstable,True,False,7,indexer.cc,cc,20,15,35
2fa2de7378a1a31740c64c36bb366dd320ff94d6,twice.mliu@gmail.com,2024-11-07 18:05:52+08:00,noreply@github.com,2024-11-07 18:05:52+08:00,feat(search): add mutex to HNSW index updating (#2649),unstable,True,False,7,indexer.h,h,9,8,17
2fa2de7378a1a31740c64c36bb366dd320ff94d6,twice.mliu@gmail.com,2024-11-07 18:05:52+08:00,noreply@github.com,2024-11-07 18:05:52+08:00,feat(search): add mutex to HNSW index updating (#2649),unstable,True,False,7,redis_query_transformer.h,h,1,1,2
2fa2de7378a1a31740c64c36bb366dd320ff94d6,twice.mliu@gmail.com,2024-11-07 18:05:52+08:00,noreply@github.com,2024-11-07 18:05:52+08:00,feat(search): add mutex to HNSW index updating (#2649),unstable,True,False,7,indexer_test.cc,cc,8,8,16
2fa2de7378a1a31740c64c36bb366dd320ff94d6,twice.mliu@gmail.com,2024-11-07 18:05:52+08:00,noreply@github.com,2024-11-07 18:05:52+08:00,feat(search): add mutex to HNSW index updating (#2649),unstable,True,False,7,plan_executor_test.cc,cc,3,3,6
e86444d44119e7dd438085789a9b7ce554d40a53,twice.mliu@gmail.com,2024-11-08 10:08:36+08:00,noreply@github.com,2024-11-08 10:08:36+08:00,chore(search): improve code structure of IndexManager (#2650),unstable,True,False,3,cmd_search.cc,cc,1,1,2
e86444d44119e7dd438085789a9b7ce554d40a53,twice.mliu@gmail.com,2024-11-08 10:08:36+08:00,noreply@github.com,2024-11-08 10:08:36+08:00,chore(search): improve code structure of IndexManager (#2650),unstable,True,False,3,index_manager.cc,cc,328,0,328
e86444d44119e7dd438085789a9b7ce554d40a53,twice.mliu@gmail.com,2024-11-08 10:08:36+08:00,noreply@github.com,2024-11-08 10:08:36+08:00,chore(search): improve code structure of IndexManager (#2650),unstable,True,False,3,index_manager.h,h,7,291,298
1bb65c0635a925296566becbdd0329abf3f244ea,maplewish117@gmail.com,2024-11-08 14:32:53+08:00,noreply@github.com,2024-11-08 14:32:53+08:00,fix(log): fix rocksdb stall condition string output (#2651),unstable,True,False,1,event_listener.cc,cc,7,3,10
7f1c3f77f1cf5044f4bf4f27fc309ba6a0f97eb7,aleks.raiden@gmail.com,2024-11-09 11:58:26+02:00,noreply@github.com,2024-11-09 11:58:26+02:00,ci: update deps in gotest (#2653),unstable,True,False,2,go.mod,mod,6,6,12
7f1c3f77f1cf5044f4bf4f27fc309ba6a0f97eb7,aleks.raiden@gmail.com,2024-11-09 11:58:26+02:00,noreply@github.com,2024-11-09 11:58:26+02:00,ci: update deps in gotest (#2653),unstable,True,False,2,go.sum,sum,10,10,20
01ce0e104b0d95b967d90a9a082d61535b032d1f,twice.mliu@gmail.com,2024-11-10 23:24:03+08:00,noreply@github.com,2024-11-10 23:24:03+08:00,feat(search): print properties for vector field in FT.INFO (#2655),unstable,True,False,3,cmd_search.cc,cc,19,1,20
01ce0e104b0d95b967d90a9a082d61535b032d1f,twice.mliu@gmail.com,2024-11-10 23:24:03+08:00,noreply@github.com,2024-11-10 23:24:03+08:00,feat(search): print properties for vector field in FT.INFO (#2655),unstable,True,False,3,search_encoding.h,h,22,0,22
01ce0e104b0d95b967d90a9a082d61535b032d1f,twice.mliu@gmail.com,2024-11-10 23:24:03+08:00,noreply@github.com,2024-11-10 23:24:03+08:00,feat(search): print properties for vector field in FT.INFO (#2655),unstable,True,False,3,search_test.go,go,3,3,6
79f4d525e3e63eaec7d1316f5076345170174b9c,hulk.website@gmail.com,2024-11-12 09:56:34+08:00,noreply@github.com,2024-11-12 09:56:34+08:00,feat(cluster): add support of the JSON type in cluster migration (#2654),unstable,True,False,9,slot_migrate.cc,cc,27,7,34
79f4d525e3e63eaec7d1316f5076345170174b9c,hulk.website@gmail.com,2024-11-12 09:56:34+08:00,noreply@github.com,2024-11-12 09:56:34+08:00,feat(cluster): add support of the JSON type in cluster migration (#2654),unstable,True,False,9,batch_extractor.cc,cc,12,0,12
79f4d525e3e63eaec7d1316f5076345170174b9c,hulk.website@gmail.com,2024-11-12 09:56:34+08:00,noreply@github.com,2024-11-12 09:56:34+08:00,feat(cluster): add support of the JSON type in cluster migration (#2654),unstable,True,False,9,redis_db.cc,cc,9,13,22
79f4d525e3e63eaec7d1316f5076345170174b9c,hulk.website@gmail.com,2024-11-12 09:56:34+08:00,noreply@github.com,2024-11-12 09:56:34+08:00,feat(cluster): add support of the JSON type in cluster migration (#2654),unstable,True,False,9,redis_db.h,h,3,1,4
79f4d525e3e63eaec7d1316f5076345170174b9c,hulk.website@gmail.com,2024-11-12 09:56:34+08:00,noreply@github.com,2024-11-12 09:56:34+08:00,feat(cluster): add support of the JSON type in cluster migration (#2654),unstable,True,False,9,redis_bitmap.cc,cc,1,1,2
79f4d525e3e63eaec7d1316f5076345170174b9c,hulk.website@gmail.com,2024-11-12 09:56:34+08:00,noreply@github.com,2024-11-12 09:56:34+08:00,feat(cluster): add support of the JSON type in cluster migration (#2654),unstable,True,False,9,redis_json.cc,cc,9,1,10
79f4d525e3e63eaec7d1316f5076345170174b9c,hulk.website@gmail.com,2024-11-12 09:56:34+08:00,noreply@github.com,2024-11-12 09:56:34+08:00,feat(cluster): add support of the JSON type in cluster migration (#2654),unstable,True,False,9,redis_json.h,h,1,0,1
79f4d525e3e63eaec7d1316f5076345170174b9c,hulk.website@gmail.com,2024-11-12 09:56:34+08:00,noreply@github.com,2024-11-12 09:56:34+08:00,feat(cluster): add support of the JSON type in cluster migration (#2654),unstable,True,False,9,redis_string.cc,cc,2,2,4
79f4d525e3e63eaec7d1316f5076345170174b9c,hulk.website@gmail.com,2024-11-12 09:56:34+08:00,noreply@github.com,2024-11-12 09:56:34+08:00,feat(cluster): add support of the JSON type in cluster migration (#2654),unstable,True,False,9,slotmigrate_test.go,go,5,2,7
a4ccc21f04e307ce899d2c49d5e589cc1de922b4,151768548+nathanlo-hrt@users.noreply.github.com,2024-11-13 01:11:37-05:00,noreply@github.com,2024-11-13 14:11:37+08:00,"feat(config): make rocksdb.dump_malloc_stats configurable (#2658)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,4,kvrocks.conf,conf,6,0,6
a4ccc21f04e307ce899d2c49d5e589cc1de922b4,151768548+nathanlo-hrt@users.noreply.github.com,2024-11-13 01:11:37-05:00,noreply@github.com,2024-11-13 14:11:37+08:00,"feat(config): make rocksdb.dump_malloc_stats configurable (#2658)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,4,config.cc,cc,1,0,1
a4ccc21f04e307ce899d2c49d5e589cc1de922b4,151768548+nathanlo-hrt@users.noreply.github.com,2024-11-13 01:11:37-05:00,noreply@github.com,2024-11-13 14:11:37+08:00,"feat(config): make rocksdb.dump_malloc_stats configurable (#2658)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,4,config.h,h,1,0,1
a4ccc21f04e307ce899d2c49d5e589cc1de922b4,151768548+nathanlo-hrt@users.noreply.github.com,2024-11-13 01:11:37-05:00,noreply@github.com,2024-11-13 14:11:37+08:00,"feat(config): make rocksdb.dump_malloc_stats configurable (#2658)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,4,storage.cc,cc,1,1,2
1974d9868f1230763fe760a590105c6500fca4cc,maplewish117@gmail.com,2024-11-14 12:33:57+08:00,noreply@github.com,2024-11-14 12:33:57+08:00,chore(enhancement): rename is_txn_mode to txn_context_enabled (#2644),unstable,True,False,7,slot_migrate.h,h,1,1,2
1974d9868f1230763fe760a590105c6500fca4cc,maplewish117@gmail.com,2024-11-14 12:33:57+08:00,noreply@github.com,2024-11-14 12:33:57+08:00,chore(enhancement): rename is_txn_mode to txn_context_enabled (#2644),unstable,True,False,7,cmd_txn.cc,cc,4,0,4
1974d9868f1230763fe760a590105c6500fca4cc,maplewish117@gmail.com,2024-11-14 12:33:57+08:00,noreply@github.com,2024-11-14 12:33:57+08:00,chore(enhancement): rename is_txn_mode to txn_context_enabled (#2644),unstable,True,False,7,config.h,h,1,1,2
1974d9868f1230763fe760a590105c6500fca4cc,maplewish117@gmail.com,2024-11-14 12:33:57+08:00,noreply@github.com,2024-11-14 12:33:57+08:00,chore(enhancement): rename is_txn_mode to txn_context_enabled (#2644),unstable,True,False,7,redis_connection.cc,cc,1,1,2
1974d9868f1230763fe760a590105c6500fca4cc,maplewish117@gmail.com,2024-11-14 12:33:57+08:00,noreply@github.com,2024-11-14 12:33:57+08:00,chore(enhancement): rename is_txn_mode to txn_context_enabled (#2644),unstable,True,False,7,batch_indexer.h,h,3,1,4
1974d9868f1230763fe760a590105c6500fca4cc,maplewish117@gmail.com,2024-11-14 12:33:57+08:00,noreply@github.com,2024-11-14 12:33:57+08:00,chore(enhancement): rename is_txn_mode to txn_context_enabled (#2644),unstable,True,False,7,storage.cc,cc,16,13,29
1974d9868f1230763fe760a590105c6500fca4cc,maplewish117@gmail.com,2024-11-14 12:33:57+08:00,noreply@github.com,2024-11-14 12:33:57+08:00,chore(enhancement): rename is_txn_mode to txn_context_enabled (#2644),unstable,True,False,7,storage.h,h,33,16,49
6747b8da7a7280a39b4f85e498249dc51f6322d4,twice.mliu@gmail.com,2024-11-14 16:43:15+08:00,noreply@github.com,2024-11-14 16:43:15+08:00,fix(cmd): args should be parsed before retrieving keys in COMMAND GETKEYS (#2661),unstable,True,False,5,cluster.cc,cc,5,3,8
6747b8da7a7280a39b4f85e498249dc51f6322d4,twice.mliu@gmail.com,2024-11-14 16:43:15+08:00,noreply@github.com,2024-11-14 16:43:15+08:00,fix(cmd): args should be parsed before retrieving keys in COMMAND GETKEYS (#2661),unstable,True,False,5,commander.cc,cc,5,0,5
6747b8da7a7280a39b4f85e498249dc51f6322d4,twice.mliu@gmail.com,2024-11-14 16:43:15+08:00,noreply@github.com,2024-11-14 16:43:15+08:00,fix(cmd): args should be parsed before retrieving keys in COMMAND GETKEYS (#2661),unstable,True,False,5,commander.h,h,2,0,2
6747b8da7a7280a39b4f85e498249dc51f6322d4,twice.mliu@gmail.com,2024-11-14 16:43:15+08:00,noreply@github.com,2024-11-14 16:43:15+08:00,fix(cmd): args should be parsed before retrieving keys in COMMAND GETKEYS (#2661),unstable,True,False,5,scripting.cc,cc,7,7,14
6747b8da7a7280a39b4f85e498249dc51f6322d4,twice.mliu@gmail.com,2024-11-14 16:43:15+08:00,noreply@github.com,2024-11-14 16:43:15+08:00,fix(cmd): args should be parsed before retrieving keys in COMMAND GETKEYS (#2661),unstable,True,False,5,command_test.go,go,8,8,16
91b5478e8982d5814442def8d0850d0555cc69b2,14014471+LindaSummer@users.noreply.github.com,2024-11-15 12:27:39+08:00,noreply@github.com,2024-11-15 12:27:39+08:00,"fix(stream): add `KeyRangeGen` for `XRead` and `XReadGroup` (#2657)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,cmd_stream.cc,cc,27,2,29
91b5478e8982d5814442def8d0850d0555cc69b2,14014471+LindaSummer@users.noreply.github.com,2024-11-15 12:27:39+08:00,noreply@github.com,2024-11-15 12:27:39+08:00,"fix(stream): add `KeyRangeGen` for `XRead` and `XReadGroup` (#2657)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,command_test.go,go,134,0,134
e26c54a469e28b627ab44707a5d8aa0a095a17e9,sryan@qq.com,2024-11-15 21:50:09+08:00,noreply@github.com,2024-11-15 21:50:09+08:00,"fix(cmd): always print ok log when get full data file info failed (#2663)

Co-authored-by: yxj25245 <yxj25245@ly.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,cmd_replication.cc,cc,1,1,2
185bfc6cd259163733fa0342803de0b597ce0539,aleks.raiden@gmail.com,2024-11-16 02:51:32+02:00,noreply@github.com,2024-11-16 08:51:32+08:00,"refactor: initialize google logger after parsing options (#2664)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,main.cc,cc,2,3,5
cc4f63d67afa0636eeb344b648a17a5ecd5d1c49,twice.mliu@gmail.com,2024-11-16 14:22:40+08:00,noreply@github.com,2024-11-16 14:22:40+08:00,feat(cmd): all blocking commands should be no-script (#2666),unstable,True,False,4,.gitignore,gitignore,1,0,1
cc4f63d67afa0636eeb344b648a17a5ecd5d1c49,twice.mliu@gmail.com,2024-11-16 14:22:40+08:00,noreply@github.com,2024-11-16 14:22:40+08:00,feat(cmd): all blocking commands should be no-script (#2666),unstable,True,False,4,cmd_list.cc,cc,3,4,7
cc4f63d67afa0636eeb344b648a17a5ecd5d1c49,twice.mliu@gmail.com,2024-11-16 14:22:40+08:00,noreply@github.com,2024-11-16 14:22:40+08:00,feat(cmd): all blocking commands should be no-script (#2666),unstable,True,False,4,cmd_server.cc,cc,1,1,2
cc4f63d67afa0636eeb344b648a17a5ecd5d1c49,twice.mliu@gmail.com,2024-11-16 14:22:40+08:00,noreply@github.com,2024-11-16 14:22:40+08:00,feat(cmd): all blocking commands should be no-script (#2666),unstable,True,False,4,commander.h,h,6,2,8
eb4de5c63129cda2f9a0365eee5118094889d013,twice.mliu@gmail.com,2024-11-16 17:14:37+08:00,noreply@github.com,2024-11-16 17:14:37+08:00,feat(cmd): add the auth flag for authentication checking (#2669),unstable,True,False,3,cmd_server.cc,cc,2,2,4
eb4de5c63129cda2f9a0365eee5118094889d013,twice.mliu@gmail.com,2024-11-16 17:14:37+08:00,noreply@github.com,2024-11-16 17:14:37+08:00,feat(cmd): add the auth flag for authentication checking (#2669),unstable,True,False,3,commander.h,h,4,0,4
eb4de5c63129cda2f9a0365eee5118094889d013,twice.mliu@gmail.com,2024-11-16 17:14:37+08:00,noreply@github.com,2024-11-16 17:14:37+08:00,feat(cmd): add the auth flag for authentication checking (#2669),unstable,True,False,3,redis_connection.cc,cc,1,1,2
5e9db7995192be8cfc0edc3ac9775081580580c2,sryan@qq.com,2024-11-16 23:22:56+08:00,noreply@github.com,2024-11-16 23:22:56+08:00,"fix(replication): slave blocks until keepalive timer is reached when master is gone without fin/rst notification (#2662)

Co-authored-by: yxj25245 <yxj25245@ly.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,kvrocks.conf,conf,14,0,14
5e9db7995192be8cfc0edc3ac9775081580580c2,sryan@qq.com,2024-11-16 23:22:56+08:00,noreply@github.com,2024-11-16 23:22:56+08:00,"fix(replication): slave blocks until keepalive timer is reached when master is gone without fin/rst notification (#2662)

Co-authored-by: yxj25245 <yxj25245@ly.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,replication.cc,cc,17,3,20
5e9db7995192be8cfc0edc3ac9775081580580c2,sryan@qq.com,2024-11-16 23:22:56+08:00,noreply@github.com,2024-11-16 23:22:56+08:00,"fix(replication): slave blocks until keepalive timer is reached when master is gone without fin/rst notification (#2662)

Co-authored-by: yxj25245 <yxj25245@ly.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,io_util.cc,cc,10,2,12
5e9db7995192be8cfc0edc3ac9775081580580c2,sryan@qq.com,2024-11-16 23:22:56+08:00,noreply@github.com,2024-11-16 23:22:56+08:00,"fix(replication): slave blocks until keepalive timer is reached when master is gone without fin/rst notification (#2662)

Co-authored-by: yxj25245 <yxj25245@ly.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,status.h,h,4,0,4
5e9db7995192be8cfc0edc3ac9775081580580c2,sryan@qq.com,2024-11-16 23:22:56+08:00,noreply@github.com,2024-11-16 23:22:56+08:00,"fix(replication): slave blocks until keepalive timer is reached when master is gone without fin/rst notification (#2662)

Co-authored-by: yxj25245 <yxj25245@ly.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,config.cc,cc,2,0,2
5e9db7995192be8cfc0edc3ac9775081580580c2,sryan@qq.com,2024-11-16 23:22:56+08:00,noreply@github.com,2024-11-16 23:22:56+08:00,"fix(replication): slave blocks until keepalive timer is reached when master is gone without fin/rst notification (#2662)

Co-authored-by: yxj25245 <yxj25245@ly.com>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,6,config.h,h,2,0,2
c6d9ad2916eb0ede75fff5427fe7dd2966093d42,twice.mliu@gmail.com,2024-11-17 12:22:00+08:00,noreply@github.com,2024-11-17 12:22:00+08:00,feat(conn): avoid to check the command name directly (#2668),unstable,True,False,7,cmd_server.cc,cc,1,1,2
c6d9ad2916eb0ede75fff5427fe7dd2966093d42,twice.mliu@gmail.com,2024-11-17 12:22:00+08:00,noreply@github.com,2024-11-17 12:22:00+08:00,feat(conn): avoid to check the command name directly (#2668),unstable,True,False,7,cmd_txn.cc,cc,5,9,14
c6d9ad2916eb0ede75fff5427fe7dd2966093d42,twice.mliu@gmail.com,2024-11-17 12:22:00+08:00,noreply@github.com,2024-11-17 12:22:00+08:00,feat(conn): avoid to check the command name directly (#2668),unstable,True,False,7,commander.h,h,5,4,9
c6d9ad2916eb0ede75fff5427fe7dd2966093d42,twice.mliu@gmail.com,2024-11-17 12:22:00+08:00,noreply@github.com,2024-11-17 12:22:00+08:00,feat(conn): avoid to check the command name directly (#2668),unstable,True,False,7,string_util.cc,cc,5,0,5
c6d9ad2916eb0ede75fff5427fe7dd2966093d42,twice.mliu@gmail.com,2024-11-17 12:22:00+08:00,noreply@github.com,2024-11-17 12:22:00+08:00,feat(conn): avoid to check the command name directly (#2668),unstable,True,False,7,string_util.h,h,1,0,1
c6d9ad2916eb0ede75fff5427fe7dd2966093d42,twice.mliu@gmail.com,2024-11-17 12:22:00+08:00,noreply@github.com,2024-11-17 12:22:00+08:00,feat(conn): avoid to check the command name directly (#2668),unstable,True,False,7,redis_connection.cc,cc,3,3,6
c6d9ad2916eb0ede75fff5427fe7dd2966093d42,twice.mliu@gmail.com,2024-11-17 12:22:00+08:00,noreply@github.com,2024-11-17 12:22:00+08:00,feat(conn): avoid to check the command name directly (#2668),unstable,True,False,7,multi_test.go,go,1,1,2
1dbd7d3cb3c7c9b86b031b2104358c3ee93fb618,aleks.raiden@gmail.com,2024-11-17 16:56:14+02:00,noreply@github.com,2024-11-17 22:56:14+08:00,"chore: bump cpptrace to v0.7.3 (#2670)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,cpptrace.cmake,cmake,2,2,4
7611d73f940886bbe7b77598cdd760c8e8371427,youngfish93@hotmail.com,2024-11-18 19:18:38+08:00,noreply@github.com,2024-11-18 19:18:38+08:00,fix(string): should reset the value of expired key for INCRBY cmd  (#2667),unstable,True,False,2,redis_string.cc,cc,2,0,2
7611d73f940886bbe7b77598cdd760c8e8371427,youngfish93@hotmail.com,2024-11-18 19:18:38+08:00,noreply@github.com,2024-11-18 19:18:38+08:00,fix(string): should reset the value of expired key for INCRBY cmd  (#2667),unstable,True,False,2,incr_test.go,go,15,0,15
88ac233652f9b75df2ddcc99e4f64989bffc4295,aleks.raiden@gmail.com,2024-11-19 04:19:46+02:00,noreply@github.com,2024-11-19 10:19:46+08:00,"chore: bump glog to 0.7.1 (#2106)

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,glog.cmake,cmake,2,2,4
88ac233652f9b75df2ddcc99e4f64989bffc4295,aleks.raiden@gmail.com,2024-11-19 04:19:46+02:00,noreply@github.com,2024-11-19 10:19:46+08:00,"chore: bump glog to 0.7.1 (#2106)

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,main.cc,cc,3,2,5
88ac233652f9b75df2ddcc99e4f64989bffc4295,aleks.raiden@gmail.com,2024-11-19 04:19:46+02:00,noreply@github.com,2024-11-19 10:19:46+08:00,"chore: bump glog to 0.7.1 (#2106)

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,config.cc,cc,3,3,6
88ac233652f9b75df2ddcc99e4f64989bffc4295,aleks.raiden@gmail.com,2024-11-19 04:19:46+02:00,noreply@github.com,2024-11-19 10:19:46+08:00,"chore: bump glog to 0.7.1 (#2106)

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,logclean_test.go,go,37,26,63
88ac233652f9b75df2ddcc99e4f64989bffc4295,aleks.raiden@gmail.com,2024-11-19 04:19:46+02:00,noreply@github.com,2024-11-19 10:19:46+08:00,"chore: bump glog to 0.7.1 (#2106)

Co-authored-by: Yaroslav <torwigua@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,5,server.go,go,4,0,4
f98cb0c79a60481913eef0d970cd7b10a6407de9,twice.mliu@gmail.com,2024-11-20 01:52:43+08:00,noreply@github.com,2024-11-20 01:52:43+08:00,feat(cmd): add more information to shutdown log (#2672),unstable,True,False,2,main.cc,cc,2,2,4
f98cb0c79a60481913eef0d970cd7b10a6407de9,twice.mliu@gmail.com,2024-11-20 01:52:43+08:00,noreply@github.com,2024-11-20 01:52:43+08:00,feat(cmd): add more information to shutdown log (#2672),unstable,True,False,2,cmd_server.cc,cc,2,2,4
fcf3b7bc80fd5e64c484a133d897db68dcdb0445,twice.mliu@gmail.com,2024-11-23 21:12:53+08:00,noreply@github.com,2024-11-23 21:12:53+08:00,feat(conn): allow CONFIG in stale-data replica (#2677),unstable,True,False,1,redis_connection.cc,cc,5,1,6
00dfc7cf9d4d44c79d5cefb006237e4ad4219e90,twice.mliu@gmail.com,2024-11-24 11:11:07+08:00,noreply@github.com,2024-11-24 11:11:07+08:00,"feat(cmd, config): support REPLICAOF command and replicaof config option (#2678)",unstable,True,False,2,cmd_server.cc,cc,1,0,1
00dfc7cf9d4d44c79d5cefb006237e4ad4219e90,twice.mliu@gmail.com,2024-11-24 11:11:07+08:00,noreply@github.com,2024-11-24 11:11:07+08:00,"feat(cmd, config): support REPLICAOF command and replicaof config option (#2678)",unstable,True,False,2,config.cc,cc,304,301,605
fbea2a508f9f9f34851129b36e9a2453c90ac4a8,aleks.raiden@gmail.com,2024-11-26 17:34:17+02:00,noreply@github.com,2024-11-26 23:34:17+08:00,ci: bump crate-ci/typos to 1.28 (#2680),unstable,True,False,2,kvrocks.yaml,yaml,1,1,2
fbea2a508f9f9f34851129b36e9a2453c90ac4a8,aleks.raiden@gmail.com,2024-11-26 17:34:17+02:00,noreply@github.com,2024-11-26 23:34:17+08:00,ci: bump crate-ci/typos to 1.28 (#2680),unstable,True,False,2,kvrocks.conf,conf,1,1,2
857eadf2f49465eb9279fd464f9999c6c62e8d2a,aleks.raiden@gmail.com,2024-11-27 05:01:48+02:00,noreply@github.com,2024-11-27 11:01:48+08:00,ci: bump redis-py to 5.2.0 (#2681),unstable,True,False,1,kvrocks.yaml,yaml,1,1,2
5cdc8c3b247e78e35a014a80d175bf5c7e5d53c5,aleks.raiden@gmail.com,2024-11-30 15:24:11+02:00,noreply@github.com,2024-11-30 21:24:11+08:00,ci: bump gotest testify to v1.10.0 (#2682),unstable,True,False,2,go.mod,mod,2,2,4
5cdc8c3b247e78e35a014a80d175bf5c7e5d53c5,aleks.raiden@gmail.com,2024-11-30 15:24:11+02:00,noreply@github.com,2024-11-30 21:24:11+08:00,ci: bump gotest testify to v1.10.0 (#2682),unstable,True,False,2,go.sum,sum,4,0,4
1ed45bc41e1f55cc76f405da605532390ca74491,weim0000@163.com,2024-12-03 15:37:39+08:00,noreply@github.com,2024-12-03 15:37:39+08:00,fix(string): reset the value of expired key for SETRANGE cmd (#2686),unstable,True,False,2,redis_string.cc,cc,3,3,6
1ed45bc41e1f55cc76f405da605532390ca74491,weim0000@163.com,2024-12-03 15:37:39+08:00,noreply@github.com,2024-12-03 15:37:39+08:00,fix(string): reset the value of expired key for SETRANGE cmd (#2686),unstable,True,False,2,string_test.cc,cc,9,0,9
b7e81958ca1f16c0950cbe9ef4d7869b59f935cd,aleks.raiden@gmail.com,2024-12-04 14:12:15+02:00,noreply@github.com,2024-12-04 20:12:15+08:00,chore: bump rocksdb to v9.8.4 (#2687),unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
d3bca429b22232ef36d4b5983765e9e9aa377d08,wanghenshui@qq.com,2024-12-05 15:57:28+08:00,noreply@github.com,2024-12-05 15:57:28+08:00,"feat: skip block cache deallocation to make shutdown fast (#2683)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,kvrocks.conf,conf,7,0,7
d3bca429b22232ef36d4b5983765e9e9aa377d08,wanghenshui@qq.com,2024-12-05 15:57:28+08:00,noreply@github.com,2024-12-05 15:57:28+08:00,"feat: skip block cache deallocation to make shutdown fast (#2683)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,config.cc,cc,1,0,1
d3bca429b22232ef36d4b5983765e9e9aa377d08,wanghenshui@qq.com,2024-12-05 15:57:28+08:00,noreply@github.com,2024-12-05 15:57:28+08:00,"feat: skip block cache deallocation to make shutdown fast (#2683)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,config.h,h,2,0,2
d3bca429b22232ef36d4b5983765e9e9aa377d08,wanghenshui@qq.com,2024-12-05 15:57:28+08:00,noreply@github.com,2024-12-05 15:57:28+08:00,"feat: skip block cache deallocation to make shutdown fast (#2683)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,storage.cc,cc,12,7,19
d3bca429b22232ef36d4b5983765e9e9aa377d08,wanghenshui@qq.com,2024-12-05 15:57:28+08:00,noreply@github.com,2024-12-05 15:57:28+08:00,"feat: skip block cache deallocation to make shutdown fast (#2683)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,storage.h,h,5,0,5
d3bca429b22232ef36d4b5983765e9e9aa377d08,wanghenshui@qq.com,2024-12-05 15:57:28+08:00,noreply@github.com,2024-12-05 15:57:28+08:00,"feat: skip block cache deallocation to make shutdown fast (#2683)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,6,config_test.go,go,21,0,21
698c3d4cedb7321b70bb4b4b2bc0abc9cd8db337,fukua95@gmail.com,2024-12-06 17:06:08+08:00,noreply@github.com,2024-12-06 17:06:08+08:00,feat(config): add the `partition_filters` option to disable the partitioned filters (#2688),unstable,True,False,4,kvrocks.conf,conf,5,0,5
698c3d4cedb7321b70bb4b4b2bc0abc9cd8db337,fukua95@gmail.com,2024-12-06 17:06:08+08:00,noreply@github.com,2024-12-06 17:06:08+08:00,feat(config): add the `partition_filters` option to disable the partitioned filters (#2688),unstable,True,False,4,config.cc,cc,1,0,1
698c3d4cedb7321b70bb4b4b2bc0abc9cd8db337,fukua95@gmail.com,2024-12-06 17:06:08+08:00,noreply@github.com,2024-12-06 17:06:08+08:00,feat(config): add the `partition_filters` option to disable the partitioned filters (#2688),unstable,True,False,4,config.h,h,1,0,1
698c3d4cedb7321b70bb4b4b2bc0abc9cd8db337,fukua95@gmail.com,2024-12-06 17:06:08+08:00,noreply@github.com,2024-12-06 17:06:08+08:00,feat(config): add the `partition_filters` option to disable the partitioned filters (#2688),unstable,True,False,4,storage.cc,cc,1,1,2
6bbdc553b6aaad22a380d614fcd006ec3738e4ce,riversjin1999@gmail.com,2024-12-11 18:52:09+08:00,noreply@github.com,2024-12-11 18:52:09+08:00,refactor(replication): reduce memory copying during incremental synchronization (#2689),unstable,True,False,4,replication.cc,cc,32,24,56
6bbdc553b6aaad22a380d614fcd006ec3738e4ce,riversjin1999@gmail.com,2024-12-11 18:52:09+08:00,noreply@github.com,2024-12-11 18:52:09+08:00,refactor(replication): reduce memory copying during incremental synchronization (#2689),unstable,True,False,4,replication.h,h,2,1,3
6bbdc553b6aaad22a380d614fcd006ec3738e4ce,riversjin1999@gmail.com,2024-12-11 18:52:09+08:00,noreply@github.com,2024-12-11 18:52:09+08:00,refactor(replication): reduce memory copying during incremental synchronization (#2689),unstable,True,False,4,storage.cc,cc,11,5,16
6bbdc553b6aaad22a380d614fcd006ec3738e4ce,riversjin1999@gmail.com,2024-12-11 18:52:09+08:00,noreply@github.com,2024-12-11 18:52:09+08:00,refactor(replication): reduce memory copying during incremental synchronization (#2689),unstable,True,False,4,storage.h,h,4,2,6
7cda4208750f6beaeeccbf243cfe4f803796dd0f,xuxiangad@foxmail.com,2024-12-12 14:39:34+08:00,noreply@github.com,2024-12-12 14:39:34+08:00,test(integration): add integration test for master lost during syncing sst files. (#2691),unstable,True,False,4,go.mod,mod,1,0,1
7cda4208750f6beaeeccbf243cfe4f803796dd0f,xuxiangad@foxmail.com,2024-12-12 14:39:34+08:00,noreply@github.com,2024-12-12 14:39:34+08:00,test(integration): add integration test for master lost during syncing sst files. (#2691),unstable,True,False,4,go.sum,sum,2,4,6
7cda4208750f6beaeeccbf243cfe4f803796dd0f,xuxiangad@foxmail.com,2024-12-12 14:39:34+08:00,noreply@github.com,2024-12-12 14:39:34+08:00,test(integration): add integration test for master lost during syncing sst files. (#2691),unstable,True,False,4,replication_test.go,go,57,0,57
7cda4208750f6beaeeccbf243cfe4f803796dd0f,xuxiangad@foxmail.com,2024-12-12 14:39:34+08:00,noreply@github.com,2024-12-12 14:39:34+08:00,test(integration): add integration test for master lost during syncing sst files. (#2691),unstable,True,False,4,client.go,go,80,0,80
64de844c08d5cd03ea733ea0af64dedc5956f9b9,twice.mliu@gmail.com,2024-12-12 19:38:36+08:00,noreply@github.com,2024-12-12 19:38:36+08:00,"feat(search): add TAGGED as an alternative syntax to HASTAG (#2692)

Signed-off-by: PragmaTwice <twice@apache.org>",unstable,True,False,3,README.md,md,1,0,1
64de844c08d5cd03ea733ea0af64dedc5956f9b9,twice.mliu@gmail.com,2024-12-12 19:38:36+08:00,noreply@github.com,2024-12-12 19:38:36+08:00,"feat(search): add TAGGED as an alternative syntax to HASTAG (#2692)

Signed-off-by: PragmaTwice <twice@apache.org>",unstable,True,False,3,sql_parser.h,h,2,1,3
64de844c08d5cd03ea733ea0af64dedc5956f9b9,twice.mliu@gmail.com,2024-12-12 19:38:36+08:00,noreply@github.com,2024-12-12 19:38:36+08:00,"feat(search): add TAGGED as an alternative syntax to HASTAG (#2692)

Signed-off-by: PragmaTwice <twice@apache.org>",unstable,True,False,3,sql_parser_test.cc,cc,1,0,1
fd2e317b047b5a6233070ff097af2d96e8f616ef,twice.mliu@gmail.com,2024-12-15 13:17:41+08:00,noreply@github.com,2024-12-15 13:17:41+08:00,"chore: add move assign operator for MultiLockGuard (#2693)

Signed-off-by: PragmaTwice <twice@apache.org>",unstable,True,False,1,lock_manager.h,h,9,1,10
a45b2c6e98340b503d6a26be28e262bd2bf1fcc1,aleks.raiden@gmail.com,2024-12-18 04:47:22+02:00,noreply@github.com,2024-12-18 10:47:22+08:00,chore: bump rocksdb to v9.9.3 (#2694),unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
393fac2c931c1ef383cbd3141b7dc00dc46e5a1f,aleks.raiden@gmail.com,2024-12-22 15:59:33+02:00,noreply@github.com,2024-12-22 21:59:33+08:00,chore: bump cpptrace to v0.7.4 (#2696),unstable,True,False,1,cpptrace.cmake,cmake,2,2,4
d38dda871194e37d72252ce380f6f985f02a29e7,aleks.raiden@gmail.com,2024-12-25 04:33:20+02:00,noreply@github.com,2024-12-25 10:33:20+08:00,ci: bump crate-ci/typos action to 1.28.4 (#2697),unstable,True,False,1,kvrocks.yaml,yaml,1,1,2
25888b2682f08f8752f6994945e98c093bba5783,aleks.raiden@gmail.com,2024-12-27 04:11:18+02:00,noreply@github.com,2024-12-27 10:11:18+08:00,chore: bump fmtlib to 11.1.0 (#2698),unstable,True,False,1,fmt.cmake,cmake,2,2,4
1bd35eeb4ee420177c7e7b6cbc1b24485278f829,aleks.raiden@gmail.com,2024-12-28 18:01:52+02:00,noreply@github.com,2024-12-29 00:01:52+08:00,chore: bump fmtlib to v11.1.1 (#2699),unstable,True,False,1,fmt.cmake,cmake,2,2,4
3d6e8aaee701702cf0270eae6d4955c338f0558f,aleks.raiden@gmail.com,2024-12-30 12:14:14+02:00,noreply@github.com,2024-12-30 18:14:14+08:00,chore: bump xxhash to v0.8.3 (#2700),unstable,True,False,1,xxhash.cmake,cmake,2,2,4
20bb15d1a1bb80a76a2756574c4433165e86a950,twice.mliu@gmail.com,2025-01-01 08:55:06+08:00,noreply@github.com,2025-01-01 08:55:06+08:00,"feat(search): trim whitespaces in tag values (#2702)

Signed-off-by: PragmaTwice <twice@apache.org>",unstable,True,False,3,string_util.h,h,8,0,8
20bb15d1a1bb80a76a2756574c4433165e86a950,twice.mliu@gmail.com,2025-01-01 08:55:06+08:00,noreply@github.com,2025-01-01 08:55:06+08:00,"feat(search): trim whitespaces in tag values (#2702)

Signed-off-by: PragmaTwice <twice@apache.org>",unstable,True,False,3,indexer.cc,cc,4,0,4
20bb15d1a1bb80a76a2756574c4433165e86a950,twice.mliu@gmail.com,2025-01-01 08:55:06+08:00,noreply@github.com,2025-01-01 08:55:06+08:00,"feat(search): trim whitespaces in tag values (#2702)

Signed-off-by: PragmaTwice <twice@apache.org>",unstable,True,False,3,indexer_test.cc,cc,3,3,6
ac5b9ac23043cc94261b796682cca219c5c0ab9c,twice.mliu@gmail.com,2025-01-01 10:55:44+08:00,noreply@github.com,2025-01-01 10:55:44+08:00,"build: add concurrent level option for make while ninja is used (#2701)

Signed-off-by: PragmaTwice <twice@apache.org>",unstable,True,False,6,CMakeLists.txt,txt,2,0,2
ac5b9ac23043cc94261b796682cca219c5c0ab9c,twice.mliu@gmail.com,2025-01-01 10:55:44+08:00,noreply@github.com,2025-01-01 10:55:44+08:00,"build: add concurrent level option for make while ninja is used (#2701)

Signed-off-by: PragmaTwice <twice@apache.org>",unstable,True,False,6,jemalloc.cmake,cmake,1,1,2
ac5b9ac23043cc94261b796682cca219c5c0ab9c,twice.mliu@gmail.com,2025-01-01 10:55:44+08:00,noreply@github.com,2025-01-01 10:55:44+08:00,"build: add concurrent level option for make while ninja is used (#2701)

Signed-off-by: PragmaTwice <twice@apache.org>",unstable,True,False,6,lua.cmake,cmake,1,1,2
ac5b9ac23043cc94261b796682cca219c5c0ab9c,twice.mliu@gmail.com,2025-01-01 10:55:44+08:00,noreply@github.com,2025-01-01 10:55:44+08:00,"build: add concurrent level option for make while ninja is used (#2701)

Signed-off-by: PragmaTwice <twice@apache.org>",unstable,True,False,6,luajit.cmake,cmake,1,1,2
ac5b9ac23043cc94261b796682cca219c5c0ab9c,twice.mliu@gmail.com,2025-01-01 10:55:44+08:00,noreply@github.com,2025-01-01 10:55:44+08:00,"build: add concurrent level option for make while ninja is used (#2701)

Signed-off-by: PragmaTwice <twice@apache.org>",unstable,True,False,6,lz4.cmake,cmake,1,1,2
ac5b9ac23043cc94261b796682cca219c5c0ab9c,twice.mliu@gmail.com,2025-01-01 10:55:44+08:00,noreply@github.com,2025-01-01 10:55:44+08:00,"build: add concurrent level option for make while ninja is used (#2701)

Signed-off-by: PragmaTwice <twice@apache.org>",unstable,True,False,6,zstd.cmake,cmake,1,1,2
8dfb50a09276e8403abcc83dd8c0048f54a88759,aleks.raiden@gmail.com,2025-01-02 17:21:20+02:00,noreply@github.com,2025-01-02 23:21:20+08:00,chore: bump jsoncons to v1.0.0 (#2704),unstable,True,False,1,jsoncons.cmake,cmake,2,2,4
1d933455dc1e2e911c48a4cbc1ef2a52bbb4b1b9,aleks.raiden@gmail.com,2025-01-03 04:25:52+02:00,noreply@github.com,2025-01-03 10:25:52+08:00,chore: bump rocksdb to v9.10.0 (#2705),unstable,True,False,1,rocksdb.cmake,cmake,2,2,4
a3ae11bfaa59dbd62df655a8f66e515b849a6526,aleks.raiden@gmail.com,2025-01-03 16:49:52+02:00,noreply@github.com,2025-01-03 22:49:52+08:00,ci: bump golangcilinter to 1.63.3 (#2707),unstable,True,False,6,.golangci.yml,yml,1,1,2
a3ae11bfaa59dbd62df655a8f66e515b849a6526,aleks.raiden@gmail.com,2025-01-03 16:49:52+02:00,noreply@github.com,2025-01-03 22:49:52+08:00,ci: bump golangcilinter to 1.63.3 (#2707),unstable,True,False,6,bitmap_test.go,go,7,7,14
a3ae11bfaa59dbd62df655a8f66e515b849a6526,aleks.raiden@gmail.com,2025-01-03 16:49:52+02:00,noreply@github.com,2025-01-03 22:49:52+08:00,ci: bump golangcilinter to 1.63.3 (#2707),unstable,True,False,6,list_test.go,go,2,2,4
a3ae11bfaa59dbd62df655a8f66e515b849a6526,aleks.raiden@gmail.com,2025-01-03 16:49:52+02:00,noreply@github.com,2025-01-03 22:49:52+08:00,ci: bump golangcilinter to 1.63.3 (#2707),unstable,True,False,6,zset_test.go,go,36,36,72
a3ae11bfaa59dbd62df655a8f66e515b849a6526,aleks.raiden@gmail.com,2025-01-03 16:49:52+02:00,noreply@github.com,2025-01-03 22:49:52+08:00,ci: bump golangcilinter to 1.63.3 (#2707),unstable,True,False,6,random.go,go,12,12,24
a3ae11bfaa59dbd62df655a8f66e515b849a6526,aleks.raiden@gmail.com,2025-01-03 16:49:52+02:00,noreply@github.com,2025-01-03 22:49:52+08:00,ci: bump golangcilinter to 1.63.3 (#2707),unstable,True,False,6,x.py,py,1,1,2
f3c46b4a69e9d729b3a5864ee149fe22eefc5419,aleks.raiden@gmail.com,2025-01-05 14:52:12+02:00,noreply@github.com,2025-01-05 20:52:12+08:00,chore: bump cpptrace to v0.7.5 (#2709),unstable,True,False,1,cpptrace.cmake,cmake,2,2,4
e4302d85d51292fc1b0e1e26b77f6e943a45e92b,aleks.raiden@gmail.com,2025-01-05 16:28:13+02:00,noreply@github.com,2025-01-05 22:28:13+08:00,ci: bump crate-ci/typos to 1.29.4 (#2711),unstable,True,False,1,kvrocks.yaml,yaml,1,1,2
1b583ab5b29f02020efe58ddfb1fb4a57bc7decc,aleks.raiden@gmail.com,2025-01-08 04:14:09+02:00,noreply@github.com,2025-01-08 10:14:09+08:00,"test: update go deps (#2710)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,.golangci.yml,yml,3,0,3
1b583ab5b29f02020efe58ddfb1fb4a57bc7decc,aleks.raiden@gmail.com,2025-01-08 04:14:09+02:00,noreply@github.com,2025-01-08 10:14:09+08:00,"test: update go deps (#2710)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,go.mod,mod,4,4,8
1b583ab5b29f02020efe58ddfb1fb4a57bc7decc,aleks.raiden@gmail.com,2025-01-08 04:14:09+02:00,noreply@github.com,2025-01-08 10:14:09+08:00,"test: update go deps (#2710)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,go.sum,sum,8,10,18
1b583ab5b29f02020efe58ddfb1fb4a57bc7decc,aleks.raiden@gmail.com,2025-01-08 04:14:09+02:00,noreply@github.com,2025-01-08 10:14:09+08:00,"test: update go deps (#2710)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,4,server.go,go,1,1,2
77b8b1f4e471d983cbca399870ac1d160c19e0ea,torwigua@gmail.com,2025-01-08 13:15:54+02:00,noreply@github.com,2025-01-08 19:15:54+08:00,test: get rid of external dependency by implementing generic Min/Max functions (#2713),unstable,True,False,6,kvrocks.yaml,yaml,3,4,7
77b8b1f4e471d983cbca399870ac1d160c19e0ea,torwigua@gmail.com,2025-01-08 13:15:54+02:00,noreply@github.com,2025-01-08 19:15:54+08:00,test: get rid of external dependency by implementing generic Min/Max functions (#2713),unstable,True,False,6,go.mod,mod,0,2,2
77b8b1f4e471d983cbca399870ac1d160c19e0ea,torwigua@gmail.com,2025-01-08 13:15:54+02:00,noreply@github.com,2025-01-08 19:15:54+08:00,test: get rid of external dependency by implementing generic Min/Max functions (#2713),unstable,True,False,6,go.sum,sum,0,4,4
77b8b1f4e471d983cbca399870ac1d160c19e0ea,torwigua@gmail.com,2025-01-08 13:15:54+02:00,noreply@github.com,2025-01-08 19:15:54+08:00,test: get rid of external dependency by implementing generic Min/Max functions (#2713),unstable,True,False,6,list_test.go,go,1,2,3
77b8b1f4e471d983cbca399870ac1d160c19e0ea,torwigua@gmail.com,2025-01-08 13:15:54+02:00,noreply@github.com,2025-01-08 19:15:54+08:00,test: get rid of external dependency by implementing generic Min/Max functions (#2713),unstable,True,False,6,math.go,go,38,0,38
77b8b1f4e471d983cbca399870ac1d160c19e0ea,torwigua@gmail.com,2025-01-08 13:15:54+02:00,noreply@github.com,2025-01-08 19:15:54+08:00,test: get rid of external dependency by implementing generic Min/Max functions (#2713),unstable,True,False,6,math_test.go,go,105,0,105
a21df1968fd36340e8649c3e3495abb07db8228a,riversjin1999@gmail.com,2025-01-09 10:18:18+08:00,noreply@github.com,2025-01-09 10:18:18+08:00,"fix(cluster): should stop the migration if it's changed to the slave role (#2716)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,cluster.cc,cc,20,3,23
5c4a116d2d0bb0ba88893f6f5f6cf8fb714377e2,fukua95@gmail.com,2025-01-10 18:46:07+08:00,noreply@github.com,2025-01-10 18:46:07+08:00,chore(tests): use built-in min and max (#2718),unstable,True,False,3,list_test.go,go,1,1,2
d7bfa67a5f932052a38517b0cc98592f0c1c0a53,aleks.raiden@gmail.com,2025-01-13 14:27:34+02:00,noreply@github.com,2025-01-13 20:27:34+08:00,chore: bump fmtlib to 11.1.2 (#2720),unstable,True,False,1,fmt.cmake,cmake,2,2,4
1121533b00a1d31bde67e4c3c1a05ba3a664f18d,aleks.raiden@gmail.com,2025-01-17 09:09:45+02:00,noreply@github.com,2025-01-17 15:09:45+08:00,"chore: bump jsoncons to v1.1.0 (#2719)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,jsoncons.cmake,cmake,2,2,4
2afb56cfdb6ca7ef205d1c6f7635d444926bb5b4,twice.mliu@gmail.com,2025-01-18 21:47:13+08:00,noreply@github.com,2025-01-18 21:47:13+08:00,"ci: add arm64 linux pipeline (#2590)

Co-authored-by: Aleks Lozovyuk <aleks.raiden@gmail.com>",unstable,True,False,1,kvrocks.yaml,yaml,10,1,11
571b02253b9eff79ff94a7bc9235b84ca183ecd2,riversjin1999@gmail.com,2025-01-19 11:40:46+08:00,noreply@github.com,2025-01-19 11:40:46+08:00,"perf(cluster): add upper bound for scan during migration (#2724)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,slot_migrate.cc,cc,9,1,10
571b02253b9eff79ff94a7bc9235b84ca183ecd2,riversjin1999@gmail.com,2025-01-19 11:40:46+08:00,noreply@github.com,2025-01-19 11:40:46+08:00,"perf(cluster): add upper bound for scan during migration (#2724)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,slot_migrate.h,h,0,5,5
571b02253b9eff79ff94a7bc9235b84ca183ecd2,riversjin1999@gmail.com,2025-01-19 11:40:46+08:00,noreply@github.com,2025-01-19 11:40:46+08:00,"perf(cluster): add upper bound for scan during migration (#2724)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,config.cc,cc,2,3,5
571b02253b9eff79ff94a7bc9235b84ca183ecd2,riversjin1999@gmail.com,2025-01-19 11:40:46+08:00,noreply@github.com,2025-01-19 11:40:46+08:00,"perf(cluster): add upper bound for scan during migration (#2724)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,redis_metadata.cc,cc,2,0,2
571b02253b9eff79ff94a7bc9235b84ca183ecd2,riversjin1999@gmail.com,2025-01-19 11:40:46+08:00,noreply@github.com,2025-01-19 11:40:46+08:00,"perf(cluster): add upper bound for scan during migration (#2724)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,5,redis_metadata.h,h,1,0,1
ad5dde963da3b9a0e48e654dda6fb689f816bb89,54301319+rabunkosar-dd@users.noreply.github.com,2025-01-21 18:41:07-08:00,noreply@github.com,2025-01-22 10:41:07+08:00,"feat: support histograms for command latency statistics (#2721)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,kvrocks.conf,conf,19,7,26
ad5dde963da3b9a0e48e654dda6fb689f816bb89,54301319+rabunkosar-dd@users.noreply.github.com,2025-01-21 18:41:07-08:00,noreply@github.com,2025-01-22 10:41:07+08:00,"feat: support histograms for command latency statistics (#2721)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,config.cc,cc,20,0,20
ad5dde963da3b9a0e48e654dda6fb689f816bb89,54301319+rabunkosar-dd@users.noreply.github.com,2025-01-21 18:41:07-08:00,noreply@github.com,2025-01-22 10:41:07+08:00,"feat: support histograms for command latency statistics (#2721)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,config.h,h,3,0,3
ad5dde963da3b9a0e48e654dda6fb689f816bb89,54301319+rabunkosar-dd@users.noreply.github.com,2025-01-21 18:41:07-08:00,noreply@github.com,2025-01-22 10:41:07+08:00,"feat: support histograms for command latency statistics (#2721)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,server.cc,cc,31,1,32
ad5dde963da3b9a0e48e654dda6fb689f816bb89,54301319+rabunkosar-dd@users.noreply.github.com,2025-01-21 18:41:07-08:00,noreply@github.com,2025-01-22 10:41:07+08:00,"feat: support histograms for command latency statistics (#2721)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,stats.cc,cc,13,1,14
ad5dde963da3b9a0e48e654dda6fb689f816bb89,54301319+rabunkosar-dd@users.noreply.github.com,2025-01-21 18:41:07-08:00,noreply@github.com,2025-01-22 10:41:07+08:00,"feat: support histograms for command latency statistics (#2721)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,stats.h,h,15,1,16
ad5dde963da3b9a0e48e654dda6fb689f816bb89,54301319+rabunkosar-dd@users.noreply.github.com,2025-01-21 18:41:07-08:00,noreply@github.com,2025-01-22 10:41:07+08:00,"feat: support histograms for command latency statistics (#2721)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,config_test.cc,cc,2,0,2
ad5dde963da3b9a0e48e654dda6fb689f816bb89,54301319+rabunkosar-dd@users.noreply.github.com,2025-01-21 18:41:07-08:00,noreply@github.com,2025-01-22 10:41:07+08:00,"feat: support histograms for command latency statistics (#2721)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,8,info_test.go,go,20,3,23
c1009a98f1dd640cffd3e96a11690589ab593535,twice.mliu@gmail.com,2025-01-25 10:01:18+08:00,noreply@github.com,2025-01-25 10:01:18+08:00,"feat(script, function): remove global lock for EVAL, EVALSHA and FCALL (#2731)",unstable,True,False,9,cmd_function.cc,cc,3,3,6
c1009a98f1dd640cffd3e96a11690589ab593535,twice.mliu@gmail.com,2025-01-25 10:01:18+08:00,noreply@github.com,2025-01-25 10:01:18+08:00,"feat(script, function): remove global lock for EVAL, EVALSHA and FCALL (#2731)",unstable,True,False,9,cmd_script.cc,cc,3,4,7
c1009a98f1dd640cffd3e96a11690589ab593535,twice.mliu@gmail.com,2025-01-25 10:01:18+08:00,noreply@github.com,2025-01-25 10:01:18+08:00,"feat(script, function): remove global lock for EVAL, EVALSHA and FCALL (#2731)",unstable,True,False,9,server.cc,cc,8,11,19
c1009a98f1dd640cffd3e96a11690589ab593535,twice.mliu@gmail.com,2025-01-25 10:01:18+08:00,noreply@github.com,2025-01-25 10:01:18+08:00,"feat(script, function): remove global lock for EVAL, EVALSHA and FCALL (#2731)",unstable,True,False,9,server.h,h,1,4,5
c1009a98f1dd640cffd3e96a11690589ab593535,twice.mliu@gmail.com,2025-01-25 10:01:18+08:00,noreply@github.com,2025-01-25 10:01:18+08:00,"feat(script, function): remove global lock for EVAL, EVALSHA and FCALL (#2731)",unstable,True,False,9,worker.cc,cc,7,0,7
c1009a98f1dd640cffd3e96a11690589ab593535,twice.mliu@gmail.com,2025-01-25 10:01:18+08:00,noreply@github.com,2025-01-25 10:01:18+08:00,"feat(script, function): remove global lock for EVAL, EVALSHA and FCALL (#2731)",unstable,True,False,9,worker.h,h,4,1,5
c1009a98f1dd640cffd3e96a11690589ab593535,twice.mliu@gmail.com,2025-01-25 10:01:18+08:00,noreply@github.com,2025-01-25 10:01:18+08:00,"feat(script, function): remove global lock for EVAL, EVALSHA and FCALL (#2731)",unstable,True,False,9,scripting.cc,cc,10,10,20
c1009a98f1dd640cffd3e96a11690589ab593535,twice.mliu@gmail.com,2025-01-25 10:01:18+08:00,noreply@github.com,2025-01-25 10:01:18+08:00,"feat(script, function): remove global lock for EVAL, EVALSHA and FCALL (#2731)",unstable,True,False,9,scripting.h,h,2,2,4
c1009a98f1dd640cffd3e96a11690589ab593535,twice.mliu@gmail.com,2025-01-25 10:01:18+08:00,noreply@github.com,2025-01-25 10:01:18+08:00,"feat(script, function): remove global lock for EVAL, EVALSHA and FCALL (#2731)",unstable,True,False,9,scripting_test.go,go,4,2,6
9ab1a043bbbb45dfb4213d16a2ab6e64a3c8a15b,twice.mliu@gmail.com,2025-01-25 12:03:27+08:00,noreply@github.com,2025-01-25 12:03:27+08:00,feat(main): refine shutdown message to show signal name (#2733),unstable,True,False,1,main.cc,cc,2,2,4
98857f2550bfc1e2450b4341f09f9805b6350eed,twice.mliu@gmail.com,2025-01-25 14:03:44+08:00,noreply@github.com,2025-01-25 14:03:44+08:00,fix(script): disable exclusive commands to be executed in scripting (#2732),unstable,True,False,5,cmd_function.cc,cc,1,1,2
98857f2550bfc1e2450b4341f09f9805b6350eed,twice.mliu@gmail.com,2025-01-25 14:03:44+08:00,noreply@github.com,2025-01-25 14:03:44+08:00,fix(script): disable exclusive commands to be executed in scripting (#2732),unstable,True,False,5,cmd_script.cc,cc,2,2,4
98857f2550bfc1e2450b4341f09f9805b6350eed,twice.mliu@gmail.com,2025-01-25 14:03:44+08:00,noreply@github.com,2025-01-25 14:03:44+08:00,fix(script): disable exclusive commands to be executed in scripting (#2732),unstable,True,False,5,cmd_server.cc,cc,9,1,10
98857f2550bfc1e2450b4341f09f9805b6350eed,twice.mliu@gmail.com,2025-01-25 14:03:44+08:00,noreply@github.com,2025-01-25 14:03:44+08:00,fix(script): disable exclusive commands to be executed in scripting (#2732),unstable,True,False,5,commander.h,h,2,6,8
98857f2550bfc1e2450b4341f09f9805b6350eed,twice.mliu@gmail.com,2025-01-25 14:03:44+08:00,noreply@github.com,2025-01-25 14:03:44+08:00,fix(script): disable exclusive commands to be executed in scripting (#2732),unstable,True,False,5,scripting.cc,cc,7,1,8
93f6603a5cceca622c84ce8e68159f65a3711c8e,twice.mliu@gmail.com,2025-01-25 18:19:51+08:00,noreply@github.com,2025-01-25 18:19:51+08:00,chore(dockerfile): switch compiler to clang (#2737),unstable,True,False,1,Dockerfile,None,3,3,6
953de0e961bb54239287546a8d251c5d82cb0120,hulk.website@gmail.com,2025-01-25 22:24:30+08:00,noreply@github.com,2025-01-25 22:24:30+08:00,chore(server): check the arity should happen before the flag generate (#2736),unstable,True,False,4,redis_connection.cc,cc,8,8,16
953de0e961bb54239287546a8d251c5d82cb0120,hulk.website@gmail.com,2025-01-25 22:24:30+08:00,noreply@github.com,2025-01-25 22:24:30+08:00,chore(server): check the arity should happen before the flag generate (#2736),unstable,True,False,4,scripting.cc,cc,5,5,10
953de0e961bb54239287546a8d251c5d82cb0120,hulk.website@gmail.com,2025-01-25 22:24:30+08:00,noreply@github.com,2025-01-25 22:24:30+08:00,chore(server): check the arity should happen before the flag generate (#2736),unstable,True,False,4,function_test.go,go,1,1,2
953de0e961bb54239287546a8d251c5d82cb0120,hulk.website@gmail.com,2025-01-25 22:24:30+08:00,noreply@github.com,2025-01-25 22:24:30+08:00,chore(server): check the arity should happen before the flag generate (#2736),unstable,True,False,4,scripting_test.go,go,2,2,4
145a011939dfc6430e7c6f9f2d9f3299e03bffaf,twice.mliu@gmail.com,2025-01-26 14:27:59+08:00,noreply@github.com,2025-01-26 14:27:59+08:00,chore(cmake): add c to language list of `project()` (#2738),unstable,True,False,2,kvrocks.yaml,yaml,4,2,6
145a011939dfc6430e7c6f9f2d9f3299e03bffaf,twice.mliu@gmail.com,2025-01-26 14:27:59+08:00,noreply@github.com,2025-01-26 14:27:59+08:00,chore(cmake): add c to language list of `project()` (#2738),unstable,True,False,2,CMakeLists.txt,txt,1,1,2
744070b04fc6fac93a0e7c42d9633620eab423b6,twice.mliu@gmail.com,2025-01-26 14:51:08+08:00,noreply@github.com,2025-01-26 14:51:08+08:00,chore(.asf.yaml): make 2.11 a protected branch (#2742),unstable,True,False,1,.asf.yaml,yaml,1,0,1
30698433d64e9c39904ebc5b7acf70c2a222eb4a,aleks.raiden@gmail.com,2025-01-27 04:50:59+02:00,noreply@github.com,2025-01-27 10:50:59+08:00,chore: bump fmtlib to 11.1.3 (#2744),unstable,True,False,1,fmt.cmake,cmake,2,2,4
9307eef4b1cadf440641ddb64cf9850c33d04938,twice.mliu@gmail.com,2025-01-27 17:12:30+08:00,noreply@github.com,2025-01-27 17:12:30+08:00,"chore(x.py): fix several typing issue in x.py (#2739)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,x.py,py,19,6,25
7cb0d654ec687625bd922890292b3d98a287a50f,twice.mliu@gmail.com,2025-01-27 20:31:40+08:00,noreply@github.com,2025-01-27 20:31:40+08:00,chore: update copyright year in NOTICE (#2748),unstable,True,False,1,NOTICE,None,1,1,2
c22f5e14f67665e1d2a95a923fd44d37aee0eaf1,hulk.website@gmail.com,2025-01-27 22:25:53+08:00,noreply@github.com,2025-01-27 22:25:53+08:00,"feat(command): add support of RESP output format for the POLLUPDATES command (#2745)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,cmd_server.cc,cc,52,7,59
c22f5e14f67665e1d2a95a923fd44d37aee0eaf1,hulk.website@gmail.com,2025-01-27 22:25:53+08:00,noreply@github.com,2025-01-27 22:25:53+08:00,"feat(command): add support of RESP output format for the POLLUPDATES command (#2745)

Co-authored-by: Twice <twice@apache.org>
Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,poll_updates_test.go,go,195,14,209
3b8ef09bfe1fe4bea2d13336ca2be6807ea60abf,twice.mliu@gmail.com,2025-01-28 09:11:16+08:00,noreply@github.com,2025-01-28 09:11:16+08:00,chore(command): add admin flag for permission-required commands (#2747),unstable,True,False,5,cmd_cluster.cc,cc,3,10,13
3b8ef09bfe1fe4bea2d13336ca2be6807ea60abf,twice.mliu@gmail.com,2025-01-28 09:11:16+08:00,noreply@github.com,2025-01-28 09:11:16+08:00,chore(command): add admin flag for permission-required commands (#2747),unstable,True,False,5,cmd_server.cc,cc,19,51,70
3b8ef09bfe1fe4bea2d13336ca2be6807ea60abf,twice.mliu@gmail.com,2025-01-28 09:11:16+08:00,noreply@github.com,2025-01-28 09:11:16+08:00,chore(command): add admin flag for permission-required commands (#2747),unstable,True,False,5,commander.h,h,13,9,22
3b8ef09bfe1fe4bea2d13336ca2be6807ea60abf,twice.mliu@gmail.com,2025-01-28 09:11:16+08:00,noreply@github.com,2025-01-28 09:11:16+08:00,chore(command): add admin flag for permission-required commands (#2747),unstable,True,False,5,redis_connection.cc,cc,5,0,5
3b8ef09bfe1fe4bea2d13336ca2be6807ea60abf,twice.mliu@gmail.com,2025-01-28 09:11:16+08:00,noreply@github.com,2025-01-28 09:11:16+08:00,chore(command): add admin flag for permission-required commands (#2747),unstable,True,False,5,scripting.cc,cc,5,0,5
81691c20dcfbdc887cc52c54f97f93cd4e5aea7c,twice.mliu@gmail.com,2025-01-28 14:56:30+08:00,noreply@github.com,2025-01-28 14:56:30+08:00,feat(script): allow blocking commands in scripting (#2740),unstable,True,False,5,blocking_commander.h,h,1,1,2
81691c20dcfbdc887cc52c54f97f93cd4e5aea7c,twice.mliu@gmail.com,2025-01-28 14:56:30+08:00,noreply@github.com,2025-01-28 14:56:30+08:00,feat(script): allow blocking commands in scripting (#2740),unstable,True,False,5,redis_connection.cc,cc,6,0,6
81691c20dcfbdc887cc52c54f97f93cd4e5aea7c,twice.mliu@gmail.com,2025-01-28 14:56:30+08:00,noreply@github.com,2025-01-28 14:56:30+08:00,feat(script): allow blocking commands in scripting (#2740),unstable,True,False,5,redis_connection.h,h,2,0,2
81691c20dcfbdc887cc52c54f97f93cd4e5aea7c,twice.mliu@gmail.com,2025-01-28 14:56:30+08:00,noreply@github.com,2025-01-28 14:56:30+08:00,feat(script): allow blocking commands in scripting (#2740),unstable,True,False,5,scripting.cc,cc,1,7,8
81691c20dcfbdc887cc52c54f97f93cd4e5aea7c,twice.mliu@gmail.com,2025-01-28 14:56:30+08:00,noreply@github.com,2025-01-28 14:56:30+08:00,feat(script): allow blocking commands in scripting (#2740),unstable,True,False,5,scripting_test.go,go,7,1,8
b5b55bfab07f1aad718bc0d5a99ce1b2482b51b2,twice.mliu@gmail.com,2025-01-28 19:03:53+08:00,noreply@github.com,2025-01-28 19:03:53+08:00,ci: add arm64 job for check-docker (#2749),unstable,True,False,1,kvrocks.yaml,yaml,4,1,5
06fa457a7a5afd19bc03a168b3a88e232a153aca,twice.mliu@gmail.com,2025-01-29 10:56:30+08:00,noreply@github.com,2025-01-29 10:56:30+08:00,ci: refactor nightly image workflow and utilize arm64 runners (#2751),unstable,True,False,1,nightly.yaml,yaml,78,22,100
88f1f3ea1d7658ea4d6168f4f627ce40afe1aec7,hulk.website@gmail.com,2025-01-29 15:11:27+08:00,noreply@github.com,2025-01-29 15:11:27+08:00,"chore(config): enable the RESP3 potocol by default (#2746)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,kvrocks.conf,conf,2,3,5
88f1f3ea1d7658ea4d6168f4f627ce40afe1aec7,hulk.website@gmail.com,2025-01-29 15:11:27+08:00,noreply@github.com,2025-01-29 15:11:27+08:00,"chore(config): enable the RESP3 potocol by default (#2746)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,config.cc,cc,1,1,2
88f1f3ea1d7658ea4d6168f4f627ce40afe1aec7,hulk.website@gmail.com,2025-01-29 15:11:27+08:00,noreply@github.com,2025-01-29 15:11:27+08:00,"chore(config): enable the RESP3 potocol by default (#2746)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,config_test.go,go,7,11,18
88f1f3ea1d7658ea4d6168f4f627ce40afe1aec7,hulk.website@gmail.com,2025-01-29 15:11:27+08:00,noreply@github.com,2025-01-29 15:11:27+08:00,"chore(config): enable the RESP3 potocol by default (#2746)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,hello_test.go,go,1,1,2
88f1f3ea1d7658ea4d6168f4f627ce40afe1aec7,hulk.website@gmail.com,2025-01-29 15:11:27+08:00,noreply@github.com,2025-01-29 15:11:27+08:00,"chore(config): enable the RESP3 potocol by default (#2746)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,scripting_test.go,go,1,1,2
88f1f3ea1d7658ea4d6168f4f627ce40afe1aec7,hulk.website@gmail.com,2025-01-29 15:11:27+08:00,noreply@github.com,2025-01-29 15:11:27+08:00,"chore(config): enable the RESP3 potocol by default (#2746)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,search_test.go,go,2,2,4
88f1f3ea1d7658ea4d6168f4f627ce40afe1aec7,hulk.website@gmail.com,2025-01-29 15:11:27+08:00,noreply@github.com,2025-01-29 15:11:27+08:00,"chore(config): enable the RESP3 potocol by default (#2746)

Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,poll_updates_test.go,go,29,28,57
f7c5688fe4030f148195e7043208ae659df48ea7,51684360+ltagliamonte-dd@users.noreply.github.com,2025-01-30 05:11:49+01:00,noreply@github.com,2025-01-30 12:11:49+08:00,feat(hash): add the support of HSETEXPIRE command (HSET + EXPIRE) (#2750),unstable,True,False,4,cmd_hash.cc,cc,32,0,32
f7c5688fe4030f148195e7043208ae659df48ea7,51684360+ltagliamonte-dd@users.noreply.github.com,2025-01-30 05:11:49+01:00,noreply@github.com,2025-01-30 12:11:49+08:00,feat(hash): add the support of HSETEXPIRE command (HSET + EXPIRE) (#2750),unstable,True,False,4,redis_hash.cc,cc,7,3,10
f7c5688fe4030f148195e7043208ae659df48ea7,51684360+ltagliamonte-dd@users.noreply.github.com,2025-01-30 05:11:49+01:00,noreply@github.com,2025-01-30 12:11:49+08:00,feat(hash): add the support of HSETEXPIRE command (HSET + EXPIRE) (#2750),unstable,True,False,4,redis_hash.h,h,1,1,2
f7c5688fe4030f148195e7043208ae659df48ea7,51684360+ltagliamonte-dd@users.noreply.github.com,2025-01-30 05:11:49+01:00,noreply@github.com,2025-01-30 12:11:49+08:00,feat(hash): add the support of HSETEXPIRE command (HSET + EXPIRE) (#2750),unstable,True,False,4,hash_test.go,go,133,1,134
fe5d7f37aa97011464102f2cbb42a05637238623,twice.mliu@gmail.com,2025-01-30 14:09:19+08:00,noreply@github.com,2025-01-30 14:09:19+08:00,chore: replace DCHECK_NOTNULL to suppress warnings (#2753),unstable,True,False,2,batch_indexer.h,h,3,3,6
fe5d7f37aa97011464102f2cbb42a05637238623,twice.mliu@gmail.com,2025-01-30 14:09:19+08:00,noreply@github.com,2025-01-30 14:09:19+08:00,chore: replace DCHECK_NOTNULL to suppress warnings (#2753),unstable,True,False,2,storage.cc,cc,4,4,8
1308d8a305c0cc3dc6b8297cb37f57157a3e9226,hulk.website@gmail.com,2025-01-31 16:53:55+08:00,noreply@github.com,2025-01-31 16:53:55+08:00,fix(tests): flaky test case in BLMPOP command (#2754),unstable,True,False,1,list_test.go,go,6,5,11
320cdba5ccd6bf62664699454ccd4d8bea1c6cab,aleks.raiden@gmail.com,2025-01-31 14:39:08+02:00,noreply@github.com,2025-01-31 20:39:08+08:00,chore(ci): bump crate-ci/typos to 1.29.5 (#2755),unstable,True,False,1,kvrocks.yaml,yaml,1,1,2
b87827533396557bc84ee348e2b29674d02ddf64,twice.mliu@gmail.com,2025-02-01 17:17:48+08:00,noreply@github.com,2025-02-01 17:17:48+08:00,fix(tls): remove SSL_sendfile path to avoid errors in replication fullsync (#2757),unstable,True,False,2,cmd_replication.cc,cc,8,5,13
b87827533396557bc84ee348e2b29674d02ddf64,twice.mliu@gmail.com,2025-02-01 17:17:48+08:00,noreply@github.com,2025-02-01 17:17:48+08:00,fix(tls): remove SSL_sendfile path to avoid errors in replication fullsync (#2757),unstable,True,False,2,io_util.cc,cc,1,4,5
c76a4d3bb1a7018a70e7c251b2195c0d09d78fca,126235344+err931@users.noreply.github.com,2025-02-02 00:16:48+09:00,noreply@github.com,2025-02-01 23:16:48+08:00,"build: remove glibc-specific dependencies (#2759)

Signed-off-by: Minoru Maekawa <126235344+err931@users.noreply.github.com>",unstable,True,False,2,CMakeLists.txt,txt,0,2,2
c76a4d3bb1a7018a70e7c251b2195c0d09d78fca,126235344+err931@users.noreply.github.com,2025-02-02 00:16:48+09:00,noreply@github.com,2025-02-01 23:16:48+08:00,"build: remove glibc-specific dependencies (#2759)

Signed-off-by: Minoru Maekawa <126235344+err931@users.noreply.github.com>",unstable,True,False,2,signal_util.h,h,0,1,1
a81fd2f6b96428e92c21b4e2804db111da3d27d7,twice.mliu@gmail.com,2025-02-02 13:42:59+08:00,noreply@github.com,2025-02-02 13:42:59+08:00,ci: add an alpine-based build & test workflow (#2760),unstable,True,False,2,kvrocks.yaml,yaml,13,2,15
a81fd2f6b96428e92c21b4e2804db111da3d27d7,twice.mliu@gmail.com,2025-02-02 13:42:59+08:00,noreply@github.com,2025-02-02 13:42:59+08:00,ci: add an alpine-based build & test workflow (#2760),unstable,True,False,2,redis_metadata.h,h,1,0,1
b8b969d80b9183106284049ff5338d0156ee5686,aleks.raiden@gmail.com,2025-02-02 17:33:57+02:00,noreply@github.com,2025-02-02 23:33:57+08:00,chore(test): update godeps (#2762),unstable,True,False,2,go.mod,mod,3,3,6
b8b969d80b9183106284049ff5338d0156ee5686,aleks.raiden@gmail.com,2025-02-02 17:33:57+02:00,noreply@github.com,2025-02-02 23:33:57+08:00,chore(test): update godeps (#2762),unstable,True,False,2,go.sum,sum,6,0,6
211ecfc89a9f44e22cc267e272effbe5ac35a2e5,twice.mliu@gmail.com,2025-02-04 11:37:29+08:00,noreply@github.com,2025-02-04 11:37:29+08:00,"fix(conn): detect and drop HTTP requests in connection (#2765)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,redis_connection.cc,cc,8,1,9
211ecfc89a9f44e22cc267e272effbe5ac35a2e5,twice.mliu@gmail.com,2025-02-04 11:37:29+08:00,noreply@github.com,2025-02-04 11:37:29+08:00,"fix(conn): detect and drop HTTP requests in connection (#2765)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,2,connection_test.go,go,46,0,46
668a8bee5189b13fbd0c14f3d9ff31f7433f44aa,twice.mliu@gmail.com,2025-02-04 17:31:45+08:00,noreply@github.com,2025-02-04 17:31:45+08:00,ci: release nightly images for version tags (#2769),unstable,True,False,1,nightly.yaml,yaml,20,2,22
1cf37091d38cfb79c85cd5e0d8fbfc131103b2c2,lanqingy@usc.edu,2025-02-04 04:00:43-08:00,noreply@github.com,2025-02-04 20:00:43+08:00,"ci: isolate geoadd and georange test and run it in parallel (#2768)

Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,geo_test.go,go,141,120,261
5e9d61da41e1c73960eb5054db48b2c9a9d61568,twice.mliu@gmail.com,2025-02-06 22:36:04+08:00,noreply@github.com,2025-02-06 22:36:04+08:00,feat(info): support to specify multiple sections for INFO (#2772),unstable,True,False,4,cmd_server.cc,cc,4,6,10
5e9d61da41e1c73960eb5054db48b2c9a9d61568,twice.mliu@gmail.com,2025-02-06 22:36:04+08:00,noreply@github.com,2025-02-06 22:36:04+08:00,feat(info): support to specify multiple sections for INFO (#2772),unstable,True,False,4,server.cc,cc,102,119,221
5e9d61da41e1c73960eb5054db48b2c9a9d61568,twice.mliu@gmail.com,2025-02-06 22:36:04+08:00,noreply@github.com,2025-02-06 22:36:04+08:00,feat(info): support to specify multiple sections for INFO (#2772),unstable,True,False,4,server.h,h,4,1,5
5e9d61da41e1c73960eb5054db48b2c9a9d61568,twice.mliu@gmail.com,2025-02-06 22:36:04+08:00,noreply@github.com,2025-02-06 22:36:04+08:00,feat(info): support to specify multiple sections for INFO (#2772),unstable,True,False,4,info_test.go,go,7,0,7
80f64d8fdccf51d7a2ee887c7468aae2de54e028,twice.mliu@gmail.com,2025-02-07 09:47:28+08:00,noreply@github.com,2025-02-07 09:47:28+08:00,chore(server): improve code style of `Server::Get..Info()` (#2774),unstable,True,False,3,cmd_server.cc,cc,1,2,3
80f64d8fdccf51d7a2ee887c7468aae2de54e028,twice.mliu@gmail.com,2025-02-07 09:47:28+08:00,noreply@github.com,2025-02-07 09:47:28+08:00,chore(server): improve code style of `Server::Get..Info()` (#2774),unstable,True,False,3,server.cc,cc,36,45,81
80f64d8fdccf51d7a2ee887c7468aae2de54e028,twice.mliu@gmail.com,2025-02-07 09:47:28+08:00,noreply@github.com,2025-02-07 09:47:28+08:00,chore(server): improve code style of `Server::Get..Info()` (#2774),unstable,True,False,3,server.h,h,12,12,24
cb1852e79265273a0fffe9ebfab9b23776bae8d5,aleks.raiden@gmail.com,2025-02-08 02:49:54+02:00,noreply@github.com,2025-02-08 08:49:54+08:00,chore: bump googletest to 1.16.0 (#2776),unstable,True,False,1,gtest.cmake,cmake,2,2,4
e3d068fbc08b04a68785e9e62186a808089b0464,hulk.website@gmail.com,2025-02-08 11:05:50+08:00,noreply@github.com,2025-02-08 11:05:50+08:00,feat(info): move the last scan time as field to the info keyspace section (#2775),unstable,True,False,2,server.cc,cc,2,10,12
e3d068fbc08b04a68785e9e62186a808089b0464,hulk.website@gmail.com,2025-02-08 11:05:50+08:00,noreply@github.com,2025-02-08 11:05:50+08:00,feat(info): move the last scan time as field to the info keyspace section (#2775),unstable,True,False,2,info_test.go,go,8,0,8
06f99595f2f4cce50a3c67610c591a0dca8f76d2,twice.mliu@gmail.com,2025-02-09 00:45:30+08:00,noreply@github.com,2025-02-09 00:45:30+08:00,ci: keep git history while building nightly images (#2779),unstable,True,False,1,nightly.yaml,yaml,4,0,4
5055f570a3d2653f884a71afe4a2d0115a8dd903,twice.mliu@gmail.com,2025-02-09 10:54:39+08:00,noreply@github.com,2025-02-09 10:54:39+08:00,chore(server): return InfoEntries instead of string in Get..Info() (#2778),unstable,True,False,4,cmd_server.cc,cc,2,2,4
5055f570a3d2653f884a71afe4a2d0115a8dd903,twice.mliu@gmail.com,2025-02-09 10:54:39+08:00,noreply@github.com,2025-02-09 10:54:39+08:00,chore(server): return InfoEntries instead of string in Get..Info() (#2778),unstable,True,False,4,string_util.h,h,5,0,5
5055f570a3d2653f884a71afe4a2d0115a8dd903,twice.mliu@gmail.com,2025-02-09 10:54:39+08:00,noreply@github.com,2025-02-09 10:54:39+08:00,chore(server): return InfoEntries instead of string in Get..Info() (#2778),unstable,True,False,4,server.cc,cc,186,196,382
5055f570a3d2653f884a71afe4a2d0115a8dd903,twice.mliu@gmail.com,2025-02-09 10:54:39+08:00,noreply@github.com,2025-02-09 10:54:39+08:00,chore(server): return InfoEntries instead of string in Get..Info() (#2778),unstable,True,False,4,server.h,h,27,12,39
3da17b375518201ddfc21f43046a75769971706f,twice.mliu@gmail.com,2025-02-09 16:48:50+08:00,noreply@github.com,2025-02-09 16:48:50+08:00,ci: fix build-push-action by supplying context argument (#2780),unstable,True,False,1,nightly.yaml,yaml,1,0,1
e07972b4a9859949b2d98395c13e8d5c0ac903c6,twice.mliu@gmail.com,2025-02-09 18:36:51+08:00,noreply@github.com,2025-02-09 18:36:51+08:00,"feat(server): add rocksdb_version, server_time_usec, executable and config_file to INFO (#2781)",unstable,True,False,2,config.h,h,1,0,1
e07972b4a9859949b2d98395c13e8d5c0ac903c6,twice.mliu@gmail.com,2025-02-09 18:36:51+08:00,noreply@github.com,2025-02-09 18:36:51+08:00,"feat(server): add rocksdb_version, server_time_usec, executable and config_file to INFO (#2781)",unstable,True,False,2,server.cc,cc,13,2,15
97374dd4b4d72384dd8b606694e4c6abd7c71979,aleks.raiden@gmail.com,2025-02-09 14:30:01+02:00,noreply@github.com,2025-02-09 20:30:01+08:00,"chore: bump jsoncons to v1.2.0 (#2782)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,jsoncons.cmake,cmake,2,2,4
047490ee93122bee279e51305bb856ae74fba60a,hulk.website@gmail.com,2025-02-10 23:38:37+08:00,noreply@github.com,2025-02-10 23:38:37+08:00,fix(string): the server will be crashed when passing a negative offset in SETRANGE command (#2783),unstable,True,False,2,cmd_string.cc,cc,6,1,7
047490ee93122bee279e51305bb856ae74fba60a,hulk.website@gmail.com,2025-02-10 23:38:37+08:00,noreply@github.com,2025-02-10 23:38:37+08:00,fix(string): the server will be crashed when passing a negative offset in SETRANGE command (#2783),unstable,True,False,2,strings_test.go,go,17,0,17
ceae0595d3e7ed3bff78706e971d6aeddb8d154e,aleks.raiden@gmail.com,2025-02-12 04:05:10+02:00,noreply@github.com,2025-02-12 10:05:10+08:00,chore(test): update godeps (#2785),unstable,True,False,2,go.mod,mod,3,3,6
ceae0595d3e7ed3bff78706e971d6aeddb8d154e,aleks.raiden@gmail.com,2025-02-12 04:05:10+02:00,noreply@github.com,2025-02-12 10:05:10+08:00,chore(test): update godeps (#2785),unstable,True,False,2,go.sum,sum,6,12,18
54c5862fee740da59ca28648d5bfdc0be094aa52,xuxiangad@foxmail.com,2025-02-12 14:17:15+08:00,noreply@github.com,2025-02-12 14:17:15+08:00,"feat(tdigest): add tdigest algorithm and storage encoding implementations (#2741)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Aleks Lozovyuk <aleks.raiden@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,redis_metadata.cc,cc,39,1,40
54c5862fee740da59ca28648d5bfdc0be094aa52,xuxiangad@foxmail.com,2025-02-12 14:17:15+08:00,noreply@github.com,2025-02-12 14:17:15+08:00,"feat(tdigest): add tdigest algorithm and storage encoding implementations (#2741)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Aleks Lozovyuk <aleks.raiden@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,redis_metadata.h,h,29,3,32
54c5862fee740da59ca28648d5bfdc0be094aa52,xuxiangad@foxmail.com,2025-02-12 14:17:15+08:00,noreply@github.com,2025-02-12 14:17:15+08:00,"feat(tdigest): add tdigest algorithm and storage encoding implementations (#2741)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Aleks Lozovyuk <aleks.raiden@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,redis_tdigest.cc,cc,442,0,442
54c5862fee740da59ca28648d5bfdc0be094aa52,xuxiangad@foxmail.com,2025-02-12 14:17:15+08:00,noreply@github.com,2025-02-12 14:17:15+08:00,"feat(tdigest): add tdigest algorithm and storage encoding implementations (#2741)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Aleks Lozovyuk <aleks.raiden@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,redis_tdigest.h,h,116,0,116
54c5862fee740da59ca28648d5bfdc0be094aa52,xuxiangad@foxmail.com,2025-02-12 14:17:15+08:00,noreply@github.com,2025-02-12 14:17:15+08:00,"feat(tdigest): add tdigest algorithm and storage encoding implementations (#2741)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Aleks Lozovyuk <aleks.raiden@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,tdigest.cc,cc,435,0,435
54c5862fee740da59ca28648d5bfdc0be094aa52,xuxiangad@foxmail.com,2025-02-12 14:17:15+08:00,noreply@github.com,2025-02-12 14:17:15+08:00,"feat(tdigest): add tdigest algorithm and storage encoding implementations (#2741)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Aleks Lozovyuk <aleks.raiden@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,tdigest.h,h,150,0,150
54c5862fee740da59ca28648d5bfdc0be094aa52,xuxiangad@foxmail.com,2025-02-12 14:17:15+08:00,noreply@github.com,2025-02-12 14:17:15+08:00,"feat(tdigest): add tdigest algorithm and storage encoding implementations (#2741)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: Aleks Lozovyuk <aleks.raiden@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,tdigest_test.cc,cc,247,0,247
90eb066021b500a02fb205dbbd2bf96150caa8b2,aleks.raiden@gmail.com,2025-02-12 18:01:59+02:00,noreply@github.com,2025-02-13 00:01:59+08:00,chore(ci): bump minica to v1.1.0 (#2787),unstable,True,False,1,kvrocks.yaml,yaml,2,2,4
4c8e3b305763f2738c22980451d1b9674e1e3bb0,aleks.raiden@gmail.com,2025-02-13 14:11:35+02:00,noreply@github.com,2025-02-13 20:11:35+08:00,chore(ci): bump action apache/skywalking-eyes/header to 0.7.0 (#2788),unstable,True,False,1,kvrocks.yaml,yaml,1,1,2
2901e56c29c639bf9a3c716e9686a4dea66ff023,lanqingy@usc.edu,2025-02-16 16:12:17-08:00,noreply@github.com,2025-02-17 08:12:17+08:00,"ci: execute long running go tests in parallel (#2763)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,kvrocks.yaml,yaml,2,2,4
2901e56c29c639bf9a3c716e9686a4dea66ff023,lanqingy@usc.edu,2025-02-16 16:12:17-08:00,noreply@github.com,2025-02-17 08:12:17+08:00,"ci: execute long running go tests in parallel (#2763)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,cluster_test.go,go,7,0,7
2901e56c29c639bf9a3c716e9686a4dea66ff023,lanqingy@usc.edu,2025-02-16 16:12:17-08:00,noreply@github.com,2025-02-17 08:12:17+08:00,"ci: execute long running go tests in parallel (#2763)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,replication_test.go,go,13,0,13
2901e56c29c639bf9a3c716e9686a4dea66ff023,lanqingy@usc.edu,2025-02-16 16:12:17-08:00,noreply@github.com,2025-02-17 08:12:17+08:00,"ci: execute long running go tests in parallel (#2763)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,4,config_test.go,go,10,0,10
53e95a8e2d61e16bf1f1e203b6f4c78308f6327c,aleks.raiden@gmail.com,2025-02-20 13:04:42+02:00,noreply@github.com,2025-02-20 19:04:42+08:00,chore(build): bump golang-lint to 1.64.3 (#2786),unstable,True,False,1,x.py,py,1,1,2
357510c88b8c63fe0f01b9ac9931024831370316,aleks.raiden@gmail.com,2025-02-21 12:38:41+02:00,noreply@github.com,2025-02-21 18:38:41+08:00,chore: bump Zstandard (zstd) to v1.5.7 (#2797),unstable,True,False,1,zstd.cmake,cmake,2,2,4
9d2fcdef3bdff9f01451ae72491b3a438b9e6a2f,aleks.raiden@gmail.com,2025-02-22 04:43:50+02:00,noreply@github.com,2025-02-22 10:43:50+08:00,chore(test): update godeps (#2798),unstable,True,False,2,go.mod,mod,3,3,6
9d2fcdef3bdff9f01451ae72491b3a438b9e6a2f,aleks.raiden@gmail.com,2025-02-22 04:43:50+02:00,noreply@github.com,2025-02-22 10:43:50+08:00,chore(test): update godeps (#2798),unstable,True,False,2,go.sum,sum,4,4,8
ee6bd5a0d9c2a08d40407f5cc7a362e4966cb341,aleks.raiden@gmail.com,2025-02-22 07:56:53+02:00,noreply@github.com,2025-02-22 13:56:53+08:00,"chore(ci): bump crate-ci/typo to v1.2.7 (#2790)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,1,kvrocks.yaml,yaml,1,1,2
242d887ba767b850e070fa6ad0c103935d2ee4c9,hulk.website@gmail.com,2025-02-22 16:30:46+08:00,noreply@github.com,2025-02-22 16:30:46+08:00,"chore: remove the duplicate const error message (#2800)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,replication.cc,cc,1,1,2
242d887ba767b850e070fa6ad0c103935d2ee4c9,hulk.website@gmail.com,2025-02-22 16:30:46+08:00,noreply@github.com,2025-02-22 16:30:46+08:00,"chore: remove the duplicate const error message (#2800)

Co-authored-by: Twice <twice.mliu@gmail.com>",unstable,True,False,2,error_constants.h,h,0,2,2
64fbd28f4f49123a64e8f464d5039df21db3110e,xuxiangad@foxmail.com,2025-02-22 21:39:44+08:00,noreply@github.com,2025-02-22 21:39:44+08:00,"feat(tdigest): add TDIGEST.CREATE and TDIGEST.INFO command (#2799)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,cmd_tdigest.cc,cc,136,0,136
64fbd28f4f49123a64e8f464d5039df21db3110e,xuxiangad@foxmail.com,2025-02-22 21:39:44+08:00,noreply@github.com,2025-02-22 21:39:44+08:00,"feat(tdigest): add TDIGEST.CREATE and TDIGEST.INFO command (#2799)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,commander.h,h,1,0,1
64fbd28f4f49123a64e8f464d5039df21db3110e,xuxiangad@foxmail.com,2025-02-22 21:39:44+08:00,noreply@github.com,2025-02-22 21:39:44+08:00,"feat(tdigest): add TDIGEST.CREATE and TDIGEST.INFO command (#2799)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,error_constants.h,h,5,0,5
64fbd28f4f49123a64e8f464d5039df21db3110e,xuxiangad@foxmail.com,2025-02-22 21:39:44+08:00,noreply@github.com,2025-02-22 21:39:44+08:00,"feat(tdigest): add TDIGEST.CREATE and TDIGEST.INFO command (#2799)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,redis_tdigest.cc,cc,11,8,19
64fbd28f4f49123a64e8f464d5039df21db3110e,xuxiangad@foxmail.com,2025-02-22 21:39:44+08:00,noreply@github.com,2025-02-22 21:39:44+08:00,"feat(tdigest): add TDIGEST.CREATE and TDIGEST.INFO command (#2799)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,redis_tdigest.h,h,4,0,4
64fbd28f4f49123a64e8f464d5039df21db3110e,xuxiangad@foxmail.com,2025-02-22 21:39:44+08:00,noreply@github.com,2025-02-22 21:39:44+08:00,"feat(tdigest): add TDIGEST.CREATE and TDIGEST.INFO command (#2799)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,tdigest_test.cc,cc,1,2,3
64fbd28f4f49123a64e8f464d5039df21db3110e,xuxiangad@foxmail.com,2025-02-22 21:39:44+08:00,noreply@github.com,2025-02-22 21:39:44+08:00,"feat(tdigest): add TDIGEST.CREATE and TDIGEST.INFO command (#2799)

Co-authored-by: hulk <hulk.website@gmail.com>
Co-authored-by: Twice <twice@apache.org>",unstable,True,False,7,tdigest_test.go,go,144,0,144
4a8619de4f89ff7b0e8eb817b66da432decb0dda,fukua95@gmail.com,2025-02-23 16:24:05+08:00,noreply@github.com,2025-02-23 16:24:05+08:00,chore: remove redundant code in the method `Execute` of `slaveof` cmd (#2801),unstable,True,False,1,cmd_server.cc,cc,0,8,8
e7d021c1d4240f6d40629a2f942442d660528835,aleks.raiden@gmail.com,2025-02-23 11:52:37+02:00,noreply@github.com,2025-02-23 17:52:37+08:00,"chore: bump cpptrace to v0.8.0 (#2796)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,cpptrace.cmake,cmake,2,2,4
e00fcf10621f242f6de4bf4602d79da8b9cfcc10,hulk.website@gmail.com,2025-02-24 23:44:58+08:00,noreply@github.com,2025-02-24 23:44:58+08:00,feat(config): allow to config the rocksdb's max compaction bytes (#2802),unstable,True,False,5,kvrocks.conf,conf,6,0,6
e00fcf10621f242f6de4bf4602d79da8b9cfcc10,hulk.website@gmail.com,2025-02-24 23:44:58+08:00,noreply@github.com,2025-02-24 23:44:58+08:00,feat(config): allow to config the rocksdb's max compaction bytes (#2802),unstable,True,False,5,config.cc,cc,2,0,2
e00fcf10621f242f6de4bf4602d79da8b9cfcc10,hulk.website@gmail.com,2025-02-24 23:44:58+08:00,noreply@github.com,2025-02-24 23:44:58+08:00,feat(config): allow to config the rocksdb's max compaction bytes (#2802),unstable,True,False,5,config.h,h,1,0,1
e00fcf10621f242f6de4bf4602d79da8b9cfcc10,hulk.website@gmail.com,2025-02-24 23:44:58+08:00,noreply@github.com,2025-02-24 23:44:58+08:00,feat(config): allow to config the rocksdb's max compaction bytes (#2802),unstable,True,False,5,storage.cc,cc,1,0,1
e00fcf10621f242f6de4bf4602d79da8b9cfcc10,hulk.website@gmail.com,2025-02-24 23:44:58+08:00,noreply@github.com,2025-02-24 23:44:58+08:00,feat(config): allow to config the rocksdb's max compaction bytes (#2802),unstable,True,False,5,config_test.go,go,24,0,24
0e9c93c726b9869c34db4fb7aa0fcd302e948100,wangyixuan@selectdb.com,2025-02-27 16:45:49+08:00,noreply@github.com,2025-02-27 16:45:49+08:00,feat(tdigest): add TDIGEST.ADD command (#2803),unstable,True,False,3,cmd_tdigest.cc,cc,39,1,40
0e9c93c726b9869c34db4fb7aa0fcd302e948100,wangyixuan@selectdb.com,2025-02-27 16:45:49+08:00,noreply@github.com,2025-02-27 16:45:49+08:00,feat(tdigest): add TDIGEST.ADD command (#2803),unstable,True,False,3,redis_tdigest.cc,cc,0,1,1
0e9c93c726b9869c34db4fb7aa0fcd302e948100,wangyixuan@selectdb.com,2025-02-27 16:45:49+08:00,noreply@github.com,2025-02-27 16:45:49+08:00,feat(tdigest): add TDIGEST.ADD command (#2803),unstable,True,False,3,tdigest_test.go,go,62,0,62
3f426e1a80ea86e10c62744fcd70fccdfa572108,sryan@qq.com,2025-02-27 21:19:13+08:00,noreply@github.com,2025-02-27 21:19:13+08:00,fix(zset): ZREMRANGEBYRANK command is missing LogData (#2808),unstable,True,False,1,redis_zset.cc,cc,3,0,3
7f3beaa89ae6a87af0fa8b1b5d8aab10a416cbdd,aleks.raiden@gmail.com,2025-02-28 04:48:12+02:00,noreply@github.com,2025-02-28 10:48:12+08:00,"chore: bump fmtlib to 11.1.4 (#2809)

Co-authored-by: Twice <twice.mliu@gmail.com>
Co-authored-by: hulk <hulk.website@gmail.com>",unstable,True,False,1,fmt.cmake,cmake,2,2,4
34007db3a5a74e7c773209a16c6d0a5cc09ef884,91114837+SharonIV0x86@users.noreply.github.com,2025-02-28 13:35:33+05:30,noreply@github.com,2025-02-28 16:05:33+08:00,chore: remove need for the intermediate variable in Size function (#2810),unstable,True,False,1,log_collector.cc,cc,1,2,3
