Discussions: [{'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18773', 'id': 4633922, 'node_id': 'MDEwOkRpc2N1c3Npb240NjMzOTIy', 'number': 18773, 'title': 'Dataset by pulsar functions', 'user': {'login': 'codelipenghui', 'id': 12592133, 'node_id': 'MDQ6VXNlcjEyNTkyMTMz', 'avatar_url': 'https://avatars.githubusercontent.com/u/12592133?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/codelipenghui', 'html_url': 'https://github.com/codelipenghui', 'followers_url': 'https://api.github.com/users/codelipenghui/followers', 'following_url': 'https://api.github.com/users/codelipenghui/following{/other_user}', 'gists_url': 'https://api.github.com/users/codelipenghui/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/codelipenghui/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/codelipenghui/subscriptions', 'organizations_url': 'https://api.github.com/users/codelipenghui/orgs', 'repos_url': 'https://api.github.com/users/codelipenghui/repos', 'events_url': 'https://api.github.com/users/codelipenghui/events{/privacy}', 'received_events_url': 'https://api.github.com/users/codelipenghui/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 399568952, 'node_id': 'MDU6TGFiZWwzOTk1Njg5NTI=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/help%20wanted', 'name': 'help wanted', 'color': '008672', 'default': True, 'description': ''}, {'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}, {'id': 853313264, 'node_id': 'MDU6TGFiZWw4NTMzMTMyNjQ=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/area/function', 'name': 'area/function', 'color': '1d76db', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 1, 'created_at': '2018-08-07T07:24:17Z', 'updated_at': '2022-12-06T23:09:21Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'When use pulsar functions, The ending strategy of consume messages is useful in dataset scenes.\r\n\r\nSuch as:\r\n\r\n1. Ending by message produce time.\r\n2. Ending by message id.\r\n3. Ending by user(user support the ending strategy).\r\n\r\nIs this feature suitable for pulsar function? \r\nThe reason for this feature is i think pulsar function can support offline not only stream.\r\n', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18773/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18773/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18429', 'id': 4558299, 'node_id': 'MDEwOkRpc2N1c3Npb240NTU4Mjk5', 'number': 18429, 'title': 'Add BC testing for functions CLI and function worker', 'user': {'login': 'sijie', 'id': 1217863, 'node_id': 'MDQ6VXNlcjEyMTc4NjM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1217863?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sijie', 'html_url': 'https://github.com/sijie', 'followers_url': 'https://api.github.com/users/sijie/followers', 'following_url': 'https://api.github.com/users/sijie/following{/other_user}', 'gists_url': 'https://api.github.com/users/sijie/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sijie/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sijie/subscriptions', 'organizations_url': 'https://api.github.com/users/sijie/orgs', 'repos_url': 'https://api.github.com/users/sijie/repos', 'events_url': 'https://api.github.com/users/sijie/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sijie/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 440785362, 'node_id': 'MDU6TGFiZWw0NDA3ODUzNjI=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/area/test', 'name': 'area/test', 'color': '1d76db', 'default': False, 'description': ''}, {'id': 853313264, 'node_id': 'MDU6TGFiZWw4NTMzMTMyNjQ=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/area/function', 'name': 'area/function', 'color': '1d76db', 'default': False, 'description': ''}, {'id': 3865578896, 'node_id': 'LA_kwDOA7PXtM7maA2Q', 'url': 'https://api.github.com/repos/apache/pulsar/labels/lifecycle/stale', 'name': 'lifecycle/stale', 'color': 'ededed', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 1, 'created_at': '2018-09-12T20:34:43Z', 'updated_at': '2022-11-11T08:31:43Z', 'author_association': 'MEMBER', 'active_lock_reason': None, 'body': '*Motivation*\r\n\r\nFunctions CLI does a lot of "magic" in submitting functions. so changes between releases can potentially break functionalities. e.g. #2501 breaks the trigger function. so we need a BC testing framework to be able to cover such BC issues.', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18429/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18429/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817001, 'node_id': 'DIC_kwDOA7PXtM4CQQqp', 'repository_id': 62117812, 'emoji': ':pray:', 'name': 'Q&A', 'description': 'Ask the community for help', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'q-a', 'is_answerable': True}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18756', 'id': 4631833, 'node_id': 'MDEwOkRpc2N1c3Npb240NjMxODMz', 'number': 18756, 'title': 'websocket feature parity', 'user': {'login': 'sfescape', 'id': 1774757, 'node_id': 'MDQ6VXNlcjE3NzQ3NTc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1774757?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sfescape', 'html_url': 'https://github.com/sfescape', 'followers_url': 'https://api.github.com/users/sfescape/followers', 'following_url': 'https://api.github.com/users/sfescape/following{/other_user}', 'gists_url': 'https://api.github.com/users/sfescape/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sfescape/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sfescape/subscriptions', 'organizations_url': 'https://api.github.com/users/sfescape/orgs', 'repos_url': 'https://api.github.com/users/sfescape/repos', 'events_url': 'https://api.github.com/users/sfescape/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sfescape/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}, {'id': 1074229366, 'node_id': 'MDU6TGFiZWwxMDc0MjI5MzY2', 'url': 'https://api.github.com/repos/apache/pulsar/labels/area/websocket', 'name': 'area/websocket', 'color': '1d76db', 'default': False, 'description': ''}, {'id': 3865578896, 'node_id': 'LA_kwDOA7PXtM7maA2Q', 'url': 'https://api.github.com/repos/apache/pulsar/labels/lifecycle/stale', 'name': 'lifecycle/stale', 'color': 'ededed', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 3, 'created_at': '2018-09-29T19:21:25Z', 'updated_at': '2022-12-06T09:34:13Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': "Is there a roadmap that discusses websocket features? It looks like websockets is pretty far behind in feature parity.\r\nI'm considering moving from kafka to pulsar but topics regex consumer is an important feature for me.\r\n", 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18756/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18756/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18849', 'id': 4642959, 'node_id': 'MDEwOkRpc2N1c3Npb240NjQyOTU5', 'number': 18849, 'title': 'JSONSchema should works with generic (parameterized type) POJO/DTO.', 'user': {'login': 'ducquoc', 'id': 1174046, 'node_id': 'MDQ6VXNlcjExNzQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1174046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ducquoc', 'html_url': 'https://github.com/ducquoc', 'followers_url': 'https://api.github.com/users/ducquoc/followers', 'following_url': 'https://api.github.com/users/ducquoc/following{/other_user}', 'gists_url': 'https://api.github.com/users/ducquoc/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ducquoc/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ducquoc/subscriptions', 'organizations_url': 'https://api.github.com/users/ducquoc/orgs', 'repos_url': 'https://api.github.com/users/ducquoc/repos', 'events_url': 'https://api.github.com/users/ducquoc/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ducquoc/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}, {'id': 3865578896, 'node_id': 'LA_kwDOA7PXtM7maA2Q', 'url': 'https://api.github.com/repos/apache/pulsar/labels/lifecycle/stale', 'name': 'lifecycle/stale', 'color': 'ededed', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 16, 'created_at': '2018-12-04T01:06:08Z', 'updated_at': '2022-12-09T14:12:58Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': '#### Expected behavior\r\n\r\nJSONSchema should works with generic (parameterized type) POJO/DTO. No exception at runtime, or at least update documentation/errorMessage how to work-around/bypass the issue.\r\n\r\n#### Actual behavior\r\n\r\nException when running producer/consumer with `JSONSchema.of(clazz)` (or `Schema.JSON(clazz)` ) wiith generic/parameterized class:\r\n```\r\nException in thread "main" java.lang.NoSuchFieldError: KEY_VALUE\r\n\tat org.apache.pulsar.client.impl.schema.KeyValueSchema.<init>(KeyValueSchema.java:50)\r\n\tat org.apache.pulsar.client.api.Schema.<clinit>(Schema.java:128)\r\n```\r\n\r\n#### Steps to reproduce\r\n\r\nCreate Producer or Consumer with client API, using `JSONSchema.of(clazz)` (or `Schema.JSON(clazz)` ) wiith generic/parameterized class. \r\nCompiled OK, but when running the client producer/consumer it throws exception.\r\n\r\nExample (https://github.com/ducquoc/pulsar/commit/a0649dc8): \r\nhttps://github.com/ducquoc/pulsar/blob/fix-client-schema_json-schema-generic-parameterized-type/pulsar-functions/java-examples/src/main/java/org/apache/pulsar/functions/api/examples/pojo/BrokerMessage.java\r\n\r\n** Work-around: use \r\n```\r\nprivate Object payload;\r\n```\r\nand respective getter/setter instead of \r\n```\r\nprivate T payload;\r\n```\r\n\r\n#### System configuration\r\n**Pulsar version**: 2.2.0 (but seems to be also affected on latest master branch)\r\n', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18849/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18849/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18765', 'id': 4632062, 'node_id': 'MDEwOkRpc2N1c3Npb240NjMyMDYy', 'number': 18765, 'title': 'Proxy should autodetect whether to use TLS to connect brokers', 'user': {'login': 'ivankelly', 'id': 54955, 'node_id': 'MDQ6VXNlcjU0OTU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/54955?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ivankelly', 'html_url': 'https://github.com/ivankelly', 'followers_url': 'https://api.github.com/users/ivankelly/followers', 'following_url': 'https://api.github.com/users/ivankelly/following{/other_user}', 'gists_url': 'https://api.github.com/users/ivankelly/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ivankelly/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ivankelly/subscriptions', 'organizations_url': 'https://api.github.com/users/ivankelly/orgs', 'repos_url': 'https://api.github.com/users/ivankelly/repos', 'events_url': 'https://api.github.com/users/ivankelly/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ivankelly/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 978303691, 'node_id': 'MDU6TGFiZWw5NzgzMDM2OTE=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/area/proxy', 'name': 'area/proxy', 'color': '1d76db', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 0, 'created_at': '2019-01-10T10:16:03Z', 'updated_at': '2022-12-06T10:56:59Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Currently you need to set `tlsEnabledWithBroker` in the proxy to use TLS to connect to brokers. However, if the URL is https:// or pulsar+ssl:// it should be obvious that we should use TLS. Likewise, when the url is http:// or pulsar:// it should be obvious that we should not use TLS.', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18765/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18765/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18428', 'id': 4558264, 'node_id': 'MDEwOkRpc2N1c3Npb240NTU4MjY0', 'number': 18428, 'title': 'Hive Pulsar Integration', 'user': {'login': 'sijie', 'id': 1217863, 'node_id': 'MDQ6VXNlcjEyMTc4NjM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1217863?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sijie', 'html_url': 'https://github.com/sijie', 'followers_url': 'https://api.github.com/users/sijie/followers', 'following_url': 'https://api.github.com/users/sijie/following{/other_user}', 'gists_url': 'https://api.github.com/users/sijie/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sijie/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sijie/subscriptions', 'organizations_url': 'https://api.github.com/users/sijie/orgs', 'repos_url': 'https://api.github.com/users/sijie/repos', 'events_url': 'https://api.github.com/users/sijie/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sijie/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}, {'id': 3865578896, 'node_id': 'LA_kwDOA7PXtM7maA2Q', 'url': 'https://api.github.com/repos/apache/pulsar/labels/lifecycle/stale', 'name': 'lifecycle/stale', 'color': 'ededed', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 6, 'created_at': '2019-01-24T20:46:25Z', 'updated_at': '2022-11-11T08:19:05Z', 'author_association': 'MEMBER', 'active_lock_reason': None, 'body': "**Is your feature request related to a problem? Please describe.**\r\n\r\nHive is a data warehouse software that built on top of Hadoop. It would be great that Pulsar topics can be registered as external tables in Hive, so people can use Hive:\r\n\r\n1) dump data from Pulsar to Hive\r\n2) dump data from Hive to Pulsar\r\n3) query Pulsar directory\r\n\r\n**Describe the solution you'd like**\r\n\r\nImplement a Hive Pulsar Storage Handler\r\n\r\n**Describe alternatives you've considered**\r\n\r\nN/A\r\n\r\n**Additional context**\r\n\r\nI am not sure if Pulsar main repo is the right place for hosting this integration. Alternatively, it can go to Hive repo, or any other hosted repo. I am open for the discussions for where to host this integration.\r\n", 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18428/reactions', 'total_count': 6, '+1': 6, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18428/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18852', 'id': 4643006, 'node_id': 'MDEwOkRpc2N1c3Npb240NjQzMDA2', 'number': 18852, 'title': 'ManagedLedger should streamline the read requests', 'user': {'login': 'sijie', 'id': 1217863, 'node_id': 'MDQ6VXNlcjEyMTc4NjM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1217863?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sijie', 'html_url': 'https://github.com/sijie', 'followers_url': 'https://api.github.com/users/sijie/followers', 'following_url': 'https://api.github.com/users/sijie/following{/other_user}', 'gists_url': 'https://api.github.com/users/sijie/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sijie/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sijie/subscriptions', 'organizations_url': 'https://api.github.com/users/sijie/orgs', 'repos_url': 'https://api.github.com/users/sijie/repos', 'events_url': 'https://api.github.com/users/sijie/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sijie/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}, {'id': 3865578896, 'node_id': 'LA_kwDOA7PXtM7maA2Q', 'url': 'https://api.github.com/repos/apache/pulsar/labels/lifecycle/stale', 'name': 'lifecycle/stale', 'color': 'ededed', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 15, 'created_at': '2019-03-12T09:41:18Z', 'updated_at': '2022-12-09T14:28:43Z', 'author_association': 'MEMBER', 'active_lock_reason': None, 'body': '*Problems*\r\n\r\nCurrently managed ledger read entries in a very large batch requests - 100 entries by default. This is an inefficient approach. We should streamline the read requests like what dlog is doing.', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18852/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18852/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18766', 'id': 4632170, 'node_id': 'MDEwOkRpc2N1c3Npb240NjMyMTcw', 'number': 18766, 'title': 'Use graalVM native image to build client and client admin', 'user': {'login': 'waxzce', 'id': 137284, 'node_id': 'MDQ6VXNlcjEzNzI4NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/137284?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/waxzce', 'html_url': 'https://github.com/waxzce', 'followers_url': 'https://api.github.com/users/waxzce/followers', 'following_url': 'https://api.github.com/users/waxzce/following{/other_user}', 'gists_url': 'https://api.github.com/users/waxzce/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/waxzce/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/waxzce/subscriptions', 'organizations_url': 'https://api.github.com/users/waxzce/orgs', 'repos_url': 'https://api.github.com/users/waxzce/repos', 'events_url': 'https://api.github.com/users/waxzce/events{/privacy}', 'received_events_url': 'https://api.github.com/users/waxzce/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 581905400, 'node_id': 'MDU6TGFiZWw1ODE5MDU0MDA=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/area/build', 'name': 'area/build', 'color': '1d76db', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 7, 'created_at': '2019-05-02T17:20:55Z', 'updated_at': '2023-02-08T20:45:49Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Using the pulsar-admin command can be very frustrating because of the startup time. That\'s one point were graalVM native image is interesting: build a static "binary".\r\n\r\nVarious problem to compile to native-image can occur, using reflection and dynamic classloader are often the problems providers. From my point of view, auth plugins are the main problem, but apart of these, do you see any points to look at?\r\n', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18766/reactions', 'total_count': 6, '+1': 6, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18766/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18427', 'id': 4558256, 'node_id': 'MDEwOkRpc2N1c3Npb240NTU4MjU2', 'number': 18427, 'title': 'State change feed', 'user': {'login': 'aahmed-se', 'id': 8009085, 'node_id': 'MDQ6VXNlcjgwMDkwODU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/8009085?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/aahmed-se', 'html_url': 'https://github.com/aahmed-se', 'followers_url': 'https://api.github.com/users/aahmed-se/followers', 'following_url': 'https://api.github.com/users/aahmed-se/following{/other_user}', 'gists_url': 'https://api.github.com/users/aahmed-se/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/aahmed-se/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/aahmed-se/subscriptions', 'organizations_url': 'https://api.github.com/users/aahmed-se/orgs', 'repos_url': 'https://api.github.com/users/aahmed-se/repos', 'events_url': 'https://api.github.com/users/aahmed-se/events{/privacy}', 'received_events_url': 'https://api.github.com/users/aahmed-se/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 1, 'created_at': '2019-05-06T18:39:12Z', 'updated_at': '2022-11-11T08:15:05Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'They are certain use cases that need to monitor changes to the state , we should be able to publish write and update operations in our state store to a change feed pulsar topic that other functions can listen to and act upon.\r\n', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18427/reactions', 'total_count': 2, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18427/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/19657', 'id': 4907247, 'node_id': 'MDEwOkRpc2N1c3Npb240OTA3MjQ3', 'number': 19657, 'title': 'Pulsar functions should be able to return none and multiple values', 'user': {'login': 'KIC', 'id': 10957396, 'node_id': 'MDQ6VXNlcjEwOTU3Mzk2', 'avatar_url': 'https://avatars.githubusercontent.com/u/10957396?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/KIC', 'html_url': 'https://github.com/KIC', 'followers_url': 'https://api.github.com/users/KIC/followers', 'following_url': 'https://api.github.com/users/KIC/following{/other_user}', 'gists_url': 'https://api.github.com/users/KIC/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/KIC/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/KIC/subscriptions', 'organizations_url': 'https://api.github.com/users/KIC/orgs', 'repos_url': 'https://api.github.com/users/KIC/repos', 'events_url': 'https://api.github.com/users/KIC/events{/privacy}', 'received_events_url': 'https://api.github.com/users/KIC/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}, {'id': 853313264, 'node_id': 'MDU6TGFiZWw4NTMzMTMyNjQ=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/area/function', 'name': 'area/function', 'color': '1d76db', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 4, 'created_at': '2019-06-10T07:07:59Z', 'updated_at': '2023-02-28T04:02:37Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'First of all, I love pulsar functions! It is almost exactly what I have always wanted to build. But just by myself and as a hobby project I never really finished it. So I am really happy someone else did it! However I am missing one important feature.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nAs I understand the current implementation of pulsar functions is a 1:1 relation ship. One event in -> one event out. This is very limiting as one can not even write a function to filter out events. Also there are use cases when you get a batched message and you need to "unpack" it into single events. Or when you need to interpolate values from a previous event (which is held in the state).\r\n\r\n**Describe the solution you\'d like**\r\nI propose that the interface should be something along the lines `Function<I, ? extends Collection<O>>`. This way you can either return nothing (an empty list), a single element, but also a collection of like interpolated values.\r\n\r\n**Describe alternatives you\'ve considered**\r\nIf you consider a `PublishFunction` then I see here the following problem. In the very moment you also need to store a state via the `Context` you get a timing issue. What if you stored the state but then for some reason you are not able to send to the topic. Or even worse what if you could send  _n_ of _m_ messages and then the network fails? I would be clean and easier when pulsar handles all these cases outside of the function implementation.\r\n\r\n**Additional context**\r\nOne not necessarily needs to use atomic transactions over different storage solutions for this use case. Functions just need to be deterministic. So during startup (or retry) you just need to know what is needed to reproduce the failed "state" (nacked message) and you need to know what was the last message which has been sent to the target topic. You then store the state and only send the missing messages after the last one which was already sent.\r\n', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/19657/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/19657/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18456', 'id': 4564660, 'node_id': 'MDEwOkRpc2N1c3Npb240NTY0NjYw', 'number': 18456, 'title': 'Support for long running message consumer', 'user': {'login': 'shubham-Shole4ever', 'id': 45994646, 'node_id': 'MDQ6VXNlcjQ1OTk0NjQ2', 'avatar_url': 'https://avatars.githubusercontent.com/u/45994646?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/shubham-Shole4ever', 'html_url': 'https://github.com/shubham-Shole4ever', 'followers_url': 'https://api.github.com/users/shubham-Shole4ever/followers', 'following_url': 'https://api.github.com/users/shubham-Shole4ever/following{/other_user}', 'gists_url': 'https://api.github.com/users/shubham-Shole4ever/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/shubham-Shole4ever/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/shubham-Shole4ever/subscriptions', 'organizations_url': 'https://api.github.com/users/shubham-Shole4ever/orgs', 'repos_url': 'https://api.github.com/users/shubham-Shole4ever/repos', 'events_url': 'https://api.github.com/users/shubham-Shole4ever/events{/privacy}', 'received_events_url': 'https://api.github.com/users/shubham-Shole4ever/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 447781389, 'node_id': 'MDU6TGFiZWw0NDc3ODEzODk=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/area/client', 'name': 'area/client', 'color': '1d76db', 'default': False, 'description': ''}, {'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 12, 'created_at': '2019-07-31T07:39:37Z', 'updated_at': '2022-11-14T08:34:01Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': "**Is your feature request related to a problem? Please describe.**\r\nThe ackTimeout is set at the consumer level and is valid for all the messages that consumer handles. We have a case where the consumption of a message takes an unpredictable amount of time, ranging from 10 mins to couple hours. We also don't want to set the ackTimeout for the messages to be max possible (which could be half a day or more).\r\nCan we have a feature where the consumer can send back a signal to the broker, acknowledging that its not failed but currently working on the received message, and the broker extends the ackTimeout for that message.\r\n\r\n**Describe the solution you'd like**\r\nA functionality which allows the consumer to notify the broker that it is working on the received message. The broker, on receiving this signal can extend the ackTimeout for that particular message (probably refreshing the ackTimeout)\r\n\r\n**Describe alternatives you've considered**\r\nCurrently, there is no way to modify the ackTimeout for a particular message. The ackTimeout is set at the consumer level and cannot be modified for any message.\r\n", 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18456/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18456/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18828', 'id': 4641196, 'node_id': 'MDEwOkRpc2N1c3Npb240NjQxMTk2', 'number': 18828, 'title': '[client] Support cumulative acknowledgement at partitioned topic', 'user': {'login': 'fxbing', 'id': 29175509, 'node_id': 'MDQ6VXNlcjI5MTc1NTA5', 'avatar_url': 'https://avatars.githubusercontent.com/u/29175509?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fxbing', 'html_url': 'https://github.com/fxbing', 'followers_url': 'https://api.github.com/users/fxbing/followers', 'following_url': 'https://api.github.com/users/fxbing/following{/other_user}', 'gists_url': 'https://api.github.com/users/fxbing/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fxbing/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fxbing/subscriptions', 'organizations_url': 'https://api.github.com/users/fxbing/orgs', 'repos_url': 'https://api.github.com/users/fxbing/repos', 'events_url': 'https://api.github.com/users/fxbing/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fxbing/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 1, 'created_at': '2019-08-02T02:35:36Z', 'updated_at': '2022-12-09T05:42:04Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': "**Is your feature request related to a problem? Please describe.**\r\nCurrently cumulative acknowledgement is not supported on partitioned topics.\r\n\r\n**Describe the solution you'd like**\r\nDo `acknowledgeCumulative()` on all partitions for partitioned topics.\r\n\r\n**Describe alternatives you've considered**\r\nNo other alternative. Users need to implement it themselves\r\n\r\n**Additional context**\r\nIt would be much easier for people to use if we support `acknowledgeCumulative()` at partitioned topics.\r\n", 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18828/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18828/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18827', 'id': 4641104, 'node_id': 'MDEwOkRpc2N1c3Npb240NjQxMTA0', 'number': 18827, 'title': 'support cloud event', 'user': {'login': 'tangxusc', 'id': 26328064, 'node_id': 'MDQ6VXNlcjI2MzI4MDY0', 'avatar_url': 'https://avatars.githubusercontent.com/u/26328064?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tangxusc', 'html_url': 'https://github.com/tangxusc', 'followers_url': 'https://api.github.com/users/tangxusc/followers', 'following_url': 'https://api.github.com/users/tangxusc/following{/other_user}', 'gists_url': 'https://api.github.com/users/tangxusc/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tangxusc/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tangxusc/subscriptions', 'organizations_url': 'https://api.github.com/users/tangxusc/orgs', 'repos_url': 'https://api.github.com/users/tangxusc/repos', 'events_url': 'https://api.github.com/users/tangxusc/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tangxusc/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 12, 'created_at': '2019-09-23T06:00:21Z', 'updated_at': '2024-03-04T11:06:13Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': "**Is your feature request related to a problem? Please describe.**\r\nDoes pulsar now support cloud event for cncf? Are there any plans for future support?\r\nIs there a support plan for knative event components?\r\n\r\n**Describe the solution you'd like**\r\nsupport cloudevents and knative\r\n\r\n**Describe alternatives you've considered**\r\nsupport https://cloudevents.io/ CloudEvents 0.3\r\nknative now support kafka,It is hoped that pulsar can also be accessed\r\n\r\n**Additional context**\r\nnone\r\n", 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18827/reactions', 'total_count': 28, '+1': 28, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18827/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18983', 'id': 4676692, 'node_id': 'MDEwOkRpc2N1c3Npb240Njc2Njky', 'number': 18983, 'title': 'geo replicated subscribers', 'user': {'login': 'volfco', 'id': 433045, 'node_id': 'MDQ6VXNlcjQzMzA0NQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/433045?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/volfco', 'html_url': 'https://github.com/volfco', 'followers_url': 'https://api.github.com/users/volfco/followers', 'following_url': 'https://api.github.com/users/volfco/following{/other_user}', 'gists_url': 'https://api.github.com/users/volfco/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/volfco/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/volfco/subscriptions', 'organizations_url': 'https://api.github.com/users/volfco/orgs', 'repos_url': 'https://api.github.com/users/volfco/repos', 'events_url': 'https://api.github.com/users/volfco/events{/privacy}', 'received_events_url': 'https://api.github.com/users/volfco/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}, {'id': 3865578896, 'node_id': 'LA_kwDOA7PXtM7maA2Q', 'url': 'https://api.github.com/repos/apache/pulsar/labels/lifecycle/stale', 'name': 'lifecycle/stale', 'color': 'ededed', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 12, 'created_at': '2019-09-25T05:13:34Z', 'updated_at': '2022-12-19T10:04:54Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'One of the big things missing in my book, is a way to have multiple subscribers across datacenters consume messages "exactly" once. \r\n\r\nDC A produces 5 messages. DC A has a consume subscription named TEST. DC B has a consumer with the same name. Ideally, a consumer in DC A process messages 1,2,3 while DC B is able to process 4 and 5.\r\n\r\nAnother example would be I\'m writing emails to be sent out into a topic from us-west and us-east. I can send emails from each DC, and the DC should consume messages produced there (just by nature of asynchronous replication). But if the DC\'s consumers go down I would like the other DCs to pick up and consume messages that should have been consumed by the now failed DC.\r\n\r\nFrom my admittedly limited research, I don\'t think this is currently supported. Subscribers cursor is currently per DC, which allows for consumers in each DC to consume the same message.\r\n\r\nI could implement this on the client side by using the configuration store zookeeper to record a "lock" on a message ID to disallow consumption on other consumers- but this seems like something that could be implemented inside the broker and configurable on a per-namespace level. The consumer would write a lock into zookeeper, which other consumers would check for before doing the actual processing. If a lock exists, the consumer will ack it. \r\n\r\nAt the expense of consumption latency and zookeeper I/O, I think this would be an amazing feature. \r\n\r\nI could see this implemented in two ways, both as Consumer Types. One is a "Lock on Everything" where a lock is acquired for each message. The second would be "Lock on foreign messages" where a lock is acquired for each message not produced in the local cluster (implying that it was replicated in from another cluster)- so messages produced from _us-west_ would not require a global lock, but messages produced in _us-west_ and consumed in _us-east_ would need a global lock before processing.', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18983/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18983/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18840', 'id': 4642073, 'node_id': 'MDEwOkRpc2N1c3Npb240NjQyMDcz', 'number': 18840, 'title': 'Add meta-data to DLQ', 'user': {'login': 'rocketraman', 'id': 53049, 'node_id': 'MDQ6VXNlcjUzMDQ5', 'avatar_url': 'https://avatars.githubusercontent.com/u/53049?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rocketraman', 'html_url': 'https://github.com/rocketraman', 'followers_url': 'https://api.github.com/users/rocketraman/followers', 'following_url': 'https://api.github.com/users/rocketraman/following{/other_user}', 'gists_url': 'https://api.github.com/users/rocketraman/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rocketraman/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rocketraman/subscriptions', 'organizations_url': 'https://api.github.com/users/rocketraman/orgs', 'repos_url': 'https://api.github.com/users/rocketraman/repos', 'events_url': 'https://api.github.com/users/rocketraman/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rocketraman/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 399568952, 'node_id': 'MDU6TGFiZWwzOTk1Njg5NTI=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/help%20wanted', 'name': 'help wanted', 'color': '008672', 'default': True, 'description': ''}, {'id': 447781389, 'node_id': 'MDU6TGFiZWw0NDc3ODEzODk=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/area/client', 'name': 'area/client', 'color': '1d76db', 'default': False, 'description': ''}, {'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}, {'id': 3865578896, 'node_id': 'LA_kwDOA7PXtM7maA2Q', 'url': 'https://api.github.com/repos/apache/pulsar/labels/lifecycle/stale', 'name': 'lifecycle/stale', 'color': 'ededed', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 3, 'created_at': '2019-10-03T05:15:02Z', 'updated_at': '2022-12-09T10:20:00Z', 'author_association': 'MEMBER', 'active_lock_reason': None, 'body': '**Is your feature request related to a problem? Please describe.**\r\nThe automatic DLQ is a nice feature, but its lacking any ability to add meta-data to the entry in the DLQ. For example, setting a property like "causalException" with an exception message and stack trace is very useful when looking at the entries in the DLQ and deciding how to handle them.\r\n\r\n**Describe the solution you\'d like**\r\nOne possible solution may be to allow passing additional properties to the `negativeAcknowledge` method. When an entry is created in the DLQ, the additional props provided would be added to the DLQ message properties.\r\n\r\n**Alternatives**\r\nManual DLQ handling. Use Pulsar\'s redelivery count to manually produce to a DLQ topic, along with the necessary meta-data. ~This implies that the redelivery count is populated in the `Message` regardless of the presence of a `DeadLetterPolicy`. I haven\'t checked whether that is the case or not.~', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18840/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18840/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18453', 'id': 4564019, 'node_id': 'MDEwOkRpc2N1c3Npb240NTY0MDE5', 'number': 18453, 'title': 'Apache Beam support for Pulsar', 'user': {'login': 'svenhornberg', 'id': 5598607, 'node_id': 'MDQ6VXNlcjU1OTg2MDc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5598607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/svenhornberg', 'html_url': 'https://github.com/svenhornberg', 'followers_url': 'https://api.github.com/users/svenhornberg/followers', 'following_url': 'https://api.github.com/users/svenhornberg/following{/other_user}', 'gists_url': 'https://api.github.com/users/svenhornberg/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/svenhornberg/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/svenhornberg/subscriptions', 'organizations_url': 'https://api.github.com/users/svenhornberg/orgs', 'repos_url': 'https://api.github.com/users/svenhornberg/repos', 'events_url': 'https://api.github.com/users/svenhornberg/events{/privacy}', 'received_events_url': 'https://api.github.com/users/svenhornberg/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 23, 'created_at': '2019-10-23T07:09:46Z', 'updated_at': '2024-04-26T08:40:33Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'I would like to use Apache Beam and Pulsar as my source, for writing my batch or streaming jobs. \r\n\r\nPlease consider adding a PulsarIO class to the sdk like Kafka (https://beam.apache.org/releases/javadoc/2.4.0/org/apache/beam/sdk/io/kafka/KafkaIO.html)\r\n\r\nI found the pulsar-flink and pulsar-spark folders, but i really like the Apache Beam API.\r\nMaybe you could add a pulsar-beam example or subfolder\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18453/reactions', 'total_count': 2, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 1, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18453/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18398', 'id': 4554357, 'node_id': 'MDEwOkRpc2N1c3Npb240NTU0MzU3', 'number': 18398, 'title': 'Pulsar Operator On Kubernetes', 'user': {'login': 'sky-big', 'id': 15882125, 'node_id': 'MDQ6VXNlcjE1ODgyMTI1', 'avatar_url': 'https://avatars.githubusercontent.com/u/15882125?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sky-big', 'html_url': 'https://github.com/sky-big', 'followers_url': 'https://api.github.com/users/sky-big/followers', 'following_url': 'https://api.github.com/users/sky-big/following{/other_user}', 'gists_url': 'https://api.github.com/users/sky-big/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sky-big/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sky-big/subscriptions', 'organizations_url': 'https://api.github.com/users/sky-big/orgs', 'repos_url': 'https://api.github.com/users/sky-big/repos', 'events_url': 'https://api.github.com/users/sky-big/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sky-big/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}, {'id': 3865578896, 'node_id': 'LA_kwDOA7PXtM7maA2Q', 'url': 'https://api.github.com/repos/apache/pulsar/labels/lifecycle/stale', 'name': 'lifecycle/stale', 'color': 'ededed', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 25, 'created_at': '2019-11-01T10:40:39Z', 'updated_at': '2022-11-10T01:51:26Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Add pulsar operator for kubernetes(https://github.com/sky-big/pulsar-operator) based on deployment/kubernetes/*.yaml\r\n', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18398/reactions', 'total_count': 13, '+1': 11, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 2, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18398/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18839', 'id': 4642068, 'node_id': 'MDEwOkRpc2N1c3Npb240NjQyMDY4', 'number': 18839, 'title': '[offload] CLI/Rest endpoint to list and describe offloaded topics of namespace', 'user': {'login': 'shiv4289', 'id': 5674919, 'node_id': 'MDQ6VXNlcjU2NzQ5MTk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5674919?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/shiv4289', 'html_url': 'https://github.com/shiv4289', 'followers_url': 'https://api.github.com/users/shiv4289/followers', 'following_url': 'https://api.github.com/users/shiv4289/following{/other_user}', 'gists_url': 'https://api.github.com/users/shiv4289/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/shiv4289/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/shiv4289/subscriptions', 'organizations_url': 'https://api.github.com/users/shiv4289/orgs', 'repos_url': 'https://api.github.com/users/shiv4289/repos', 'events_url': 'https://api.github.com/users/shiv4289/events{/privacy}', 'received_events_url': 'https://api.github.com/users/shiv4289/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 399568952, 'node_id': 'MDU6TGFiZWwzOTk1Njg5NTI=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/help%20wanted', 'name': 'help wanted', 'color': '008672', 'default': True, 'description': ''}, {'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 2, 'created_at': '2020-01-02T16:16:30Z', 'updated_at': '2022-12-09T10:18:56Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': '**Is your feature request related to a problem? Please describe.**\r\nCurrently, it is difficult to find which topics of a namespace are offloaded to secondary storage. It would be have such a command / REST end point. There should be other related information (like size, time info, link?) against this list.\r\n\r\nThe one alternative as of today is the prometheus info where a query of the following nature could throw some insights..\r\n\r\n> pulsar_storage_offloaded_size != 0', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18839/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18839/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18783', 'id': 4634466, 'node_id': 'MDEwOkRpc2N1c3Npb240NjM0NDY2', 'number': 18783, 'title': 'Websocket API should support cumulative acknowledgement', 'user': {'login': 'jeffgrunewald', 'id': 7341128, 'node_id': 'MDQ6VXNlcjczNDExMjg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7341128?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jeffgrunewald', 'html_url': 'https://github.com/jeffgrunewald', 'followers_url': 'https://api.github.com/users/jeffgrunewald/followers', 'following_url': 'https://api.github.com/users/jeffgrunewald/following{/other_user}', 'gists_url': 'https://api.github.com/users/jeffgrunewald/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jeffgrunewald/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jeffgrunewald/subscriptions', 'organizations_url': 'https://api.github.com/users/jeffgrunewald/orgs', 'repos_url': 'https://api.github.com/users/jeffgrunewald/repos', 'events_url': 'https://api.github.com/users/jeffgrunewald/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jeffgrunewald/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 399568952, 'node_id': 'MDU6TGFiZWwzOTk1Njg5NTI=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/help%20wanted', 'name': 'help wanted', 'color': '008672', 'default': True, 'description': ''}, {'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}, {'id': 3865578896, 'node_id': 'LA_kwDOA7PXtM7maA2Q', 'url': 'https://api.github.com/repos/apache/pulsar/labels/lifecycle/stale', 'name': 'lifecycle/stale', 'color': 'ededed', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 10, 'created_at': '2020-01-03T02:46:25Z', 'updated_at': '2022-12-07T04:11:58Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': '**Is your feature request related to a problem? Please describe.**\r\nIn order to support feature parity with other clients, the WebSocket should also be able to cumulatively acknowledge messages up to and including the supplied message ID.\r\n\r\n**Describe the solution you\'d like**\r\nIdeally, the acknowledgement payload that currently only seems to support `{"messageId":"CAoQKA=="}` could accept an optional second field specifying individual acknowledgement or cumulative acknowledgement. The absence of the field could be assumed to equate to individual acknowledgement. As an example, the following two options could be accepted to allow for individual acknowledgement of a message:\r\n`{"messageId":"CAoQKA=="}` _or_ `{"messageId":"CAoQKA==","ackType":"Individual"}`\r\nwhile the following would be required to acknowledge messages cumulatively:\r\n`{"messageId":"CAoQKA==","ackType":"Cumulative"}`\r\n\r\n**Describe alternatives you\'ve considered**\r\nPerhaps a topic-level setting would also work in which case only it would be required at topic configuration as with partitioned topics but I image that would require more work to support.\r\n\r\n**Additional context**\r\nIn order to maximize throughput of messages across a WebSocket, particularly when the same socket connection is handling acknowledgement, it would be ideal to support cumulative acknowledgement to minimize the processing on the cluster side by minimizing the number of acknowledgement messages needed to keep data flowing to the consumer, while also minimizing the amount of bottlenecking that occurs within the socket client itself by not requiring a one-for-one ack message to received message.\r\n\r\nThanks very much!\r\n', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18783/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18783/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18842', 'id': 4642088, 'node_id': 'MDEwOkRpc2N1c3Npb240NjQyMDg4', 'number': 18842, 'title': 'Allow topic compaction to discard messages with duplicate key', 'user': {'login': 'gmethvin', 'id': 171663, 'node_id': 'MDQ6VXNlcjE3MTY2Mw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/171663?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gmethvin', 'html_url': 'https://github.com/gmethvin', 'followers_url': 'https://api.github.com/users/gmethvin/followers', 'following_url': 'https://api.github.com/users/gmethvin/following{/other_user}', 'gists_url': 'https://api.github.com/users/gmethvin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gmethvin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gmethvin/subscriptions', 'organizations_url': 'https://api.github.com/users/gmethvin/orgs', 'repos_url': 'https://api.github.com/users/gmethvin/repos', 'events_url': 'https://api.github.com/users/gmethvin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gmethvin/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 1, 'created_at': '2020-03-12T04:56:55Z', 'updated_at': '2022-12-09T10:28:26Z', 'author_association': 'MEMBER', 'active_lock_reason': None, 'body': "**Is your feature request related to a problem? Please describe.**\r\n\r\nIt's often the case that a producer gets interrupted in the process of producing a series of messages to a topic, perhaps due to an application restart or crash. In many cases it is useful that only one message per key is produced to the topic. For example, if the messages represent emails to be sent, we may want only one email message to be sent to each email address on a list. Using sequence IDs may not be feasible in many such cases, because the underlying list is based on some dynamic features and is constantly changing, or because the underlying data store does not guarantee ordering. When the producer restarts, it should be able to start over and allow Pulsar to ignore the messages with keys it has already seen.\r\n\r\n**Describe the solution you'd like**\r\n\r\nPulsar already supports topic compaction, in which it only keeps the *latest* message for each key. I propose that it also be possible, with some configuration, to keep the *earliest* message for a given key within the retention period. In other words, if Pulsar receives a new message with the same key, Pulsar will discard the message.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nIt is also possible to achieve something similar by storing keys that have already been produced in some other data store, but that requires making sure the secondary data store is in sync with the messages in Pulsar.\r\n", 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18842/reactions', 'total_count': 3, '+1': 3, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18842/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18841', 'id': 4642085, 'node_id': 'MDEwOkRpc2N1c3Npb240NjQyMDg1', 'number': 18841, 'title': 'Requesting Pulsar to support IoT protocols - STOMP, AMQP, MQTT, WSS', 'user': {'login': 'PrashantKS', 'id': 3264489, 'node_id': 'MDQ6VXNlcjMyNjQ0ODk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3264489?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PrashantKS', 'html_url': 'https://github.com/PrashantKS', 'followers_url': 'https://api.github.com/users/PrashantKS/followers', 'following_url': 'https://api.github.com/users/PrashantKS/following{/other_user}', 'gists_url': 'https://api.github.com/users/PrashantKS/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PrashantKS/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PrashantKS/subscriptions', 'organizations_url': 'https://api.github.com/users/PrashantKS/orgs', 'repos_url': 'https://api.github.com/users/PrashantKS/repos', 'events_url': 'https://api.github.com/users/PrashantKS/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PrashantKS/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 10, 'created_at': '2020-03-22T14:47:09Z', 'updated_at': '2025-02-02T15:55:54Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Use case:\r\nIn the IoT related use cases, we are using RabbitMQ as the message broker to receive/send messages from IoT devices over the protocols STOMP, AMQP, MQTT, WSS and further integrate with Kafka/Pulsar for streaming processing/data analysis. \r\n\r\nRequest:\r\nIt would be better if Pulsar has a proxy handler for the protocols STOMP, AMQP, MQTT, WSS. It may help millions of projects, especially those that are serving IoT use cases.', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18841/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18841/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817001, 'node_id': 'DIC_kwDOA7PXtM4CQQqp', 'repository_id': 62117812, 'emoji': ':pray:', 'name': 'Q&A', 'description': 'Ask the community for help', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'q-a', 'is_answerable': True}, 'answer_html_url': 'https://github.com/apache/pulsar/discussions/18457#discussioncomment-4133536', 'answer_chosen_at': '2024-04-18T12:13:55.000Z', 'answer_chosen_by': {'login': 'visortelle', 'id': 9302460, 'node_id': 'MDQ6VXNlcjkzMDI0NjA=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9302460?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/visortelle', 'html_url': 'https://github.com/visortelle', 'followers_url': 'https://api.github.com/users/visortelle/followers', 'following_url': 'https://api.github.com/users/visortelle/following{/other_user}', 'gists_url': 'https://api.github.com/users/visortelle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/visortelle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/visortelle/subscriptions', 'organizations_url': 'https://api.github.com/users/visortelle/orgs', 'repos_url': 'https://api.github.com/users/visortelle/repos', 'events_url': 'https://api.github.com/users/visortelle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/visortelle/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'html_url': 'https://github.com/apache/pulsar/discussions/18457', 'id': 4564797, 'node_id': 'MDEwOkRpc2N1c3Npb240NTY0Nzk3', 'number': 18457, 'title': 'Active-active and no data loss. Is it possible?', 'user': {'login': 'kitekite2020', 'id': 62283122, 'node_id': 'MDQ6VXNlcjYyMjgzMTIy', 'avatar_url': 'https://avatars.githubusercontent.com/u/62283122?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kitekite2020', 'html_url': 'https://github.com/kitekite2020', 'followers_url': 'https://api.github.com/users/kitekite2020/followers', 'following_url': 'https://api.github.com/users/kitekite2020/following{/other_user}', 'gists_url': 'https://api.github.com/users/kitekite2020/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kitekite2020/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kitekite2020/subscriptions', 'organizations_url': 'https://api.github.com/users/kitekite2020/orgs', 'repos_url': 'https://api.github.com/users/kitekite2020/repos', 'events_url': 'https://api.github.com/users/kitekite2020/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kitekite2020/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 399568955, 'node_id': 'MDU6TGFiZWwzOTk1Njg5NTU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/deprecated/question', 'name': 'deprecated/question', 'color': '5319E7', 'default': False, 'description': 'Questions should happened in GitHub Discussions'}, {'id': 3865578896, 'node_id': 'LA_kwDOA7PXtM7maA2Q', 'url': 'https://api.github.com/repos/apache/pulsar/labels/lifecycle/stale', 'name': 'lifecycle/stale', 'color': 'ededed', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 8, 'created_at': '2020-04-08T09:01:33Z', 'updated_at': '2024-04-18T12:13:55Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': "**Is your feature request related to a problem? Please describe.**\r\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen.\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n", 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18457/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18457/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18764', 'id': 4632038, 'node_id': 'MDEwOkRpc2N1c3Npb240NjMyMDM4', 'number': 18764, 'title': 'Wishing list: Pulsar SQL should support readCompact on topics', 'user': {'login': 'Hugues514', 'id': 63633783, 'node_id': 'MDQ6VXNlcjYzNjMzNzgz', 'avatar_url': 'https://avatars.githubusercontent.com/u/63633783?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Hugues514', 'html_url': 'https://github.com/Hugues514', 'followers_url': 'https://api.github.com/users/Hugues514/followers', 'following_url': 'https://api.github.com/users/Hugues514/following{/other_user}', 'gists_url': 'https://api.github.com/users/Hugues514/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Hugues514/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Hugues514/subscriptions', 'organizations_url': 'https://api.github.com/users/Hugues514/orgs', 'repos_url': 'https://api.github.com/users/Hugues514/repos', 'events_url': 'https://api.github.com/users/Hugues514/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Hugues514/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 399568952, 'node_id': 'MDU6TGFiZWwzOTk1Njg5NTI=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/help%20wanted', 'name': 'help wanted', 'color': '008672', 'default': True, 'description': ''}, {'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}, {'id': 1009467877, 'node_id': 'MDU6TGFiZWwxMDA5NDY3ODc3', 'url': 'https://api.github.com/repos/apache/pulsar/labels/area/sql', 'name': 'area/sql', 'color': '1d76db', 'default': False, 'description': 'Pulsar SQL related features'}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 5, 'created_at': '2020-04-14T07:11:29Z', 'updated_at': '2022-12-06T10:49:59Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': "So far, when a Pulsar topic is compacted, the Pulsar SQL query will read all the records, not considering the compacted option\r\n\r\nIt could be interesting to be able to query such a topic using a readCompact option so that the reader will skip all the 'compacted records'.\r\n", 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18764/reactions', 'total_count': 6, '+1': 6, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18764/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817001, 'node_id': 'DIC_kwDOA7PXtM4CQQqp', 'repository_id': 62117812, 'emoji': ':pray:', 'name': 'Q&A', 'description': 'Ask the community for help', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'q-a', 'is_answerable': True}, 'answer_html_url': 'https://github.com/apache/pulsar/discussions/18757#discussioncomment-4321323', 'answer_chosen_at': '2022-12-06T09:39:43.000Z', 'answer_chosen_by': {'login': 'tisonkun', 'id': 18818196, 'node_id': 'MDQ6VXNlcjE4ODE4MTk2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18818196?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tisonkun', 'html_url': 'https://github.com/tisonkun', 'followers_url': 'https://api.github.com/users/tisonkun/followers', 'following_url': 'https://api.github.com/users/tisonkun/following{/other_user}', 'gists_url': 'https://api.github.com/users/tisonkun/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tisonkun/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tisonkun/subscriptions', 'organizations_url': 'https://api.github.com/users/tisonkun/orgs', 'repos_url': 'https://api.github.com/users/tisonkun/repos', 'events_url': 'https://api.github.com/users/tisonkun/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tisonkun/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'html_url': 'https://github.com/apache/pulsar/discussions/18757', 'id': 4631848, 'node_id': 'MDEwOkRpc2N1c3Npb240NjMxODQ4', 'number': 18757, 'title': 'How to do end-to-end messagecrypto with Python client', 'user': {'login': 'jiazhai', 'id': 6348208, 'node_id': 'MDQ6VXNlcjYzNDgyMDg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6348208?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jiazhai', 'html_url': 'https://github.com/jiazhai', 'followers_url': 'https://api.github.com/users/jiazhai/followers', 'following_url': 'https://api.github.com/users/jiazhai/following{/other_user}', 'gists_url': 'https://api.github.com/users/jiazhai/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jiazhai/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jiazhai/subscriptions', 'organizations_url': 'https://api.github.com/users/jiazhai/orgs', 'repos_url': 'https://api.github.com/users/jiazhai/repos', 'events_url': 'https://api.github.com/users/jiazhai/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jiazhai/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 399568949, 'node_id': 'MDU6TGFiZWwzOTk1Njg5NDk=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/bug', 'name': 'type/bug', 'color': 'D93F0B', 'default': False, 'description': 'The PR fixed a bug or issue reported a bug'}, {'id': 1130517330, 'node_id': 'MDU6TGFiZWwxMTMwNTE3MzMw', 'url': 'https://api.github.com/repos/apache/pulsar/labels/area/security', 'name': 'area/security', 'color': '1d76db', 'default': False, 'description': ''}, {'id': 1786669572, 'node_id': 'MDU6TGFiZWwxNzg2NjY5NTcy', 'url': 'https://api.github.com/repos/apache/pulsar/labels/doc-required', 'name': 'doc-required', 'color': 'db115e', 'default': False, 'description': 'Your PR changes impact docs and you will update later.'}, {'id': 3865578896, 'node_id': 'LA_kwDOA7PXtM7maA2Q', 'url': 'https://api.github.com/repos/apache/pulsar/labels/lifecycle/stale', 'name': 'lifecycle/stale', 'color': 'ededed', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 5, 'created_at': '2020-05-08T01:54:58Z', 'updated_at': '2022-12-06T09:39:56Z', 'author_association': 'MEMBER', 'active_lock_reason': None, 'body': 'in issue #6834, user report there is no doc for configure and use feature end-to-end messagecrypto in python.\r\nWe need to confirm whether this feature is supported in python, and add needed doc. ', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18757/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18757/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18763', 'id': 4632034, 'node_id': 'MDEwOkRpc2N1c3Npb240NjMyMDM0', 'number': 18763, 'title': 'Wishing list: Pulsar SQL support user defined indexes', 'user': {'login': 'KannarFr', 'id': 7518245, 'node_id': 'MDQ6VXNlcjc1MTgyNDU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7518245?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/KannarFr', 'html_url': 'https://github.com/KannarFr', 'followers_url': 'https://api.github.com/users/KannarFr/followers', 'following_url': 'https://api.github.com/users/KannarFr/following{/other_user}', 'gists_url': 'https://api.github.com/users/KannarFr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/KannarFr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/KannarFr/subscriptions', 'organizations_url': 'https://api.github.com/users/KannarFr/orgs', 'repos_url': 'https://api.github.com/users/KannarFr/repos', 'events_url': 'https://api.github.com/users/KannarFr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/KannarFr/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}, {'id': 1009467877, 'node_id': 'MDU6TGFiZWwxMDA5NDY3ODc3', 'url': 'https://api.github.com/repos/apache/pulsar/labels/area/sql', 'name': 'area/sql', 'color': '1d76db', 'default': False, 'description': 'Pulsar SQL related features'}, {'id': 3865578896, 'node_id': 'LA_kwDOA7PXtM7maA2Q', 'url': 'https://api.github.com/repos/apache/pulsar/labels/lifecycle/stale', 'name': 'lifecycle/stale', 'color': 'ededed', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 13, 'created_at': '2020-05-09T16:41:35Z', 'updated_at': '2022-12-06T10:49:40Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': "**Is your feature request related to a problem? Please describe.**\r\nCurrently, there is no index used to query topic using presto.  `__publish_time__` can be considered as index because of ledger storage way but it's not a real one.\r\n\r\n**Describe the solution you'd like**\r\nAvroSchema used to insert to topic should comes with a indexes definition. Since then, we should be able to have managedledger for indexes referencing classical managedledgers or messageid? And then configure pulsar presto impl to use user defined indexes from schema. (This is a suggestion to initialize the discussion, as @jerrypeng and I discussed it's a large discussion to have).\r\n\r\n**Describe alternatives you've considered**\r\nThere are probably multiples ways to do it, feel free to suggest your pov.\r\n\r\n**Additional context**\r\nReduce the query runtime.\r\n", 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18763/reactions', 'total_count': 10, '+1': 10, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18763/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18847', 'id': 4642719, 'node_id': 'MDEwOkRpc2N1c3Npb240NjQyNzE5', 'number': 18847, 'title': '[Feature][Functions] dynamic update configs', 'user': {'login': 'jiazhai', 'id': 6348208, 'node_id': 'MDQ6VXNlcjYzNDgyMDg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6348208?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jiazhai', 'html_url': 'https://github.com/jiazhai', 'followers_url': 'https://api.github.com/users/jiazhai/followers', 'following_url': 'https://api.github.com/users/jiazhai/following{/other_user}', 'gists_url': 'https://api.github.com/users/jiazhai/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jiazhai/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jiazhai/subscriptions', 'organizations_url': 'https://api.github.com/users/jiazhai/orgs', 'repos_url': 'https://api.github.com/users/jiazhai/repos', 'events_url': 'https://api.github.com/users/jiazhai/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jiazhai/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}, {'id': 853313264, 'node_id': 'MDU6TGFiZWw4NTMzMTMyNjQ=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/area/function', 'name': 'area/function', 'color': '1d76db', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 0, 'created_at': '2020-06-02T03:04:19Z', 'updated_at': '2022-12-09T13:05:11Z', 'author_association': 'MEMBER', 'active_lock_reason': None, 'body': 'The configs of Pulsar Functions are provided before Functions start. If user wants to update the config, the functions have to be deployed from start point again. \r\nIt would be great to provide a way to support config dynamic update.\r\n', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18847/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18847/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817001, 'node_id': 'DIC_kwDOA7PXtM4CQQqp', 'repository_id': 62117812, 'emoji': ':pray:', 'name': 'Q&A', 'description': 'Ask the community for help', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'q-a', 'is_answerable': True}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18458', 'id': 4564805, 'node_id': 'MDEwOkRpc2N1c3Npb240NTY0ODA1', 'number': 18458, 'title': 'Messages lost with new topic and regex subscription', 'user': {'login': 'baynes', 'id': 1922472, 'node_id': 'MDQ6VXNlcjE5MjI0NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1922472?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/baynes', 'html_url': 'https://github.com/baynes', 'followers_url': 'https://api.github.com/users/baynes/followers', 'following_url': 'https://api.github.com/users/baynes/following{/other_user}', 'gists_url': 'https://api.github.com/users/baynes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/baynes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/baynes/subscriptions', 'organizations_url': 'https://api.github.com/users/baynes/orgs', 'repos_url': 'https://api.github.com/users/baynes/repos', 'events_url': 'https://api.github.com/users/baynes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/baynes/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 399568955, 'node_id': 'MDU6TGFiZWwzOTk1Njg5NTU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/deprecated/question', 'name': 'deprecated/question', 'color': '5319E7', 'default': False, 'description': 'Questions should happened in GitHub Discussions'}, {'id': 3865578896, 'node_id': 'LA_kwDOA7PXtM7maA2Q', 'url': 'https://api.github.com/repos/apache/pulsar/labels/lifecycle/stale', 'name': 'lifecycle/stale', 'color': 'ededed', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 7, 'created_at': '2020-06-03T15:12:30Z', 'updated_at': '2022-11-14T09:22:04Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': "**Describe the bug**\r\nWhen a new topic is detected by a regexp subscription it takes time before the subscriptions cursor is set up for that topic. As the cursor is set to the end of the topic this means at least one message is lost and as this can take 40 seconds, one could lose 40 seconds of data.\r\n\r\n\r\n**To Reproduce**\r\n\r\nIf I set up a consumer with a regex subscription, for example:\r\n\r\n`/opt/pulsar/bin/pulsar-client consume --regex '.*' -s all -n 0`\r\n\r\nI then send a message on a **NEW** topic that matches the regex.\r\n\r\n`/opt/pulsar//bin/pulsar-client produce addtopic -m 'm1'`\r\n\r\nThe consumer detects the new topic and sets up a subscription to it. This can take 30-40 seconds. However it does not see the message (or any other messages sent befor the subscription is set up)\r\n\r\nOnce it is set up, sending more data to the topic will be picked up by the consumer.\r\n\r\n`/opt/pulsar//bin/pulsar-client produce addtopic -m 'm2'`\r\n\r\nThe consumer will display the message 'm2'.\r\n\r\nSo though it works from now on, potentially the first 40 seconds of data have been lost.\r\n\r\n**Expected behavior**\r\nAll messages sent to the new topic should be seen by the consumer.\r\n\r\n**Screenshots**\r\nN/A\r\n\r\n**Desktop (please complete the following information):**\r\n Centos 7\r\nPulsar 2.5.0, 2.5.1\r\n\r\n**Additional context**\r\n\r\nThe initial message(s) are on the topic, one can see them with a reader. So a solution would be for the cursor for the new topic subscription be created pointing to the start of the topic rather then the normal end in this case.\r\n", 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18458/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18458/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18846', 'id': 4642706, 'node_id': 'MDEwOkRpc2N1c3Npb240NjQyNzA2', 'number': 18846, 'title': 'Support zero queue consumer for partitioned topic.', 'user': {'login': 'codelipenghui', 'id': 12592133, 'node_id': 'MDQ6VXNlcjEyNTkyMTMz', 'avatar_url': 'https://avatars.githubusercontent.com/u/12592133?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/codelipenghui', 'html_url': 'https://github.com/codelipenghui', 'followers_url': 'https://api.github.com/users/codelipenghui/followers', 'following_url': 'https://api.github.com/users/codelipenghui/following{/other_user}', 'gists_url': 'https://api.github.com/users/codelipenghui/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/codelipenghui/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/codelipenghui/subscriptions', 'organizations_url': 'https://api.github.com/users/codelipenghui/orgs', 'repos_url': 'https://api.github.com/users/codelipenghui/repos', 'events_url': 'https://api.github.com/users/codelipenghui/events{/privacy}', 'received_events_url': 'https://api.github.com/users/codelipenghui/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 399568952, 'node_id': 'MDU6TGFiZWwzOTk1Njg5NTI=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/help%20wanted', 'name': 'help wanted', 'color': '008672', 'default': True, 'description': ''}, {'id': 447781389, 'node_id': 'MDU6TGFiZWw0NDc3ODEzODk=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/area/client', 'name': 'area/client', 'color': '1d76db', 'default': False, 'description': ''}, {'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 5, 'created_at': '2020-06-15T16:17:59Z', 'updated_at': '2022-12-09T13:00:10Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': '**Is your feature request related to a problem? Please describe.**\r\nCurrently, the zero queue consumer just can subscribe to a non-partitioned topic. In some case, we need to use zero queue consumer to subscribe to a partitioned topic. ', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18846/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18846/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817001, 'node_id': 'DIC_kwDOA7PXtM4CQQqp', 'repository_id': 62117812, 'emoji': ':pray:', 'name': 'Q&A', 'description': 'Ask the community for help', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'q-a', 'is_answerable': True}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18752', 'id': 4631698, 'node_id': 'MDEwOkRpc2N1c3Npb240NjMxNjk4', 'number': 18752, 'title': 'Namespace isolation policy :: No broker was available to own persistent', 'user': {'login': 'dineshkothuru2020', 'id': 67746490, 'node_id': 'MDQ6VXNlcjY3NzQ2NDkw', 'avatar_url': 'https://avatars.githubusercontent.com/u/67746490?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dineshkothuru2020', 'html_url': 'https://github.com/dineshkothuru2020', 'followers_url': 'https://api.github.com/users/dineshkothuru2020/followers', 'following_url': 'https://api.github.com/users/dineshkothuru2020/following{/other_user}', 'gists_url': 'https://api.github.com/users/dineshkothuru2020/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dineshkothuru2020/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dineshkothuru2020/subscriptions', 'organizations_url': 'https://api.github.com/users/dineshkothuru2020/orgs', 'repos_url': 'https://api.github.com/users/dineshkothuru2020/repos', 'events_url': 'https://api.github.com/users/dineshkothuru2020/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dineshkothuru2020/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 399568955, 'node_id': 'MDU6TGFiZWwzOTk1Njg5NTU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/deprecated/question', 'name': 'deprecated/question', 'color': '5319E7', 'default': False, 'description': 'Questions should happened in GitHub Discussions'}, {'id': 978303574, 'node_id': 'MDU6TGFiZWw5NzgzMDM1NzQ=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/area/broker', 'name': 'area/broker', 'color': '1d76db', 'default': False, 'description': ''}, {'id': 1786669572, 'node_id': 'MDU6TGFiZWwxNzg2NjY5NTcy', 'url': 'https://api.github.com/repos/apache/pulsar/labels/doc-required', 'name': 'doc-required', 'color': 'db115e', 'default': False, 'description': 'Your PR changes impact docs and you will update later.'}, {'id': 3865578896, 'node_id': 'LA_kwDOA7PXtM7maA2Q', 'url': 'https://api.github.com/repos/apache/pulsar/labels/lifecycle/stale', 'name': 'lifecycle/stale', 'color': 'ededed', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 0, 'created_at': '2020-07-02T14:03:33Z', 'updated_at': '2022-12-06T08:49:36Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Appreciate your help to resolve this issues: \r\n\r\nThanks in Advance :-)\r\n\r\nCreated an single plusar cluster setup with four broker services running on four different servers, my intend is to point the applicaiton to the broker running on same server, following are the steps has been followed\r\n\r\nNote : Customize ports are used for zookeeper,bookie and broker instead of default ports\r\n\r\n1) Create zookeeper setup on 3 servers\r\n2) Initilize the cluster setup with zookeeper,configruation (used zookeeper ip and port), webservice and broker url pointed to one of the server where broker service is running\r\n3) create the tenants and namespaces,\r\n4) created an namespaces isolation policy, assigned the primary and secondary broker url\r\n\r\ntry to consume topic on the namespace using the pulsar-client tool for which ns-islation policy is created  and attached, following error is thrown in console,\r\n\r\n./pulsar  initialize-cluster-metadata --cluster cluster1 --zookeeper  server1.com:8041  --configuration-store server1.com:8041  --web-service-url  http://server1.com:8008 --broker-service-url pulsar://server1.com:8050\r\n\r\n./pulsar-daemon start broker\r\n./pulsar-admin tenants create testtenant\r\n./pulsar-admin namespaces create testtenant/ns1\r\n\r\n./pulsar-admin ns-isolation-policy set --auto-failover-policy-params min_limit=1,usage_threshold=100,isPrimary=true --auto-failover-policy-type min_available --namespaces "testtenant/ns1"  --primary "server1.com:8008,server2.com:8008" --secondary "server3.com:8008,server4.com:8008" cluster1 ns-cluster1\r\n\r\nError\r\n\r\n07:04:19.842 [pulsar-client-io-1-1] INFO  org.apache.pulsar.client.impl.ConnectionPool - [[id: 0xbd927667, L:/xxxx:59344 - R:server/xxxxx:8050]] Connected to server\r\n07:04:19.853 [pulsar-client-io-1-1] ERROR org.apache.pulsar.client.impl.ClientCnx - [id: 0xbd927667, L:/xxxxx:59344 - R:server1/xxxxx:8050] Close connection because received internal-server error No broker was available to own persistent://testtenant/ns1/11\r\n07:04:19.854 [pulsar-client-io-1-1] WARN  org.apache.pulsar.client.impl.BinaryProtoLookupService - [persistent://testtenant/ns1/11] failed to send lookup request : org.apache.pulsar.client.api.PulsarClientException$LookupException: No broker was available to own persistent://testtenant/ns1/11\r\n07:04:19.854 [pulsar-client-io-1-1] WARN  org.apache.pulsar.client.impl.BinaryProtoLookupService - [persistent://testtenant/ns1/11] lookup failed : org.apache.pulsar.client.api.PulsarClientException$LookupException: No broker was available to own persistent://testtenant/ns1/11\r\njava.util.concurrent.CompletionException: org.apache.pulsar.client.api.PulsarClientException$LookupException: No broker was available to own persistent://testtenant/ns1/11\r\n        at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:292) ~[?:1.8.0_252]\r\n        at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:308) ~[?:1.8.0_252]\r\n        at java.util.concurrent.CompletableFuture.uniAccept(CompletableFuture.java:661) ~[?:1.8.0_252]\r\n        at java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:646) ~[?:1.8.0_252]\r\n        at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:488) [?:1.8.0_252]\r\n        at java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:1990) [?:1.8.0_252]\r\n        at org.apache.pulsar.client.impl.ClientCnx.handleLookupResponse(ClientCnx.java:474) [org.apache.pulsar-pulsar-client-original-2.6.0.jar:2.6.0]\r\n        at org.apache.pulsar.common.protocol.PulsarDecoder.channelRead(PulsarDecoder.java:131) [org.apache.pulsar-pulsar-common-2.6.0.jar:2.6.0]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [io.netty-netty-transport-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [io.netty-netty-transport-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [io.netty-netty-transport-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:321) [io.netty-netty-codec-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:295) [io.netty-netty-codec-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [io.netty-netty-transport-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [io.netty-netty-transport-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [io.netty-netty-transport-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [io.netty-netty-transport-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [io.netty-netty-transport-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [io.netty-netty-transport-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [io.netty-netty-transport-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:792) [io.netty-netty-transport-native-epoll-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:475) [io.netty-netty-transport-native-epoll-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378) [io.netty-netty-transport-native-epoll-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [io.netty-netty-common-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [io.netty-netty-common-4.1.48.Final.jar:4.1.48.Final]\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [io.netty-netty-common-4.1.48.Final.jar:4.1.48.Final]\r\n        at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]\r\nCaused by: org.apache.pulsar.client.api.PulsarClientException$LookupException: No broker was available to own persistent://testtenant/ns1/11\r\n        at org.apache.pulsar.client.impl.ClientCnx.getPulsarClientException(ClientCnx.java:991) ~[org.apache.pulsar-pulsar-client-original-2.6.0.jar:2.6.0]\r\n        at org.apache.pulsar.client.impl.ClientCnx.handleLookupResponse(ClientCnx.java:475) ~[org.apache.pulsar-pulsar-client-original-2.6.0.jar:2.6.0]\r\n        ... 20 more\r\n07:04:19.856 [pulsar-client-io-1-1] WARN  org.apache.pulsar.client.impl.ConnectionHandler - [testtenant/ns1/11] [test] Error connecting to broker: org.apache.pulsar.client.api.PulsarClientException$LookupException: No broker was available to own persistent://testtenant/ns1/11\r\n07:04:19.856 [pulsar-client-io-1-1] WARN  org.apache.pulsar.client.impl.ConnectionHandler - [viswa/ns1/11] [test] Could not get connection to broker: org.apache.pulsar.client.api.PulsarClientException$LookupException: No broker was available to own persistent://testtenant/ns1/11 -- Will try again in 6.234 s\r\n07:04:19.856 [pulsar-client-io-1-1] INFO  org.apache.pulsar.client.impl.ClientCnx - [id: 0xbd927667, L:/xxxxx:59344 ! R:server1/xxxxxxx:8050] Disconnected\r\n\r\nns-isolation-policy:\r\n\r\n./pulsar-admin ns-isolation-policy brokers cluster1\r\n{\r\n  "brokerName" : "server4.com:8008",\r\n  "isPrimary" : false\r\n}\r\n{\r\n  "brokerName" : "server3.com:8008",\r\n  "isPrimary" : false\r\n}\r\n{\r\n  "brokerName" : "server2.com:8008",\r\n  "isPrimary" : false,\r\n  "namespaceRegex" : [ "testtenant/ns1" ]\r\n}\r\n{\r\n  "brokerName" : "server1.com:8008",\r\n  **"isPrimary" : false,**\r\n  "namespaceRegex" : [ "testtenant/ns1" ]\r\n}\r\n\r\n./pulsar-admin ns-isolation-policy broker cluster1 --broker server1.com:8008\r\n{\r\n  "brokerName" : "server1.com:8008",\r\n  "policyName" : "ns-cluster1",\r\n  **"isPrimary" : true,**\r\n  "namespaceRegex" : [ "testtenant/ns1" ]\r\n}\r\nPls advice how "isPrimary" parameter value is different in Brokers list and Individual Broker command output.\r\n\r\nThanks', 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18752/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18752/timeline'}, {'repository_url': 'https://api.github.com/repos/apache/pulsar', 'category': {'id': 37817000, 'node_id': 'DIC_kwDOA7PXtM4CQQqo', 'repository_id': 62117812, 'emoji': ':speech_balloon:', 'name': 'General', 'description': 'Chat about anything and everything here', 'created_at': '2022-07-16T20:42:07.000Z', 'updated_at': '2022-07-16T20:42:07.000Z', 'slug': 'general', 'is_answerable': False}, 'answer_html_url': None, 'answer_chosen_at': None, 'answer_chosen_by': None, 'html_url': 'https://github.com/apache/pulsar/discussions/18873', 'id': 4650355, 'node_id': 'MDEwOkRpc2N1c3Npb240NjUwMzU1', 'number': 18873, 'title': 'Throttle the ledger rollover', 'user': {'login': 'codelipenghui', 'id': 12592133, 'node_id': 'MDQ6VXNlcjEyNTkyMTMz', 'avatar_url': 'https://avatars.githubusercontent.com/u/12592133?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/codelipenghui', 'html_url': 'https://github.com/codelipenghui', 'followers_url': 'https://api.github.com/users/codelipenghui/followers', 'following_url': 'https://api.github.com/users/codelipenghui/following{/other_user}', 'gists_url': 'https://api.github.com/users/codelipenghui/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/codelipenghui/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/codelipenghui/subscriptions', 'organizations_url': 'https://api.github.com/users/codelipenghui/orgs', 'repos_url': 'https://api.github.com/users/codelipenghui/repos', 'events_url': 'https://api.github.com/users/codelipenghui/events{/privacy}', 'received_events_url': 'https://api.github.com/users/codelipenghui/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'labels': [{'id': 493495385, 'node_id': 'MDU6TGFiZWw0OTM0OTUzODU=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/type/feature', 'name': 'type/feature', 'color': '5319e7', 'default': False, 'description': 'The PR added a new feature or issue requested a new feature'}, {'id': 978303574, 'node_id': 'MDU6TGFiZWw5NzgzMDM1NzQ=', 'url': 'https://api.github.com/repos/apache/pulsar/labels/area/broker', 'name': 'area/broker', 'color': '1d76db', 'default': False, 'description': ''}], 'state': 'open', 'state_reason': None, 'locked': False, 'comments': 1, 'created_at': '2020-08-03T02:43:04Z', 'updated_at': '2022-12-11T05:08:03Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': "**Is your feature request related to a problem? Please describe.**\r\nHigh ledger rollover frequency may lead to zookeeper in heavy workload. In order to make zookeeper run more stable, we should limit the ledger rollover frequency.\r\n\r\n**Describe the solution you'd like**\r\nAdd a rate limiter for the ledger rollover. \r\n", 'reactions': {'url': 'https://api.github.com/repos/apache/pulsar/discussions/18873/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/apache/pulsar/discussions/18873/timeline'}]
