Comments for Issue 667: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2533594926', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/667#issuecomment-2533594926', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/667', 'id': 2533594926, 'node_id': 'IC_kwDOI-e9u86XA5cu', 'user': {'login': 'ObservedObserver', 'id': 22167673, 'node_id': 'MDQ6VXNlcjIyMTY3Njcz', 'avatar_url': 'https://avatars.githubusercontent.com/u/22167673?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ObservedObserver', 'html_url': 'https://github.com/ObservedObserver', 'followers_url': 'https://api.github.com/users/ObservedObserver/followers', 'following_url': 'https://api.github.com/users/ObservedObserver/following{/other_user}', 'gists_url': 'https://api.github.com/users/ObservedObserver/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ObservedObserver/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ObservedObserver/subscriptions', 'organizations_url': 'https://api.github.com/users/ObservedObserver/orgs', 'repos_url': 'https://api.github.com/users/ObservedObserver/repos', 'events_url': 'https://api.github.com/users/ObservedObserver/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ObservedObserver/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-12-11T04:18:40Z', 'updated_at': '2024-12-11T04:18:40Z', 'author_association': 'MEMBER', 'body': "A new release is comming at the end of this month is the extend of chart library, pygwalker will allow user to switch to matplotlib or altair, it's more like a showcase how to switch the render layer for pygwalker. And I believe it will help developers who are interested in customization or 3rd party chart component for pygwalker.\r\n", 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2533594926/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2536051173', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/667#issuecomment-2536051173', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/667', 'id': 2536051173, 'node_id': 'IC_kwDOI-e9u86XKRHl', 'user': {'login': 'LucaCerina', 'id': 6688907, 'node_id': 'MDQ6VXNlcjY2ODg5MDc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6688907?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/LucaCerina', 'html_url': 'https://github.com/LucaCerina', 'followers_url': 'https://api.github.com/users/LucaCerina/followers', 'following_url': 'https://api.github.com/users/LucaCerina/following{/other_user}', 'gists_url': 'https://api.github.com/users/LucaCerina/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/LucaCerina/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/LucaCerina/subscriptions', 'organizations_url': 'https://api.github.com/users/LucaCerina/orgs', 'repos_url': 'https://api.github.com/users/LucaCerina/repos', 'events_url': 'https://api.github.com/users/LucaCerina/events{/privacy}', 'received_events_url': 'https://api.github.com/users/LucaCerina/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-12-11T13:53:15Z', 'updated_at': '2024-12-11T13:53:15Z', 'author_association': 'NONE', 'body': "Great! Can't wait to try it.", 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2536051173/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 665: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2511339988', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/665#issuecomment-2511339988', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/665', 'id': 2511339988, 'node_id': 'IC_kwDOI-e9u86VsAHU', 'user': {'login': 'ObservedObserver', 'id': 22167673, 'node_id': 'MDQ6VXNlcjIyMTY3Njcz', 'avatar_url': 'https://avatars.githubusercontent.com/u/22167673?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ObservedObserver', 'html_url': 'https://github.com/ObservedObserver', 'followers_url': 'https://api.github.com/users/ObservedObserver/followers', 'following_url': 'https://api.github.com/users/ObservedObserver/following{/other_user}', 'gists_url': 'https://api.github.com/users/ObservedObserver/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ObservedObserver/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ObservedObserver/subscriptions', 'organizations_url': 'https://api.github.com/users/ObservedObserver/orgs', 'repos_url': 'https://api.github.com/users/ObservedObserver/repos', 'events_url': 'https://api.github.com/users/ObservedObserver/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ObservedObserver/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-12-02T11:57:53Z', 'updated_at': '2024-12-02T11:57:53Z', 'author_association': 'MEMBER', 'body': "Well, it's actually a empty filter, not a bug, you can edit it later. but if it is an empty filter, it will not effect on the data.", 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2511339988/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2511438295', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/665#issuecomment-2511438295', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/665', 'id': 2511438295, 'node_id': 'IC_kwDOI-e9u86VsYHX', 'user': {'login': 'riteshhub', 'id': 20129827, 'node_id': 'MDQ6VXNlcjIwMTI5ODI3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20129827?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/riteshhub', 'html_url': 'https://github.com/riteshhub', 'followers_url': 'https://api.github.com/users/riteshhub/followers', 'following_url': 'https://api.github.com/users/riteshhub/following{/other_user}', 'gists_url': 'https://api.github.com/users/riteshhub/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/riteshhub/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/riteshhub/subscriptions', 'organizations_url': 'https://api.github.com/users/riteshhub/orgs', 'repos_url': 'https://api.github.com/users/riteshhub/repos', 'events_url': 'https://api.github.com/users/riteshhub/events{/privacy}', 'received_events_url': 'https://api.github.com/users/riteshhub/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-12-02T12:41:23Z', 'updated_at': '2024-12-02T12:41:23Z', 'author_association': 'NONE', 'body': "@ObservedObserver Thanks for looking into this. I agree that it is an empty filter and hence not affect the data. But from user's perspective, they think that some kind of filter has been applied on that column, isn't it?", 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2511438295/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 664: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2511343653', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/664#issuecomment-2511343653', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/664', 'id': 2511343653, 'node_id': 'IC_kwDOI-e9u86VsBAl', 'user': {'login': 'ObservedObserver', 'id': 22167673, 'node_id': 'MDQ6VXNlcjIyMTY3Njcz', 'avatar_url': 'https://avatars.githubusercontent.com/u/22167673?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ObservedObserver', 'html_url': 'https://github.com/ObservedObserver', 'followers_url': 'https://api.github.com/users/ObservedObserver/followers', 'following_url': 'https://api.github.com/users/ObservedObserver/following{/other_user}', 'gists_url': 'https://api.github.com/users/ObservedObserver/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ObservedObserver/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ObservedObserver/subscriptions', 'organizations_url': 'https://api.github.com/users/ObservedObserver/orgs', 'repos_url': 'https://api.github.com/users/ObservedObserver/repos', 'events_url': 'https://api.github.com/users/ObservedObserver/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ObservedObserver/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-12-02T11:59:30Z', 'updated_at': '2024-12-02T11:59:30Z', 'author_association': 'MEMBER', 'body': 'Do you mean you want to set a default geo location and zoom level for other users, or you just want to know how to zoom in/out on maps.', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2511343653/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 663: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2568515642', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/663#issuecomment-2568515642', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/663', 'id': 2568515642, 'node_id': 'IC_kwDOI-e9u86ZGHA6', 'user': {'login': 'HudsonMC16', 'id': 34110053, 'node_id': 'MDQ6VXNlcjM0MTEwMDUz', 'avatar_url': 'https://avatars.githubusercontent.com/u/34110053?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/HudsonMC16', 'html_url': 'https://github.com/HudsonMC16', 'followers_url': 'https://api.github.com/users/HudsonMC16/followers', 'following_url': 'https://api.github.com/users/HudsonMC16/following{/other_user}', 'gists_url': 'https://api.github.com/users/HudsonMC16/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/HudsonMC16/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/HudsonMC16/subscriptions', 'organizations_url': 'https://api.github.com/users/HudsonMC16/orgs', 'repos_url': 'https://api.github.com/users/HudsonMC16/repos', 'events_url': 'https://api.github.com/users/HudsonMC16/events{/privacy}', 'received_events_url': 'https://api.github.com/users/HudsonMC16/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-02T23:26:58Z', 'updated_at': '2025-01-02T23:26:58Z', 'author_association': 'NONE', 'body': "To add some additional context, this could be a significant issue, especially for Windows users, as the numpy 1.X binaries aren't available on pypi anymore. ", 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2568515642/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2597564909', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/663#issuecomment-2597564909', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/663', 'id': 2597564909, 'node_id': 'IC_kwDOI-e9u86a07Ht', 'user': {'login': 'mooonseeker', 'id': 68989104, 'node_id': 'MDQ6VXNlcjY4OTg5MTA0', 'avatar_url': 'https://avatars.githubusercontent.com/u/68989104?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mooonseeker', 'html_url': 'https://github.com/mooonseeker', 'followers_url': 'https://api.github.com/users/mooonseeker/followers', 'following_url': 'https://api.github.com/users/mooonseeker/following{/other_user}', 'gists_url': 'https://api.github.com/users/mooonseeker/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mooonseeker/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mooonseeker/subscriptions', 'organizations_url': 'https://api.github.com/users/mooonseeker/orgs', 'repos_url': 'https://api.github.com/users/mooonseeker/repos', 'events_url': 'https://api.github.com/users/mooonseeker/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mooonseeker/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-17T07:01:07Z', 'updated_at': '2025-01-17T07:01:07Z', 'author_association': 'NONE', 'body': "Totally agree, **pygwalker** is great, but it's upset to downgrade the **numpy** to version 1.x", 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2597564909/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2644420945', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/663#issuecomment-2644420945', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/663', 'id': 2644420945, 'node_id': 'IC_kwDOI-e9u86dnqlR', 'user': {'login': 'longxiaofei', 'id': 28337703, 'node_id': 'MDQ6VXNlcjI4MzM3NzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/28337703?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/longxiaofei', 'html_url': 'https://github.com/longxiaofei', 'followers_url': 'https://api.github.com/users/longxiaofei/followers', 'following_url': 'https://api.github.com/users/longxiaofei/following{/other_user}', 'gists_url': 'https://api.github.com/users/longxiaofei/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/longxiaofei/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/longxiaofei/subscriptions', 'organizations_url': 'https://api.github.com/users/longxiaofei/orgs', 'repos_url': 'https://api.github.com/users/longxiaofei/repos', 'events_url': 'https://api.github.com/users/longxiaofei/events{/privacy}', 'received_events_url': 'https://api.github.com/users/longxiaofei/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-08T01:51:15Z', 'updated_at': '2025-02-08T01:51:15Z', 'author_association': 'CONTRIBUTOR', 'body': 'Thanks for feedbacks.\n\nDue to some old APIs being deprecated when numpy==2.0.0 was released, errors occurred while using pandas.\n\nTherefore, I temporarily fixed the numpy version.\n\nI will retest pandas and numpy, and remove the numpy version restriction in the next version of pygwalker.', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2644420945/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 661: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2655755236', 'html_url': 'https://github.com/Kanaries/pygwalker/pull/661#issuecomment-2655755236', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/661', 'id': 2655755236, 'node_id': 'IC_kwDOI-e9u86eS5vk', 'user': {'login': 'islxyqwe', 'id': 15280968, 'node_id': 'MDQ6VXNlcjE1MjgwOTY4', 'avatar_url': 'https://avatars.githubusercontent.com/u/15280968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/islxyqwe', 'html_url': 'https://github.com/islxyqwe', 'followers_url': 'https://api.github.com/users/islxyqwe/followers', 'following_url': 'https://api.github.com/users/islxyqwe/following{/other_user}', 'gists_url': 'https://api.github.com/users/islxyqwe/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/islxyqwe/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/islxyqwe/subscriptions', 'organizations_url': 'https://api.github.com/users/islxyqwe/orgs', 'repos_url': 'https://api.github.com/users/islxyqwe/repos', 'events_url': 'https://api.github.com/users/islxyqwe/events{/privacy}', 'received_events_url': 'https://api.github.com/users/islxyqwe/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-13T07:37:34Z', 'updated_at': '2025-02-13T07:37:34Z', 'author_association': 'MEMBER', 'body': 'preview version: 0.4.9.14a1', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2655755236/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 658: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2466261092', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/658#issuecomment-2466261092', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/658', 'id': 2466261092, 'node_id': 'IC_kwDOI-e9u86TAChk', 'user': {'login': 'MarcSkovMadsen', 'id': 42288570, 'node_id': 'MDQ6VXNlcjQyMjg4NTcw', 'avatar_url': 'https://avatars.githubusercontent.com/u/42288570?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/MarcSkovMadsen', 'html_url': 'https://github.com/MarcSkovMadsen', 'followers_url': 'https://api.github.com/users/MarcSkovMadsen/followers', 'following_url': 'https://api.github.com/users/MarcSkovMadsen/following{/other_user}', 'gists_url': 'https://api.github.com/users/MarcSkovMadsen/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/MarcSkovMadsen/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/MarcSkovMadsen/subscriptions', 'organizations_url': 'https://api.github.com/users/MarcSkovMadsen/orgs', 'repos_url': 'https://api.github.com/users/MarcSkovMadsen/repos', 'events_url': 'https://api.github.com/users/MarcSkovMadsen/events{/privacy}', 'received_events_url': 'https://api.github.com/users/MarcSkovMadsen/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-11-09T15:38:57Z', 'updated_at': '2024-11-09T15:39:32Z', 'author_association': 'CONTRIBUTOR', 'body': "For now I will try to figure out how I can convert a duckdb relation to the pygwalker database connector because that is what is important for my own use cases. I've asked how in https://github.com/duckdb/duckdb/discussions/14768.", 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2466261092/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 654: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2464156858', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/654#issuecomment-2464156858', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/654', 'id': 2464156858, 'node_id': 'IC_kwDOI-e9u86S4Ay6', 'user': {'login': 'ObservedObserver', 'id': 22167673, 'node_id': 'MDQ6VXNlcjIyMTY3Njcz', 'avatar_url': 'https://avatars.githubusercontent.com/u/22167673?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ObservedObserver', 'html_url': 'https://github.com/ObservedObserver', 'followers_url': 'https://api.github.com/users/ObservedObserver/followers', 'following_url': 'https://api.github.com/users/ObservedObserver/following{/other_user}', 'gists_url': 'https://api.github.com/users/ObservedObserver/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ObservedObserver/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ObservedObserver/subscriptions', 'organizations_url': 'https://api.github.com/users/ObservedObserver/orgs', 'repos_url': 'https://api.github.com/users/ObservedObserver/repos', 'events_url': 'https://api.github.com/users/ObservedObserver/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ObservedObserver/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-11-08T08:52:43Z', 'updated_at': '2024-11-08T08:53:16Z', 'author_association': 'MEMBER', 'body': 'The config part is the most important information and can be directly used for pygwalker.\r\n\r\nExcept config, `workflows list` can be generated by the config, and is only used for some edge cases when pygwalker is used as static assets, like preview mode in jupyter notebook/kaggle notebooks. In most cases, it is not required.\r\n\r\nBut if you need to get the workflow list, you can use the util function `specToWorkflow` in graphic-walker to turn a graphic walker spec (the config part) into its workflow. (graphic-walker/packages/graphic-walker/src/utils/workflow.ts)\r\n\r\nFor the `range` filter, it can be generated in graphic-walker, you need to add a quantitative field to filter, then switch the filter type to range.\r\n![image](https://github.com/user-attachments/assets/0fdbd63a-651f-4dad-b3ad-ca7a3d70de9c)\r\n\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2464156858/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2466034179', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/654#issuecomment-2466034179', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/654', 'id': 2466034179, 'node_id': 'IC_kwDOI-e9u86S_LID', 'user': {'login': 'MarcSkovMadsen', 'id': 42288570, 'node_id': 'MDQ6VXNlcjQyMjg4NTcw', 'avatar_url': 'https://avatars.githubusercontent.com/u/42288570?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/MarcSkovMadsen', 'html_url': 'https://github.com/MarcSkovMadsen', 'followers_url': 'https://api.github.com/users/MarcSkovMadsen/followers', 'following_url': 'https://api.github.com/users/MarcSkovMadsen/following{/other_user}', 'gists_url': 'https://api.github.com/users/MarcSkovMadsen/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/MarcSkovMadsen/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/MarcSkovMadsen/subscriptions', 'organizations_url': 'https://api.github.com/users/MarcSkovMadsen/orgs', 'repos_url': 'https://api.github.com/users/MarcSkovMadsen/repos', 'events_url': 'https://api.github.com/users/MarcSkovMadsen/events{/privacy}', 'received_events_url': 'https://api.github.com/users/MarcSkovMadsen/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-11-09T04:06:49Z', 'updated_at': '2024-11-09T04:06:49Z', 'author_association': 'CONTRIBUTOR', 'body': 'Thx. I can now create the range filter. I need to first remove the manually added month range filter. Change to quantitative and then I can re-add it again.\r\n\r\nJust changing to quantitative field without removing filter will not work.', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2466034179/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 645: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2423423311', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/645#issuecomment-2423423311', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/645', 'id': 2423423311, 'node_id': 'IC_kwDOI-e9u86QcoFP', 'user': {'login': 'longxiaofei', 'id': 28337703, 'node_id': 'MDQ6VXNlcjI4MzM3NzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/28337703?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/longxiaofei', 'html_url': 'https://github.com/longxiaofei', 'followers_url': 'https://api.github.com/users/longxiaofei/followers', 'following_url': 'https://api.github.com/users/longxiaofei/following{/other_user}', 'gists_url': 'https://api.github.com/users/longxiaofei/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/longxiaofei/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/longxiaofei/subscriptions', 'organizations_url': 'https://api.github.com/users/longxiaofei/orgs', 'repos_url': 'https://api.github.com/users/longxiaofei/repos', 'events_url': 'https://api.github.com/users/longxiaofei/events{/privacy}', 'received_events_url': 'https://api.github.com/users/longxiaofei/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-19T01:13:38Z', 'updated_at': '2024-10-19T01:13:38Z', 'author_association': 'CONTRIBUTOR', 'body': 'Hi @kidoln \r\n\r\nAt that time, height and width were only used to adjust the height and width of the HTML iframe, and could not actually adjust the height and width of the pygwalker UI. \r\n\r\nTherefore, after using the Streamlit component to render the pygwalker UI, these two parameters were removed.', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2423423311/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2424399879', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/645#issuecomment-2424399879', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/645', 'id': 2424399879, 'node_id': 'IC_kwDOI-e9u86QgWgH', 'user': {'login': 'kidoln', 'id': 886552, 'node_id': 'MDQ6VXNlcjg4NjU1Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/886552?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kidoln', 'html_url': 'https://github.com/kidoln', 'followers_url': 'https://api.github.com/users/kidoln/followers', 'following_url': 'https://api.github.com/users/kidoln/following{/other_user}', 'gists_url': 'https://api.github.com/users/kidoln/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kidoln/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kidoln/subscriptions', 'organizations_url': 'https://api.github.com/users/kidoln/orgs', 'repos_url': 'https://api.github.com/users/kidoln/repos', 'events_url': 'https://api.github.com/users/kidoln/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kidoln/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-20T01:52:22Z', 'updated_at': '2024-10-20T01:52:22Z', 'author_association': 'NONE', 'body': '@longxiaofei  So, there’s no way to adjust the height of Pygwalker in Streamlit, is there?', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2424399879/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2425014223', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/645#issuecomment-2425014223', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/645', 'id': 2425014223, 'node_id': 'IC_kwDOI-e9u86QisfP', 'user': {'login': 'longxiaofei', 'id': 28337703, 'node_id': 'MDQ6VXNlcjI4MzM3NzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/28337703?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/longxiaofei', 'html_url': 'https://github.com/longxiaofei', 'followers_url': 'https://api.github.com/users/longxiaofei/followers', 'following_url': 'https://api.github.com/users/longxiaofei/following{/other_user}', 'gists_url': 'https://api.github.com/users/longxiaofei/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/longxiaofei/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/longxiaofei/subscriptions', 'organizations_url': 'https://api.github.com/users/longxiaofei/orgs', 'repos_url': 'https://api.github.com/users/longxiaofei/repos', 'events_url': 'https://api.github.com/users/longxiaofei/events{/privacy}', 'received_events_url': 'https://api.github.com/users/longxiaofei/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-20T14:30:24Z', 'updated_at': '2024-10-20T14:30:24Z', 'author_association': 'CONTRIBUTOR', 'body': 'Hi @kidoln \r\n\r\nThere is currently no way to set the height of pygwalker.\r\n\r\nBecause the height of graphic-walker ui is fixed, even if we adjust the height to 500, this will show part of the ui and the user will need to slide to see different parts of the ui.\r\n\r\nCan you give an case where you need to use the height parameter? \r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2425014223/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2425380353', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/645#issuecomment-2425380353', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/645', 'id': 2425380353, 'node_id': 'IC_kwDOI-e9u86QkF4B', 'user': {'login': 'kidoln', 'id': 886552, 'node_id': 'MDQ6VXNlcjg4NjU1Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/886552?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kidoln', 'html_url': 'https://github.com/kidoln', 'followers_url': 'https://api.github.com/users/kidoln/followers', 'following_url': 'https://api.github.com/users/kidoln/following{/other_user}', 'gists_url': 'https://api.github.com/users/kidoln/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kidoln/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kidoln/subscriptions', 'organizations_url': 'https://api.github.com/users/kidoln/orgs', 'repos_url': 'https://api.github.com/users/kidoln/repos', 'events_url': 'https://api.github.com/users/kidoln/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kidoln/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-21T01:36:24Z', 'updated_at': '2024-10-21T01:36:24Z', 'author_association': 'NONE', 'body': '@longxiaofei This is screenshot of my app. I want to make pygwalker to fill the empty space.\r\n<img width="2559" alt="image" src="https://github.com/user-attachments/assets/51e7545a-d46e-47bf-b052-7746c5c78611">\r\n', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2425380353/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 640: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2449508973', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/640#issuecomment-2449508973', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/640', 'id': 2449508973, 'node_id': 'IC_kwDOI-e9u86SAIpt', 'user': {'login': 'ObservedObserver', 'id': 22167673, 'node_id': 'MDQ6VXNlcjIyMTY3Njcz', 'avatar_url': 'https://avatars.githubusercontent.com/u/22167673?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ObservedObserver', 'html_url': 'https://github.com/ObservedObserver', 'followers_url': 'https://api.github.com/users/ObservedObserver/followers', 'following_url': 'https://api.github.com/users/ObservedObserver/following{/other_user}', 'gists_url': 'https://api.github.com/users/ObservedObserver/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ObservedObserver/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ObservedObserver/subscriptions', 'organizations_url': 'https://api.github.com/users/ObservedObserver/orgs', 'repos_url': 'https://api.github.com/users/ObservedObserver/repos', 'events_url': 'https://api.github.com/users/ObservedObserver/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ObservedObserver/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-31T10:19:07Z', 'updated_at': '2024-10-31T10:19:07Z', 'author_association': 'MEMBER', 'body': 'Related discussion here: https://github.com/Kanaries/pygwalker/issues/454\r\n\r\nBesides, if you want to have more customization of AI + data visualization, try [graphic-walker](https://github.com/Kanaries/graphic-walker), which provides more API for local integration.', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2449508973/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 633: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2381833936', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/633#issuecomment-2381833936', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/633', 'id': 2381833936, 'node_id': 'IC_kwDOI-e9u86N9-bQ', 'user': {'login': 'longxiaofei', 'id': 28337703, 'node_id': 'MDQ6VXNlcjI4MzM3NzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/28337703?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/longxiaofei', 'html_url': 'https://github.com/longxiaofei', 'followers_url': 'https://api.github.com/users/longxiaofei/followers', 'following_url': 'https://api.github.com/users/longxiaofei/following{/other_user}', 'gists_url': 'https://api.github.com/users/longxiaofei/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/longxiaofei/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/longxiaofei/subscriptions', 'organizations_url': 'https://api.github.com/users/longxiaofei/orgs', 'repos_url': 'https://api.github.com/users/longxiaofei/repos', 'events_url': 'https://api.github.com/users/longxiaofei/events{/privacy}', 'received_events_url': 'https://api.github.com/users/longxiaofei/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-30T01:26:46Z', 'updated_at': '2024-09-30T01:26:46Z', 'author_association': 'CONTRIBUTOR', 'body': 'Hi @MindyZHAOMinzhu, thanks for your feedback.\r\n\r\nThis may be caused by a bug in kanaries cloud api.\r\n\r\nI will contact the related developer to check this issue.', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2381833936/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2383307846', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/633#issuecomment-2383307846', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/633', 'id': 2383307846, 'node_id': 'IC_kwDOI-e9u86ODmRG', 'user': {'login': 'MindyZHAOMinzhu', 'id': 47046261, 'node_id': 'MDQ6VXNlcjQ3MDQ2MjYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/47046261?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/MindyZHAOMinzhu', 'html_url': 'https://github.com/MindyZHAOMinzhu', 'followers_url': 'https://api.github.com/users/MindyZHAOMinzhu/followers', 'following_url': 'https://api.github.com/users/MindyZHAOMinzhu/following{/other_user}', 'gists_url': 'https://api.github.com/users/MindyZHAOMinzhu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/MindyZHAOMinzhu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/MindyZHAOMinzhu/subscriptions', 'organizations_url': 'https://api.github.com/users/MindyZHAOMinzhu/orgs', 'repos_url': 'https://api.github.com/users/MindyZHAOMinzhu/repos', 'events_url': 'https://api.github.com/users/MindyZHAOMinzhu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/MindyZHAOMinzhu/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-30T14:05:13Z', 'updated_at': '2024-09-30T14:05:27Z', 'author_association': 'NONE', 'body': '> Hi @MindyZHAOMinzhu, thanks for your feedback.\r\n> \r\n> This may be caused by a bug in kanaries cloud api.\r\n> \r\n> I will contact the related developer to check this issue.\r\n\r\nMany thanks for the help!', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2383307846/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 628: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2375501778', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/628#issuecomment-2375501778', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/628', 'id': 2375501778, 'node_id': 'IC_kwDOI-e9u86Nl0fS', 'user': {'login': 'longxiaofei', 'id': 28337703, 'node_id': 'MDQ6VXNlcjI4MzM3NzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/28337703?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/longxiaofei', 'html_url': 'https://github.com/longxiaofei', 'followers_url': 'https://api.github.com/users/longxiaofei/followers', 'following_url': 'https://api.github.com/users/longxiaofei/following{/other_user}', 'gists_url': 'https://api.github.com/users/longxiaofei/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/longxiaofei/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/longxiaofei/subscriptions', 'organizations_url': 'https://api.github.com/users/longxiaofei/orgs', 'repos_url': 'https://api.github.com/users/longxiaofei/repos', 'events_url': 'https://api.github.com/users/longxiaofei/events{/privacy}', 'received_events_url': 'https://api.github.com/users/longxiaofei/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-26T00:30:26Z', 'updated_at': '2024-09-26T00:30:26Z', 'author_association': 'CONTRIBUTOR', 'body': '@RodrigoSKohl Thanks for your feedback.\r\n\r\nCurrently, pygwalker does not support displaying only `Visualization`.\r\n\r\nIn the future, a `gw_mode` parameter will be added to provide this feature, such as `gw_mode="visualization"`.\r\n', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2375501778/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2375612964', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/628#issuecomment-2375612964', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/628', 'id': 2375612964, 'node_id': 'IC_kwDOI-e9u86NmPok', 'user': {'login': 'RodrigoSKohl', 'id': 107029851, 'node_id': 'U_kgDOBmElWw', 'avatar_url': 'https://avatars.githubusercontent.com/u/107029851?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/RodrigoSKohl', 'html_url': 'https://github.com/RodrigoSKohl', 'followers_url': 'https://api.github.com/users/RodrigoSKohl/followers', 'following_url': 'https://api.github.com/users/RodrigoSKohl/following{/other_user}', 'gists_url': 'https://api.github.com/users/RodrigoSKohl/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/RodrigoSKohl/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/RodrigoSKohl/subscriptions', 'organizations_url': 'https://api.github.com/users/RodrigoSKohl/orgs', 'repos_url': 'https://api.github.com/users/RodrigoSKohl/repos', 'events_url': 'https://api.github.com/users/RodrigoSKohl/events{/privacy}', 'received_events_url': 'https://api.github.com/users/RodrigoSKohl/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-26T02:14:35Z', 'updated_at': '2024-09-26T02:14:35Z', 'author_association': 'NONE', 'body': 'Thanks for the reply @longxiaofei . One last question, using the [GraphicWalker](https://github.com/Kanaries/graphic-walker) frontend package, I would be able to control the componentes render on server side natively?', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2375612964/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 627: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2378290648', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/627#issuecomment-2378290648', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/627', 'id': 2378290648, 'node_id': 'IC_kwDOI-e9u86NwdXY', 'user': {'login': 'longxiaofei', 'id': 28337703, 'node_id': 'MDQ6VXNlcjI4MzM3NzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/28337703?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/longxiaofei', 'html_url': 'https://github.com/longxiaofei', 'followers_url': 'https://api.github.com/users/longxiaofei/followers', 'following_url': 'https://api.github.com/users/longxiaofei/following{/other_user}', 'gists_url': 'https://api.github.com/users/longxiaofei/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/longxiaofei/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/longxiaofei/subscriptions', 'organizations_url': 'https://api.github.com/users/longxiaofei/orgs', 'repos_url': 'https://api.github.com/users/longxiaofei/repos', 'events_url': 'https://api.github.com/users/longxiaofei/events{/privacy}', 'received_events_url': 'https://api.github.com/users/longxiaofei/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-27T02:33:01Z', 'updated_at': '2024-09-27T02:33:01Z', 'author_association': 'CONTRIBUTOR', 'body': 'I will check it.', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2378290648/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 624: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2373086747', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/624#issuecomment-2373086747', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/624', 'id': 2373086747, 'node_id': 'IC_kwDOI-e9u86Ncm4b', 'user': {'login': 'VyankateshRohokale', 'id': 138516458, 'node_id': 'U_kgDOCEGX6g', 'avatar_url': 'https://avatars.githubusercontent.com/u/138516458?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/VyankateshRohokale', 'html_url': 'https://github.com/VyankateshRohokale', 'followers_url': 'https://api.github.com/users/VyankateshRohokale/followers', 'following_url': 'https://api.github.com/users/VyankateshRohokale/following{/other_user}', 'gists_url': 'https://api.github.com/users/VyankateshRohokale/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/VyankateshRohokale/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/VyankateshRohokale/subscriptions', 'organizations_url': 'https://api.github.com/users/VyankateshRohokale/orgs', 'repos_url': 'https://api.github.com/users/VyankateshRohokale/repos', 'events_url': 'https://api.github.com/users/VyankateshRohokale/events{/privacy}', 'received_events_url': 'https://api.github.com/users/VyankateshRohokale/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-25T05:51:06Z', 'updated_at': '2024-09-25T05:51:06Z', 'author_association': 'NONE', 'body': 'Give some more explanation to work on this , for example , what is supposed to be displayed , which file contains the code for displaying the data .......', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2373086747/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 618: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2354893537', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/618#issuecomment-2354893537', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/618', 'id': 2354893537, 'node_id': 'IC_kwDOI-e9u86MXNLh', 'user': {'login': 'ChrnyaevEK', 'id': 36514797, 'node_id': 'MDQ6VXNlcjM2NTE0Nzk3', 'avatar_url': 'https://avatars.githubusercontent.com/u/36514797?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ChrnyaevEK', 'html_url': 'https://github.com/ChrnyaevEK', 'followers_url': 'https://api.github.com/users/ChrnyaevEK/followers', 'following_url': 'https://api.github.com/users/ChrnyaevEK/following{/other_user}', 'gists_url': 'https://api.github.com/users/ChrnyaevEK/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ChrnyaevEK/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ChrnyaevEK/subscriptions', 'organizations_url': 'https://api.github.com/users/ChrnyaevEK/orgs', 'repos_url': 'https://api.github.com/users/ChrnyaevEK/repos', 'events_url': 'https://api.github.com/users/ChrnyaevEK/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ChrnyaevEK/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-17T08:36:45Z', 'updated_at': '2024-09-17T08:36:45Z', 'author_association': 'NONE', 'body': '# Update\r\nIt seems like I may have misinterpreted observations. I continued to track production app and did some more testing and results point away from PyGWalker as I originally thought (potentially to Azure web app or our production code other issues). I will do local tests with memory profiler to see how it behaves overtime to rule out this observation as well. \r\n\r\nI\'m sorry for disturbance, I will continue debug with new evidences. \r\n\r\n## Production app observations\r\nHealth endpoint has been added to our production version and now we observe strange memory behaviour even without opening PyGWalker explorer (PyGWalker was still imported as package). Health opens empty Streamlit page every 5 mins and over last 24h a RAM usage was gradually growing (on image you can observe used memory getting closer to 500Mb without spikes with constant increase rate related to health calls).\r\n\r\n![RAM usage in production](https://github.com/user-attachments/assets/cfda6f4e-8e59-40b0-a2b8-ab17250e6ffe)\r\n*RAM usage in production*\r\n\r\n## Sample app deployment\r\nI also tested sample app deployment on Azure to exclude Azure resource virtualization issues, but results did not confirm original hypothesis.\r\n\r\n### Without PyGWalker\r\n![image](https://github.com/user-attachments/assets/7c80037c-3bb1-459f-b876-81c3b5033a3c)\r\n*Sample app without PyGWalker on Azure*\r\n```\r\n# app.py\r\nimport numpy as np\r\nnp.random.seed(seed=1)\r\nimport pandas as pd\r\nimport streamlit as st\r\n\r\ndef app():\r\n    # Create random dataframe\r\n    df = pd.DataFrame(np.random.randint(0, 100, size=(100, 4)), columns=list("ABCD"))\r\n    st.table(df)\r\napp()\r\n```\r\n### With PyGWalker\r\nSample app with PyGWalker was also deployed to Azure (it is running for few hours now). How ever it behaves as expected and release memory when objects are destroyed. Which makes me think, that the problem with our production version lays somewhere else. \r\n\r\n![image](https://github.com/user-attachments/assets/e46a0fcc-59ab-45b2-9336-bbb742a17f54)\r\n*Sample app with PyGWalker on Azure*\r\n\r\n```\r\nimport numpy as np\r\nnp.random.seed(seed=1)\r\nimport pandas as pd\r\nfrom pygwalker.api.streamlit import StreamlitRenderer\r\n\r\ndef app():\r\n    df = pd.DataFrame(\r\n        np.random.randint(0, 1000, size=(100000, 4)), columns=list("ABCD")\r\n    )\r\n    render = StreamlitRenderer(df)\r\n    render.explorer()\r\napp()\r\n```', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2354893537/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2357354465', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/618#issuecomment-2357354465', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/618', 'id': 2357354465, 'node_id': 'IC_kwDOI-e9u86Mgl_h', 'user': {'login': 'longxiaofei', 'id': 28337703, 'node_id': 'MDQ6VXNlcjI4MzM3NzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/28337703?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/longxiaofei', 'html_url': 'https://github.com/longxiaofei', 'followers_url': 'https://api.github.com/users/longxiaofei/followers', 'following_url': 'https://api.github.com/users/longxiaofei/following{/other_user}', 'gists_url': 'https://api.github.com/users/longxiaofei/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/longxiaofei/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/longxiaofei/subscriptions', 'organizations_url': 'https://api.github.com/users/longxiaofei/orgs', 'repos_url': 'https://api.github.com/users/longxiaofei/repos', 'events_url': 'https://api.github.com/users/longxiaofei/events{/privacy}', 'received_events_url': 'https://api.github.com/users/longxiaofei/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-18T02:15:43Z', 'updated_at': '2024-09-18T02:15:43Z', 'author_association': 'CONTRIBUTOR', 'body': 'Hi @ChrnyaevEK , Thanks for your feedback.\r\n\r\nUsing pygwalker latest version, and try to cache StreamlitRenderer, it may avoid memory growth.\r\n\r\n```python\r\nfrom pygwalker.api.streamlit import StreamlitRenderer\r\nimport pandas as pd\r\nimport streamlit as st\r\n\r\n@st.cache_resource\r\ndef get_pyg_renderer() -> "StreamlitRenderer":\r\n    df = pd.read_csv("xxx")\r\n    return StreamlitRenderer(df)\r\n\r\nrenderer = get_pyg_renderer()\r\n\r\nrenderer.explorer()\r\n```\r\n\r\nThere are several reasons why pygwalker memory grows:\r\n\r\n1. `StreamlitRenderer(df)` will parse the dataframe and infer the data type.\r\n2. `render.explorer()` It will render the ui using html iframe(0.4.9.8 version has used the streamlit custom component to render pygwalker ui. The streamlit component has optimized this part of the memory overhead)\r\n3. For data calculation communication, the calculated data needs to complete http communication through the customized tornado endponit.(This will also be optimized in future versions)\r\n\r\n\r\nIn the next period of time, pygwalker will optimize the user experience of the streamlit component. Thank you again for your feedback.\r\n', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2357354465/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2358613485', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/618#issuecomment-2358613485', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/618', 'id': 2358613485, 'node_id': 'IC_kwDOI-e9u86MlZXt', 'user': {'login': 'ChrnyaevEK', 'id': 36514797, 'node_id': 'MDQ6VXNlcjM2NTE0Nzk3', 'avatar_url': 'https://avatars.githubusercontent.com/u/36514797?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ChrnyaevEK', 'html_url': 'https://github.com/ChrnyaevEK', 'followers_url': 'https://api.github.com/users/ChrnyaevEK/followers', 'following_url': 'https://api.github.com/users/ChrnyaevEK/following{/other_user}', 'gists_url': 'https://api.github.com/users/ChrnyaevEK/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ChrnyaevEK/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ChrnyaevEK/subscriptions', 'organizations_url': 'https://api.github.com/users/ChrnyaevEK/orgs', 'repos_url': 'https://api.github.com/users/ChrnyaevEK/repos', 'events_url': 'https://api.github.com/users/ChrnyaevEK/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ChrnyaevEK/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-18T14:20:39Z', 'updated_at': '2024-09-18T14:20:39Z', 'author_association': 'NONE', 'body': 'Hi @longxiaofei ! Thanks for your attention. \r\n\r\n# Caching\r\nI\'m afraid that caching is not an option in this case, our data change with every request and thus cached function should look more like this:\r\n```\r\n@st.cache_resource\r\ndef get_pyg_renderer(key: str) -> "StreamlitRenderer":\r\n    df = pd.read_csv(key)\r\n    ...\r\n```\r\nwhich basically is equivalent for no cache at all. `ttl` and `max_entries` will not help either. \r\n\r\nI did however test this approach and I\'m still facing the same strange behavior. \r\n```\r\nimport numpy as np\r\nimport pandas as pd\r\n\r\nimport streamlit as st\r\nfrom pygwalker.api.streamlit import StreamlitRenderer\r\n\r\n@st.cache_resource(max_entries=3, ttl=20)\r\ndef get_render(key: int):\r\n    df = pd.DataFrame(\r\n        np.random.randint(0, 1000, size=(100000, 4)), columns=list("ABCD")\r\n    )\r\n\r\n    return StreamlitRenderer(df)\r\n\r\ndef app():\r\n    render = get_render(np.random.randint(1, 100))\r\n    render.explorer()\r\n\r\napp()\r\n```\r\nRunning this app locally (windows, as described in first massage with pygwalker 0.4.9.3 as this is our production version) results in constantly growing memory (it seems to occasionally release insignificant amount of memory, but it does not return to initial values). \r\n![image](https://github.com/user-attachments/assets/5c99633f-7d5d-487b-9e0e-3f0049f9cdb7)\r\n*RAM used by python process with streamlit server with cached pygwalker render*\r\n\r\n# Other local tests\r\nI did also test few other code snippets locally to confirm that memory will eventually be released, but it seems like it\'s not. \r\n\r\n## Bare Streamlit\r\n### Code\r\n```\r\nimport numpy as np\r\nimport pandas as pd\r\nimport streamlit as st\r\n\r\ndef app():\r\n    df = pd.DataFrame(\r\n        np.random.randint(0, 1000, size=(100000, 4)), columns=list("ABCD")\r\n    )\r\n    st.dataframe(df)\r\napp()\r\n````\r\n### Debug sequence\r\n```\r\nstreamlit server start (python -m streamlit run ...) - 12:25 (memory increase due to initial object initialization)\r\nrestart (R) - 12:27 (memory increased)\r\nrestart (R) - 12:28 (memory increased)\r\nrestart (R) - 12:29 (memory increased)\r\nrestart (R) - 12:30 (memory increased)\r\nrestart (R) - 12:31 (memory did not react)\r\npage close - 12:32 (memory decreased, but not to initial level)\r\nstop - 12:58 (before stop a few slight memory decreases were observed without any external trigger)\r\nTotal test time: ~30min\r\n```\r\n### Graph\r\nSee attached PDF\r\n[debug.pdf](https://github.com/user-attachments/files/17044433/debug.pdf)\r\n\r\n## Streamlit with PyGWalker\r\n### Code\r\n```\r\nimport numpy as np\r\nimport pandas as pd\r\nfrom pygwalker.api.streamlit import StreamlitRenderer\r\n\r\ndef app():\r\n    df = pd.DataFrame(\r\n        np.random.randint(0, 1000, size=(100000, 4)), columns=list("ABCD")\r\n    )\r\n    render = StreamlitRenderer(df)\r\n    render.explorer()\r\napp()\r\n```\r\n### Debug sequence\r\n```\r\nstart - 13:09\r\nrestart - 13:11 (significant memory increase)\r\nrestart - 13:12 (memory increase)\r\nrestart - 13:13 (memory increase)\r\nrestart - 13:14 (memory increase)\r\nrestart - 13:15 (memory increase)\r\npage close - 13:16 (memory decrease, not to initial values)\r\nstop - 13:40 (no memory decrease observed)\r\n```\r\n### Graph\r\nSee attached PDF\r\n[debug.pdf, same as above](https://github.com/user-attachments/files/17044433/debug.pdf)\r\n\r\n## Conclusions up to the moment\r\nApps with and without PyGWalker both hold memory. PyGWalker allocate memory on every rerun, bare Streamlit seems to eventually saturate (may not allocate noticeable amount of memory).\r\n\r\nThere is no issue openning multiple Streamlit apps without PyGWalker, but as soon as PyGWalker is used we run out of memory (even with cache). This seems to be confirmed locally and on Azure.\r\n\r\nI still suspect some issue with PyGWalker on Streamlit (may be PyGWalker just misuse Streamlit caching mechanisms), can you please check steady memory growth when running minimal PyGWalker app locally? \r\n\r\n*Thanks!*', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2358613485/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 605: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2288883219', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/605#issuecomment-2288883219', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/605', 'id': 2288883219, 'node_id': 'IC_kwDOI-e9u86IbZYT', 'user': {'login': 'longxiaofei', 'id': 28337703, 'node_id': 'MDQ6VXNlcjI4MzM3NzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/28337703?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/longxiaofei', 'html_url': 'https://github.com/longxiaofei', 'followers_url': 'https://api.github.com/users/longxiaofei/followers', 'following_url': 'https://api.github.com/users/longxiaofei/following{/other_user}', 'gists_url': 'https://api.github.com/users/longxiaofei/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/longxiaofei/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/longxiaofei/subscriptions', 'organizations_url': 'https://api.github.com/users/longxiaofei/orgs', 'repos_url': 'https://api.github.com/users/longxiaofei/repos', 'events_url': 'https://api.github.com/users/longxiaofei/events{/privacy}', 'received_events_url': 'https://api.github.com/users/longxiaofei/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-08-14T14:08:15Z', 'updated_at': '2024-08-14T14:08:15Z', 'author_association': 'CONTRIBUTOR', 'body': "Hi @barbarosyabaci \r\n\r\nI'm not sure if this answers your question.\r\n\r\n![image](https://github.com/user-attachments/assets/62acd04d-c51d-4887-9c8c-62defb48f1d4)\r\n![image](https://github.com/user-attachments/assets/67c246ba-b186-4df3-addf-f900ce701712)\r\n\r\n", 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2288883219/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2289256688', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/605#issuecomment-2289256688', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/605', 'id': 2289256688, 'node_id': 'IC_kwDOI-e9u86Ic0jw', 'user': {'login': 'barbarosyabaci', 'id': 77306955, 'node_id': 'MDQ6VXNlcjc3MzA2OTU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/77306955?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/barbarosyabaci', 'html_url': 'https://github.com/barbarosyabaci', 'followers_url': 'https://api.github.com/users/barbarosyabaci/followers', 'following_url': 'https://api.github.com/users/barbarosyabaci/following{/other_user}', 'gists_url': 'https://api.github.com/users/barbarosyabaci/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/barbarosyabaci/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/barbarosyabaci/subscriptions', 'organizations_url': 'https://api.github.com/users/barbarosyabaci/orgs', 'repos_url': 'https://api.github.com/users/barbarosyabaci/repos', 'events_url': 'https://api.github.com/users/barbarosyabaci/events{/privacy}', 'received_events_url': 'https://api.github.com/users/barbarosyabaci/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-08-14T16:33:02Z', 'updated_at': '2024-08-14T16:33:02Z', 'author_association': 'NONE', 'body': 'Thanks for answer but I want to adjust colors individually like that: \r\n\r\ndef categorize_colors(value):\r\n    match value:\r\n        case value if value >= 25:\r\n            return [0, 0, 255]    # Blue\r\n        case value if value >= 20:\r\n            return [75, 0, 130]   # Indigo\r\n        case value if value >= 15:\r\n            return [138, 43, 226] # BlueViolet\r\n        case value if value >= 10:\r\n            return [218, 112, 214] # Orchid\r\n        case value if value >= 5:\r\n            return [255, 105, 180] # HotPink\r\n        case value if value >= 0:\r\n            return [255, 69, 0]    # OrangeRed\r\n        case value if value >= -2:\r\n            return [255, 0, 0]    # Red\r\n        case _:\r\n            return [128, 0, 0]    # Maroon', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2289256688/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 597: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2255979471', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/597#issuecomment-2255979471', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/597', 'id': 2255979471, 'node_id': 'IC_kwDOI-e9u86Gd4PP', 'user': {'login': 'longxiaofei', 'id': 28337703, 'node_id': 'MDQ6VXNlcjI4MzM3NzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/28337703?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/longxiaofei', 'html_url': 'https://github.com/longxiaofei', 'followers_url': 'https://api.github.com/users/longxiaofei/followers', 'following_url': 'https://api.github.com/users/longxiaofei/following{/other_user}', 'gists_url': 'https://api.github.com/users/longxiaofei/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/longxiaofei/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/longxiaofei/subscriptions', 'organizations_url': 'https://api.github.com/users/longxiaofei/orgs', 'repos_url': 'https://api.github.com/users/longxiaofei/repos', 'events_url': 'https://api.github.com/users/longxiaofei/events{/privacy}', 'received_events_url': 'https://api.github.com/users/longxiaofei/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-07-29T13:39:34Z', 'updated_at': '2024-07-29T13:39:34Z', 'author_association': 'CONTRIBUTOR', 'body': 'Hi @ewagner70 , thanks for your feedback.\r\n\r\nI will try to reproduce this bug in databricks and find out the cause.', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2255979471/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2262124251', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/597#issuecomment-2262124251', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/597', 'id': 2262124251, 'node_id': 'IC_kwDOI-e9u86G1Ubb', 'user': {'login': 'longxiaofei', 'id': 28337703, 'node_id': 'MDQ6VXNlcjI4MzM3NzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/28337703?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/longxiaofei', 'html_url': 'https://github.com/longxiaofei', 'followers_url': 'https://api.github.com/users/longxiaofei/followers', 'following_url': 'https://api.github.com/users/longxiaofei/following{/other_user}', 'gists_url': 'https://api.github.com/users/longxiaofei/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/longxiaofei/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/longxiaofei/subscriptions', 'organizations_url': 'https://api.github.com/users/longxiaofei/orgs', 'repos_url': 'https://api.github.com/users/longxiaofei/repos', 'events_url': 'https://api.github.com/users/longxiaofei/events{/privacy}', 'received_events_url': 'https://api.github.com/users/longxiaofei/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-08-01T06:10:35Z', 'updated_at': '2024-08-01T06:10:35Z', 'author_association': 'CONTRIBUTOR', 'body': "The size of pygwalker's HTML is around 19MB, which seems to have triggered the limitation of Databricks ipywidgets: \r\n\r\nhttps://docs.databricks.com/en/notebooks/notebook-limitations.html#ipywidgets\r\n\r\n`The maximum message payload size for an ipywidget is 5 MB. Widgets that use images or large text data may not be properly rendered.`\r\n\r\n\r\nI am looking for a solution, and this may take some time.", 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2262124251/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2262386451', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/597#issuecomment-2262386451', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/597', 'id': 2262386451, 'node_id': 'IC_kwDOI-e9u86G2UcT', 'user': {'login': 'ewagner70', 'id': 32803760, 'node_id': 'MDQ6VXNlcjMyODAzNzYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/32803760?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ewagner70', 'html_url': 'https://github.com/ewagner70', 'followers_url': 'https://api.github.com/users/ewagner70/followers', 'following_url': 'https://api.github.com/users/ewagner70/following{/other_user}', 'gists_url': 'https://api.github.com/users/ewagner70/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ewagner70/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ewagner70/subscriptions', 'organizations_url': 'https://api.github.com/users/ewagner70/orgs', 'repos_url': 'https://api.github.com/users/ewagner70/repos', 'events_url': 'https://api.github.com/users/ewagner70/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ewagner70/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-08-01T08:40:57Z', 'updated_at': '2024-08-01T08:40:57Z', 'author_association': 'NONE', 'body': "> The size of pygwalker's HTML is around 19MB, which seems to have triggered the limitation of Databricks ipywidgets:\r\n> \r\n> https://docs.databricks.com/en/notebooks/notebook-limitations.html#ipywidgets\r\n> \r\n> `The maximum message payload size for an ipywidget is 5 MB. Widgets that use images or large text data may not be properly rendered.`\r\n> \r\n> I am looking for a solution, and this may take some time.\r\n\r\nthank you for the update, @longxiaofei. \r\n1. interesting, why is this now a case - it was working back in the day (is this a new databricks limit?)\r\n2. is there a workaround by running a f.ex. streamlit server in a databricks notebook and render it within the streamlit server? I have the issue that this works on localhost, but when running from within a streamlit app in databricks (started within a databricks notebook) it does not get rendered as well (at all) - is this also related to the ipywidget payload size?", 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2262386451/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2270431621', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/597#issuecomment-2270431621', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/597', 'id': 2270431621, 'node_id': 'IC_kwDOI-e9u86HVAmF', 'user': {'login': 'longxiaofei', 'id': 28337703, 'node_id': 'MDQ6VXNlcjI4MzM3NzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/28337703?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/longxiaofei', 'html_url': 'https://github.com/longxiaofei', 'followers_url': 'https://api.github.com/users/longxiaofei/followers', 'following_url': 'https://api.github.com/users/longxiaofei/following{/other_user}', 'gists_url': 'https://api.github.com/users/longxiaofei/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/longxiaofei/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/longxiaofei/subscriptions', 'organizations_url': 'https://api.github.com/users/longxiaofei/orgs', 'repos_url': 'https://api.github.com/users/longxiaofei/repos', 'events_url': 'https://api.github.com/users/longxiaofei/events{/privacy}', 'received_events_url': 'https://api.github.com/users/longxiaofei/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-08-06T05:44:59Z', 'updated_at': '2024-08-06T05:45:59Z', 'author_association': 'CONTRIBUTOR', 'body': '@ewagner70 \r\n1. interesting, I need to continue investigating this issue.\r\n2. This is related to the sandbox environment of databricks. In local jupyter, network requests can be processed very simply, but in a third-party online notebook, it is very troublesome to be compatible with this kind of network forwarding.\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2270431621/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2271872994', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/597#issuecomment-2271872994', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/597', 'id': 2271872994, 'node_id': 'IC_kwDOI-e9u86Hagfi', 'user': {'login': 'ewagner70', 'id': 32803760, 'node_id': 'MDQ6VXNlcjMyODAzNzYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/32803760?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ewagner70', 'html_url': 'https://github.com/ewagner70', 'followers_url': 'https://api.github.com/users/ewagner70/followers', 'following_url': 'https://api.github.com/users/ewagner70/following{/other_user}', 'gists_url': 'https://api.github.com/users/ewagner70/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ewagner70/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ewagner70/subscriptions', 'organizations_url': 'https://api.github.com/users/ewagner70/orgs', 'repos_url': 'https://api.github.com/users/ewagner70/repos', 'events_url': 'https://api.github.com/users/ewagner70/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ewagner70/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-08-06T18:15:31Z', 'updated_at': '2024-08-06T18:15:31Z', 'author_association': 'NONE', 'body': '> @ewagner70\r\n> \r\n> 1. interesting, I need to continue investigating this issue.\r\n> 2. This is related to the sandbox environment of databricks. In local jupyter, network requests can be processed very simply, but in a third-party online notebook, it is very troublesome to be compatible with this kind of network forwarding.\r\n\r\nother widgets work (mitosheet, etc.) and don\'t seem to have any issue? Did you do something special with pygwalker? I can see that POST method is "not allowed" for whatever reason (maybe switch to GET to avoid that?)', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2271872994/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2362676521', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/597#issuecomment-2362676521', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/597', 'id': 2362676521, 'node_id': 'IC_kwDOI-e9u86M05Up', 'user': {'login': 'longxiaofei', 'id': 28337703, 'node_id': 'MDQ6VXNlcjI4MzM3NzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/28337703?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/longxiaofei', 'html_url': 'https://github.com/longxiaofei', 'followers_url': 'https://api.github.com/users/longxiaofei/followers', 'following_url': 'https://api.github.com/users/longxiaofei/following{/other_user}', 'gists_url': 'https://api.github.com/users/longxiaofei/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/longxiaofei/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/longxiaofei/subscriptions', 'organizations_url': 'https://api.github.com/users/longxiaofei/orgs', 'repos_url': 'https://api.github.com/users/longxiaofei/repos', 'events_url': 'https://api.github.com/users/longxiaofei/events{/privacy}', 'received_events_url': 'https://api.github.com/users/longxiaofei/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-20T03:15:23Z', 'updated_at': '2024-09-20T03:15:23Z', 'author_association': 'CONTRIBUTOR', 'body': 'Hi  @ewagner70, `pygwalker==0.4.9.9` compresses the component code, Currently pygwalker can be used normally in databricks, you can try it.', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2362676521/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2423303503', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/597#issuecomment-2423303503', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/597', 'id': 2423303503, 'node_id': 'IC_kwDOI-e9u86QcK1P', 'user': {'login': 'ewagner70', 'id': 32803760, 'node_id': 'MDQ6VXNlcjMyODAzNzYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/32803760?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ewagner70', 'html_url': 'https://github.com/ewagner70', 'followers_url': 'https://api.github.com/users/ewagner70/followers', 'following_url': 'https://api.github.com/users/ewagner70/following{/other_user}', 'gists_url': 'https://api.github.com/users/ewagner70/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ewagner70/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ewagner70/subscriptions', 'organizations_url': 'https://api.github.com/users/ewagner70/orgs', 'repos_url': 'https://api.github.com/users/ewagner70/repos', 'events_url': 'https://api.github.com/users/ewagner70/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ewagner70/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-18T22:04:56Z', 'updated_at': '2024-10-18T22:04:56Z', 'author_association': 'NONE', 'body': "> Hi @ewagner70, `pygwalker==0.4.9.9` compresses the component code, Currently pygwalker can be used normally in databricks, you can try it.\r\n\r\nThx @longxiaofei, \r\n1. in classic databricks notebooks they show up now. \r\n2. however, when running within streamlit on databricks notebook. pygwalker still doesn't show up (nothing actually is shown/started, not even an error message). ", 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2423303503/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 577: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2162708367', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/577#issuecomment-2162708367', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/577', 'id': 2162708367, 'node_id': 'IC_kwDOI-e9u86A6E-P', 'user': {'login': 'longxiaofei', 'id': 28337703, 'node_id': 'MDQ6VXNlcjI4MzM3NzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/28337703?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/longxiaofei', 'html_url': 'https://github.com/longxiaofei', 'followers_url': 'https://api.github.com/users/longxiaofei/followers', 'following_url': 'https://api.github.com/users/longxiaofei/following{/other_user}', 'gists_url': 'https://api.github.com/users/longxiaofei/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/longxiaofei/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/longxiaofei/subscriptions', 'organizations_url': 'https://api.github.com/users/longxiaofei/orgs', 'repos_url': 'https://api.github.com/users/longxiaofei/repos', 'events_url': 'https://api.github.com/users/longxiaofei/events{/privacy}', 'received_events_url': 'https://api.github.com/users/longxiaofei/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-06-12T10:55:32Z', 'updated_at': '2024-06-12T10:55:32Z', 'author_association': 'CONTRIBUTOR', 'body': "Hi @ihouses \r\n\r\nIn theory, pygwalker is designed to run within a notebook environment.\r\n\r\nIf PyCharm handles ipynb files similarly to VSCode by launching a notebook kernel to run the code, then it's possible that pygwalker could run within PyCharm as well.", 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2162708367/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2342762845', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/577#issuecomment-2342762845', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/577', 'id': 2342762845, 'node_id': 'IC_kwDOI-e9u86Lo7ld', 'user': {'login': 'longxiaofei', 'id': 28337703, 'node_id': 'MDQ6VXNlcjI4MzM3NzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/28337703?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/longxiaofei', 'html_url': 'https://github.com/longxiaofei', 'followers_url': 'https://api.github.com/users/longxiaofei/followers', 'following_url': 'https://api.github.com/users/longxiaofei/following{/other_user}', 'gists_url': 'https://api.github.com/users/longxiaofei/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/longxiaofei/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/longxiaofei/subscriptions', 'organizations_url': 'https://api.github.com/users/longxiaofei/orgs', 'repos_url': 'https://api.github.com/users/longxiaofei/repos', 'events_url': 'https://api.github.com/users/longxiaofei/events{/privacy}', 'received_events_url': 'https://api.github.com/users/longxiaofei/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-11T06:34:21Z', 'updated_at': '2024-09-11T06:34:21Z', 'author_association': 'CONTRIBUTOR', 'body': 'We will support the use of pygwalker in the native python environment, similar to matplotlib.', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2342762845/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 569: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2147122367', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/569#issuecomment-2147122367', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/569', 'id': 2147122367, 'node_id': 'IC_kwDOI-e9u85_-ny_', 'user': {'login': 'tomriddle1234', 'id': 2811483, 'node_id': 'MDQ6VXNlcjI4MTE0ODM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2811483?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tomriddle1234', 'html_url': 'https://github.com/tomriddle1234', 'followers_url': 'https://api.github.com/users/tomriddle1234/followers', 'following_url': 'https://api.github.com/users/tomriddle1234/following{/other_user}', 'gists_url': 'https://api.github.com/users/tomriddle1234/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tomriddle1234/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tomriddle1234/subscriptions', 'organizations_url': 'https://api.github.com/users/tomriddle1234/orgs', 'repos_url': 'https://api.github.com/users/tomriddle1234/repos', 'events_url': 'https://api.github.com/users/tomriddle1234/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tomriddle1234/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-06-04T09:58:53Z', 'updated_at': '2024-06-04T09:58:53Z', 'author_association': 'NONE', 'body': 'I did some research, found that pygwalker can export vega code, so, by manipulating vega code, one can properly reformat the charts.\r\n\r\nfor example, my pip installed pygwalker doesn\'t support order in arc chart, but by adding this line,\r\n\r\n`"order": {"field": "value", "type": "quantitative", "sort": "descending"},`\r\n\r\nthe pie chart would be ordered.', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2147122367/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2148765512', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/569#issuecomment-2148765512', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/569', 'id': 2148765512, 'node_id': 'IC_kwDOI-e9u86AE49I', 'user': {'login': 'longxiaofei', 'id': 28337703, 'node_id': 'MDQ6VXNlcjI4MzM3NzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/28337703?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/longxiaofei', 'html_url': 'https://github.com/longxiaofei', 'followers_url': 'https://api.github.com/users/longxiaofei/followers', 'following_url': 'https://api.github.com/users/longxiaofei/following{/other_user}', 'gists_url': 'https://api.github.com/users/longxiaofei/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/longxiaofei/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/longxiaofei/subscriptions', 'organizations_url': 'https://api.github.com/users/longxiaofei/orgs', 'repos_url': 'https://api.github.com/users/longxiaofei/repos', 'events_url': 'https://api.github.com/users/longxiaofei/events{/privacy}', 'received_events_url': 'https://api.github.com/users/longxiaofei/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-06-05T03:00:35Z', 'updated_at': '2024-06-05T03:00:35Z', 'author_association': 'CONTRIBUTOR', 'body': 'Thanks for your feedback, Kanaries team will support these features within two weeks.', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2148765512/reactions', 'total_count': 3, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 1, 'eyes': 2}, 'performed_via_github_app': None}]
Comments for Issue 510: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2031210041', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/510#issuecomment-2031210041', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/510', 'id': 2031210041, 'node_id': 'IC_kwDOI-e9u855Ec45', 'user': {'login': 'ObservedObserver', 'id': 22167673, 'node_id': 'MDQ6VXNlcjIyMTY3Njcz', 'avatar_url': 'https://avatars.githubusercontent.com/u/22167673?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ObservedObserver', 'html_url': 'https://github.com/ObservedObserver', 'followers_url': 'https://api.github.com/users/ObservedObserver/followers', 'following_url': 'https://api.github.com/users/ObservedObserver/following{/other_user}', 'gists_url': 'https://api.github.com/users/ObservedObserver/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ObservedObserver/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ObservedObserver/subscriptions', 'organizations_url': 'https://api.github.com/users/ObservedObserver/orgs', 'repos_url': 'https://api.github.com/users/ObservedObserver/repos', 'events_url': 'https://api.github.com/users/ObservedObserver/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ObservedObserver/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-04-02T06:55:08Z', 'updated_at': '2024-04-02T06:55:08Z', 'author_association': 'MEMBER', 'body': 'Hi @plusmid, currently, pygwalker does not utilize the pandas API for dataframe-related computations.\r\n\r\nWhen you pass a dataframe to pygwalker, it converts it into either a duckdb format or an in-browser memory JavaScript array. Therefore, the performance remains consistent across various dataframes.\r\n\r\nWe are exploring more native computation methods using the dataframe API. However, it appears that in most scenarios, using duckDB or integrating pygwalker with Snowflake yields quite good performance.', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2031210041/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 508: [{'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2031221501', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/508#issuecomment-2031221501', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/508', 'id': 2031221501, 'node_id': 'IC_kwDOI-e9u855Efr9', 'user': {'login': 'ObservedObserver', 'id': 22167673, 'node_id': 'MDQ6VXNlcjIyMTY3Njcz', 'avatar_url': 'https://avatars.githubusercontent.com/u/22167673?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ObservedObserver', 'html_url': 'https://github.com/ObservedObserver', 'followers_url': 'https://api.github.com/users/ObservedObserver/followers', 'following_url': 'https://api.github.com/users/ObservedObserver/following{/other_user}', 'gists_url': 'https://api.github.com/users/ObservedObserver/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ObservedObserver/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ObservedObserver/subscriptions', 'organizations_url': 'https://api.github.com/users/ObservedObserver/orgs', 'repos_url': 'https://api.github.com/users/ObservedObserver/repos', 'events_url': 'https://api.github.com/users/ObservedObserver/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ObservedObserver/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-04-02T07:02:32Z', 'updated_at': '2024-04-02T07:02:32Z', 'author_association': 'MEMBER', 'body': 'Thank you for your suggestion.\r\n\r\nIndeed, such functionality is often beneficial in data analysis software. However, PyGWalker follows a distinct design approach. It does not manage all aspects of the GUI, particularly those related to dataframes. This design choice grants users greater flexibility to customize features directly in Python.\r\n\r\nFor example, in your case, you could conceal certain columns either by modifying the dataframe before passing it to PyGWalker or by adjusting the field_specs parameter.', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2031221501/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2031293308', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/508#issuecomment-2031293308', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/508', 'id': 2031293308, 'node_id': 'IC_kwDOI-e9u855ExN8', 'user': {'login': 'wzherwa', 'id': 150339984, 'node_id': 'U_kgDOCPYBkA', 'avatar_url': 'https://avatars.githubusercontent.com/u/150339984?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/wzherwa', 'html_url': 'https://github.com/wzherwa', 'followers_url': 'https://api.github.com/users/wzherwa/followers', 'following_url': 'https://api.github.com/users/wzherwa/following{/other_user}', 'gists_url': 'https://api.github.com/users/wzherwa/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/wzherwa/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/wzherwa/subscriptions', 'organizations_url': 'https://api.github.com/users/wzherwa/orgs', 'repos_url': 'https://api.github.com/users/wzherwa/repos', 'events_url': 'https://api.github.com/users/wzherwa/events{/privacy}', 'received_events_url': 'https://api.github.com/users/wzherwa/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-04-02T07:42:12Z', 'updated_at': '2024-04-02T07:42:12Z', 'author_association': 'NONE', 'body': 'apart from the GUI functionality (which wouldn\'t be a great effort to implement and the benefits outweigh design restrictions) - what about the export / return analysis data? the export or "function return data analysis" in JSON or at least CSV would also come in handy. Reasoning: the analysis process doesn\'t stop with pygwalker, it is a tool in a whole process, where it receives data and forwards analysis outputs. It should be considered as "embedded" tool in a process with "API-based" data input and output to avoid media breaks (as currently with the "standalone" architecture). Otherwise, other tools will fill in that important gap and pygwalker could loose traction.\r\nWhat\'s your opinion on these considerations?', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2031293308/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2031310231', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/508#issuecomment-2031310231', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/508', 'id': 2031310231, 'node_id': 'IC_kwDOI-e9u855E1WX', 'user': {'login': 'ObservedObserver', 'id': 22167673, 'node_id': 'MDQ6VXNlcjIyMTY3Njcz', 'avatar_url': 'https://avatars.githubusercontent.com/u/22167673?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ObservedObserver', 'html_url': 'https://github.com/ObservedObserver', 'followers_url': 'https://api.github.com/users/ObservedObserver/followers', 'following_url': 'https://api.github.com/users/ObservedObserver/following{/other_user}', 'gists_url': 'https://api.github.com/users/ObservedObserver/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ObservedObserver/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ObservedObserver/subscriptions', 'organizations_url': 'https://api.github.com/users/ObservedObserver/orgs', 'repos_url': 'https://api.github.com/users/ObservedObserver/repos', 'events_url': 'https://api.github.com/users/ObservedObserver/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ObservedObserver/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-04-02T07:50:18Z', 'updated_at': '2024-04-02T08:03:55Z', 'author_association': 'MEMBER', 'body': '### export csv\r\n![image](https://github.com/Kanaries/pygwalker/assets/22167673/39a3422a-e5b4-4aee-aedb-5d550d88c132)\r\n\r\npygwalker had never been and never will be an standalone architechture, it is designed for embeddable analytics without breaking the current workflow since day one.\r\n\r\nNot only it can export csv, but dataframe, sql, view state, painter values as well. We are making more tutorial videos to introduce these features, but welcome to explore them by yourself.\r\n\r\nRemeber, pygwalker is a component, not a system, you can use it in jupyter notebook, colab, notion etc. It can interactive with its env and connect the workflows. "Standalone" architecture is the most improper tag to pygwalker.\r\n\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2031310231/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2031349992', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/508#issuecomment-2031349992', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/508', 'id': 2031349992, 'node_id': 'IC_kwDOI-e9u855E_Do', 'user': {'login': 'wzherwa', 'id': 150339984, 'node_id': 'U_kgDOCPYBkA', 'avatar_url': 'https://avatars.githubusercontent.com/u/150339984?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/wzherwa', 'html_url': 'https://github.com/wzherwa', 'followers_url': 'https://api.github.com/users/wzherwa/followers', 'following_url': 'https://api.github.com/users/wzherwa/following{/other_user}', 'gists_url': 'https://api.github.com/users/wzherwa/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/wzherwa/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/wzherwa/subscriptions', 'organizations_url': 'https://api.github.com/users/wzherwa/orgs', 'repos_url': 'https://api.github.com/users/wzherwa/repos', 'events_url': 'https://api.github.com/users/wzherwa/events{/privacy}', 'received_events_url': 'https://api.github.com/users/wzherwa/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-04-02T08:10:25Z', 'updated_at': '2024-04-02T08:10:25Z', 'author_association': 'NONE', 'body': '> ### export csv\r\n> ![image](https://private-user-images.githubusercontent.com/22167673/318689181-39a3422a-e5b4-4aee-aedb-5d550d88c132.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTIwNDQ2MzUsIm5iZiI6MTcxMjA0NDMzNSwicGF0aCI6Ii8yMjE2NzY3My8zMTg2ODkxODEtMzlhMzQyMmEtZTViNC00YWVlLWFlZGItNWQ1NTBkODhjMTMyLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MDIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDAyVDA3NTIxNVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTg5ZTQ5YTExY2MzYzU1ZGRmMzIwZDhkOTI5ZDk0N2EyNTdhMTM2NzdjMzI0YjYxNzY0Y2VjMjdiMGZkNTA2Y2YmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.1tTcLpZctia7Yeu4WQkXoN6k-mTMSyW3qwNTkeV7iKw)\r\n\r\nI am aware of the export button and apologise for not being clear enough - I was suggesting an "return results" function, when f.ex. closing pygwalker (part of an analysis chain). To give you an outlook - in order to automate, make complex analysis more comprehensible, pygwalker is "only" an (important) step of a whole analysis chain, f.ex. I am trying to incorporate pygwalker in an autogen (Microsoft llm agent framework) "dynamic" process, but as I cannot return any results (only separate file via export.csv, manually) it is of limited final use ...', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2031349992/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2031370518', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/508#issuecomment-2031370518', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/508', 'id': 2031370518, 'node_id': 'IC_kwDOI-e9u855FEEW', 'user': {'login': 'ObservedObserver', 'id': 22167673, 'node_id': 'MDQ6VXNlcjIyMTY3Njcz', 'avatar_url': 'https://avatars.githubusercontent.com/u/22167673?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ObservedObserver', 'html_url': 'https://github.com/ObservedObserver', 'followers_url': 'https://api.github.com/users/ObservedObserver/followers', 'following_url': 'https://api.github.com/users/ObservedObserver/following{/other_user}', 'gists_url': 'https://api.github.com/users/ObservedObserver/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ObservedObserver/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ObservedObserver/subscriptions', 'organizations_url': 'https://api.github.com/users/ObservedObserver/orgs', 'repos_url': 'https://api.github.com/users/ObservedObserver/repos', 'events_url': 'https://api.github.com/users/ObservedObserver/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ObservedObserver/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-04-02T08:21:17Z', 'updated_at': '2024-04-02T08:21:17Z', 'author_association': 'MEMBER', 'body': 'Firstly, you can get the result as dataframe in python API of pygwalker. Secondly, I am not sure I understand what you want to implement with pygwalker, you want some AI agent to make "drag-and-drop" operations to analysis the data in pygwalker? Can you share more about what you want to build so I can provide more helpful suggestion based on pygwalker?', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2031370518/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2031504275', 'html_url': 'https://github.com/Kanaries/pygwalker/issues/508#issuecomment-2031504275', 'issue_url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/508', 'id': 2031504275, 'node_id': 'IC_kwDOI-e9u855FkuT', 'user': {'login': 'wzherwa', 'id': 150339984, 'node_id': 'U_kgDOCPYBkA', 'avatar_url': 'https://avatars.githubusercontent.com/u/150339984?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/wzherwa', 'html_url': 'https://github.com/wzherwa', 'followers_url': 'https://api.github.com/users/wzherwa/followers', 'following_url': 'https://api.github.com/users/wzherwa/following{/other_user}', 'gists_url': 'https://api.github.com/users/wzherwa/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/wzherwa/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/wzherwa/subscriptions', 'organizations_url': 'https://api.github.com/users/wzherwa/orgs', 'repos_url': 'https://api.github.com/users/wzherwa/repos', 'events_url': 'https://api.github.com/users/wzherwa/events{/privacy}', 'received_events_url': 'https://api.github.com/users/wzherwa/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-04-02T09:25:30Z', 'updated_at': '2024-04-02T09:25:30Z', 'author_association': 'NONE', 'body': '> Firstly, you can get the result as dataframe in python API of pygwalker. Secondly, I am not sure I understand what you want to implement with pygwalker, you want some AI agent to make "drag-and-drop" operations to analysis the data in pygwalker? Can you share more about what you want to build so I can provide more helpful suggestion based on pygwalker?\r\n\r\nad result as data frame in python API from pygwalker) \r\n- please excuse my ignorance, but can you please point me to this API? \r\n- I only saw so far API calls for sending data to pygwalker, but not receiving data from pygwalker ...\r\n\r\nad use case)\r\n- I have a streamlit application, which has autogen framework under the hood with two agents and a number of functions.\r\n- one of these functions is to invoke pygwalker and send the data to be analysed as pd data frame \r\n- what I am now seeking for is to receive the analysis back as answer to the function call (as pd data frame or json or ...)\r\n', 'reactions': {'url': 'https://api.github.com/repos/Kanaries/pygwalker/issues/comments/2031504275/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
