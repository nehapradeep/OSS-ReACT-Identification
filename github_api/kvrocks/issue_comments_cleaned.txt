Issue #2812: Labels: No Labels
Issue #2811: Labels: No Labels
> Code general LGTM, but suddenly I realized that `TDigest.Add` nan is invalid: https://github.com/RedisBloom/RedisBloom/blob/f68a72e463b84c2298990295c6a3db4719dc5c7a/src/rm_tdigest.c#L187\r\n> \r\n> Would you mind also change that? ( Can be in another pr )\r\n\r\nI will fix
Issue #2810: Labels: No Labels
@SharonIV0x86 You can run `./x.py format` before committing and pushing your code to have it be formatted and make the CI happy.
Issue #2809: Labels: No Labels
Issue #2808: Labels: No Labels
@sryanyuan Thank you for your contribution.
Issue #2807: Labels: enhancement
Issue #2806: Labels: bug
Issue #2805: Labels: enhancement
Issue #2804: Labels: enhancement
can you assign this issue to me?  I would like to work on this command.\n
Issue #2803: Labels: No Labels
Will merge if no negative comments tomorrow
Issue #2802: Labels: No Labels
@PragmaTwice @torwig Thank you!
Issue #2801: Labels: No Labels
@fukua95 Thank you!
Issue #2800: Labels: No Labels
Issue #2799: Labels: No Labels
Issue #2798: Labels: No Labels
Issue #2797: Labels: No Labels
Issue #2796: Labels: No Labels
Issue #2795: Labels: enhancement
@rex0654335 Can I work on this issue? @PragmaTwice 
Issue #2794: Labels: enhancement
Hi, I would like to work on this command . Could you please assign the issue to me?
Issue #2793: Labels: enhancement
I want to try, please assign it to me, thx
Issue #2792: Labels: enhancement
Assigned, just move forward
Issue #2791: Labels: enhancement
Issue #2790: Labels: A-ci
Issue #2789: Labels: enhancement
Issue #2788: Labels: No Labels
Issue #2787: Labels: No Labels
@torwig @PragmaTwice - a tls test failed, could you see inside it? 
Issue #2786: Labels: No Labels
Update to 1.64.3 release with latest fix https://github.com/golangci/golangci-lint/releases/tag/v1.64.3
Issue #2785: Labels: No Labels
Issue #2783: Labels: No Labels
Issue #2782: Labels: No Labels
Issue #2781: Labels: No Labels
Issue #2780: Labels: No Labels
Issue #2779: Labels: No Labels
Issue #2778: Labels: No Labels
Issue #2776: Labels: No Labels
Issue #2775: Labels: No Labels
Issue #2774: Labels: No Labels
Issue #2773: Labels: No Labels
Issue #2772: Labels: No Labels
Issue #2770: Labels: bug
Please ensure that kvrocks inside the docker container (the user name is "kvrocks", in [here](https://github.com/apache/kvrocks/blob/unstable/Dockerfile#L40)) has sufficient permission to access the directory you mount to the volume (e.g. you should use `chmod`/`chown` to adjust the permission).\n\nAlso the volume should be `/var/lib/kvrocks` instead of `/var/lib/kvrocks/db`.
Issue #2769: Labels: No Labels
Issue #2768: Labels: No Labels
Issue #2766: Labels: bug
Would you mind to provide detailed steps to reproduce such issue?
Issue #2765: Labels: No Labels
@PragmaTwice Ideally is to add a Go test to verify the behavior.
Issue #2764: Labels: No Labels
@ltagliamonte-dd You could just control the compaction/flush thread number by configuring:\r\n\r\n- rocksdb.max_background_compactions (default is LOW priority)\r\n- rocksdb.max_background_flushes (default is HIGH priority)\r\n\r\nBut those two parameters might be deprecated in future versions. It will use 1/4 * max_background_jobs as the flush thread number if both of them are not set. See [GetBGJobLimits](https://github.com/facebook/rocksdb/blob/ce6065ef70fe8c55bdf74c2a4121c038a1f7da4b/db/db_impl/db_impl_compaction_flush.cc#L2935)\r\n
Issue #2763: Labels: No Labels
https://github.com/apache/kvrocks/actions/runs/13107232513/job/36565873699?pr=2763#step:17:62\r\n\r\nInteresting that there\
Issue #2762: Labels: No Labels
Issue #2761: Labels: No Labels
Hi, thank you for your contribution!\r\n\r\nFrom my understanding (not being a native English speaker), it\
Issue #2760: Labels: No Labels
I think, could be better use a more accuracy version, like alpine:3.21
Issue #2759: Labels: No Labels
@err931 Thank you for your contribution.
Issue #2758: Labels: enhancement
Thanks about investigation, @err931 \nEarly version of kvrocks use a Alpine (at 2.5.0, see: https://github.com/apache/kvrocks/pull/1434) but we are switched to debian for compatibility, when fully support of musl are breached. \n\n1 and 2 your points maybe is easy to fix, as I see, but glog is not so easy. Could you add patch for 1 and 2 problems? 
Issue #2757: Labels: No Labels
Issue #2756: Labels: bug
@vlstv Hi, I made a patch #2757 for this issue. Would you mind to check if it can solve your problem?
Issue #2755: Labels: No Labels
Issue #2754: Labels: No Labels
Issue #2753: Labels: No Labels
Issue #2752: Labels: bug
Issue #2751: Labels: No Labels
Issue #2750: Labels: No Labels
@PragmaTwice @git-hulk pushed unit tests.\r\nthanks for the amazing support!
Issue #2749: Labels: No Labels
Issue #2748: Labels: No Labels
Issue #2747: Labels: No Labels
Issue #2746: Labels: No Labels
```\r\nfunc TestXXXWithRESP3(t *testing.T) {\r\n\tsrv := util.StartServer(t, map[string]string{\r\n\t\t"resp3-enabled": "yes",\r\n\t})\r\n\tdefer srv.Close()\r\n```\r\n\r\nNeed to change to:\r\n```\r\nfunc TestXXXWithoutRESP3(t *testing.T) {\r\n\tsrv := util.StartServer(t, map[string]string{\r\n\t\t"resp3-enabled": "no",\r\n\t})\r\n\tdefer srv.Close()\r\n```
Issue #2745: Labels: No Labels
Issue #2744: Labels: No Labels
Issue #2742: Labels: No Labels
Issue #2741: Labels: No Labels
Hi @mapleFU ,\r\n\r\nSorry to interrupt you again. 😊\r\nCould you help take a review for latest update?\r\n\r\nHave a nice day!\r\n\r\nBest Regards,\r\nEdward
Issue #2740: Labels: No Labels
Ready for review now.
Issue #2739: Labels: No Labels
Issue #2738: Labels: No Labels
Issue #2737: Labels: No Labels
Issue #2736: Labels: No Labels
After #2732 is merged, we can remove these arg size checks inside flag gen functions.
Issue #2735: Labels: bug
Issue #2734: Labels: enhancement
Issue #2733: Labels: No Labels
Issue #2732: Labels: No Labels
Issue #2731: Labels: No Labels
Issue #2730: Labels: enhancement
@mnutt Thanks for your efforts. For Kvrocks, it will store data in different column families. It might cause fields(subkeys) in a key to be partially recycled by FIFO compaction. For example, we have a hash key with fields: `f1`=> `v1`, `f2`=>`v2` and FIFO will recycle SSTs by time, so it might remove `f1`=>`v1` but keep `f2`=>`v2` if they are in separated SSTs.\n\nFor the data design in Kvrocks, please refer to: [Data structures design](https://kvrocks.apache.org/community/data-structure-on-rocksdb).\n
Issue #2728: Labels: enhancement
Issue #2724: Labels: No Labels
Issue #2723: Labels: bug
Hi @VIVALXH \n\ngo-redis might retry on network error. Would you mind disabling the retry to see if the issue is still existing? https://github.com/redis/go-redis/blob/1139bc3aa9073851f67faa6d68df07a566901dd7/options.go#L75C2-L75C12
Issue #2721: Labels: No Labels
@rabunkosar-dd Thanks for your contribution. You use `./x.py format` to format your source codes after installing the clang-format-14\r\n
Issue #2720: Labels: No Labels
Issue #2719: Labels: No Labels
Issue #2718: Labels: No Labels
@fukua95 Nice! Thank you for your contribution.
Issue #2717: Labels: No Labels
@ltagliamonte-dd Hi. Did you set this config `hash-field-expiration` to yes or run the unit tests in this branch?  If the field has an expiration, we have to check to the field expiration before each read operation.
Issue #2716: Labels: bug
Issue #2715: Labels: bug
I found the same issue in my tests.\r\nThere are 3 nodes in my cluster before migration, after migration, there are 5 nodes in my cluster.\r\nHere is my test steps:\r\n\r\n1. kvrocks version 2.9.0\r\n2. before migration: use` scan` command to check all the master nodes, there are 167005770 keys;\r\n3. set `migrate-type` =`raw-key-value` in kvrocks.conf\r\n4.  call the kv controller migrate API: {{host}}/api/v1/namespaces/{{namespace}}/clusters/{{cluster}}/migrate\r\n5.  call the kv controller API to check the migration is done: http://{{host}}/api/v1/namespaces/akv/clusters/kvrocks_29_test_migrate\r\n6. after migration: use` scan` command to check all the master nodes, there are 167016655 keys;\r\n7. there are 10885 keys depulicated after migration done.\r\n\r\nfeel free to contact me for more test details
Issue #2714: Labels: No Labels
Issue #2713: Labels: No Labels
Issue #2712: Labels: enhancement
Issue #2711: Labels: No Labels
Issue #2710: Labels: No Labels
Now ready for review. One problem has been focused in an updated package - golang.org/x/exp (hmm, surprise!).\r\n\r\nThanks @torwig for help with this PR
Issue #2709: Labels: No Labels
Issue #2708: Labels: No Labels
Issue #2707: Labels: No Labels
Issue #2706: Labels: No Labels
Maybe we need a merge #2707 PR before fix this
Issue #2705: Labels: No Labels
Issue #2704: Labels: No Labels
Issue #2703: Labels: No Labels
Issue #2702: Labels: No Labels
Issue #2701: Labels: No Labels
Issue #2700: Labels: No Labels
Issue #2699: Labels: No Labels
Issue #2698: Labels: No Labels
Issue #2697: Labels: No Labels
Issue #2696: Labels: No Labels
Issue #2694: Labels: No Labels
Issue #2693: Labels: No Labels
@Sandra-Amina-Boss Please stop such meaningless reviews and stop sending spam notifications to me.\r\n
Issue #2692: Labels: No Labels
Issue #2691: Labels: No Labels
Issue #2689: Labels: No Labels
You can run `./x.py format` from the root dir of the repo to format code via `clang-format`.\r\n\r\nAdditional, please ensure `clang-format` exists and is in version 14. (download from [here](https://github.com/llvm/llvm-project/releases/tag/llvmorg-14.0.0))\r\n\r\nRead https://kvrocks.apache.org/community/contributing for more information.
Issue #2688: Labels: No Labels
> Please avoid introducing unrelated changes.\r\n> \r\n> Also please ensure the version of clang-format you are using is 14. You can download it from [here](https://github.com/llvm/llvm-project/releases/tag/llvmorg-14.0.0).\r\n\r\nthanks, I fixed it.
Issue #2687: Labels: No Labels
Issue #2686: Labels: No Labels
@weim0000 Thanks for your fix, would you mind adding a test case to cover this? https://github.com/apache/kvrocks/blob/unstable/tests/gocase/unit/type/strings/strings_test.go
Issue #2685: Labels: No Labels
@weim0000 Thank you for your contribution. Please, run `./x.py format` to format the code accordingly. 
Issue #2683: Labels: No Labels
@wanghenshui You can run `./x.py format` before committing changes to format the code.
Issue #2682: Labels: No Labels
Issue #2681: Labels: No Labels
Issue #2680: Labels: No Labels
Issue #2678: Labels: No Labels
Issue #2677: Labels: No Labels
Issue #2676: Labels: good first issue, feature
Can I be assigned this issue?
Issue #2672: Labels: No Labels
Issue #2671: Labels: No Labels
Hi @PragmaTwice ,\n\n  I want to follow up on this issue and learn about our replication logic.\n\n Could this issue be assigned to me? 😊\n\nBest Regards,\nEdward
Issue #2670: Labels: No Labels
Issue #2669: Labels: No Labels
Issue #2668: Labels: No Labels
Issue #2667: Labels: bug
> Would you like to add some go test cases to cover the changes?\r\n> \r\n> Related cases can be found here: https://github.com/apache/kvrocks/blob/unstable/tests/gocase/unit/type/incr/incr_test.go .\r\n\r\nOk, no problem. I will add the go test cases ASAP
Issue #2666: Labels: No Labels
Issue #2665: Labels: No Labels
Issue #2664: Labels: No Labels
Issue #2663: Labels: No Labels
Issue #2662: Labels: No Labels
Issue #2661: Labels: No Labels
Issue #2660: Labels: bug
@FishYoung Good catch.
Issue #2658: Labels: No Labels
Issue #2657: Labels: No Labels
> The code looks good to me.\n> \n> \n> \n> Would you like to write a go test case that calls redis command `COMMAND GETKEYS XREAD/XREADGROUP ...` to confirm the returned keys is correct?\n> \n> \n> \n> You can add a new test like https://github.com/apache/kvrocks/blob/unstable/tests/gocase/unit/command/command_test.go#L125.\n\nOf course! \n\nI will add unittest later today.😄\n\nBest Regards,\nEdward
Issue #2656: Labels: No Labels
Issue #2655: Labels: No Labels
Issue #2654: Labels: No Labels
Issue #2653: Labels: No Labels
Issue #2652: Labels: No Labels
Issue #2651: Labels: No Labels
This fixes https://github.com/apache/kvrocks/issues/2633
Issue #2650: Labels: No Labels
Issue #2649: Labels: No Labels
Issue #2648: Labels: No Labels
@git-hulk @PragmaTwice \r\ncc @AntiTopQuark 
Issue #2647: Labels: No Labels
Issue #2646: Labels: No Labels
Issue #2645: Labels: No Labels
New typos detected. Please review them as well.
Issue #2644: Labels: No Labels
A bug exists in this refactor, will dive into it tomorrow
Issue #2643: Labels: No Labels
When would "master is not a node in cluster" happens?
Issue #2642: Labels: enhancement, help wanted, good first issue
Hi i would like to take a shot with this issue. I ran the go test locally do you think its a good idea to take a look at the tests that rans over 20s?\n\n```\nok  \tgithub.com/apache/kvrocks/tests/gocase/integration/cluster\t26.165s\nok  \tgithub.com/apache/kvrocks/tests/gocase/integration/replication\t119.125s\nok  \tgithub.com/apache/kvrocks/tests/gocase/integration/slotmigrate\t95.155s\nok  \tgithub.com/apache/kvrocks/tests/gocase/unit/config\t27.430s\nok  \tgithub.com/apache/kvrocks/tests/gocase/unit/type/list\t49.528s\nok  \tgithub.com/apache/kvrocks/tests/gocase/unit/scripting\t20.098s\nok  \tgithub.com/apache/kvrocks/tests/gocase/unit/type/bitmap\t34.487s\nok  \tgithub.com/apache/kvrocks/tests/gocase/unit/type/zset\t21.468s\n```
Issue #2641: Labels: No Labels
Issue #2640: Labels: No Labels
Issue #2639: Labels: No Labels
Issue #2638: Labels: bug
Issue #2637: Labels: No Labels
Issue #2636: Labels: enhancement
Done in #2637.
Issue #2634: Labels: No Labels
Issue #2633: Labels: bug
Good catch! Would you like to fix it?\r\n\r\n`std::vector<std::string>` seems not a good way to do that since it can not guarantee to be compatible to new versions of rocksdb when a new enum value is introduced.\r\n\r\nWe can impl by a `std::map<SomeRocksdbEnumType, std::string>`.
Issue #2632: Labels: No Labels
TBH the version number of TBB is quite confusing..
Issue #2631: Labels: No Labels
Issue #2630: Labels: No Labels
Issue #2629: Labels: No Labels
`GET_OR_RET` is already a generalized macro for both `Status` and `StatusOr<T>`.\r\n\r\nYou can refer to my comment https://github.com/apache/kvrocks/issues/2521#issuecomment-2335096655.
Issue #2628: Labels: enhancement, help wanted, good first issue
As all keys are sorted by lexicographic order in kvrocks, maybe we can think of a set of commands about key prefix operation, of course, deleting keys by the prefix.\r\noh `scan` already supports key pattern, but kvrocks is faster than expected
Issue #2627: Labels: No Labels
Would you mind fix the lint?
Issue #2626: Labels: enhancement
This is ok to me since "OK" would be frequently used, but I don\
Issue #2625: Labels: bug, good first issue
Hi @PragmaTwice ,\r\n\r\nI want to follow up on this issue.\r\n\r\nCould it be assigned to me? 😊\r\n\r\nBest Regards,\r\nEdward
Issue #2624: Labels: No Labels
Issue #2623: Labels: No Labels
Issue #2621: Labels: No Labels
Issue #2620: Labels: No Labels
Do we need to add "exclusive" flag to `flushdb` and `flushall`? cc @git-hulk 
Issue #2619: Labels: No Labels
Is this to avoid not calling `flag_gen` fn if having?
Issue #2618: Labels: bug
Issue #2617: Labels: bug
I\
Issue #2615: Labels: No Labels
Issue #2614: Labels: No Labels
Issue #2613: Labels: enhancement, help wanted, good first issue
Can I have a try?
Issue #2612: Labels: enhancement
Ahhh since the lua runtime is not thread-safe, we should remove the global lua context (inside Server) and utilize the worker-local lua runtimes (inside every Worker) to execute lua functions.\r\n\r\nAS IS:\r\n```\r\nglobal lua runtime: EVAL, FCALL\r\n\r\nworker-local lua runtimes: EVAL_RO, FCALL_RO\r\n```\r\n\r\nTO BE:\r\n```\r\nworker-local lua runtimes: EVAL, EVAL_RO, FCALL, FCALL_RO\r\n```
Issue #2611: Labels: No Labels
Issue #2610: Labels: bug
@Rafiot Thanks for your report. Redis did have a different reply behavior when count is 1.
Issue #2608: Labels: No Labels
Hi @nathanlo-hrt Seems the Go test is broken, would you mind fixing it to make it mergeable?
Issue #2607: Labels: No Labels
By the way, may I ask that is this only for write-heavy workload(maybe with long and compress-able key-values)?
Issue #2606: Labels: enhancement
Issue #2605: Labels: No Labels
From the CI log, we need to add `vector.reserve()` before the loop containing `vector.push_back()`.
Issue #2604: Labels: bug
@sryanyuan Thanks for your information. Will keep an eye on this issue and apply it in Kvrocks ASAP.
Issue #2602: Labels: enhancement
```\r\n    int compression_level;\r\n    int nocompression_level;\r\n```\r\nfunny naming :)\r\n\r\ni think about something more verbose like\r\n```\r\nnocompression_for_first_levels\r\n```
Issue #2601: Labels: bug, help wanted, good first issue
Issue #2600: Labels: No Labels
Issue #2599: Labels: No Labels
@nathanlo-hrt Thank you for your contribution. Ideally, is to add a dedicated test for the case(s) you highlighted.
Issue #2598: Labels: No Labels
Currently, the Kvrocks port listening implementation has a race condition: since Kvrocks checks whether the port is in use before actually grabbing exclusive use of the port, it\
Issue #2597: Labels: No Labels
cc @mapleFU PTAL
Issue #2596: Labels: bug
The DB lock was used to protect the db pointer from being freed while using. All threads currently can guarantee that, so I think we should not use the db lock in Context construction and destruction. cc @PokIsemaine \r\n\r\nCan refer to the stack:\r\n\r\n```\r\nThread 25 (Thread 0xffff7e326bc0 (LWP 45) "compact-check"):\r\n#0  0x0000ffffa7dab694 in __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393, expected=0, futex_word=0xffffa79ad7a8) at ./nptl/futex-internal.c:57\r\n#1  __futex_abstimed_wait_common (cancel=true, private=0, abstime=0x0, clockid=0, expected=0, futex_word=0xffffa79ad7a8) at ./nptl/futex-internal.c:87\r\n#2  __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word@entry=0xffffa79ad7a8, expected=expected@entry=0, clockid=clockid@entry=0, abstime=abstime@entry=0x0, private=private@entry=0) at ./nptl/futex-internal.c:139\r\n#3  0x0000ffffa7dae1d0 in __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0xffffa79ad380, cond=0xffffa79ad780) at ./nptl/pthread_cond_wait.c:503\r\n#4  ___pthread_cond_wait (cond=0xffffa79ad780, mutex=0xffffa79ad380) at ./nptl/pthread_cond_wait.c:618\r\n#5  0x0000aaaad6580b80 in rocksdb::port::CondVar::Wait() ()\r\n#6  0x0000aaaad640d38c in rocksdb::InstrumentedCondVar::Wait() ()\r\n#7  0x0000aaaad6273b8c in rocksdb::DBImpl::RunManualCompaction(rocksdb::ColumnFamilyData*, int, int, rocksdb::CompactRangeOptions const&, rocksdb::Slice const*, rocksdb::Slice const*, bool, bool, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*) ()\r\n#8  0x0000aaaad6274628 in rocksdb::DBImpl::CompactRangeInternal(rocksdb::CompactRangeOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const*, rocksdb::Slice const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) ()\r\n#9  0x0000aaaad627519c in rocksdb::DBImpl::CompactRange(rocksdb::CompactRangeOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const*, rocksdb::Slice const*) ()\r\n#10 0x0000aaaad60e4ccc in engine::Storage::Compact(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const*, rocksdb::Slice const*) ()\r\n#11 0x0000aaaad615f1b4 in CompactionChecker::PickCompactionFilesForCf(engine::ColumnFamilyConfig const&) [clone .isra.0] ()\r\n#12 0x0000aaaad60bc730 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<util::CreateThread<Server::Start()::{lambda()#2}>(char const*, Server::Start()::{lambda()#2})::{lambda()#1}> > >::_M_run() [clone .lto_priv.0] ()\r\n#13 0x0000aaaad69052dc in execute_native_thread_routine ()\r\n#14 0x0000ffffa7daee30 in start_thread (arg=0xffffe904fbe7) at ./nptl/pthread_create.c:442\r\n#15 0x0000ffffa7e17adc in thread_start () at ../sysdeps/unix/sysv/linux/aarch64/clone.S:79\r\n```
Issue #2595: Labels: No Labels
Thank you for your contribution.
Issue #2594: Labels: enhancement
It seems related to the logical logging cc @mapleFU .\r\n\r\nCould you elabrate the detailed design of the "event" field?\r\n\r\nHow to define a new event? e.g. for ZSET data type, could you list all event, for every write commands [here](https://kvrocks.apache.org/docs/supported-commands#zset-commands)?\r\n\r\nAlso the "subkey" is related to different encoding for each data type. If we store "subkey" here, it\
Issue #2593: Labels: No Labels
Issue #2592: Labels: No Labels
Issue #2591: Labels: No Labels
Issue #2590: Labels: No Labels
https://github.com/apache/kvrocks/actions/runs/11296291234/job/31435412588?pr=2590\r\n\r\nThe CI job via ASF self-hosted runner is cancelled. Not sure why.\r\n\r\n> The runner has received a shutdown signal. This can happen when the runner service is stopped, or a manually started runner is canceled.\r\nThe self-hosted runner: asf-arm-trzxd-rh9np lost communication with the server. Verify the machine is running and has a healthy network connection. Anything in your workflow that terminates the runner process, starves it for CPU/Memory, or blocks its network access can cause this error.\r\n\r\n\r\ncc @gmcdonald 
Issue #2589: Labels: No Labels
@sryanyuan Thank you for this fix.
Issue #2588: Labels: No Labels
Issue #2587: Labels: enhancement, help wanted, good first issue
@PragmaTwice i would be happy if you assign this to me!!!
Issue #2586: Labels: No Labels
Issue #2585: Labels: No Labels
Issue #2584: Labels: A-ci
Issue #2583: Labels: bug
@Genuineh will support this at the next release.
Issue #2582: Labels: enhancement
Hi @PragmaTwice ,\r\n\r\nI want to follow up on this issue.\r\n\r\nCould it be assigned to me?😊\r\n\r\nBest Regards,\r\nEdward
Issue #2581: Labels: No Labels
Issue #2580: Labels: enhancement
Issue #2579: Labels: No Labels
Issue #2577: Labels: No Labels
@PragmaTwice I decided to switch it up the serialization on the implementation, I can include it on the pr. As for the field_alias, you can use this implementation to use index fields to look and see if the alias matches when it receives a non matching index in a command (which will be implemented in a GetAlias function).
Issue #2576: Labels: No Labels
thanks for taking a look at this!
Issue #2575: Labels: No Labels
Issue #2574: Labels: bug
Issue #2573: Labels: No Labels
@PragmaTwice @Beihao-Zhou @LindaSummer Feel free to leave changes!
Issue #2572: Labels: No Labels
Issue #2571: Labels: No Labels
Issue #2570: Labels: No Labels
Issue #2569: Labels: No Labels
@jonathanc-n How to be sure that bug was fixed? Exactly, write a test :)\r\n \r\nThere is a classic flow for fixing a bug:\r\n1. Write a test that fails.\r\n2. Fix a bug.\r\n3. Assert that the test passes -> it will prevent any regression.
Issue #2568: Labels: bug
Issue #2566: Labels: No Labels
Stream test time out after 30 minutes. Maybe there is a block or infinite wait (for example, waiting for a message that is never added).
Issue #2564: Labels: No Labels
@PragmaTwice Commited to change. Should be good to run workflow
Issue #2563: Labels: enhancement
For MSet, it\
Issue #2562: Labels: enhancement
cc @PragmaTwice @PokIsemaine 
Issue #2561: Labels: enhancement, help wanted
Issue #2558: Labels: enhancement, help wanted
Hello @LindaSummer,  I am very interested in your project, and it seems that there is a lot of development tasks that need to be done. If possible, could you assign me some sub-tasks or areas where I can help?  I’d like to contribute to the growth of the kvrocks community.
Issue #2557: Labels: No Labels
The rest LGTM :)
Issue #2556: Labels: No Labels
@PragmaTwice One thing noted for this pr, is that it is not fully removing the key from index from being searched. After deletion is called, the key and data is deleted however when calling the search function again, the key is still looked for and will call a notfound error
Issue #2555: Labels: enhancement
@PragmaTwice I guess when proposals/prs come up we can list the issues opened under the commands here. This can act as a tracker for people to know what has been done and is being worked on for Redisearch commands.
Issue #2554: Labels: enhancement
@PokIsemaine You can mark this in your issue you posted
Issue #2553: Labels: No Labels
Never mind, this pr seems to messing with the original Lint/Check code process. Maybe I can open an issue to check why these changed lines from ./x.py format cause an error when clang-format is run. Anyone have thoughts on this?
Issue #2552: Labels: bug
@VIVALXH Good catch, would you like to fix this?
Issue #2550: Labels: bug
Hi @git-hulk ,\r\n\r\nI want to follow up this issue. 😊\r\nCan it be assigned to me?\r\n\r\nBest Regards,\r\nEdward
Issue #2549: Labels: No Labels
Issue #2548: Labels: No Labels
```\r\n--- FAIL: TestBitmap (846.21s)\r\n    --- FAIL: TestBitmap/SETBIT/GETBIT/BITCOUNT/BITPOS_boundary_check_(type_bitmap) (150.90s)\r\n        bitmap_test.go:204: \r\n            \tError Trace:\t/Users/runner/work/kvrocks/kvrocks/tests/gocase/unit/type/bitmap/bitmap_test.go:204\r\n            \tError:      \tReceived unexpected error:\r\n            \t            \tread tcp 127.0.0.1:50435->127.0.0.1:50429: i/o timeout\r\n            \tTest:       \tTestBitmap/SETBIT/GETBIT/BITCOUNT/BITPOS_boundary_check_(type_bitmap)\r\n```\r\n\r\nThe above check failure _seems_ to be an unrelated i/o timeout; is there a way to rerun the checks?
Issue #2547: Labels: bug, release notes
@fstd2 It would be great if you could add a Go test case to prevent breaking in the future.
Issue #2546: Labels: bug
@fstd2 Good catch. Would you like to fix this?
Issue #2545: Labels: No Labels
Running `./x.py format` should make the linter happy.
Issue #2544: Labels: No Labels
Issue #2543: Labels: No Labels
Please delete, this was my bad when attempting to update my local fork
Issue #2540: Labels: No Labels
Issue #2538: Labels: No Labels
Test case is added + the node checking is more flexible
Issue #2537: Labels: No Labels
Issue #2536: Labels: No Labels
Issue #2535: Labels: No Labels
@poipoiPIO thanks for your contribution.
Issue #2534: Labels: enhancement, help wanted
Issue #2533: Labels: No Labels
Workflow should be good I believe
Issue #2530: Labels: No Labels
Retrigger CI, would merge if all ci passed
Issue #2529: Labels: No Labels
Issue #2528: Labels: enhancement
@LindaSummer Thanks for your interest. We can close this issue after PR https://github.com/apache/kvrocks/pull/2549 which uses the `try_lock` to avoid the long pending in replication thread. So it should be good to leave as it is for now.
Issue #2527: Labels: No Labels
Issue #2526: Labels: bug
Hi, @wanghenshui when kvrocks process down, the container should restart, I have add "restart-condition on-failure" parameter.
Issue #2525: Labels: release notes
Issue #2524: Labels: No Labels
Was there a change made to GetOptions recently? There seems to be a problem after the merge.
Issue #2522: Labels: No Labels
Issue #2521: Labels: No Labels
@AntiTopQuark Would you like to take this issue?
Issue #2520: Labels: bug
@fstd2 Did you enable `repl-namespace-enabled` configuration on the master node?
Issue #2519: Labels: No Labels
Issue #2518: Labels: enhancement
Issue #2517: Labels: No Labels
Issue #2516: Labels: No Labels
Issue #2514: Labels: enhancement
Issue #2513: Labels: No Labels
I believe implementing an elegant solution to track and restrict client connection memory usage is challenging and could reduce code maintainability. \r\n\r\nInstead, I suggest exploring alternative approaches, like limiting the number of clients.
Issue #2512: Labels: bug
Issue #2511: Labels: bug
Issue #2510: Labels: No Labels
It appears that CI is experiencing an SSL certificate issue😥
Issue #2508: Labels: No Labels
@AntiTopQuark Thanks for your efforts. Would you mind adding a Go test case for this?
Issue #2507: Labels: No Labels
Issue #2506: Labels: No Labels
Issue #2505: Labels: No Labels
Issue #2504: Labels: enhancement
Issue #2502: Labels: release notes
Issue #2501: Labels: No Labels
Issue #2500: Labels: bug
Will check this later today
Issue #2499: Labels: No Labels
> LGTM. But seems no regression tests to guard this manner ..\r\n\r\nUnit tests can cover this scenario. The reason why unit test was ineffective before is that callback was not registered for the item, which means `config set` command did not actually execute in rocksdb. See\r\n![image](https://github.com/user-attachments/assets/5c57822c-f2f7-4583-877a-0635c7b7b0e1)\r\n\r\n
Issue #2498: Labels: No Labels
@AntiTopQuark Running `./x.py format` should make the linter happy.
Issue #2497: Labels: bug
@903174293 Could you please have a try at devtoolset-11?
Issue #2495: Labels: No Labels
@furkan-bilgin Thanks for your contribution. Could you please help to pass the CI lint according to https://github.com/apache/kvrocks/actions/runs/10441248380/job/28912245323?pr=2495
Issue #2494: Labels: No Labels
@git-hulk Alright got it, thanks for the feedback!
Issue #2493: Labels: No Labels
Issue #2492: Labels: enhancement
Can I be assigned this issue?
Issue #2491: Labels: No Labels
Tried the benchmark framework today, which took more than one hour to upload, but didn\
Issue #2490: Labels: bug
> Could it be due to the switch to Debian?\r\n\r\nHave you tried to build kvrocks in your own environment and see if TLS replication works well?
Issue #2489: Labels: enhancement
We can first try to implement the first method because it is simpler and does ensure correctness of indexing. \r\n\r\nWe can then benchmark to determine its impact on performance and consider how to further optimize it.
Issue #2488: Labels: No Labels
Issue #2487: Labels: bug
@903174293 I believe cannot ask your question with your provided information. You should investigate why the master node cannot response. Perhaps you can have a look at the CPU usage and its db logs.
Issue #2485: Labels: No Labels
Issue #2484: Labels: No Labels
LGTM, we can add a test case to avoid unexpected changes on this?
Issue #2483: Labels: No Labels
Issue #2482: Labels: No Labels
Issue #2481: Labels: enhancement
Issue #2480: Labels: No Labels
Issue #2479: Labels: No Labels
Issue #2478: Labels: enhancement, help wanted, good first issue
@PragmaTwice @git-hulk What is the syntax for isolating go tests for testing?
Issue #2477: Labels: No Labels
Issue #2476: Labels: No Labels
Issue #2475: Labels: No Labels
+1.
Issue #2474: Labels: enhancement, help wanted, good first issue
Is there any mechanism that will accompany this flag after it is added? And what is the metric for  heavy disk IO?
Issue #2473: Labels: bug
/assign
Issue #2472: Labels: No Labels
Do we need to provide oldest sequence number?
Issue #2469: Labels: enhancement
Issue #2468: Labels: enhancement
both scan mode and Sync Reader do not work,\r\nbut I wrote the scan code myself and have migrated pika to kvrocks.
Issue #2466: Labels: No Labels
Issue #2465: Labels: No Labels
Issue #2463: Labels: No Labels
@git-hulk @PragmaTwice this patch:\r\n1. Does some minor optimization in command implemention\r\n2. Fix the bug for `Command` impl\r\n3. Gocase testings
Issue #2461: Labels: No Labels
> Would you mind try redis-benchmark to test some commands? I don\
Issue #2460: Labels: No Labels
Issue #2458: Labels: enhancement, help wanted
Can I be assigned this issue?
Issue #2457: Labels: No Labels
Generally looks good to me, only one comment inline.
Issue #2456: Labels: No Labels
@PragmaTwice would you mind check again?
Issue #2455: Labels: No Labels
Issue #2454: Labels: enhancement
Issue #2452: Labels: No Labels
@AntiTopQuark What you did in this PR did not match issue #2284, which intended to control the output buffer limit instead of the process memory. The current implementation also cannot promise maximum memory usage since we have many background threads and existing connections might request more memory than that.
Issue #2451: Labels: No Labels
Issue #2450: Labels: No Labels
Issue #2448: Labels: No Labels
Issue #2447: Labels: No Labels
Issue #2446: Labels: No Labels
Just ping me if ready for code review
Issue #2445: Labels: enhancement
Issue #2444: Labels: No Labels
Issue #2443: Labels: No Labels
Issue #2441: Labels: No Labels
Issue #2440: Labels: No Labels
Issue #2439: Labels: No Labels
Issue #2437: Labels: enhancement
Issue #2436: Labels: No Labels
Issue #2435: Labels: enhancement
Issue #2434: Labels: No Labels
This PR is ready for review! @PragmaTwice \r\nI probably want to add the hybrid executor after implementing the IR expressions (See the Next section in the first conversation block) if this sounds good to you. <3
Issue #2433: Labels: bug
Hi @der-eismann \r\n\r\nThanks for your report. The default `pidfile` should be located in `{dir}/kvrocks.pid` instead of `{CONFIG_DIR}` or `/var/run` dir. For the implementation, please refer to https://github.com/apache/kvrocks/blob/unstable/src/config/config.cc#L415
Issue #2432: Labels: enhancement
Issue #2431: Labels: No Labels
Issue #2430: Labels: No Labels
Issue #2429: Labels: No Labels
Issue #2428: Labels: No Labels
I think we need to add a `Setup Debian` step into `steps`, just like `Setup OpenSUSE` or `Setup ArchLinux`, to do some dependency installing.
Issue #2427: Labels: enhancement
Fixed in #2429.
Issue #2426: Labels: enhancement
Would you like to add the encoding format of vector index to https://kvrocks.apache.org/community/kvrocks-search-index-encoding/ when you have time?
Issue #2425: Labels: enhancement, help wanted, good first issue
Can I be assigned this issue?
Issue #2424: Labels: enhancement, help wanted, good first issue
I hope to complete this issue. Can you assign it to me.
Issue #2423: Labels: enhancement, help wanted, good first issue
Hi @PragmaTwice ,\r\n\r\nI want to work on this issue. 😊\r\nCan it be assigned to me?\r\n\r\nBest Regards,\r\nEdward
Issue #2422: Labels: enhancement, help wanted, good first issue
Can I be assigned this issue?
Issue #2421: Labels: enhancement, help wanted
Since this was a GSOC project, I drafted a [TS data structure proposal](https://beihao-rebecca.notion.site/TimeSeries-Proposal-6c5d2f9bc0624a50a209cb8f517109a8) before. Hope this can help give a good starting point! 
Issue #2420: Labels: enhancement
Issue #2419: Labels: enhancement, help wanted
@lbihani9 Assigned, thank you!
Issue #2418: Labels: enhancement
Can I be assigned this?
Issue #2417: Labels: enhancement, help wanted, good first issue
Issue #2416: Labels: enhancement, help wanted, good first issue
Sure! Assigned.
Issue #2415: Labels: enhancement, help wanted
Issue #2414: Labels: enhancement
I plan to provide support for `no-writes`, `no-cluster`, `allow-cross-slot-keys` in the next few days.
Issue #2413: Labels: No Labels
Issue #2412: Labels: No Labels
Issue #2411: Labels: bug, help wanted
Issue #2410: Labels: No Labels
Issue #2409: Labels: No Labels
Issue #2408: Labels: No Labels
Issue #2407: Labels: No Labels
Issue #2406: Labels: No Labels
@PragmaTwice Yes, the RESP functions are more about the Redis protocol than the connection between a client and the server.
Issue #2405: Labels: No Labels
Issue #2404: Labels: No Labels
https://github.com/apache/kvrocks/blob/unstable/tests/gocase/tls/tls_test.go#L57 This case would not return the NOAUTH error since it sent the plain command to the TLS port. So it will return the connection closed by peer error.
Issue #2403: Labels: No Labels
Issue #2402: Labels: No Labels
> And we use the second bit of the flags in metadata to indicate whether encode the expiration into value.\r\n\r\nAs we specified in https://kvrocks.apache.org/community/data-structure-on-rocksdb#encoding-version-and-data-type, the first and second (and maybe more bits from the MSB) of `flags` is used to represent the "encoding version". `flags` `1 1 0 0 | 0 0 1 0` indicates that the encoding version is 3.\r\n\r\nSo it should not be used for field expiration. (Also, not all data types need the field expiration feature.)\r\n\r\nInstead, you can add a new enum value of data type, or add a new field in the metadata of hash.
Issue #2401: Labels: enhancement, help wanted, good first issue
Could you try to add a `\\n`?\r\n\r\n```\r\nCLUSTERX SETNODES "86f7e437faa5a7fce15d1ddcb9eaeaea377667b8 172.20.84.154 6666 master - 0-5460 \\n  3c363836cf4e16666669a25da280a1865c2d2874 172.20.84.154 6669 slave 86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" 1\r\n```
Issue #2400: Labels: A-build
Issue #2399: Labels: enhancement
Hi @wessorh Thanks for your report.\r\n\r\nMaybe we can add a configuration `proto-max-bulk-len` for this purpose like Redis: [config.c#L3206](https://github.com/redis/redis/blob/69b480cb7a9c804b59406cc134951af5b52d8ea6/src/config.c#L3206C27-L3206C45)
Issue #2398: Labels: enhancement
Issue #2397: Labels: No Labels
Issue #2396: Labels: No Labels
Issue #2395: Labels: No Labels
LGTM, one comment inline.
Issue #2394: Labels: No Labels
Issue #2393: Labels: No Labels
Issue #2392: Labels: No Labels
The CI failure should be caused by EOL of CentOS 7: https://github.com/pypa/manylinux/issues/1641
Issue #2391: Labels: No Labels
Issue #2390: Labels: No Labels
Issue #2389: Labels: No Labels
@PokIsemaine \r\n> First, regarding item 2 on the TODO list, I find this situation a bit confusing because I am not sure if this is the intended design of kvrocks. If possible, please determine whether this is a normal situation.\r\n\r\nThis is indeed the case at the moment. The migrated slots is not checked when the migration is performed, and I think they should be checked.\r\n\r\n> Second, concerning items 1 and 3 on the TODO list, these are enhancements. Please evaluate whether these features are needed and if they should be included in this PR.\r\n\r\nI think these are good improvements, but we can add them in the subsequent PR. This PR is enough.\r\n
Issue #2388: Labels: No Labels
@git-hulk Thanks for your quick reply, I will figure out it why :)
Issue #2387: Labels: No Labels
> LGTM. Ideally, it would be great to add the test case for the filtering by IDLE time.\r\n\r\nWill add it in another PR.  :)
Issue #2386: Labels: No Labels
Since now the protection on unstable branch is removed unexpectedly, I need to merge it to recover as soon as possible.
Issue #2385: Labels: No Labels
Issue #2384: Labels: No Labels
Should `StreamEntryID::Maximum` be `{UINT64_MAX - 1, ..}` to avoid the `-1` case here?
Issue #2383: Labels: No Labels
It need to be picked to release 2.9.0 to fix a bug in 8547cfb48cb30dc3ad26214980e2c6a61c0e609a.
Issue #2381: Labels: bug, help wanted
This PR https://github.com/apache/kvrocks/pull/2404 will close issue
Issue #2380: Labels: No Labels
All macos 11 jobs in CI cannot be started normally.\r\n\r\nWe need to solve #2381 and upgrade to macos 12/13.
Issue #2378: Labels: enhancement
Just noticed, that redis did implement a similar command (finally) `HEXPIRE`: https://redis.io/docs/latest/commands/hexpire/
Issue #2377: Labels: No Labels
Issue #2376: Labels: No Labels
Issue #2375: Labels: No Labels
Issue #2374: Labels: No Labels
@jackyyyyyssss Nice catch!
Issue #2373: Labels: No Labels
> go Redis client checks count parameter before passing to server, so count == 0 test case can\
Issue #2372: Labels: No Labels
Issue #2371: Labels: No Labels
Issue #2370: Labels: enhancement, help wanted, good first issue
Yes, perhaps we can support this in Dockerfile like PostgreSQL: https://github.com/docker-library/postgres/blob/cefde5ff6f102fcd381a03210c7734816c59aa3e/docker-entrypoint.sh#L9.
Issue #2369: Labels: No Labels
Issue #2368: Labels: No Labels
Hi @PragmaTwice , this PR is ready for review! :)
Issue #2367: Labels: No Labels
Issue #2366: Labels: No Labels
Issue #2365: Labels: enhancement
Issue #2364: Labels: bug
@alija83 Thanks for your report. This issue should involve two problems:\r\n\r\n- No need to rewrite the configuration file while starting in most scenarios. And it has been fixed in https://github.com/apache/kvrocks/pull/2347\r\n- Must mount a writable volume if you would like to rewrite the config. And what you do is correct, another workaround is to mount the `/var/lib/kvrocks` volume, please refer to: https://github.com/apache/kvrocks/blob/unstable/Dockerfile#L35
Issue #2363: Labels: No Labels
Issue #2362: Labels: No Labels
https://github.com/apache/kvrocks/blob/84a3559be87ef623d9a2cbca51018be7218835ce/src/cluster/replication.cc#L1003\r\n\r\nForget to change?
Issue #2361: Labels: No Labels
Issue #2360: Labels: No Labels
@PragmaTwice Thanks for your suggestions, I updated the code
Issue #2359: Labels: No Labels
Sounds good to me. We can just have a `./x.py prepare`.
Issue #2358: Labels: No Labels
@PragmaTwice Awesome!
Issue #2357: Labels: No Labels
Issue #2356: Labels: No Labels
Issue #2355: Labels: enhancement, help wanted, feature
@PokIsemaine Sure, thank you. Free feel to ping @PragmaTwice @git-hulk @caipengbo for help or confirm anything.
Issue #2354: Labels: No Labels
Issue #2353: Labels: No Labels
Issue #2352: Labels: No Labels
Hi @torwig ,\r\n\r\n  Thanks for your suggestion.  I have updated the related code.\r\n\r\n  Please take a look.\r\n\r\n  Thanks very much.
Issue #2351: Labels: No Labels
Issue #2350: Labels: bug
@LindaSummer Thanks for your detailed report.
Issue #2349: Labels: No Labels
Issue #2348: Labels: No Labels
Thanks to @thbley about the some fix and optimizing from https://github.com/apache/kvrocks/issues/2344
Issue #2347: Labels: No Labels
> But what if there are some namespaces? We also need to consider this situation.\r\n\r\n`Rewrite()` will persist them if there are any namespaces(except the default), and then remove them from the config file. So it should be good for this scenario.
Issue #2346: Labels: No Labels
Issue #2345: Labels: No Labels
Issue #2344: Labels: enhancement
@thbley Thanks for your proposal.\r\n\r\n@apache/kvrocks-committers What do you think about this? From my perspective, it did help when users wanted to debug the kvrocks.
Issue #2343: Labels: No Labels
Issue #2342: Labels: No Labels
cc @apache/kvrocks-committers 
Issue #2341: Labels: No Labels
Issue #2340: Labels: No Labels
Thank you for your great finding.
Issue #2339: Labels: enhancement
GitHub Action is used in some projects to check PR title. Maybe we can also add related Actions\r\n\r\nexample:\r\nhttps://github.com/amannn/action-semantic-pull-request\r\n\r\nhttps://github.com/apache/pulsar/blob/master/.github/workflows/ci-semantic-pull-request.yml
Issue #2338: Labels: No Labels
Issue #2337: Labels: No Labels
Issue #2336: Labels: No Labels
![image](https://github.com/apache/kvrocks/assets/127465317/aa6f2c9f-b078-4f4c-bb30-284b1a297b2a)\r\nThese errors seem to have nothing to do with the changes I made this time\r\nplease help retry
Issue #2335: Labels: enhancement
The problem is that we add ERR prefix for all msg returned by `Status`.\r\n\r\nOne solution is to add a new status code for no ERR prefix. (Or, add many status code for LOADING, NOPROTO...)
Issue #2334: Labels: No Labels
Issue #2333: Labels: No Labels
Issue #2332: Labels: No Labels
NOTE: \r\nThis is a relatively large PR that involves most of the functional modules. I tried to split them into smaller PRs but failed because the changes are interrelated and propagate among each other. \r\n\r\nTherefore, to better advance this work, I believe we need to conduct the review gradually and multiple times. At the start of each review, I will post a `"REVIEW X"` comment to inform which parts are being reviewed and highlight any points that need attention or discussion. When this review is complete, please reply to the comment with `"REVIEW X ok"` and I will start the next review. If you have any questions or suggestions during this period, please include the prefix `"REVIEW X"` to indicate which stage it belongs to. \r\n\r\nAlthough there are still some `TODO` items, I plan to discuss and refine them during the review process as you become more familiar with the background of these `TODOs`. \r\n\r\nIf you think this approach is feasible, I will soon start the first review, change the PR from `Draft` to `Review` status, and then switch it back to Draft status for modifications. \r\nThe overall process is: `REVIEW 1 => DRAFT modification => REVIEW 1 ok => REVIEW 2 => DRAFT modification => REVIEW 2 ok...`.
Issue #2331: Labels: enhancement
Issue #2330: Labels: enhancement
@torwig @Yangsx-1 What do you think about this proposal?
Issue #2329: Labels: enhancement
Issue #2328: Labels: No Labels
Issue #2327: Labels: No Labels
If this PR https://github.com/apache/kvrocks/pull/2348 will be OK, we can update to use latest rocksdb (as I hope)))
Issue #2326: Labels: bug
Issue #2325: Labels: No Labels
Issue #2324: Labels: A-ci
Need to confirm why there are go test failures on macos 12.
Issue #2323: Labels: No Labels
> There are several issues in this implemetation:\r\n> \r\n> * the result of `as_string().size()` is not equal to the real size, we should at least use `to_string()`\r\n> * but actually `to_string` is also wrong, since it maybe not equal to the result of `compact_json_string_encoder`. also it would be totally wrong if CBOR format is enabled.\r\n> * there may be multiple location found from one jsonpath, which is not handled in this impl\r\n> * if jsonpath is `$`, no json decoding is required\r\n\r\nThank you for your help. The modifications have been completed, please help me take a look again
Issue #2322: Labels: No Labels
Issue #2321: Labels: No Labels
Issue #2320: Labels: No Labels
Issue #2319: Labels: No Labels
Issue #2318: Labels: No Labels
Issue #2317: Labels: No Labels
Issue #2315: Labels: bug
https://github.com/facebook/rocksdb/wiki/Compaction-Filter\r\n\r\n> If it request to filter the key, the value is replaced by a deletion marker. Note that if the output level of the compaction is the bottom level, no deletion marker will need to be output.\r\n\r\nWould this have no problem here?
Issue #2314: Labels: enhancement
Issue #2313: Labels: No Labels
@VasuDevrani Should we also fix those errors in the scope of this PR?
Issue #2312: Labels: enhancement
@VasuDevrani Looks good, you can go ahead to improve this.
Issue #2311: Labels: release notes
Issue #2310: Labels: enhancement
Need some help:\r\n\r\n```\r\nstruct Context {\r\n  explicit Context(engine::Storage *storage) : storage_(storage), snapshot_(storage->GetDB()->GetSnapshot()) {}\r\n\r\n  engine::Storage *storage_ = nullptr;\r\n  const rocksdb::Snapshot *snapshot_ = nullptr;\r\n  rocksdb::WriteBatchWithIndex* batch_ = nullptr;\r\n\r\n  Context() = default;\r\n  rocksdb::ReadOptions GetReadOptions();\r\n  const rocksdb::Snapshot *GetSnapShot();\r\n};\r\n```\r\nThis is the general idea: pass in the `Context` to the Database API, use a fixed snapshot when calling, and this snapshot **will not change during the entire calling process**. When we need to read our own data for the current operation, we use `WriteBatchWithIndex` + `GetFromBatchAndDB` to obtain the data batch=>db(snapshot=ctx.snapshot).\r\n\r\nMost operations nowadays use WriteBatch. Is there any way to copy the operation sequence from `WriteBatch` to `ctx.WriteBatchWithIndex`? In this way, I only need to modify the last `Write` part of storage, instead of modifying `ctx.WriteBatchWithIndex` when the DB API modifies `WriteBatch`.
Issue #2309: Labels: No Labels
Issue #2308: Labels: release notes
@xiaobiaozhao You need to turn the default value of rocksdb.async_io to true as well. Another quick question: is the rocksdb community marking this feature as stable?
Issue #2307: Labels: No Labels
Issue #2306: Labels: bug
Issue #2305: Labels: enhancement
Issue #2304: Labels: No Labels
Issue #2303: Labels: No Labels
The CI failure is not related to this PR, will take a look later.
Issue #2302: Labels: enhancement, help wanted, good first issue
do we want INFO command to return output in json fomat when `INFO JSON` (JSON specified in command) otherwise plain text?
Issue #2301: Labels: enhancement, good first issue, A-build
If convenient, you can add other checks at the same time, such as golang format, clang tidy
Issue #2300: Labels: No Labels
related issue: https://github.com/apache/kvrocks/issues/2295
Issue #2299: Labels: No Labels
Issue #2298: Labels: No Labels
Verified: All test passed with no ubsan error in My M1 MacOS with `-DENABLE_ASAN=ON -DENABLE_UBSAN=ON -DDISABLE_JEMALLOC=ON -DASAN_WITH_LSAN=OFF` . I can decrease `no-sanitize` later
Issue #2297: Labels: enhancement
Issue #2296: Labels: No Labels
cc @jjz921024 @PragmaTwice @git-hulk 
Issue #2295: Labels: enhancement, help wanted, good first issue
Closed by https://github.com/apache/kvrocks/pull/2300
Issue #2294: Labels: enhancement
@suxb201 Yes, the reason is the benchmark result cannot be reproduced by users, so remove it first to avoid confusing users.
Issue #2293: Labels: enhancement, help wanted, good first issue
Also another big issue is to be compatible to old version: users can use new version of kvrocks with their old data, and they want these old data can work well.
Issue #2292: Labels: enhancement, help wanted
I went through the codebase, can you confirm if i got it right? \r\n- the key encoding logic (encoding and decoding) is implemented in the `InternalKey` class \r\n- can be fixed by introducing a new variable for encoding version, a function to read it from storage during loading process, update `InternalKey` class to handle different versions
Issue #2291: Labels: enhancement, help wanted, good first issue
/assign\r\n
Issue #2290: Labels: No Labels
Issue #2289: Labels: No Labels
Issue #2288: Labels: No Labels
Issue #2286: Labels: A-build, A-ci
Issue #2285: Labels: No Labels
@jackyyyyyssss Good catch!
Issue #2284: Labels: enhancement
I am interested in this problem. Could you assign the issue to me?
Issue #2283: Labels: enhancement
@bijanMC Would you like to submit a PR to resolve this?
Issue #2282: Labels: No Labels
Issue #2281: Labels: No Labels
Issue #2280: Labels: No Labels
Issue #2279: Labels: enhancement
For setting the `write_buff_size` for each column family. There are a simple way that i can think of is to extend `config set rocksdb.write_buffer_size num` command. \r\n\r\nFor example, the command of `config set rocksdb.write_buffer_size [cf_name] num` is used to set the buff_size of the specify cf.\r\n\r\nMore example: \r\n```shell\r\nconfig set rocksdb.write_buffer_size ALL num  \r\n# equivalent to `config set rocksdb.write_buffer_size num`\r\n# settings the buff_size for all of column families\r\n\r\nconfig set rocksdb.write_buffer_size MAJOR num\r\n# for major colunm families include metadata and default\r\n\r\nconfig set rocksdb.write_buffer_size MINOR num\r\n# for minor colunm families except for metadata and default\r\n\r\nconfig set rocksdb.write_buffer_size [metadate | default | zset | pubsub | ... ] num\r\n# for specify column family\r\n```\r\n
Issue #2278: Labels: No Labels
Ready for review now : )
Issue #2277: Labels: No Labels
Could you write some test cases for your patch? Thank you!
Issue #2276: Labels: No Labels
@mapleFU Can we have int64_t instead of time_t everywhere? Maybe just rename these variables as `timestamp` and add a comment `// in seconds/in milliseconds`? WDYT?
Issue #2275: Labels: No Labels
Issue #2273: Labels: No Labels
@git-hulk Hi, done it, please review
Issue #2272: Labels: No Labels
Issue #2271: Labels: No Labels
Issue #2270: Labels: No Labels
Issue #2269: Labels: enhancement, help wanted
This feature was add in Redis 7.4 RC
Issue #2268: Labels: enhancement
I submitted a PR at kvrocks-website. apache/kvrocks-website#222  @PragmaTwice 
Issue #2267: Labels: enhancement, help wanted, good first issue
@133tosakarin Perhaps you can try #2266 first.
Issue #2266: Labels: enhancement, good first issue
/assign
Issue #2265: Labels: No Labels
Issue #2264: Labels: No Labels
Issue #2263: Labels: enhancement
@PragmaTwice 
Issue #2262: Labels: No Labels
Will merge in 1-days if no negative comments
Issue #2261: Labels: enhancement
Issue #2260: Labels: No Labels
Issue #2259: Labels: No Labels
Issue #2258: Labels: No Labels
@jjz921024 Thanks for your contributions.
Issue #2257: Labels: No Labels
Issue #2256: Labels: No Labels
Issue #2255: Labels: No Labels
Issue #2254: Labels: No Labels
Update: bump rocksdb to 9.1.1 (bugfix release - https://github.com/facebook/rocksdb/releases/tag/v9.1.1)\r\n\r\n- Fixed a regression when ColumnFamilyOptions::max_successive_merges > 0 where the CPU overhead for deciding whether to merge could have increased unless the user had set the option ColumnFamilyOptions::strict_max_successive_merges
Issue #2253: Labels: bug, help wanted
@krizald Kvrocks now is using `RDB_TYPE_LIST_QUICKLIST_2` to dump the list payload which is only supported in Redis7. Needs to change it to RDB_TYPE_LIST_QUICKLIST or RDB_TYPE_LIST encoding, to see if any guys would like to resolve this. If no, I will fix it this weekend.
Issue #2252: Labels: No Labels
Issue #2251: Labels: bug
more over, KV Rocks is compatible with both dump content\r\n\r\n```\r\n127.0.0.1:7381> restore B 0 "\\x00\\x03ABC\\x0c\\x00\\x8a\\x95H\\n\\x1a\\xf2\\x0eO"\r\nOK\r\n127.0.0.1:7381> get B\r\n"ABC"\r\n127.0.0.1:7381> restore C 0 "\\x00\\x03ABC\\t\\x00\\x91\\x11-\\x06\\xb4^\\xf3\\xb7"\r\nOK\r\n127.0.0.1:7381> get C\r\n"ABC\r\n```
Issue #2250: Labels: No Labels
Issue #2249: Labels: No Labels
Issue #2248: Labels: bug
Issue #2247: Labels: No Labels
Issue #2246: Labels: No Labels
Issue #2245: Labels: No Labels
Issue #2244: Labels: feature
Generally LGTM, only one comment is inline.
Issue #2243: Labels: enhancement
Closed. Please feel free to reopen if I missed anything.
Issue #2242: Labels: No Labels
Issue #2241: Labels: No Labels
Issue #2240: Labels: No Labels
Issue #2239: Labels: No Labels
Issue #2238: Labels: No Labels
> I found sonar cloud tells us "Rename function "TestCopy_Error" to match the regular expression ^(_|[a-zA-Z0-9]+)$". Can you change those go test case function names to pascal Case (eg: `TestCopyError`)?\r\n> \r\n> https://sonarcloud.io/project/issues?resolved=false&pullRequest=2238&id=apache_kvrocks&open=AY7N7bb-6GZZ34cBM2MJ\r\n\r\nOK. I will also change the function name in rename_test.go by the way.
Issue #2237: Labels: bug
Issue #2236: Labels: No Labels
@jackyyyyyssss CommandSubkeyScanBase should have the same issue which is used for HSCAN/SSCAN/ZSCAN: https://redis.io/docs/latest/commands/sscan/.
Issue #2234: Labels: No Labels
Issue #2233: Labels: No Labels
Issue #2232: Labels: No Labels
Issue #2231: Labels: enhancement
Issue #2230: Labels: No Labels
Issue #2229: Labels: enhancement, help wanted, good first issue
Hey!! Can you please give this issue to me for solving it.\r\n
Issue #2228: Labels: No Labels
@zjregee It seems like CI is OK now.
Issue #2227: Labels: No Labels
@AntiTopQuark Running the `./x.py format` should fix the linting issues.
Issue #2226: Labels: No Labels
Issue #2225: Labels: No Labels
Hi @Chiro11, thanks for your PR.\r\nIn the issues, we think we need to add a new command. Can you move the code to a new command?\r\nhttps://github.com/apache/kvrocks/issues/1950#issuecomment-1963244776
Issue #2224: Labels: No Labels
Issue #2223: Labels: No Labels
Issue #2222: Labels: No Labels
@baobaomaomeng Hi, can you resolve the conflicts?
Issue #2221: Labels: No Labels
Issue #2220: Labels: major decision
From my perspective, I agree what @PragmaTwice mentioned. Expect for the design, the main obstacle for Kvrocks performance tracing is how to export the underlying storage metrics to users with an easy way. Maybe we can discuss this in another thread and +1 for this PR.
Issue #2219: Labels: No Labels
Issue #2218: Labels: No Labels
Issue #2217: Labels: No Labels
Generally looks good, you can fix the tidy issue according to https://github.com/apache/kvrocks/actions/runs/8526319228/job/23369018645?pr=2217#step:7:1294
Issue #2216: Labels: No Labels
Issue #2215: Labels: bug
Issue #2214: Labels: bug
@sam-hn I cannot reproduce this issue on my side, what I do is:\r\n\r\n\r\n1. start S1 and S2, and S2 slaveof S1\r\n2. SET a 100 to S1, then shutdown the S2\r\n3. SET a 101 and SET b 1 to S1, then restart S2 and S2 slaveof S1\r\n4. GET a and GET b from S2, and returns 101 and 1\r\n\r\nCan you provide how do you reproduce this?
Issue #2213: Labels: No Labels
Could you add a ctor to GetOptions?
Issue #2212: Labels: bug
I just back home, will fix this tonight
Issue #2211: Labels: No Labels
Issue #2210: Labels: No Labels
Issue #2209: Labels: No Labels
Issue #2208: Labels: No Labels
Issue #2207: Labels: No Labels
Issue #2206: Labels: No Labels
Issue #2205: Labels: No Labels
Ready for review now.
Issue #2204: Labels: No Labels
Issue #2202: Labels: No Labels
Hi @Yangsx-1! I have a question about `MakeCmdAttr`. What are `first_key`, `last_key`, and `key_step` for here? Also for the `description` field, should I have `no-dbsize-check` for `XCLAIM`? Thanks a lot!!
Issue #2201: Labels: No Labels
Issue #2200: Labels: enhancement
@in-han Thanks for your feedback, would you like to submit a PR to improve this？
Issue #2199: Labels: enhancement, help wanted, good first issue
@iushas Thanks for your feedback!
Issue #2198: Labels: enhancement
Duplicated with #2064.
Issue #2197: Labels: enhancement, help wanted, A-cluster
Issue #2196: Labels: No Labels
In this PR, I also removed the unused import_fd_ field in the importor.
Issue #2195: Labels: bug, crash
Thank you @Zakelly ! \r\nThe action log will be deleted by GitHub after some days. Can you download the log file and upload?
Issue #2194: Labels: No Labels
Thanks for your review.
Issue #2193: Labels: enhancement, help wanted, good first issue
Please assign it to me, thanks a lot :D
Issue #2192: Labels: No Labels
Issue #2191: Labels: bug
thanks
Issue #2190: Labels: No Labels
Issue #2189: Labels: No Labels
Issue #2188: Labels: bug
@hcymysql Thanks for your report. The right format should be:\r\n\r\n```\r\nredis-cli> CLUSTER SETNODES "kvrockskvrockskvrockskvrockskvrocksnode1 127.0.0.1 7001 master -  0-5460 \\n kvrockskvrockskvrockskvrockskvrocksnode2 127.0.0.1 7002 slave kvrockskvrockskvrockskvrockskvrocksnode1 \\n kvrockskvrockskvrockskvrockskvrocksnode3 127.0.0.1 7003 master -  5461-10992 \\n kvrockskvrockskvrockskvrockskvrocksnode4 127.0.0.1 7004 slave kvrockskvrockskvrockskvrockskvrocksnode3 \\n kvrockskvrockskvrockskvrockskvrocksnode5 127.0.0.1 7005 master -  10993-16383 \\n kvrockskvrockskvrockskvrockskvrocksnode6 127.0.0.1 7006 slave kvrockskvrockskvrockskvrockskvrocksnode5" 1\r\n```\r\n\r\nyou can also use the [create-cluster](https://github.com/apache/kvrocks/tree/unstable/utils/create-cluster) shell to quick setup a test cluster.
Issue #2186: Labels: No Labels
Issue #2185: Labels: No Labels
Issue #2184: Labels: No Labels
This PR is ready for review now : ) cc @git-hulk @mapleFU 
Issue #2183: Labels: No Labels
Issue #2182: Labels: No Labels
> Mark wal_compression feature as production-ready. Currently only compatible with ZSTD compression\r\n\r\nMaybe we can expose it in the config file.
Issue #2181: Labels: enhancement, help wanted, good first issue
Issue #2179: Labels: bug
@QQxiaoyuyu Could you provide the `nodes.conf` of `192.168.1.175:16663`?
Issue #2178: Labels: No Labels
Issue #2177: Labels: bug
@iushas Thanks for your report, will take a look soon.
Issue #2176: Labels: bug
Thanks for your work :)
Issue #2175: Labels: No Labels
>Tests failed with Asan or MacOS. Seems the kvrocks2redis does not work properly.\r\n\r\nIt could be very helpful if you can open an issue for the test failure, with asan log.
Issue #2174: Labels: No Labels
CI failed is unrelated, rerun
Issue #2173: Labels: No Labels
@LiuYuHui Thanks for your contribution.
Issue #2172: Labels: enhancement
This is fixed by #2174 
Issue #2171: Labels: No Labels
Issue #2170: Labels: No Labels
For review questions, please refer : https://github.com/apache/kvrocks/issues/1212#issuecomment-2000449365
Issue #2169: Labels: No Labels
Issue #2168: Labels: No Labels
Hello. Shall i try this if this is available?
Issue #2167: Labels: enhancement
Issue #2166: Labels: enhancement, help wanted, good first issue
@singular-seal Thanks for your feedback.
Issue #2165: Labels: enhancement
@zjregee Thank you!
Issue #2163: Labels: enhancement
Issue #2162: Labels: enhancement
@i18n-now Thanks for your suggestion.
Issue #2161: Labels: No Labels
Issue #2160: Labels: No Labels
Issue #2159: Labels: No Labels
The similar issue in other project: https://github.com/cirruslabs/cirrus-ci-docs/issues/1241 😢 
Issue #2158: Labels: bug
Issue #2157: Labels: bug
@git-hulk I found redis7  has this code ，but  kvrocks doesnot  propagatetocluster\r\n\r\n\r\n/* PUBLISH <channel> <message> */\r\nvoid publishCommand(client *c) {\r\n    if (server.sentinel_mode) {\r\n        sentinelPublishCommand(c);\r\n        return;\r\n    }\r\n\r\n    int receivers = pubsubPublishMessageAndPropagateToCluster(c->argv[1],c->argv[2],0);\r\n    if (!server.cluster_enabled)\r\n        forceCommandPropagation(c,PROPAGATE_REPL);\r\n    addReplyLongLong(c,receivers);\r\n}\r\n
Issue #2156: Labels: bug
are you referring to the publish call? or the subscribe call?\r\n\r\nhttps://github.com/redis/redis/blob/7.2.2/src/pubsub.c#L147 - seems to do the same
Issue #2155: Labels: No Labels
Issue #2154: Labels: bug
Issue #2153: Labels: No Labels
Issue #2152: Labels: No Labels
The changes have been introduced in https://github.com/apache/kvrocks/tree/actions-m1.\r\n\r\nAlso the bug has already been fixed.
Issue #2150: Labels: No Labels
This issue was reported by the user `Asad Awadia` in Slack.
Issue #2149: Labels: bug
I guess the return value `OK` should also be treat as passed.
Issue #2148: Labels: No Labels
Issue #2147: Labels: A-ci
I am testing this modification on my test project to see if it takes effect. This will take some time, please wait.
Issue #2146: Labels: No Labels
Issue #2145: Labels: No Labels
Performance for sadd(On my WSL2 Ubuntu22, with gcc11.4, CPU AMD 3800X) with default release build:\r\n\r\n```\r\nbefore:\r\nSADD: 27173.91 requests per second\r\n\r\nafter:\r\nSADD: 30211.48 requests per second\r\n```\r\n\r\ncc @git-hulk @PragmaTwice 
Issue #2144: Labels: enhancement
> if size > N, random among the first N elements if the cached random point is empty. Otherwise, seek from the cached random point and then random among the next N elements, then cache the random point again or remove the cache random point if it reaches the end.\r\n\r\nI thought of using this previously, and this is named "statistics" in this issue. but where should we storing this and how do updating this?
Issue #2143: Labels: enhancement, help wanted, good first issue
Hii! Can you assign this to me? Thank you!! @i18n-now 
Issue #2142: Labels: No Labels
@tutububug Thank you for your contribution. Running `./x.py format` should eliminate the linting issues.
Issue #2141: Labels: No Labels
@torwig Does this PR look good to you? if yes, we can merge since @jihuayu has approved.
Issue #2140: Labels: bug
If so, could you please comment on that line of code with "use the rocksdb\xa0default\xa0column family as the subkey column family" to have better code\xa0readability.
Issue #2139: Labels: No Labels
Issue #2138: Labels: No Labels
Issue #2137: Labels: bug
Hi @kinoute\r\n\r\nThanks for your feedback. The root cause is the single mount file `kvrocks.conf` which is unable to be written, you can have a try at: `config rewrite` in 2.5.0 and it should return the same error.\r\n\r\nAnd this start error was introduced in #1776 which would try to rewrite the configuration after loading the namespaces. Maybe we should turn this error into a warning when starting the server. \r\n\r\nYou can workaround this issue by mounting the whole dir where kvrocks.conf exists to `/var/lib/kvrocks` without the subPath `kvrocks.conf`.
Issue #2135: Labels: enhancement
Hi @photoszzt , thank you for your suggestion!\r\n\r\nIt is important to prevent data loss, but I wonder the performance impact of this option.\r\n\r\nAnd should we enable sync mode by default, or we make it a configuration option (kvrocks.conf) for users?
Issue #2134: Labels: No Labels
Issue #2133: Labels: enhancement
@PragmaTwice \r\n- `flags` parameter in `redis.register_function`\r\n- will allow `no-writes` flag \r\n- do we need to support other flags? like `allow-oom`, `admin`\r\n\r\nPossible implementation:\r\n1. `RedisRegisterFunction` parses `flags` table and checks for `no-writes` [src/storage/scripting.cc](https://github.com/apache/kvrocks/blob/unstable/src/storage/scripting.cc)\r\n2. if invalid flag, raise error, else store as constant (or something else)\r\n3. check function flags before execution `FunctionCall` [src/storage/scripting.cc](https://github.com/apache/kvrocks/blob/unstable/src/storage/scripting.cc)\r\n\r\n```cc\r\nif (read_only && !(flags & redis::kFunctionNoWrites)) {\r\n  return {Status::NotOK, "Can not execute a function with write flag using fcall_ro."};\r\n}\r\n```
Issue #2132: Labels: No Labels
Issue #2131: Labels: No Labels
I believe this change will have a significant impact as it removes the global stdout buffer. (e.g. logging behavior, performance without buffer..)\r\n\r\nI suggest that we DO NOT pick this patch to version 2.8.0 until a thorough investigation is conducted.\r\n\r\ncc @git-hulk @caipengbo 
Issue #2130: Labels: No Labels
Thanks for your review. @enjoy-binbin @torwig 
Issue #2129: Labels: bug
The lua function `redis.setresp` will be supported in https://github.com/apache/kvrocks/pull/2130
Issue #2127: Labels: No Labels
Issue #2126: Labels: No Labels
Issue #2125: Labels: No Labels
Finished in #2111 and #2115.
Issue #2124: Labels: No Labels
Issue #2123: Labels: No Labels
Issue #2122: Labels: No Labels
Issue #2121: Labels: bug
Issue #2120: Labels: No Labels
Impressive PR!
Issue #2119: Labels: No Labels
Issue #2118: Labels: bug
The error seems not attached.
Issue #2117: Labels: No Labels
When #2123 is merged (fix a bug about `COMMAND` command), the unit tests will be passed :)\r\n
Issue #2116: Labels: No Labels
Can someone confirm whether this logic is correct? I am also unable to determine it.\r\nAlternatively, can we ignore whether the algorithm is correct and fix it when a bug arises?
Issue #2115: Labels: No Labels
Issue #2114: Labels: enhancement
This would be supported if `migrate-type` is `raw-key-value`, migration by sending commands way seems hard to do.\r\n\r\nrefer https://github.com/apache/kvrocks/pull/2067
Issue #2113: Labels: No Labels
cc @git-hulk @PragmaTwice 
Issue #2112: Labels: No Labels
Issue #2111: Labels: No Labels
Done. Other parts will be submitted as further PRs. cc @git-hulk
Issue #2110: Labels: No Labels
Issue #2109: Labels: bug
@Yangsx-1 Thank you. I have fixed this bug, please review it.\r\n
Issue #2108: Labels: No Labels
Issue #2107: Labels: No Labels
Issue #2106: Labels: No Labels
Hmm, I think (thanks, @torwig) that in failed gotest kvrocks not starting yet. Need to investigate this
Issue #2105: Labels: No Labels
@PragmaTwice @git-hulk 
Issue #2104: Labels: No Labels
> Metadata::ExpireMsToS function will use rounding to get a closer time value if\r\nMETADATA_64BIT_ENCODING_MASK was enabled.\r\n\r\nI think this function will not be used in the 64bit encoding mode?
Issue #2103: Labels: release notes
> need to highlight this modification in our next release note.\r\n\r\nYes, this is an important enhancement and we should have highlighted it.
Issue #2102: Labels: No Labels
Repeated comment deleted.
Issue #2101: Labels: enhancement, help wanted, major decision, A-ci
In addition, an docker image not supported too - https://hub.docker.com/_/centos \r\n\r\n> This image is no longer supported/maintained (non-EOL tags last updated November 16, 2020\r\n\r\nSo, maybe we switch into Ubuntu?
Issue #2100: Labels: No Labels
> At least in some test cases, we need to validate the indent and spaces of the output JSON. And `JSONEq` will just ignore all of them.\r\n> \r\n> For exmaple, all cases in `JSON.GET with options`.\r\n\r\nThank you, I fixed it.
Issue #2099: Labels: No Labels
Issue #2098: Labels: No Labels
@aleksraiden I have filed a ticket to the ASF team to allow using dorny/paths-filter@v3, refer: https://issues.apache.org/jira/browse/INFRA-25491 \r\n\r\ncc @tisonkun 
Issue #2097: Labels: enhancement, help wanted, good first issue
According to the redis docs( https://redis.io/docs/interact/pubsub/ ), the Pub/Sub command in redis is not related to the database numbers.\r\n> Pub/Sub has no relation to the key space.\r\nIt was made to not interfere with it on any level, including database numbers.\r\nPublishing on db 10, will be heard by a subscriber on db 1.\r\n\r\nIt seems that the namespace mechanism in kvrocks has similar purpose as the database numbers in redis, so if we want the commands to be consistent with redis, will it be better if we just keep using current implementation?
Issue #2096: Labels: No Labels
Issue #2095: Labels: No Labels
Issue #2094: Labels: No Labels
Issue #2093: Labels: No Labels
Issue #2092: Labels: No Labels
Issue #2091: Labels: bug
Issue #2090: Labels: No Labels
Issue #2089: Labels: No Labels
Issue #2088: Labels: No Labels
Issue #2087: Labels: No Labels
It looks like clang-tidy run failed. You need to fix it before merging.\r\nhttps://github.com/apache/kvrocks/actions/runs/7744539810/job/21124606184?pr=2087#step:8:1406
Issue #2086: Labels: No Labels
Issue #2085: Labels: No Labels
cc @PragmaTwice @git-hulk 
Issue #2084: Labels: enhancement
Issue #2083: Labels: No Labels
Will merge if CI success...
Issue #2082: Labels: No Labels
Issue #2081: Labels: No Labels
Issue #2080: Labels: No Labels
Thank you! @aleksraiden 
Issue #2079: Labels: enhancement
Issue #2078: Labels: enhancement
Issue #2077: Labels: enhancement
@caipengbo Would you mind giving some input about what you plan to improve?
Issue #2076: Labels: enhancement
Issue #2075: Labels: No Labels
cc @git-hulk @PragmaTwice 
Issue #2074: Labels: No Labels
Issue #2073: Labels: enhancement
Yep, I agree with it. It certainly depends on the self-disciplined manners of the PR author.\r\n\r\nFine, maybe it can be picked up later.
Issue #2072: Labels: bug
@sam-hn Thank you. \r\nYou can find related code in [this](https://github.com/apache/kvrocks/blob/aa1de3f53252a16e43d381fec83d64ec59228869/src/commands/cmd_set.cc#L190)\r\nAnd it is better if you can add a [test case](https://github.com/apache/kvrocks/blob/aa1de3f53252a16e43d381fec83d64ec59228869/tests/gocase/unit/type/set/set_test.go#L657) 
Issue #2071: Labels: No Labels
Issue #2070: Labels: No Labels
Finished in #2086.
Issue #2069: Labels: No Labels
@git-hulk @PragmaTwice \r\n\r\ncc @kay011 
Issue #2068: Labels: bug
```c++\r\n  if (start < 0 || stop <= 0 || start >= stop) return rocksdb::Status::OK();\r\n```\r\n\r\nThe point maybe the condition above...
Issue #2067: Labels: No Labels
@caipengbo Great! Overall is quite clear and concise. Just a few questions inline.
Issue #2066: Labels: No Labels
How can we list all indexes efficiently? 🤔\r\nRediSearch seems would tracking the records for insert and maintaining index on that, should we support some global tracking structure?
Issue #2065: Labels: No Labels
Issue #2064: Labels: No Labels
Issue #2063: Labels: No Labels
> IMHO the `fetch-depth: 0` SHOULD NOT be removed. Otherwise the blame information cannot be uploaded to sonarcloud.\n> \n> ```\n> WARN: Shallow clone detected, no blame information will be provided. You can convert to non-shallow with \
Issue #2062: Labels: No Labels
Issue #2061: Labels: No Labels
Issue #2060: Labels: No Labels
Issue #2059: Labels: No Labels
Here are some clues. \r\nThe "new code" displayed on SonarCloud is based on the code from November 23rd. How can we adjust it?\r\n\r\n[<img width="878" alt="d56811384ac52f05d7c2546943d9be5" src="https://github.com/apache/kvrocks/assets/32858525/77973e50-075a-4ab9-afa2-edaf3fab490e">](https://sonarcloud.io/summary/new_code?id=apache_kvrocks&branch=unstable)\r\n
Issue #2058: Labels: No Labels
Issue #2057: Labels: bug, A-ci, tracking-issue
Issue #2056: Labels: enhancement
Issue #2055: Labels: No Labels
for example, zunionstore, two range:\r\n- store key: {1, 1, 1}\r\n- non-store key: {3, 2 + num_key, 1}\r\n\r\nsomething like this?
Issue #2054: Labels: No Labels
Thank you for your review
Issue #2053: Labels: No Labels
@jihuayu @torwig Thanks for your good reviews. All are done, plz take a look again.
Issue #2052: Labels: No Labels
Issue #2051: Labels: release notes
I think we need to inform developers that in versions of kvrocks before 2.8, some commands may cause server crashes.\r\nCan we add this to the release log and [supported-commands desc](https://kvrocks.apache.org/docs/supported-commands)? \r\n
Issue #2049: Labels: No Labels
> LGTM. Do you mean we can parser this JSON in sonar action and get more information?\r\n\r\nYeah. You can use some cli tools like `jq`, which is already installed.
Issue #2048: Labels: No Labels
Issue #2047: Labels: No Labels
Will this logic confuse users?\r\nFor example, when the data size reaches the max-db-size, if the user deletes a large amount of data, it will cause the db size to significantly exceed the db-size they have configured.
Issue #2046: Labels: No Labels
Seems lint failed, would you mind run `./x.py format` or using `clang-format` to format the edited file?
Issue #2045: Labels: bug
@AntiTopQuark Thank you!
Issue #2044: Labels: No Labels
Issue #2043: Labels: No Labels
> So they have same meaning, just a style enhancement?\r\n\r\nIt can avoid spurious awakenings.
Issue #2042: Labels: No Labels
Issue #2041: Labels: No Labels
Issue #2040: Labels: No Labels
Ok, my machine clang-format is version 17, let me install version 14.
Issue #2039: Labels: No Labels
Issue #2038: Labels: No Labels
Hmmm, the SonarCloud Code Analysis seems wrong. It tell me: \r\n\r\n> ## Quality Gate failed\r\n> Failed conditions\r\n> \r\n> [58.7% Coverage on New Code](https://sonarcloud.io/component_measures?id=apache_kvrocks&branch=unstable&metric=new_coverage&view=list) (required ≥ 80%)\r\n> [E Reliability Rating on New Code](https://sonarcloud.io/dashboard?id=apache_kvrocks&branch=unstable) (required ≥ A)\r\n> \r\n> [See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=apache_kvrocks&branch=unstable)\r\n\r\nhttps://github.com/apache/kvrocks/pull/2038/checks?check_run_id=20711991119
Issue #2037: Labels: No Labels
Issue #2036: Labels: No Labels
hi may i apply to solve this issue?
Issue #2035: Labels: No Labels
Issue #2034: Labels: No Labels
Issue #2033: Labels: No Labels
Issue #2032: Labels: No Labels
> This pr is to solve https://github.com/apache/kvrocks/issues/2014.\r\n\r\nHi @wsehjk, you can use resolve #2014 instead of solve #2014. It will make GitHub auto close issue when PR has been merged.\r\n\r\nhttps://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword
Issue #2031: Labels: No Labels
\r\nThe script for pressing data into kvrocks: \r\n```\r\nmemtier_benchmark -t 4 -c 20 -h 127.0.0.1 -p 6666 --distinct-client-seed --key-minimum=1000000000 --key-maximum=10000000000 --random-data --key-prefix="" --data-size=50 -n 2000000 --pipeline=100 --command "mset key data key data key data key data key data key data key data key data key data key data"\r\n``` \r\n\r\nThe script for benchmarking: where the READ_RATIO is 0, 50, 90 or 100, respectively.\r\n```\r\nmemtier_benchmark -t 4 -c 20 -s 127.0.0.1 -p 6666 --distinct-client-seed --key-minimum=1000000000 --key-maximum=10000000000 --key-prefix="" -n 10000 --command "get key" --command-ratio=READ_RATIO --command "set key value" --command-ratio=100-READ_RATIO\r\n```\r\n\r\nHere is the P99, P999 and P9999 latency with difference read ratios for the SET and GET command in the benchmark above.\r\n\r\nSET: \r\n![latency_SET](https://github.com/apache/kvrocks/assets/53040712/63deb558-c38f-4da7-949d-1dd1be50d69b)\r\n\r\nGET: \r\n![latency_GET](https://github.com/apache/kvrocks/assets/53040712/820996ac-7a0a-43ee-b836-a6dfd5b96396)\r\n
Issue #2030: Labels: No Labels
Due to GitHub Actions limits, the newly-added workflow will take effect after this PR is merged.
Issue #2029: Labels: No Labels
Issue #2028: Labels: release notes
Issue #2027: Labels: No Labels
Issue #2026: Labels: No Labels
Issue #2025: Labels: No Labels
Issue #2024: Labels: No Labels
I have a question about  last PR #2017, why put `MultiBulkString` to `Connection`? @git-hulk 
Issue #2022: Labels: enhancement, help wanted, need benchmark
hello! I have a question for this. Noticed that this issue has a `need benchmark` tag, is there a standard way to benchmark kvrocks? For example, does simlply running redis-benchmark on my computer is enough , or we need to do some other experiments on some platforms?
Issue #2021: Labels: No Labels
@MaheshMadushan Thank you for the contribution. \r\nYou can format the codebase by running `./x.py format`.
Issue #2020: Labels: No Labels
@git-hulk Please help review :)
Issue #2019: Labels: No Labels
Issue #2018: Labels: No Labels
Issue #2017: Labels: No Labels
This PR involves many files, but most of them are renaming the function.
Issue #2016: Labels: No Labels
LGTM, except one new file need an extra newline. Thank you!
Issue #2015: Labels: No Labels
Instead, if you want to fix #2012, I think a better way is to change `Metadata::ParseMetadata`.
Issue #2014: Labels: enhancement
hello could you please assign this to. Interested in this problem
Issue #2013: Labels: No Labels
Issue #2012: Labels: bug
Issue #2011: Labels: No Labels
Issue #2010: Labels: No Labels
This test data is not easy to build, I will add tests in the subsequent PR related to data migration.
Issue #2009: Labels: No Labels
@caipengbo I think we now can close this issue?
Issue #2008: Labels: No Labels
Issue #2007: Labels: No Labels
In https://github.com/apache/kvrocks/pull/2004, we implement the unified key-value iterators, I want to change data to provide a unified iterators. \r\n\r\nFor incremental data, we need to call `rocksdb::WALIter` and then implement the `rocksdb::WriteBatch::Handler` interface. \r\n\r\nI want to provide an interface that behaves similarly to `engine::DBIterator`: \r\n\r\nhttps://github.com/apache/kvrocks/blob/c772109516a6698f8e74d50c1a43bb1c02a697c5/src/storage/iterator.h#L52-L81. \r\n\r\nIt will wrap `rocksdb::WALIter` and can return different value types. It is possible to implement their processing logic depending on the concrete type.\r\n\r\nHDYT @git-hulk 
Issue #2006: Labels: enhancement
We can trace it by https://github.com/apache/kvrocks/issues/1942.
Issue #2005: Labels: No Labels
Issue #2004: Labels: No Labels
Issue #2003: Labels: No Labels
@raffertyyu Thanks for your contributions.
Issue #2000: Labels: No Labels
@MaheshMadushan Sure, thank you! 
Issue #1999: Labels: No Labels
Thank you for your contribution!
Issue #1998: Labels: No Labels
I cannot see anywhere using the bulk errors inside Redis, so close it now. Welcome to reopen I missed anything.
Issue #1997: Labels: No Labels
Issue #1996: Labels: No Labels
Issue #1995: Labels: No Labels
Issue #1994: Labels: No Labels
Hi i wanna solve this issue, please assign this to me. Thanks 
Issue #1993: Labels: No Labels
Issue #1992: Labels: No Labels
Issue #1991: Labels: No Labels
Please retry analysis of this Pull-Request directly on SonarCloud
Issue #1990: Labels: No Labels
Issue #1989: Labels: No Labels
Issue #1988: Labels: bug
Hi @iushas, can you provide the reproduction steps or more stack trace information?
Issue #1987: Labels: No Labels
Issue #1985: Labels: help wanted, good first issue
Issue #1984: Labels: help wanted, good first issue
Hi, is this issue available? if so, shall I try on this?
Issue #1983: Labels: help wanted, good first issue
Hi, can you assign it to me?
Issue #1982: Labels: No Labels
Issue #1981: Labels: No Labels
Issue #1980: Labels: enhancement, tracking-issue
Issue #1979: Labels: No Labels
Issue #1978: Labels: bug
Below is how Redis works:\r\n\r\n```\r\n127.0.0.1:6379> SET mykey "foobar"\r\nOK\r\n127.0.0.1:6379>  BITCOUNT mykey 5 30\r\n(integer) 4\r\n127.0.0.1:6379>  BITCOUNT mykey 5 30 111\r\n(error) ERR syntax error\r\n```\r\n\r\n@jihuayu would you like to fix it? Or I can take a look.
Issue #1977: Labels: enhancement
@git-hulk could you help to see if this proposal is needed / necessary? Thank you :)
Issue #1976: Labels: enhancement, help wanted, good first issue
Assign to @Zakelly via #2149 \r\nCan you replay this issue? I only can assign it to participants
Issue #1975: Labels: No Labels
Issue #1973: Labels: No Labels
> BTW, I think we can have an enum type in our code.\r\n\r\nUnder the namespace `engine` in `src/storage.h` following enum can be created.\r\n`enum class Type {\r\n  RocksDB,\r\n  Speedb,\r\n};\r\n`\r\n\r\nThen we can have macros for storage engine as following,\r\n`STORAGE_ENGINE=0 # for rocksdb`\r\n`STORAGE_ENGINE=1 # for speedb`\r\n\r\nThen we can determine the engine type as following,\r\n`if (STORAGE_ENGINE == static_cast<int>(engine::Type::RocksDB)) {} ...`\r\n\r\nWould that be ideal?
Issue #1971: Labels: No Labels
Issue #1970: Labels: No Labels
@jihuayu Could you add a test case to make sure this issue was resolved?
Issue #1969: Labels: bug
@jihuayu Good catch!\r\n\r\n> Why do we need to check metadata.size > 0?\r\n\r\nFor example, we need to regard it as a non-existing key if all subkeys are deleted in a list(same as the hash/set/zset). But some types allow the empty subkey list like stream/bloomfilter. Can refer: [storage/redis_db.cc#L62](https://github.com/apache/kvrocks/blob/unstable/src/storage/redis_db.cc#L62)\r\n\r\nThe better way is to use `GetMetadata` to replace the decode function in `redis_string`.
Issue #1968: Labels: No Labels
Issue #1967: Labels: No Labels
Issue #1966: Labels: enhancement, good first issue
Hi, is this issue available? if so, shall I try on this?
Issue #1965: Labels: No Labels
Thanks for your effort!\r\n\r\n> It should be noted that since the timeout precision currently supported by kvrocks is seconds, the results obtained by executing PEXPIRETIME will be different from those obtained by redis.\r\n\r\nIf you build kvrocks with `-DENABLE_NEW_ENCODING=ON`, you can see that the precision of these expire time is in milliseconds.
Issue #1964: Labels: No Labels
Issue #1963: Labels: No Labels
Thanks for your contribution @maochongxin!\r\n\r\nThe PR description is empty. Can you add some background so that reviewers can understand the motivation and how you plan to implement it?
Issue #1962: Labels: No Labels
Need to hold this PR till the speedb supports those functions.
Issue #1961: Labels: No Labels
Thank you for your effort! Good to see it.\r\n\r\nI think the original intension of #1929 is to add a new column into the website (https://kvrocks.apache.org/docs/supported-commands), rather than add a new file to the root directory of this project.\r\n\r\nSo technically, you can open pull requests to https://github.com/apache/kvrocks-website, instead of this repo.
Issue #1960: Labels: No Labels
Issue #1959: Labels: help wanted, good first issue
Refer: https://redis.io/commands/smismember/
Issue #1958: Labels: help wanted, good first issue
Refer: https://redis.io/commands/ssubscribe/ and https://redis.io/commands/sunsubscribe/
Issue #1957: Labels: No Labels
Issue #1956: Labels: No Labels
Issue #1955: Labels: help wanted, good first issue
Great! Assigned.
Issue #1954: Labels: help wanted, good first issue
Hi, I want to do this.
Issue #1953: Labels: help wanted, good first issue
Merged to https://github.com/apache/kvrocks/issues/1952.
Issue #1952: Labels: help wanted, good first issue
Hello, I am interested in this issue.
Issue #1951: Labels: help wanted, good first issue
I will do it.
Issue #1950: Labels: help wanted, good first issue
proposal is ok to me
Issue #1949: Labels: help wanted, good first issue
I would like to take ownership of this issue because the MIGRATE command requires DUMP to be implemented, and I think it can be implemented together with DUMP #1946 
Issue #1948: Labels: help wanted, good first issue
I think this command can be supported together with #1947 , and assigned to me. 
Issue #1947: Labels: help wanted, good first issue
Can you assign it to me?
Issue #1946: Labels: help wanted, good first issue
@AntiTopQuark Assigned. Thanks for your interest.\r\n\r\n@maochongxin Thanks for your reply and efforts.
Issue #1945: Labels: help wanted, good first issue
I want to try. Can you assign this to me?
Issue #1944: Labels: help wanted, good first issue
I can help take over this issue if nobody is working on this.
Issue #1943: Labels: No Labels
> do we still need to do this in this patch\r\n\r\nI agree it\
Issue #1942: Labels: help wanted, good first issue, A-command, tracking-issue
Test suite in other client impl can help.\r\n\r\nWe writes C++ unit tests and Golang cases with redis-go. IIRC redis-go runs regression tests for Kvrocks also.\r\n\r\nI tried Redisson but still have some troubles - https://github.com/apache/kvrocks/discussions/1912\r\n\r\nPerhaps also other clients in https://redis.io/resources/clients/
Issue #1941: Labels: bug
> IMHO I don\
Issue #1940: Labels: No Labels
CI failed on macOS, which is related to the case about libc++ rather than libstdc++ that I mentioned before. We need to add a check about the std lib impl that are currently using.
Issue #1939: Labels: bug
Issue #1938: Labels: No Labels
Issue #1937: Labels: No Labels
Issue #1936: Labels: No Labels
Issue #1935: Labels: No Labels
@git-hulk  Maybe we need to add a note to the documentation, telling users that the next version（2.8）supports the SET option with KEEPTLE and GET options?
Issue #1933: Labels: No Labels
Seems `rocksdb_ratelimiter_create_auto_tuned` is just a C API to create an auto-tuned GenericRateLimiter , which not high related to us..\r\n\r\n
Issue #1930: Labels: No Labels
Issue #1929: Labels: enhancement, help wanted, good first issue
This may not be a good first issue but actually the contributor should know detail about the command impl history :D
Issue #1928: Labels: No Labels
Issue #1927: Labels: No Labels
should we use this opportunity to add a kvrocks_mode?
Issue #1926: Labels: bug
Issue #1925: Labels: enhancement
Hi @tarvfx, thanks for your proposal.\r\n\r\nFrom the Kvrocks side, what we need to be supported in the SET command are:\r\n\r\n- KEEPTTL option(EX, PX, NX and XX options are supported now)\r\n- Allowed to use the GET option together with EXAT/PXAT/NX\r\n\r\nDid I miss anything?\r\n
Issue #1923: Labels: enhancement
Issue #1922: Labels: bug
@jiangyunpeng Thanks for your report, will take a look later.
Issue #1920: Labels: No Labels
Issue #1919: Labels: No Labels
Issue #1918: Labels: No Labels
Issue #1917: Labels: No Labels
Issue #1916: Labels: No Labels
How did we lose this change when upgrading rocksdb? It seems like a good opportunity to think about how to handle the upgrade of dependency more safely.
Issue #1915: Labels: No Labels
Issue #1913: Labels: bug
@bbqccx Thanks for your feedback, will fix this in next release.
Issue #1911: Labels: No Labels
Another new feature here https://github.com/danielaparker/jsoncons/issues/467#issuecomment-1826868711.\r\n\r\ncc @Qiaolin-Yu 
Issue #1909: Labels: bug, crash
Issue #1908: Labels: bug
-  addr2line\r\n\r\n\r\n```\r\nroot@host:/home/redis/var/log# addr2line -e  /home/redis/server/2.6.0/bin/kvrocks +0x217769\r\n/home/redis/kvrocks/src/server/server.cc:1505\r\n```\r\n![image](https://github.com/apache/kvrocks/assets/7236171/1d8d5466-192d-483e-85f4-f23583cd2d6f)\r\n\r\n```\r\nroot@host:/home/redis/var/log# addr2line -e  /home/redis/server/2.6.0/bin/kvrocks 0x23af1d\r\n/home/redis/kvrocks/src/server/worker.cc:292\r\n```\r\n![image](https://github.com/apache/kvrocks/assets/7236171/05cc8b92-289f-4f9a-a01a-08024c2184ff)\r\n\r\n\r\n```\r\nroot@host:/home/redis/var/log# addr2line -e  /home/redis/server/2.6.0/bin/kvrocks +0x9aa7b0\r\nthread.o:?\r\n\r\nroot@host:/home/redis/var/log# addr2line -e  /home/redis/server/2.6.0/bin/kvrocks 0x9aa7b0\r\nthread.o:?\r\n\r\nroot@host:/home/redis/var/log# addr2line -e  /home/redis/server/2.6.0/bin/kvrocks 0x23af1d\r\n/home/redis/kvrocks/src/server/worker.cc:292\r\n\r\n\r\nroot@host:/home/redis/var/log# addr2line -e  /home/redis/server/2.6.0/bin/kvrocks 0x7b7d4f\r\n/home/redis/kvrocks/build/_deps/libevent-src/event.c:1790\r\n\r\n\r\nroot@host:/home/redis/var/log# addr2line -e  /home/redis/server/2.6.0/bin/kvrocks +0x217769\r\n/home/redis/kvrocks/src/server/server.cc:1505\r\n\r\n\r\nroot@host:/home/redis/var/log# addr2line -e  /home/redis/server/2.6.0/bin/kvrocks +0x1605ac\r\n/usr/include/c++/10/bits/atomic_base.h:426\r\n\r\nroot@host:/home/redis/var/log# addr2line -e  /home/redis/server/2.6.0/bin/kvrocks +0x7b0dee\r\n/home/redis/kvrocks/build/_deps/libevent-src/bufferevent.c:208 (discriminator 3)\r\n\r\nroot@host:/home/redis/var/log# addr2line -e  /home/redis/server/2.6.0/bin/kvrocks +0x7b7d4f\r\n/home/redis/kvrocks/build/_deps/libevent-src/event.c:1790\r\n\r\nroot@host:/home/redis/var/log# addr2line -e /lib/x86_64-linux-gnu/libpthread.so.0 +0x14140\r\n??:?\r\n```\r\n\r\n- dmesg\r\n```\r\n[Fri Nov 24 10:42:27 2023] worker[3173205]: segfault at 8 ip 0000560584630769 sp 00007f45bd7ec420 error 4 in kvrocks[56058449f000+94f000]\r\n[Fri Nov 24 10:42:27 2023] Code: 8b 54 24 68 41 8b 44 24 68 c1 e8 06 81 e2 00 01 00 00 89 95 78 fe ff ff 0f 94 c2 84 c2 0f 85 db 0e 00 00 48 8b 85 f0 fe ff ff <48> 83 78 08 00 0f 85 bc 01 00 00 4c 8d 75 b0 4c 8d 7d c0 be 08 00\r\n```\r\n\r\n
Issue #1907: Labels: enhancement
@tutububug Assigned (if I understood your intent correctly).
Issue #1906: Labels: No Labels
> Maybe we can also add this workaround in the website.\r\n\r\nGood point, will do it soon.
Issue #1905: Labels: bug
Thanks, that works! I saw a different error though than is described in that issue, so that issue did not show up in my search. Closing.\r\n\r\nPlease update the docs :) If someone tries the Quickstart for the first-time and it doesn\
Issue #1904: Labels: No Labels
Issue #1903: Labels: No Labels
Agree, we can default enable it. But let user know we can disable it if it has bug?
Issue #1902: Labels: release notes
> Add a new statistic `COMPACTION_CPU_TOTAL_TIME` that records cumulative compaction cpu time. This ticker is updated regularly while a compaction is running.\r\n\r\ncan we adding this if it exists?\r\n
Issue #1901: Labels: No Labels
@julic20s Can use `./x.py format` to format your code before pushing.
Issue #1900: Labels: No Labels
Issue #1896: Labels: enhancement
Issue #1895: Labels: No Labels
Issue #1894: Labels: bug
Hi @iushas \r\n\r\nThanks for your feedback. Can you paste the right values of this key, so that we can add it into test cases?
Issue #1892: Labels: No Labels
Issue #1891: Labels: No Labels
@PragmaTwice Sonar Lint reports hotspot security due to using the stren function in daemon_util.h, but I guess it should be fine since the variable is always set the `\\0`.
Issue #1890: Labels: No Labels
@skyitachi Can you help to resolve conflicts before merging?
Issue #1889: Labels: enhancement
I think it would be beneficial to exempt test files from these duplicating check rules as well.\r\nhttps://sonarcloud.io/project/issues?resolved=false&types=CODE_SMELL&pullRequest=1881&id=apache_kvrocks&open=AYupwdoAZ8kRMyTUsysu
Issue #1888: Labels: No Labels
CI failed on macOS and ASAN build (use-after-free behaviors are found).\r\n
Issue #1887: Labels: No Labels
Issue #1886: Labels: No Labels
Thanks for the bugfix\r\n\r\nHowever, changing the style from Status to exception only in this submodule is so weird...
Issue #1885: Labels: bug
Thanks @PragmaTwice  it works!
Issue #1884: Labels: enhancement
Issue #1883: Labels: bug
@3tieto Thank you!
Issue #1882: Labels: No Labels
Issue #1881: Labels: No Labels
@jihuayu Can ignore this wrong duplication report.
Issue #1880: Labels: No Labels
Issue #1879: Labels: bug
Hi @iushas , thanks for your reporting!\r\n\r\nIt is not a bug. It is expected.\r\n\r\nIn any line of configuration file, any character after `#` (including `#` itself) will be treated as comments, e.g.\r\n```\r\nconfig-key config-value # my comments\r\n```\r\n\r\nIf you want `#` in configuration values, you need to quote them.\r\n\r\nAnd for `@`, I think it works normally.
Issue #1878: Labels: No Labels
Issue #1877: Labels: No Labels
Issue #1875: Labels: No Labels
You can try to build it to make sure it will pass the compiler before pushing.
Issue #1874: Labels: No Labels
Could you try to fix these issue reported by clang-tidy in CI?\r\n\r\nhttps://github.com/apache/kvrocks/actions/runs/6754872818/job/18363385655?pr=1874
Issue #1873: Labels: bug
The logs for this run have expired and are no longer available.
Issue #1872: Labels: No Labels
@jihuayu I think only Go tests is ok if most of them can be covered.
Issue #1871: Labels: No Labels
Issue #1870: Labels: No Labels
Thank you for your contribution!
Issue #1869: Labels: No Labels
Please retry analysis of this Pull-Request directly on [SonarCloud](https://sonarcloud.io/project/issues?id=apache_kvrocks&pullRequest=1869).
Issue #1868: Labels: No Labels
@jihuayu Good catch!
Issue #1867: Labels: No Labels
Looks generally good to me, thank you!
Issue #1866: Labels: bug
Issue #1865: Labels: No Labels
@skyitachi Thank you for your contribution. To avoid lint error during the CI, please run `./x.py format` before the final commit and push.
Issue #1864: Labels: bug
Good catch! Feel free to submit a PR if you are willing to fix it.
Issue #1863: Labels: No Labels
This PR opened before changing the sonar reconfigured, so just ignore it. cc @PragmaTwice 
Issue #1862: Labels: No Labels
Issue #1861: Labels: No Labels
> Have a glance and seems that all modified variables is Server\r\n\r\nYes, only changed the variable name of server from `svr` to `srv`.
Issue #1860: Labels: No Labels
@isHuangXin Are you still working on this PR? 
Issue #1859: Labels: No Labels
Can you help me review this? @PragmaTwice 
Issue #1858: Labels: No Labels
Issue #1857: Labels: No Labels
Issue #1856: Labels: No Labels
Hi @Ziy1-Tan , before you push your code, you can run these c++ and golang unit tests on your local device.\r\nAnd please make sure these tests can PASS before pushing.\r\n\r\nPlease refer to https://kvrocks.apache.org/community/contributing for more details.
Issue #1855: Labels: No Labels
nice, long connect will not disconnect when change workers, I use redis-benchmark continuous write
Issue #1854: Labels: No Labels
Have it found some already exists unused variables bug?
Issue #1853: Labels: No Labels
Issue #1852: Labels: No Labels
Seems you also need to change the method declaration to make it pass the compiler.
Issue #1851: Labels: bug
Hi @rnz, thanks for your report.\r\n\r\nWe have fixed it in https://github.com/apache/kvrocks/pull/1784, although there is currently no release including this commit.\r\n\r\nTo workaround it in `2.6.0`, you can overwrite the configuration option like:\r\n```\r\ndocker run -it -p 6666:6666 apache/kvrocks:2.6.0 --bind 0.0.0.0\r\n```
Issue #1850: Labels: No Labels
@2rueSid You can format your code with the `./x.py` command. It allows your code to pass the lint stage in the CI pipeline.
Issue #1849: Labels: No Labels
Issue #1848: Labels: No Labels
Issue #1847: Labels: No Labels
Issue #1846: Labels: No Labels
Issue #1845: Labels: No Labels
Issue #1843: Labels: No Labels
Issue #1842: Labels: No Labels
@guojidan You can run `./x.py format` to format your code before pushing (to pass the CI checks).
Issue #1841: Labels: No Labels
I fixed the problem you pointed out : )
Issue #1840: Labels: No Labels
Issue #1839: Labels: No Labels
Issue #1838: Labels: enhancement, A-ci
Ref - https://cwiki.apache.org/confluence/display/INFRA/ASF+Infra+provided+self-hosted+runners
Issue #1837: Labels: No Labels
> The current of CommandJsonArrAppend::Execute uses MultiBulkString. Is there a need to provide an MultiBulkInteger?\r\n\r\nhttps://github.com/redis/redis-specifications/blob/master/protocol/RESP2.md#resp-integers Redis has a resp protocol, and we don\
Issue #1836: Labels: bug
@EasyProgramming could you provide a complete list of commands execute after a FLUSHDB so that we can reproduce locally?
Issue #1835: Labels: enhancement
@mapleFU is this finished? If you are not working on it, can I take over on it?
Issue #1834: Labels: No Labels
Issue #1833: Labels: No Labels
Issue #1832: Labels: enhancement
Issue #1831: Labels: No Labels
Issue #1830: Labels: No Labels
intrev64ifbe can be replaced with memrev64ifbe to keep consistent.
Issue #1829: Labels: No Labels
> Actually there are some difference in the query result between path $.x and .x (or x). It can be observe that query of path prefixed without $ will just get response with the first matched value instead of an array.\r\n\r\nThis patch is only a basic json legacy path support, the detail rule will be handled later.
Issue #1828: Labels: No Labels
Issue #1827: Labels: No Labels
```\r\n--- FAIL: TestRedisCli (14.14s)\r\n    --- FAIL: TestRedisCli/test_interactive_cli (0.01s)\r\n        --- FAIL: TestRedisCli/test_interactive_cli/Status_reply (0.00s)\r\n            cli_test.go:111: \r\n                \tError Trace:\t/__w/kvrocks/kvrocks/tests/gocase/integration/cli/cli_test.go:111\r\n                \t            \t\t\t\t/__w/kvrocks/kvrocks/tests/gocase/integration/cli/cli_test.go:174\r\n                \tError:      \tNot equal: \r\n                \t            \texpected: "OK"\r\n                \t            \tactual  : "get_per_sec:0\\nseek_per_sec:0\\nnext_per_sec:0\\nprev_per_sec:0\\nis_bgsaving:no\\nis_compacting:no"\r\n                \t            \t\r\n                \t            \tDiff:\r\n                \t            \t--- Expected\r\n                \t            \t+++ Actual\r\n                \t            \t@@ -1 +1,6 @@\r\n                \t            \t-OK\r\n                \t            \t+get_per_sec:0\r\n                \t            \t+seek_per_sec:0\r\n                \t            \t+next_per_sec:0\r\n                \t            \t+prev_per_sec:0\r\n                \t            \t+is_bgsaving:no\r\n                \t            \t+is_compacting:no\r\n                \tTest:       \tTestRedisCli/test_interactive_cli/Status_reply\r\n        --- FAIL: TestRedisCli/test_interactive_cli/Integer_reply (0.00s)\r\n            cli_test.go:111: \r\n                \tError Trace:\t/__w/kvrocks/kvrocks/tests/gocase/integration/cli/cli_test.go:111\r\n                \t            \t\t\t\t/__w/kvrocks/kvrocks/tests/gocase/integration/cli/cli_test.go:178\r\n                \tError:      \tNot equal: \r\n                \t            \texpected: "(integer) 1"\r\n                \t            \tactual  : "OK"\r\n                \t            \t\r\n                \t            \tDiff:\r\n                \t            \t--- Expected\r\n                \t            \t+++ Actual\r\n                \t            \t@@ -1 +1 @@\r\n                \t            \t-(integer) 1\r\n                \t            \t+OK\r\n                \tTest:       \tTestRedisCli/test_interactive_cli/Integer_reply\r\n        --- FAIL: TestRedisCli/test_interactive_cli/Bulk_reply (0.00s)\r\n            cli_test.go:111: \r\n                \tError Trace:\t/__w/kvrocks/kvrocks/tests/gocase/integration/cli/cli_test.go:111\r\n                \t            \t\t\t\t/__w/kvrocks/kvrocks/tests/gocase/integration/cli/cli_test.go:183\r\n                \tError:      \tNot equal: \r\n                \t            \texpected: "\\"foo\\""\r\n                \t            \tactual  : "(integer) 1"\r\n                \t            \t\r\n                \t            \tDiff:\r\n                \t            \t--- Expected\r\n                \t            \t+++ Actual\r\n                \t            \t@@ -1 +1 @@\r\n                \t            \t-"foo"\r\n                \t            \t+(integer) 1\r\n                \tTest:       \tTestRedisCli/test_interactive_cli/Bulk_reply\r\n        --- FAIL: TestRedisCli/test_interactive_cli/Multi-bulk_reply (0.00s)\r\n            cli_test.go:111: \r\n                \tError Trace:\t/__w/kvrocks/kvrocks/tests/gocase/integration/cli/cli_test.go:111\r\n                \t            \t\t\t\t/__w/kvrocks/kvrocks/tests/gocase/integration/cli/cli_test.go:189\r\n                \tError:      \tNot equal: \r\n                \t            \texpected: "1) \\"foo\\"\\n2) \\"bar\\""\r\n                \t            \tactual  : "\\"foo\\""\r\n                \t            \t\r\n                \t            \tDiff:\r\n                \t            \t--- Expected\r\n                \t            \t+++ Actual\r\n                \t            \t@@ -1,2 +1 @@\r\n                \t            \t-1) "foo"\r\n                \t            \t-2) "bar"\r\n                \t            \t+"foo"\r\n                \tTest:       \tTestRedisCli/test_interactive_cli/Multi-bulk_reply\r\n        --- FAIL: TestRedisCli/test_interactive_cli/Parsing_quotes (0.00s)\r\n            cli_test.go:111: \r\n                \tError Trace:\t/__w/kvrocks/kvrocks/tests/gocase/integration/cli/cli_test.go:111\r\n                \t            \t\t\t\t/__w/kvrocks/kvrocks/tests/gocase/integration/cli/cli_test.go:196\r\n                \tError:      \tNot equal: \r\n                \t            \texpected: "OK"\r\n                \t            \tactual  : "1) \\"foo\\"\\n2) \\"bar\\""\r\n                \t            \t\r\n                \t            \tDiff:\r\n                \t            \t--- Expected\r\n                \t            \t+++ Actual\r\n                \t            \t@@ -1 +1,2 @@\r\n                \t            \t-OK\r\n                \t            \t+1) "foo"\r\n                \t            \t+2) "bar"\r\n                \tTest:       \tTestRedisCli/test_interactive_cli/Parsing_quotes\r\nFAIL\r\nexit status 1\r\n```\r\n\r\nHmm does this happen before?
Issue #1826: Labels: help wanted, good first issue
Issue #1825: Labels: help wanted, good first issue
Issue #1824: Labels: help wanted, good first issue
Issue #1823: Labels: help wanted, good first issue
assign to me, I have already implement
Issue #1822: Labels: help wanted, good first issue
Hi @PragmaTwice @git-hulk \r\n\r\nI am new to open source community.\r\n\r\nCan i work on this task?
Issue #1821: Labels: help wanted, good first issue
Hi @PragmaTwice \r\nI want to try it. Plz, assign it to me. thanks~
Issue #1820: Labels: help wanted, good first issue
Issue #1819: Labels: help wanted, good first issue
I have implemented  with JSON.NUMINCRBY command, [pull request](https://github.com/apache/kvrocks/pull/1890)
Issue #1818: Labels: help wanted, good first issue
I want to pick up this issue, thanks.
Issue #1817: Labels: help wanted, good first issue
Hi, I want to try this task~
Issue #1816: Labels: help wanted, good first issue
I want to pick up this issue
Issue #1815: Labels: help wanted, good first issue
Issue #1814: Labels: help wanted, good first issue
Issue #1813: Labels: help wanted, good first issue
I want to try this. Can you assign this to me?
Issue #1812: Labels: help wanted, good first issue
Issue #1811: Labels: help wanted, good first issue
Issue #1810: Labels: help wanted, good first issue
Hi, I want to try this.
Issue #1809: Labels: help wanted, good first issue
I want to try it. Assign me plz :).
Issue #1808: Labels: help wanted, good first issue
Issue #1807: Labels: help wanted, good first issue
I want to pick up this issue, thanks.
Issue #1806: Labels: help wanted, good first issue
I want to take this issue, thanks.
Issue #1805: Labels: enhancement, help wanted
I found that some of the commands were marked as deprecated in the Redis document, do you guys still want to support it?\r\nFor example:\r\n[JSON.RESP](https://redis.io/commands/json.resp/)
Issue #1804: Labels: No Labels
Issue #1803: Labels: No Labels
We can create an issue to track other new commands. And others can help to implement the new commands if they like.
Issue #1802: Labels: enhancement
provide a server command to change worker thread num in-flight?
Issue #1801: Labels: enhancement
You can pass `deleteOnExit` flag to `go test` to remove files in workspace dir.\r\n\r\nhttps://github.com/apache/kvrocks/blob/e38021ca509d21624957f217aae516360ff77adb/tests/gocase/util/flags.go#L26
Issue #1799: Labels: No Labels
Thanks for your contribution!\r\n\r\nSeems there is a failure in the golang test cases, could you try to locate and fix it?
Issue #1798: Labels: No Labels
> Hi @xq2010 Thanks for your excellent contribution first!↳\r\n> \r\n> About how to load the RDB file, I\
Issue #1797: Labels: No Labels
Issue #1796: Labels: No Labels
Issue #1795: Labels: No Labels
Hi @LiuYuHui , is there any progress?
Issue #1794: Labels: No Labels
Description below is incomplete:\r\n\r\n```\r\nFix a bug with atomic_flush=true that can cause DB to stuck after a flush fails (https://github.com/facebook/rocksdb/pull/11872).\r\n```\r\n\r\nRest LGTM
Issue #1793: Labels: help wanted, good first issue, A-ci
How about using the following commands? @git-hulk \r\n\r\n```shell\r\nid="$(docker run --rm -d -p 6666:6666 kvrocks:ci)"\r\nsleep 1m # waiting for the periodic container health check\r\n\r\nif [ "$(docker inspect --format=\
Issue #1792: Labels: No Labels
LGTM, This PR is very good.
Issue #1791: Labels: No Labels
Issue #1790: Labels: No Labels
I am not sure if we can just disable these two function in TSAN since maybe we can bear some data race here.
Issue #1789: Labels: bug
Issue #1788: Labels: feature, A-scripting, A-command
Issue #1787: Labels: No Labels
Issue #1786: Labels: No Labels
Issue #1785: Labels: No Labels
Issue #1784: Labels: No Labels
Issue #1783: Labels: bug
@Xuanwo Thank you for your feedback. 
Issue #1782: Labels: No Labels
Issue #1780: Labels: No Labels
Issue #1779: Labels: No Labels
> so this is something like a typo error? (or other) anyway, can you also update the top commen to mention the reason (and fix)? thanks.\r\n\r\nYeah, it is a typo.
Issue #1778: Labels: bug, A-build
Issue #1776: Labels: No Labels
It just come to me that if we firstly set `repl-namespace-enabled` to yes, use kvrocks in a period of time, and then change it to no, will it process correctly? e.g. will these tokens in the storage be removed?
Issue #1774: Labels: No Labels
Hi @HolyLow , thank you for your contribution.\r\n\r\nCould you consider to rewrite it in our new helper class [BlockingCommander](https://github.com/apache/kvrocks/blob/unstable/src/commands/blocking_commander.h)?\r\n\r\nYou can refer to [CommandBPop](https://github.com/apache/kvrocks/blob/unstable/src/commands/cmd_list.cc#L237) for how to use it.
Issue #1773: Labels: No Labels
Issue #1771: Labels: No Labels
Issue #1770: Labels: bug
@Deleplace Thanks for your reporting! It should be now fixed by #1771.
Issue #1769: Labels: need-cherry-pick
Issue #1768: Labels: No Labels
Thank you for your contribution!
Issue #1766: Labels: No Labels
Issue #1764: Labels: No Labels
Issue #1763: Labels: need-cherry-pick
@xiaofan8421 Thanks for your good catch! Leave a comment inline.
Issue #1762: Labels: No Labels
Issue #1761: Labels: No Labels
The patch LGTM. But CI still failed lol
Issue #1760: Labels: No Labels
Issue #1759: Labels: bug
Issue #1758: Labels: No Labels
I add the `getBFDataList` function to get all the bloomfilter data at once. And update the `bloomCheck` interface for only check the data.
Issue #1757: Labels: No Labels
Issue #1756: Labels: No Labels
Issue #1755: Labels: No Labels
Issue #1754: Labels: enhancement, help wanted
Got it. I would do some preliminary preparations first.
Issue #1753: Labels: enhancement, help wanted
@xq2010 Assigned, feel free to ask any questions if you need.
Issue #1752: Labels: No Labels
> Seems subclass of `Database` still suffer from not having `[[nodiscard]]`? Should we add thm later?\r\n\r\nI actually want to replace all of them from rocksdb::Status to our Status or StatusOr, then we can just have implicit `[[nodiscard]]`s instead of adding them to all functions.\r\n\r\nHowever, it requires additional effort, so I have not yet begun.
Issue #1751: Labels: No Labels
Issue #1750: Labels: No Labels
Issue #1749: Labels: No Labels
@enjoy-binbin Need to format the Go tests
Issue #1748: Labels: No Labels
@darionyaphet Thanks for your contribution.
Issue #1747: Labels: No Labels
Also cc @zncleon 
Issue #1746: Labels: No Labels
Issue #1745: Labels: No Labels
Issue #1744: Labels: No Labels
> BTW, can we enable some clang checkings or other lint checkings after this patch is merged?\r\n\r\nIt is enabled, but it cannot find every missing specifier.
Issue #1743: Labels: No Labels
@GoGim1 Thanks for your good catch.
Issue #1742: Labels: bug
Hi @thallredis,\r\n\r\nThanks for your reporting! We highly appreciate the work Redis does and https://github.com/apache/kvrocks-website/pull/153 includes a sentence to reflect Redis trademarks. Could you please check if the current status meets the related policy?
Issue #1741: Labels: No Labels
Issue #1740: Labels: No Labels
Thanks for your contribution!\r\n\r\nPlease refer to https://kvrocks.apache.org/community/contributing/ to format, lint and test your code. It is hard for us to merge it until the CI passes.\r\n\r\nBTW, it would be better to add golang test cases for slowlog changes.
Issue #1739: Labels: No Labels
Will merge if all CI passed
Issue #1738: Labels: No Labels
Issue #1737: Labels: No Labels
Thanks for your contribution!\r\n\r\nPlease refer to https://kvrocks.apache.org/community/contributing/ to format, lint and test your code : )
Issue #1736: Labels: enhancement, help wanted, good first issue
@luger1990 Thanks for your suggestion.
Issue #1735: Labels: enhancement
Issue #1734: Labels: enhancement, help wanted, good first issue
I will working on it, please assign it to me :D
Issue #1733: Labels: enhancement, help wanted, good first issue
Hi @Yangsx-1 ! I want to work on the issue, can you please assign it to me? Thank you!
Issue #1732: Labels: enhancement
Issue #1731: Labels: enhancement
Issue #1730: Labels: enhancement
Issue #1729: Labels: No Labels
```go\r\nfunc RandString(min, max int, typ RandStringType) string {\r\n\treturn RandStringWithSeed(min, max, typ, rand.Int63())\r\n}\r\n```\r\n\r\nThe change LGTM, however, would it better to change `RandString` as above? Since `WithSeed` should better have a stable output with the same seed.
Issue #1728: Labels: bug
It may be related to #1727 which changed the random string.
Issue #1727: Labels: No Labels
@mapleFU Great, thanks for catching this.
Issue #1726: Labels: No Labels
Issue #1725: Labels: No Labels
Thanks, @mapleFU!  I think, we can change our defaults to rocksdb defaults. I can add in this patch, if other reviewers are OK.
Issue #1724: Labels: No Labels
Issue #1723: Labels: No Labels
Issue #1722: Labels: enhancement, good first issue
@zncleon Would you like to support this? Since this can benefit the performance of BloomFilter.\r\n\r\nA benchmark would better also be support here to verify that it really optimize our system.
Issue #1721: Labels: No Labels
If error and return after `CreateBloomfilter`, it will left zombie bloomfilter. So I Update the function interfaces about `CreateBloomfilterInBatch `and `BloomAdd`. Using only one write will also get high performance.\r\n\r\ncc @mapleFU
Issue #1720: Labels: feature, major decision
Issue #1718: Labels: No Labels
Issue #1717: Labels: No Labels
Issue #1716: Labels: No Labels
Issue #1715: Labels: No Labels
Issue #1714: Labels: bug
@git-hulk https://github.com/apache/kvrocks/pull/1727 this can stably reproduce the problem in my machine
Issue #1713: Labels: No Labels
Thank you!
Issue #1712: Labels: No Labels
We may have the deadlock in ZSet::InterStore(as well as other similar APIs) if the dst key was inside the source key list since the OverWrite function will also lock the dst key: https://github.com/apache/kvrocks/blob/unstable/src/types/redis_zset.cc#L635 \r\n\r\nThis issue was found by TSAN in CI: https://github.com/apache/kvrocks/actions/runs/6022265431/job/16338859035?pr=1712\r\n
Issue #1711: Labels: enhancement, help wanted, good first issue
Issue #1710: Labels: No Labels
@zncleon BTW, according to the Redis documentation, the BF.EXISTS command returns 0 if the key doesn\
Issue #1709: Labels: No Labels
Issue #1708: Labels: No Labels
another question, now run the no-script flag command will response this error:\r\n```\r\n127.0.0.1:6666> eval "return redis.call(\
Issue #1707: Labels: No Labels
Issue #1706: Labels: No Labels
Issue #1705: Labels: No Labels
Issue #1704: Labels: No Labels
@Yangsx-1 Could you please add the Go tests for this command?
Issue #1703: Labels: No Labels
Thanks all!
Issue #1702: Labels: No Labels
Hi @xq2010, thanks for your contribution. Could you please fix the issue in CI: https://github.com/apache/kvrocks/actions/runs/5974247406/job/16208064626#step:8:1361
Issue #1700: Labels: No Labels
Issue #1699: Labels: No Labels
For BfMetadata, I change it to the `default_cf`. If stored it in  `metadata_cf`, it will influence the `DEL` and` KEYS`. Should we design a new cf for it, or just place it in `default_cf`.\r\n\r\ncc @mapleFU
Issue #1698: Labels: No Labels
Issue #1697: Labels: No Labels
Issue #1696: Labels: enhancement
cc @zncleon 
Issue #1695: Labels: No Labels
Issue #1694: Labels: No Labels
Issue #1693: Labels: No Labels
I think we can import xxhash via FetchContent instead of put them to vendor directory.\r\n\r\nhttps://github.com/Cyan4973/xxHash\r\n\r\nYou can refer to our other dependences in `cmake/` directory, e.g. https://github.com/apache/kvrocks/blob/unstable/cmake/fmt.cmake.\r\n\r\nOnly if FetchContent does not apply, or we need to modify the external sources, we then put them to vendor.
Issue #1692: Labels: enhancement, help wanted, good first issue
I noticed this earlier, since i worked on #1596 and #1634, but forgot to follow up.\r\nit is good that oran mention it again, i will work on it and check all commands.\r\n
Issue #1691: Labels: No Labels
Issue #1690: Labels: No Labels
> Thank you!\r\n> \r\n> Do we have other settings to use this script for debugging?\r\n> \r\n> Or may you or @git-hulk can tell how we use this file previously?\r\n\r\nWe previously use Valgrind to test if any memory leaks on the local side, and I guess no one does it now since we have ASAN in CI.
Issue #1689: Labels: No Labels
cc @zncleon we can also use "vendor" directory to vendor the xxhash algorithm.
Issue #1688: Labels: No Labels
Issue #1687: Labels: No Labels
Thank you.
Issue #1685: Labels: No Labels
Issue #1684: Labels: No Labels
PR is ready to be reviewed, but I need some time to add test cases for all encoding types.
Issue #1683: Labels: No Labels
Issue #1682: Labels: No Labels
Issue #1681: Labels: No Labels
@enjoy-binbin That issue was assigned to another person by me (almost 2 months ago) and I think @JoverZhang just took the task and did it.
Issue #1680: Labels: No Labels
Issue #1679: Labels: bug
Issue #1677: Labels: No Labels
Issue #1676: Labels: No Labels
Issue #1675: Labels: No Labels
Issue #1674: Labels: bug
Issue #1673: Labels: No Labels
Issue #1672: Labels: No Labels
Issue #1671: Labels: No Labels
Issue #1669: Labels: No Labels
Oh I get it. `Kill` is just for timeout handling. And most of time it will not happen.\r\n\r\nWhen it start to `Kill`, we expect a graceful shutdown?
Issue #1668: Labels: No Labels
#1663 has removed this unit, close this PR.
Issue #1667: Labels: No Labels
So the problem here is that we have background network IO, which might cause error much more-frequently than disk io error?\r\nThis idea looks ok, but I prefer a default disabled config for this. Because it might cause some unexpected behavior.
Issue #1666: Labels: No Labels
This try failed. I will try to solve it later (maybe after several days). So I close the PR now.
Issue #1665: Labels: enhancement, help wanted, good first issue
Resolved by https://github.com/apache/kvrocks/pull/1664 
Issue #1664: Labels: No Labels
Maybe you also need to update the default value in https://github.com/apache/kvrocks/blob/unstable/src/config/config.cc .
Issue #1663: Labels: No Labels
Currently "Install typos-cli" step takes 2-3 minutes 😲\r\n\r\nThis takes 1 second 🐎\r\nhttps://github.com/szepeviktor/byte-level-care/blob/b2e8a838c14be862f95f1bb3486d3b2479b1bc79/.github/workflows/spelling.yml#L34-L46\r\n
Issue #1662: Labels: enhancement
It is weird, since the compiler check procedure is not related to the kvrocks code.
Issue #1661: Labels: No Labels
since this one is a bit small, i skipped the test. (i can add it if needed)
Issue #1660: Labels: No Labels
I am not sure whether the apache license is in conflict with this (https://github.com/codespell-project/codespell), please help me to check.\r\nIf conflict, i will remove the CI and refresh the PR with only the typo fix.\r\n\r\nhere is am example: https://github.com/apache/kvrocks/actions/runs/5818954638/job/15776396946?pr=1660#step:5:7\r\n```\r\nUsed config files:\r\n    1: ./.codespell/.codespellrc\r\n./kvrocks.conf:569: Leve ==> Level, Levee\r\n```\r\n\r\nmore info:\r\n```\r\n# A CI action that using codespell to check spell.\r\n# .codespell/.codespellrc is a config file.\r\n# .codespell/wordlist.txt is a list of words that will ignore word checks.\r\n# More details please check the following link:\r\n# https://github.com/codespell-project/codespell\r\n```\r\n\r\nused to mention in https://github.com/apache/kvrocks/pull/1591#issuecomment-1633629161
Issue #1659: Labels: bug, help wanted, good first issue
@Rafiot Thanks for your report.
Issue #1658: Labels: enhancement, help wanted
@Yangsx-1 Assigned.
Issue #1657: Labels: No Labels
@enjoy-binbin Thank you for the links.
Issue #1656: Labels: No Labels
Issue #1655: Labels: No Labels
Issue #1653: Labels: No Labels
Issue #1652: Labels: No Labels
@ChrisZMF Very happy to see you back again!
Issue #1651: Labels: bug
Issue #1650: Labels: No Labels
Issue #1649: Labels: No Labels
Issue #1648: Labels: enhancement
Hi @taiheyp, thanks for your report. Will add it to our community roadmap and update you if have any progress.
Issue #1647: Labels: bug
Another issue is related to this: https://github.com/apache/kvrocks/actions/runs/5803982834/job/15733157365\r\n\r\n```\r\nok  \tgithub.com/apache/kvrocks/tests/gocase/unit/type/stream\t5.497s\r\npanic: Log in goroutine after TestString has completed: \r\n\tError Trace:\t/Users/runner/work/kvrocks/kvrocks/tests/gocase/unit/type/strings/server.go:108\r\n\t            \t\t\t\t/Users/runner/work/kvrocks/kvrocks/tests/gocase/unit/type/strings/asm_amd64.s:1594\r\n\tError:      \tReceived unexpected error:\r\n\t            \tos: process already finished\r\n\tTest:       \tTestString\r\n\r\n\r\ngoroutine 89 [running]:\r\ntesting.(*common).logDepth(0xc000083520, {0xc0003443c0, 0x130}, 0x3)\r\n\t/Users/runner/hostedtoolcache/go/1.19.10/x64/src/testing/testing.go:894 +0x4c7\r\ntesting.(*common).log(...)\r\n\t/Users/runner/hostedtoolcache/go/1.19.10/x64/src/testing/testing.go:876\r\ntesting.(*common).Errorf(0xc000083520, {0x10031a4e2?, 0xc000083520?}, {0xc000335880?, 0x100073905?, 0x10054d440?})\r\n\t/Users/runner/hostedtoolcache/go/1.19.10/x64/src/testing/testing.go:940 +0x5a\r\ngithub.com/stretchr/testify/assert.Fail({0x10857da48, 0xc000083520}, {0xc000022880, 0x37}, {0x0, 0x0, 0x0})\r\n\t/Users/runner/go/pkg/mod/github.com/stretchr/testify@v1.8.0/assert/assertions.go:264 +0x384\r\ngithub.com/stretchr/testify/assert.NoError({0x10857da48, 0xc000083520}, {0x10039d740, 0xc0000981a0}, {0x0, 0x0, 0x0})\r\n\t/Users/runner/go/pkg/mod/github.com/stretchr/testify@v1.8.0/assert/assertions.go:1392 +0x105\r\ngithub.com/stretchr/testify/require.NoError({0x10039ec90, 0xc000083520}, {0x10039d740, 0xc0000981a0}, {0x0, 0x0, 0x0})\r\n\t/Users/runner/go/pkg/mod/github.com/stretchr/testify@v1.8.0/require/require.go:[126](https://github.com/apache/kvrocks/actions/runs/5803982834/job/15733157365#step:12:127)1 +0x96\r\ngithub.com/apache/kvrocks/tests/gocase/util.(*KvrocksServer).close.func2()\r\n\t/Users/runner/work/kvrocks/kvrocks/tests/gocase/util/server.go:108 +0x8f\r\ncreated by time.goFunc\r\n\t/Users/runner/hostedtoolcache/go/1.19.10/x64/src/time/sleep.go:176 +0x32\r\nexit status 2\r\nFAIL\tgithub.com/apache/kvrocks/tests/gocase/unit/type/strings\t45.668s\r\nPASS\r\nok  \tgithub.com/apache/kvrocks/tests/gocase/unit/type/zset\t11.092s\r\n?   \tgithub.com/apache/kvrocks/tests/gocase/util\t[no test files]\r\nFAIL\r\n$ /Users/runner/hostedtoolcache/go/1.19.10/x64/bin/go test -timeout=1800s -bench=. ./... -binPath=/Users/runner/work/kvrocks/kvrocks/build/kvrocks -cliPath=redis-cli -workspace=/Users/runner/work/kvrocks/kvrocks/tests/gocase/workspace\r\nTraceback (most recent call last):\r\n  File "/Users/runner/work/kvrocks/kvrocks/./x.py", line 422, in <module>\r\n    args.func(**arg_dict)\r\n  File "/Users/runner/work/kvrocks/kvrocks/./x.py", line 293, in test_go\r\n    run(go, *args, cwd=str(basedir), verbose=True)\r\n  File "/Users/runner/work/kvrocks/kvrocks/./x.py", line 68, in run\r\n    raise RuntimeError(err)\r\nRuntimeError: \r\nfailed to run: (\
Issue #1646: Labels: No Labels
Issue #1645: Labels: No Labels
Issue #1644: Labels: bug
Issue #1643: Labels: enhancement
Perhaps we could make kvrocks2redis a command-line tool.\r\n\r\nIn addition, the current single-threaded model uses files as queue, which is very inefficient. Generally, kvrocks has a large amount of data, and in practice, migration takes a very, very long time. Maybe we can provide a multi-threaded solution as an alternative?
Issue #1642: Labels: No Labels
Issue #1641: Labels: No Labels
Issue #1640: Labels: No Labels
Issue #1639: Labels: No Labels
Issue #1638: Labels: No Labels
Issue #1637: Labels: No Labels
Issue #1636: Labels: No Labels
>  is `-clang-analyzer-cplusplus.InnerPointer` a new rule here?\r\n\r\nit is removed due to a false positive.\r\nhttps://github.com/apache/kvrocks/actions/runs/5767527255/job/15637332818\r\n
Issue #1635: Labels: bug
also in https://github.com/apache/kvrocks/actions/runs/5790039825/job/15692633570\r\n\r\n```\r\n--- FAIL: TestSlotMigrateFromSlave (2.20s)\r\n    server.go:106: \r\n        \tError Trace:\t/home/runner/work/kvrocks/kvrocks/tests/gocase/integration/slotmigrate/server.go:106\r\n        \t            \t\t\t\t/home/runner/work/kvrocks/kvrocks/tests/gocase/integration/slotmigrate/server.go:112\r\n        \t            \t\t\t\t/home/runner/work/kvrocks/kvrocks/tests/gocase/integration/slotmigrate/server.go:101\r\n        \t            \t\t\t\t/home/runner/work/kvrocks/kvrocks/tests/gocase/integration/slotmigrate/slotmigrate_test.go:[59](https://github.com/apache/kvrocks/actions/runs/5790039825/job/15692633570#step:12:60)\r\n        \t            \t\t\t\t/home/runner/work/kvrocks/kvrocks/tests/gocase/integration/slotmigrate/slotmigrate_test.go:77\r\n        \tError:      \tReceived unexpected error:\r\n        \t            \tsignal: aborted (core dumped)\r\n        \tTest:       \tTestSlotMigrateFromSlave\r\nFAIL\r\nexit status 1\r\nFAIL\tgithub.com/apache/kvrocks/tests/gocase/integration/slotmigrate\t74.770s\r\n```\r\n\r\n```\r\nfound crashes:\r\ntests/gocase/workspace/TestSlotMigrateFromSlave-1691445585042-2404388140/stderr:E20230807 21:59:46.098938 48151 main.cc:84] ======= Ooops! kvrocks unstable (commit 610bb40) got signal: Aborted (6) =======\r\ndetail log:\r\nterminate called without an active exception\r\nWARNING: Logging before InitGoogleLogging() is written to STDERR\r\nE20230807 21:59:46.098938 48151 main.cc:84] ======= Ooops! kvrocks unstable (commit 610bb40) got signal: Aborted (6) =======\r\nE20230807 21:59:46.100010 48151 main.cc:101] /lib/x86_64-linux-gnu/libpthread.so.0(+0x14420) [0x7f1f8caee420]\r\nE20230807 21:59:46.100147 48151 main.cc:99] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0xcb) [0x7f1f8c7dc00b]               gsignal\r\nE20230807 21:59:46.100245 48151 main.cc:99] /lib/x86_64-linux-gnu/libc.so.6(abort+0x12b) [0x7f1f8c7bb859]                abort\r\nE20230807 21:59:46.100530 48151 main.cc:99] /home/runner/work/kvrocks/kvrocks/build/kvrocks(+0xfb8ab) [0x557[28](https://github.com/apache/kvrocks/actions/runs/5790039825/job/15692633570#step:13:29)eb2b8ab]   _ZN9__gnu_cxx27__verbose_terminate_handlerEv.cold\r\nE202[30](https://github.com/apache/kvrocks/actions/runs/5790039825/job/15692633570#step:13:31)807 21:59:46.101485 48151 main.cc:99] /home/runner/work/kvrocks/kvrocks/build/kvrocks(+0xa115bc) [0x55728f4415bc]  __cxxabiv1::__terminate()\r\nE20230807 21:59:46.102550 48151 main.cc:101] /home/runner/work/kvrocks/kvrocks/build/kvrocks(+0xa11627) [0x55728f441627]\r\nE20230807 21:59:46.103595 48151 main.cc:101] /home/runner/work/kvrocks/kvrocks/build/kvrocks(+0x2228ac) [0x55728ec528ac]\r\nE20230807 21:59:46.103973 48151 main.cc:99] /home/runner/work/kvrocks/kvrocks/build/kvrocks(+0x22c4[32](https://github.com/apache/kvrocks/actions/runs/5790039825/job/15692633570#step:13:33)) [0x55728ec5c[43](https://github.com/apache/kvrocks/actions/runs/5790039825/job/15692633570#step:13:44)2]  Server::~Server()\r\nE20230807 21:59:46.104454 48151 main.cc:99] /home/runner/work/kvrocks/kvrocks/build/kvrocks(+0xfebc5) [0x55728eb2ebc5]   main\r\nE20230807 21:59:46.104611 48151 main.cc:99] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3) [0x7f1f8c7bd083]     __libc_start_main\r\nE20230807 21:59:46.105257 48151 main.cc:99] /home/runner/work/kvrocks/kvrocks/build/kvrocks(+0x14ee0e) [0x55728eb7ee0e]  _start\r\n```
Issue #1634: Labels: No Labels
Issue #1633: Labels: No Labels
Issue #1632: Labels: No Labels
This commit ( https://github.com/apache/kvrocks/pull/1632/commits/acf50104fbbecc84e363dfd88f750bf52c46f0e7 ) looks ok, but would you mind create an single patch for it?\r\n\r\nYou can also add an issue as a tracker for BloomFilter
Issue #1631: Labels: No Labels
After a round of review I get to understand this patch. There is a problem:\r\n\r\n```c++\r\nclass MultiLockGuard {\r\n public:\r\n  explicit MultiLockGuard(LockManager *lock_mgr, const std::vector<std::string> &keys) : lock_mgr_(lock_mgr) {\r\n    locks_ = lock_mgr_->MultiGet(keys);\r\n    for (const auto &iter : locks_) {\r\n      iter->lock();\r\n    }\r\n  }\r\n\r\n  ~MultiLockGuard() {\r\n    // Lock with order `A B C` and unlock should be `C B A`\r\n    for (auto iter = locks_.rbegin(); iter != locks_.rend(); ++iter) {\r\n      (*iter)->unlock();\r\n    }\r\n  }\r\n\r\n  MultiLockGuard(const MultiLockGuard &) = delete;\r\n  MultiLockGuard &operator=(const MultiLockGuard &) = delete;\r\n\r\n private:\r\n  LockManager *lock_mgr_ = nullptr;\r\n  std::vector<std::mutex *> locks_;\r\n};\r\n```\r\n\r\nPreviously, the lock happens per-key. It was a bit wierd but would not introduce problem. Now, `exclusive` is removed, so it might introduce the deadlock problem.\r\n\r\nA proposal is that using std::lock( https://en.cppreference.com/w/cpp/thread/lock ) instead of loop in `MultiLockGuard`.\r\n\r\n@PragmaTwice would that be possible?
Issue #1630: Labels: No Labels
@PragmaTwice сould you leave a little doc on how to use TLS for replication?\r\n\r\nWith this config\r\non master\r\n```\r\nkvrocks --tls-key-file ... --tls-cert-file ... --tls-ca-cert-file ...\r\n```\r\nand on slave\r\n```\r\nkvrocks --tls-replication yes --tls-key-file ... --tls-cert-file ... --tls-ca-cert-file ...\r\n```\r\n\r\nI get such errors\r\n```\r\nE20230814 08:22:48.497459 957356 redis_connection.cc:103] [connection] Going to remove the client: ...:59388, while encounter error: Success, SSL Error: error:0A0000C7:SSL routines::peer did not return a certificate\r\nE20230814 08:22:49.507014 957356 redis_connection.cc:103] [connection] Going to remove the client: ...:59392, while encounter error: Success, SSL Error: error:0A0000C7:SSL routines::peer did not return a certificate\r\n```
Issue #1629: Labels: No Labels
Issue #1627: Labels: No Labels
Issue #1626: Labels: No Labels
Issue #1625: Labels: No Labels
Issue #1624: Labels: No Labels
hope to get your approval or comments :)
Issue #1623: Labels: No Labels
I do not add [kvrocks-operator](https://github.com/RocksLabs/kvrocks-operator) since I do not know whether it is ready for use or not.
Issue #1622: Labels: No Labels
Seems some fixes are missing:\r\n- https://github.com/apache/kvrocks/commit/d839d163284a7cda61127a285587a489d243812e\r\n- https://github.com/apache/kvrocks/commit/53b7e879e395653651680f76e29c9e4a63b72f10
Issue #1618: Labels: enhancement
Issue #1617: Labels: No Labels
> Or even add the extra test step at -\r\n\r\nSeems a good idea, but I do not know how to get the docker image in the previous step (`docker/build-push-action@v3`) since we do not push it.\r\n\r\nhttps://github.com/apache/kvrocks/blob/f3d3105b5ad1a6b276cfc305a57e7cc5233e4fed/.github/workflows/kvrocks.yaml#L289
Issue #1616: Labels: No Labels
Issue #1615: Labels: No Labels
@git-hulk @PragmaTwice With these changes, does the data race still exist? I mean the `Cluster::slots_nodes_` variable. Do the read operations obtain an exclusive lock when reading from that variable?
Issue #1613: Labels: No Labels
i am not very familiar with it, so hopefully it is a right fix
Issue #1612: Labels: No Labels
Issue #1611: Labels: No Labels
Issue #1610: Labels: enhancement, help wanted, good first issue
Issue #1609: Labels: No Labels
Issue #1608: Labels: No Labels
ci link: https://github.com/apache/kvrocks/actions/runs/5652375120/job/15311891588?pr=1607#step:9:14
Issue #1607: Labels: No Labels
redis doc:\r\nhttps://redis.io/commands/zrank/\r\nhttps://redis.io/commands/zrevrank/
Issue #1606: Labels: No Labels
Issue #1605: Labels: No Labels
Seems ninja does not support something like `$(MAKE)`, but I current have no idea how to workaround it.
Issue #1604: Labels: No Labels
Issue #1603: Labels: bug, A-security
@aleksraiden Please send an email to private@kvrocks.apache.org to discuss security issue with a PoC.\r\n\r\nWe should not discuss security issue publicly.
Issue #1602: Labels: No Labels
@aleksraiden This PR only changes the docker image PORTABLE value to 1. I think this makes a lot of sense since we cannot promise users are always running on the intel CPU like @ovaistariq mentioned.
Issue #1601: Labels: No Labels
Issue #1600: Labels: No Labels
Inherited by #1805.
Issue #1599: Labels: enhancement
@git-hulk ok
Issue #1598: Labels: bug, crash
The following are the issues encountered with the kvrocks 2.5.0 -\r\n\r\n```\r\nW20230727 23:30:41.603250 38680 event_listener.cc:132] [event_listener/stall_cond_changed] column family: metadata write stall condition was changed, from stop to normal\r\nW20230727 23:30:43.232915 37553 event_listener.cc:132] [event_listener/stall_cond_changed] column family: metadata write stall condition was changed, from normal to stop\r\nE20230727 23:30:45.543407 37663 main.cc:84] ======= Ooops! kvrocks version 2.5.0 got signal: Segmentation fault (11) =======\r\nE20230727 23:30:45.576381 37663 main.cc:101] /lib64/libpthread.so.0(+0xf62f) [0x7f8ceedaa62f]\r\nE20230727 23:30:45.577598 37663 main.cc:99] /lib64/libc.so.6(+0x15bbed) [0x7f8cee826bed]      __memmove_ssse3_back\r\nE20230727 23:30:45.594018 37663 main.cc:99] kvrocks2.5.0() [0xc5dcc1]                         std::string::_M_mutate()\r\nE20230727 23:30:45.594180 37663 main.cc:99] kvrocks2.5.0() [0x4a9025]                         Cluster::updateSlotsInfo()\r\nE20230727 23:30:45.599767 37663 main.cc:99] kvrocks2.5.0() [0x4a99d8]                         Cluster::genNodesDescription()\r\nE20230727 23:30:45.604859 37663 main.cc:99] kvrocks2.5.0() [0x4c53b9]                         redis::CommandCluster::Execute()\r\nE20230727 23:30:45.609015 37663 main.cc:99] kvrocks2.5.0() [0x55990a]                         redis::Connection::ExecuteCommands()\r\nE20230727 23:30:45.611111 37663 main.cc:99] kvrocks2.5.0() [0x4bd5e3]                         EvbufCallbackBase<>::readCB()\r\nE20230727 23:30:45.622982 37663 main.cc:99] kvrocks2.5.0() [0xabf22d]                         bufferevent_run_deferred_callbacks_unlocked\r\nE20230727 23:30:45.623812 37663 main.cc:99] kvrocks2.5.0() [0xac54fb]                         event_process_active_single_queue\r\nE20230727 23:30:45.629799 37663 main.cc:99] kvrocks2.5.0() [0xac5eae]                         event_base_loop\r\nE20230727 23:30:45.631390 37663 main.cc:99] kvrocks2.5.0() [0x5783a9]                         _ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJZN4util12CreateThreadIZN12WorkerThread5StartEvEUlvE_EE8StatusOrIS_EPKcT_EUlvE_EEEEE6_M_runEv.lto_priv.0\r\nE20230727 23:30:45.634894 37663 main.cc:99] kvrocks2.5.0() [0xcbdc83]                         execute_native_thread_routine\r\nE20230727 23:30:45.635279 37663 main.cc:99] /lib64/libpthread.so.0(+0x7ea4) [0x7f8ceeda2ea4]  start_thread\r\nE20230727 23:30:45.636025 37663 main.cc:99] /lib64/libc.so.6(clone+0x6c) [0x7f8cee7c9b0c]     __clone\r\n```
Issue #1597: Labels: No Labels
It\
Issue #1596: Labels: No Labels
Issue #1595: Labels: No Labels
Not sure if anyone would rely on and use used_memory_human, i am leaning towards no...\r\nit is a potential breaking change\r\n\r\nNote our doc also describes it as used_memory_rss_human in https://kvrocks.apache.org/docs/info-sections
Issue #1594: Labels: bug
Hi @jcy1001, do you mean the key number is not correct? if yes, can take a look at: https://kvrocks.apache.org/docs/faq
Issue #1593: Labels: A-security
ping @git-hulk @PragmaTwice 
Issue #1592: Labels: No Labels
Thanks all, merging...
Issue #1591: Labels: No Labels
maybe we can add a spell check ci?\r\n\r\nI have added this spell check ci to Redis in the past: https://github.com/redis/redis/blob/unstable/.github/workflows/spell-check.yml\r\n\r\nRedis spell check PR link: https://github.com/redis/redis/pull/8890\r\n\r\nI can try to add it if I get the conceptual approval.\r\n\r\nhere is an example: https://github.com/redis/redis/actions/runs/5309794414\r\nci checks take very little time (tens of seconds)
Issue #1590: Labels: No Labels
Issue #1589: Labels: No Labels
Issue #1588: Labels: enhancement
Hello! Can I have a try?
Issue #1587: Labels: enhancement
Issue #1586: Labels: enhancement
@Yangsx-1 assigned, thanks
Issue #1585: Labels: enhancement
Is there anything we should pay special attantion to? @git-hulk @PragmaTwice @mapleFU @torwig 
Issue #1584: Labels: No Labels
Issue #1583: Labels: No Labels
I ran it locally and it passed, hope that we can run it a few more times in github CI to verify it
Issue #1582: Labels: No Labels
Have you tested how much performance can be improved?
Issue #1581: Labels: No Labels
Hi @enjoy-binbin, thanks for taking care of this. Maybe we should fix it in https://github.com/apache/kvrocks/blob/unstable/src/types/redis_string.cc#L320
Issue #1580: Labels: enhancement, help wanted, good first issue
Issue #1579: Labels: enhancement, help wanted, good first issue
Maybe we can use something like this - https://github.com/zaoqi/github-actions-archlinux
Issue #1578: Labels: enhancement, help wanted, good first issue
Issue #1577: Labels: No Labels
Issue #1576: Labels: No Labels
I think the `SetCompressionOption` parameter value is the name of the compression algorithm. We get `rocksdb::CompressionType` by `map[name]`(name->CompressionType), and then pass it to `SetOptions`, in `SetOptions` static_cast it to `rocksdb::CompressionType`.
Issue #1575: Labels: No Labels
I think we should testing rather than copying the config directly from Redis. Redis store all parts in memory, and has too many small objects, like sds, skiplist node and so on. So small object would be a severe problem for it.\r\nHowever, kvrocks stores these objects on a log-structure merge tree, and data is organized as sst/blocks. I guess there would be something different.
Issue #1574: Labels: No Labels
@git-hulk By the way, when would kvrocks use `fill_cache = true`? Seems that only when point get, we would have that, and read_ahead / fill_cache is usally disabled for performance?
Issue #1573: Labels: No Labels
Issue #1572: Labels: enhancement
Sounds good to me
Issue #1571: Labels: No Labels
Could you add some tests?
Issue #1570: Labels: No Labels
Issue #1569: Labels: A-ci
Issue #1568: Labels: A-security, A-scripting
@git-hulk @PragmaTwice \r\nthis one need to pay attention, it may be a security issue, which will cause the server to crash directly:\r\n```\r\n127.0.0.1:6666> eval \
Issue #1567: Labels: A-scripting
Issue #1566: Labels: A-ci
> And maybe we can enable all bugprone-* and do some NOLINT or style fixing in the future?\r\n\r\nWe need to specify the concrete name of checkers to prevent different checkers in different version of clang-tidy.
Issue #1565: Labels: No Labels
You can also add some go tests.
Issue #1564: Labels: enhancement
You need to add them to `.clang-tidy` instead of modifying `x.py`.
Issue #1563: Labels: No Labels
Issue #1562: Labels: A-transaction
ok now i see DISCARD also have the same problem, should I fix it together in this PR, or in a new PR?
Issue #1561: Labels: No Labels
Issue #1560: Labels: bug, help wanted, good first issue
Issue #1559: Labels: need-cherry-pick
this could be a security issue if there is a release that includes this command\r\ni see 2.5 RC include it, please make sure patch it
Issue #1558: Labels: need-cherry-pick
Issue #1557: Labels: need-cherry-pick
Issue #1556: Labels: No Labels
@xiaobiaozhao Why force push cf80ff7d443e42c08f73c1f89caf8996965132bf?
Issue #1555: Labels: No Labels
Oh, so that :\r\n\r\n```\r\nif ((CMAKE_CXX_COMPILER_ID STREQUAL "GNU") OR (CMAKE_CXX_COMPILER_ID STREQUAL "Clang"))\r\n```\r\n\r\nwill not step into. So no flags would be added here. Sounds reasonable
Issue #1554: Labels: enhancement
Looks good to me.
Issue #1552: Labels: bug
@tisonkun Yes, it\
Issue #1551: Labels: enhancement, help wanted
@zamazan4ik Thanks for suggesting it, and we definitely like to try any possible improvements. BTW, Kvrocks has applied the LTO/IPO in #764, and looking forward to seeing the result if anyone is interested in this.
Issue #1550: Labels: No Labels
Close this PR due to lack of activity.
Issue #1549: Labels: No Labels
Others are generally good for me, thanks for your efforts.
Issue #1548: Labels: need-cherry-pick
Issue #1547: Labels: No Labels
Issue #1546: Labels: need-cherry-pick
Hi guys, i see we are doing squash merge but the commit message is empty.\r\nPersonally, I value the commit message. To be precise, i value the git blame log.\r\nIt is very helpful for us to track the PR changes, the change details etc.\r\nMy suggestion is to add appropriate message to express a certain commit when the code is merged.\r\n\r\nIn Redis community, we usually maintain the top comment of the PR. Both the proposer of the PR and the maintainer of the project have the right to modify the top comment (to reflect the latest status of PR). and when the time is come, maintainers can directly use top comment as commit message and do the squash merge. We can simply edit the top comment, copy those plain text and then do the squash merge\r\n\r\nPS. it was discussed in https://github.com/apache/kvrocks/discussions/1553
Issue #1545: Labels: enhancement, help wanted, good first issue, A-security
Thanks, I think it is a good feature request, which can be an item in kvrocks roadmap for security.\r\n\r\nCurrently, I think you can workaround it by block the non-TLS port via iptables or other firewalls.
Issue #1544: Labels: enhancement, help wanted
hi, redis has stream function in t_stream.c , redis7.0  has xgroupCreate like command , but  our project not implemented, i only find xadd xdel xinfo ..in cmd_stream.cc,  thanks ~
Issue #1543: Labels: No Labels
This may not be that important, since there may be other commands that have this problem (redis itself also have it),\r\nbut at least for ZMPOP and BZMPOP, this behavior can be consistent (i just happened to see it, a cleanup)
Issue #1542: Labels: No Labels
cc @aleksraiden
Issue #1541: Labels: No Labels
Thanks for your contribution!
Issue #1539: Labels: need-cherry-pick
Seems that when key not found or expired, `Database::Type(const Slice &user_key, RedisType *type)` would return `kRedisNone`, and get `Disk::GetKeySize` with `kRedisNone` would raise not found rather than return `Nil`?\r\n\r\n(It\
Issue #1538: Labels: bug
@fosmjo Thanks for your feedback.
Issue #1537: Labels: No Labels
Issue #1535: Labels: bug
```\r\nProgram terminated with signal SIGSEGV, Segmentation fault.\r\n#0  0x00007fc92c691ad3 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib/x86_64-linux-gnu/libpthread.so.0\r\n[Current thread is 1 (Thread 0x7fc92aa7f700 (LWP 3235))]\r\n(gdb) where\r\n#0  0x00007fc92c691ad3 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib/x86_64-linux-gnu/libpthread.so.0\r\n#1  0x00007fc92c3b292c in std::condition_variable::wait(std::unique_lock<std::mutex>&) ()\r\n   from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#2  0x000055aae810df7d in rocksdb::ThreadPoolImpl::Impl::BGThread (this=this@entry=0x7fc92b441300, \r\n    thread_id=thread_id@entry=0) at util/threadpool_imp.cc:194\r\n#3  0x000055aae810e2cd in rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper (arg=0x7fc92b42f2c0)\r\n    at util/threadpool_imp.cc:307\r\n#4  0x00007fc92c3b874f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#5  0x00007fc92c68b6db in start_thread () from /lib/x86_64-linux-gnu/libpthread.so.0\r\n#6  0x00007fc92ba7593f in clone () from /lib/x86_64-linux-gnu/libc.so.6\r\n```
Issue #1534: Labels: major decision
cool, thanks for your great efforts!
Issue #1533: Labels: No Labels
[WIP] Bug fixed in the radius section of RADIUS searches.\r\n\r\n- [x] Work on GEOSEARCH BYBOX tests\r\n- [x] Find the bug and check if expected implementation work similar to redis search.\r\n- [x] Implement GEOSEARCHSTORE.
Issue #1531: Labels: No Labels
No changes to these commands, just a change of order to make the format reasonable.
Issue #1530: Labels: enhancement
Issue #1529: Labels: enhancement
You are right. I close this issue now.
Issue #1528: Labels: enhancement, help wanted, good first issue
please assign me
Issue #1527: Labels: enhancement
Issue #1526: Labels: enhancement, help wanted, good first issue
Hi, new guy here! I am willing to see how I could help on this issue. Please assign it to me if no others is working on this.
Issue #1525: Labels: enhancement, good first issue
Issue #1524: Labels: enhancement
Issue #1523: Labels: enhancement, help wanted, good first issue
I want to do this
Issue #1522: Labels: enhancement, help wanted, good first issue
Is it better to implement together with LMPOP？They are very similar.
Issue #1521: Labels: enhancement, help wanted, good first issue
I can do this.
Issue #1520: Labels: enhancement
@PragmaTwice do you think it is necessary?
Issue #1519: Labels: No Labels
Merging...\r\n\r\nThank you!
Issue #1518: Labels: No Labels
@torwig There is something wrong in CI with Darwin Clang, what can i do to deal with it?
Issue #1517: Labels: No Labels
Has been done in #1983, close this PR.
Issue #1516: Labels: No Labels
In this version of rocksdb changes a compiler flag PORTABLE, so I changes it into Cmake and Docker for default value 0. In this case all of features (related to CPU) are in runtime. \r\n\r\nSo, now PORTABLE option must be:\r\n\r\n- 0 and compiler work as best as it can\r\n- 1 usually nothing to do; compiler default is typically the most general\r\n- <ARCH> and we can set a CPU family for build best optimal code, e.g.: nocona core2 nehalem corei7 westmere sandybridge corei7-avx ivybridge core-avx-i haswell core-avx2 broadwell skylake skylake-avx512 cannonlake icelake-client rocketlake icelake-server cascadelake tigerlake cooperlake sapphirerapids alderlake bonnell atom silvermont slm goldmont goldmont-plus tremont knl knm x86-64 x86-64-v2 x86-64-v3 x86-64-v4 eden-x2 nano nano-1000 nano-2000 nano-3000 nano-x2 eden-x4 nano-x4 k8 k8-sse3 opteron opteron-sse3 athlon64 athlon64-sse3 athlon-fx amdfam10 barcelona bdver1 bdver2 bdver3 bdver4 znver1 znver2 znver3 btver1 btver2 native\r\n\r\nDetailed, we can see in this code diff: https://github.com/facebook/rocksdb/pull/11419/commits/5cb625142c77c84111f1f65b6f35f2318c602802\r\n
Issue #1515: Labels: No Labels
Thanks all, merging...
Issue #1514: Labels: No Labels
Issue #1513: Labels: No Labels
Issue #1512: Labels: enhancement
i can do this
Issue #1511: Labels: enhancement, help wanted
I can help with this.
Issue #1510: Labels: enhancement, help wanted, good first issue
Please add a good-first-issue label.
Issue #1509: Labels: No Labels
Resources are transferred out of the incubator according to the guide. Will close this issue, can help to review and correct while you’re free. @PragmaTwice @tisonkun @torwig 
Issue #1507: Labels: No Labels
Thanks for @aleksraiden taking care of this, merging...
Issue #1506: Labels: No Labels
This PR needs to closed, because it has been finished in https://github.com/apache/kvrocks/pull/2016
Issue #1505: Labels: No Labels
Issue #1503: Labels: enhancement
Hi @Yangsx-1\r\n\r\nMany thanks for your feedback. It should be a mistake in the Redis document, the timeout in the BLPOP is an integer indeed: https://github.com/redis/redis/blob/b00a2351865bb1d87e2d2701b77c8a68daefb054/src/t_list.c#L1218
Issue #1502: Labels: feature, release notes
Issue #1501: Labels: enhancement, help wanted, A-security
Issue #1500: Labels: A-datatype, A-command
Thanks to the mentor and community for choosing me to complete this task. I will complete this task through the following plan:\r\n\r\n**BloomFilter**\r\n\r\n- [x] Design and coding of `Bloomfilter_metadata` (ETC. 07/07)\r\n\r\nCoding of Commands parse and execution:\r\n\r\n- [x] `BF.ADD`, `BF.MADD` Command (ETC. 07/14)\r\n\r\n- [x] `BF.EXISTS`, `BF.MEXISTS` command (ETC. 07/21)\n\r\n- [x] `BF.INSERT`command (ETC. 07/28)\r\n\r\n- [x] `BF.Reserve`, `BF.CARD` command (ETC. 07/28)\r\n\r\n---\r\n\r\n**CuckooFilter**\r\n\r\n- [ ] Design and coding of `CuckooFilter_metadata` (ETC. 08/04)\r\n\r\nCoding of Commands parse and execution:\r\n\r\n- [ ] `CF.ADD`, `CF.ADDNX` command (ETC. 08/11)\r\n\r\n- [ ] `CF.EXISTS`, `CF.MEXISTS` command (ETC. 08/18)\r\n\r\n- [ ] `CF.DEL` command (ETC. 08/25)\r\n\r\n- [ ] `CF.INSERT`, `CF.INSERTNX` command (ETC. 08/25)\r\n\r\n- [ ] `CF.Reserve`, `CF.COUNT`, `CF.INFO` command (ETC. 08/30)\r\n\r\n---\r\n\r\n- [ ] Performance testing (ETC. 09/10)\r\n\r\nComplete the coding of test cases while coding various parts of the code
Issue #1499: Labels: No Labels
Issue #1498: Labels: No Labels
Hi @gloof11 can you write a cpp unit test? (probably in https://github.com/apache/incubator-kvrocks/blob/unstable/tests/cppunit/config_test.cc)\r\n
Issue #1497: Labels: enhancement, help wanted, good first issue
Issue #1496: Labels: No Labels
Issue #1495: Labels: enhancement, help wanted, good first issue
@ShooterIT @PragmaTwice @torwig @caipengbo How do you think about this proposal?
Issue #1494: Labels: No Labels
@PragmaTwice The syntax `ZDIFFSTORE destination numkeys key [key ...]` is sourced from https://redis.io/commands/zdiffstore/. The CommandKeyRange is divided into two parts by `numkeys`. Do we need to add a vector for skipping or just ignore this?
Issue #1493: Labels: No Labels
@torwig Thanks for your quick review.
Issue #1492: Labels: No Labels
```sh\r\n=== RUN   TestZset/ZRANGE_basics_-_skiplist\r\n    zset_test.go:445: \r\n                Error Trace:    ~/incubator-kvrocks/tests/gocase/unit/type/zset/zset_test.go:445\r\n                Error:          Not equal: \r\n                                expected: []string{}\r\n                                actual  : []string(nil)\r\n                            \r\n                                Diff:\r\n                                --- Expected\r\n                                +++ Actual\r\n                                @@ -1,3 +1,2 @@\r\n                                -([]string) {\r\n                                -}\r\n                                +([]string) <nil>\r\n                                 \r\n                Test:           TestZset/ZRANGE_basics_-_skiplist\r\n```\r\nHow can I solve this?
Issue #1491: Labels: No Labels
Issue #1490: Labels: No Labels
@Yangsx-1 You can use the `./x.py format` command before committing the code to avoid errors during CI.
Issue #1489: Labels: feature, release notes
Thanks for your contribution!\r\n\r\nSeveral points after a short glance:\r\n- seems the ring buffer is shared between all connections, so just be curious that, will the functionality of `SCAN` get break if we have lots of client connections simultaneously? And could we make it duplicate per connections or able to adjust the buffer size dynamically?\r\n- if some keys are deleted while the `SCAN` operation is executed, will the key properties of `SCAN` be preserved? (refer to "Scan guarantees" in https://redis.io/commands/scan/#scan%20guarantees)\r\n- self-increase cursor may cause informantion leaks: one client can retrieve some informantion of the current executed commands from another client (partially same as the first point)\r\n- seems the mutex can be replaced by rwlock or atomic variables\r\n\r\ncc @mapleFU @torwig 
Issue #1488: Labels: No Labels
Thanks @uds5501, you need to fix the clang-tidy error: https://github.com/apache/incubator-kvrocks/actions/runs/5199313230/jobs/9376587287?pr=1488#step:8:1166 to pass the CI. And can you add some Go tests to make sure it works?\r\n
Issue #1487: Labels: No Labels
Issue #1486: Labels: No Labels
Thanks all. Merging...
Issue #1484: Labels: enhancement, good first issue
@git-hulk  If I use `SLAVEOF 127.0.0.2 6666`, how can it check that the master is itself? Or if I send traffic with IP address 172.20.100.2 to the server where the master is located and use `SLAVEOF 172.20.100.2 6666`, how can it check?\r\n\r\nJudging based on the IP address and port is not accurate.
Issue #1483: Labels: bug, good first issue
Let me take a look at this
Issue #1482: Labels: feature, release notes
Thanks all, merging...
Issue #1481: Labels: No Labels
Good catch! My bad.
Issue #1480: Labels: bug
Hi @singular-seal \r\n\r\nCan you paste the core stack in logs file?
Issue #1479: Labels: No Labels
@jihuayu In `CommandSIsMember` you changed `int` to `bool` which is good. However, the line `*output = redis::Integer(ret);` means the boolean value is implicitly converted to an integer value. Am I right?
Issue #1478: Labels: enhancement, help wanted, feature
@git-hulk Let me try to implement this feature.
Issue #1477: Labels: No Labels
cc @aleksraiden may you verify this patch also.
Issue #1476: Labels: No Labels
@wy-ei Cool, thanks 
Issue #1475: Labels: No Labels
Hi @zncleon \r\n\r\n>In addition, srandmember not consider the case of a negative count and return an empty list or set，should we give it a definite action?\r\n\r\nIn this case, we can behave consistently with the Redis.
Issue #1474: Labels: No Labels
docker run apache/kvrocks --some-key some-value --other-key other-value ....\r\n\r\nwill run , but if you write docker-compose.yml and need read env for a .env, how to write ? change cmd ? Such an operation is very unintuitive.\r\n\r\nThese bash scripts can be run on all platforms with docker and bash installed.\r\n\r\nConfiguring docker through environment variables I think is a very common practice\r\n\r\nfor exampe nginx : https://hub.docker.com/_/nginx\r\n\r\n<img width="818" alt="image" src="https://github.com/apache/incubator-kvrocks/assets/130831741/f5e9aab2-33ea-4f81-b9a4-4808fd6780bf">\r\n\r\nfor example postgres : https://hub.docker.com/_/postgres\r\n<img width="929" alt="image" src="https://github.com/apache/incubator-kvrocks/assets/130831741/9509c93d-18bc-47c9-a00e-07945627248d">\r\n\r\nfor example redis : https://hub.docker.com/_/redis\r\n<img width="1050" alt="image" src="https://github.com/apache/incubator-kvrocks/assets/130831741/dc03feae-832d-418b-9895-0e665e96ba0d">\r\n
Issue #1473: Labels: No Labels
@infdahai Do you want to investigate the reason for an error by using 2/3 lines instead of one?
Issue #1472: Labels: bug
Issue #1471: Labels: No Labels
Issue #1470: Labels: No Labels
How can we tell if a command is in its right place?
Issue #1469: Labels: enhancement, good first issue
Please add a `good first issue` label.
Issue #1468: Labels: No Labels
great job!\r\n1. Please add some test case\r\n2. Please explain the difference with the redis official `ZMPOP` command\r\n    1. syntax\r\n    2. Complexity
Issue #1467: Labels: No Labels
LGTM. Please add the related issue (#1455) to your commit to help others understand why the test is written. 
Issue #1466: Labels: enhancement
Issue #1465: Labels: No Labels
Done by #2020 
Issue #1464: Labels: No Labels
@torwig I fixed the sync timeout test case as well in the last commit: https://github.com/apache/incubator-kvrocks/pull/1464/commits/bcc7b8509ab69f432f42c5cdeda43855ea066f4f, please take a look again. After changing the timeout to int, then use the float timeout would return an error.
Issue #1463: Labels: No Labels
Thanks @torwig, merging..
Issue #1462: Labels: enhancement
`Slice` is just a **view**, which has no **ownership**.\r\nFor example, if we want to concat some string dynamicly, we cannot use `Slice` since it cannot extend lifetime of the object, e.g.\r\n```\r\nstring x = to_string(count) + " apples";\r\nreturn Slice(x); // dangling reference!\r\n```\r\n\r\nBTW `Slice` is not a well-designed type, instead we have `std::string_view` since c++17.\r\n
Issue #1461: Labels: enhancement, help wanted
@git-hulk I want to try this
Issue #1460: Labels: enhancement
Hello, I can do this task. Can I submit a PR!\r\n\r\nAccording to my understanding, I can use `RangeByRank` function to get elements from the src zset, and then use `Add` function to add them to the dst zset.
Issue #1459: Labels: enhancement, help wanted
Duplicate issues https://github.com/apache/kvrocks/issues/1985
Issue #1458: Labels: enhancement
I want to try this:)
Issue #1457: Labels: enhancement, help wanted
i want to do this
Issue #1456: Labels: enhancement, help wanted
Is this issue still ongoing, I think I can do it
Issue #1455: Labels: enhancement
I think it may be introduced by your PR: https://github.com/apache/incubator-kvrocks/pull/1453
Issue #1454: Labels: enhancement
cool, thanks for driving this.
Issue #1453: Labels: No Labels
I think I can add it
Issue #1452: Labels: bug
The PR #1418 introduces the test. And it often causes CI failure.\r\nhttps://github.com/apache/incubator-kvrocks/blob/fb0e3d42031a6e0691c7a736711d0a01d72bdb1a/tests/gocase/integration/slotmigrate/slotmigrate_test.go#L414-L432
Issue #1451: Labels: enhancement, help wanted, good first issue
@PragmaTwice I find the statement `*output = redis::Integer(ret);` is used multiple times to return the result to the client in [cmd_set.cc](https://github.com/apache/incubator-kvrocks/blob/unstable/src/commands/cmd_set.cc).\r\nhttps://github.com/apache/incubator-kvrocks/blob/fb0e3d42031a6e0691c7a736711d0a01d72bdb1a/src/server/redis_reply.h#L38-L41\r\n\r\nAdd the `Integer` func checks whether compatibility with `int` is required(Of course, `size_t` is right). I see src/types/*.h and many funcs with this situation use `int`. 
Issue #1450: Labels: enhancement
@tisonkun Would you improve the documentation?
Issue #1449: Labels: No Labels
Thanks all, merging...
Issue #1448: Labels: bug
I think maybe it is a false positive. \r\n\r\nWe can try to add it into https://github.com/apache/incubator-kvrocks/blob/unstable/tests/tsan-suppressions.
Issue #1447: Labels: enhancement
@infdahai Does the Ubuntu 20.04 have clang-16 in its repository?
Issue #1446: Labels: No Labels
@tisonkun I modify the issue.
Issue #1445: Labels: enhancement
@infdahai Would you like to do this?
Issue #1444: Labels: No Labels
The flaky test still exists after applying #1449 and it should be caused by the retry in Go redis client.
Issue #1443: Labels: No Labels
Thanks all, I will merge and summary this PR change.
Issue #1442: Labels: bug
Issue #1441: Labels: enhancement, help wanted, good first issue
I hope to deal with it
Issue #1440: Labels: No Labels
I also encountered this.
Issue #1439: Labels: enhancement
BTW, two places exist in `cluster.cc`. We should find a solution to delete all the range in a write batch.
Issue #1438: Labels: No Labels
Issue #1437: Labels: No Labels
Thanks @torwig, merging...
Issue #1436: Labels: No Labels
CI failure: https://github.com/apache/incubator-kvrocks/actions/runs/4939330152/jobs/8830171808?pr=1436\r\nJust for record
Issue #1435: Labels: No Labels
There seems some compile error while using fmt 10 in CI. Could you try to investigate it? Or you can wait me for some free time to handle it (maybe next week).
Issue #1434: Labels: No Labels
For less dependencies and small image, what about using [distroless/cc](https://github.com/GoogleContainerTools/distroless/blob/main/cc/README.md) as base for the final image?
Issue #1433: Labels: No Labels
Issue #1432: Labels: No Labels
Merging...
Issue #1431: Labels: No Labels
> Add manual check Backtrace package and library for support building from source in Alpine Linux env.\r\n\r\nOut of curiosity, why do we have to do this in alpine environment?
Issue #1430: Labels: No Labels
Issue #1429: Labels: No Labels
Merging...
Issue #1428: Labels: No Labels
Issue #1427: Labels: No Labels
Tested at https://github.com/apache/incubator-kvrocks/actions/runs/4900989972/jobs/8752006763
Issue #1426: Labels: No Labels
Issue #1425: Labels: bug
Please provide more info about your build environment: OS version, arch, compiler toolchain, ...
Issue #1424: Labels: No Labels
To make the CI pass, you can run `./x.py format` in your local before pushing your code.
Issue #1423: Labels: enhancement
For bitmap compression, there are multiple possible ways. And please notice that, for a "dense" bitmap, compression might be useless.\r\n\r\nThere are some mature bitmap compression methods, like Roaring Bitmap or Oracle BCC.\r\n\r\nBy the way, introducing an format change should be heavy, because we need to detect which underlying data is used and considering the backward capability.
Issue #1422: Labels: No Labels
Merging...
Issue #1421: Labels: enhancement
https://github.com/godotengine/godot/issues/57193\r\nhttps://github.com/godotengine/godot-proposals/issues/2439\r\n\r\nSeems you can try to install libexecinfo, or try to link it to kvrocks.
Issue #1420: Labels: No Labels
Thanks all. Merging...
Issue #1419: Labels: No Labels
@mapleFU Thanks for reminding! Have fixed it.
Issue #1418: Labels: No Labels
@git-hulk @xiaobiaozhao @PragmaTwice @torwig @ShooterIT 
Issue #1417: Labels: enhancement, good first issue
Hi @wanghenshui \r\n\r\nThanks for your proposal, would you like to take this?
Issue #1416: Labels: enhancement
I think it seems not necessary to create status codes for every parsing error type. In kvrocks, a better and simple solution already exists:\r\n```c++\r\nauto version = ParseInt<VersionInteger>(version_str);\r\nif (!version) {\r\n  return std::move(version).Prefixed("failed to parse version");\r\n}\r\n\r\n// do something with *version ...\r\n```\r\n\r\nThen users will get a well-formed error message, like `failed to parse version: out of range` or `failed to parse version: encounter non-digit characters`.\r\n\r\nAnd we even have a more compact form to handle this pattern:\r\n```c++\r\nint version = GET_OR_RET(ParseInt<int>(version_str).Prefixed("failed to parse version"));\r\n// use this integer, no need of if statements\r\n```
Issue #1415: Labels: No Labels
Thanks @ColinChamber , merging...
Issue #1414: Labels: No Labels
> Thanks for your contribution!\r\n> \r\n> You can run `./x.py format` to format the code and let the CI proceed.\r\n\r\nIf I exec `./x.py format`, I get a irrelevant result.(Not important though, just ignored).\r\n![image](https://user-images.githubusercontent.com/30547248/235607033-0051de12-08f9-499a-830a-a3e3ddc1879e.png)\r\n
Issue #1413: Labels: bug, A-build
Good catch! Feel free to submit a PR.
Issue #1412: Labels: enhancement, help wanted
Issue #1411: Labels: enhancement
please assign to me
Issue #1410: Labels: enhancement
@git-hulk  I find many go tests use the `config` map including `"cluster-enabled": "yes"` and the `StartServerWithCLIOptions` function writes the option to the `kvrocks.conf` file. \r\n\r\n```go\r\nfunc TestClusterDumpAndLoadClusterNodesInfo(t *testing.T) {\r\n\tsrv1 := util.StartServer(t, map[string]string{\r\n\t\t"bind":            "0.0.0.0",\r\n\t\t"cluster-enabled": "yes",\r\n\t})\r\n```\r\n\r\nin StartServerWithCLIOptions func(),\r\nhttps://github.com/apache/incubator-kvrocks/blob/30e9fd788a4acb585566a008f4d5fff65ee06ce3/tests/gocase/util/server.go#L197-L207\r\n\r\nI haven\
Issue #1409: Labels: No Labels
Can we have lint to find that some cast is useless?
Issue #1408: Labels: No Labels
Seems ok, RocksDB also use way like that https://rocksdb.org/blog/2019/03/08/format-version-4.html\r\nShould we mark extract for "metadata encoding version"? Or just "encoding version" is ok?
Issue #1407: Labels: enhancement, help wanted, good first issue
Sure, we can make it push to a tag with rc suffix.
Issue #1406: Labels: No Labels
Merging. Thanks for your contribution.
Issue #1405: Labels: feature, release notes
Awesome feature, we are waiting for this, lot of thanks! For example, we can use this streamID for checking latency for each message (if consumer after processing, store an result with a same ID, but new autogenerated part of time). 
Issue #1404: Labels: No Labels
Hi @Venjy, thanks for your contribution!\r\n\r\nWhile it is glad to have a GUI for operations on kvrocks, we currently have no plan to maintain a web application in this repo (apache/incubator-kvrocks).\r\n\r\nI think you can consider to maintain it by your self, extract it from a kvrocks fork as a single web app repo, or maybe contact [KvrocksLabs](https://github.com/KvrocksLabs) for any desire to accept it (mail to dev@kvrocks.apache.org).\r\n
Issue #1403: Labels: bug
Hi @rueian . When I implement "hello", kvrocks didn\
Issue #1402: Labels: bug
it works when we use this "obscure" python package : https://pypi.org/project/kvrocks-scan/\r\n\r\nWhich does the following:\r\n\r\n```python3\r\nimport redis\r\n\r\ndef parse_scan(response, **options):\r\n\tcursor, r = response\r\n\tif cursor == b"0" or cursor == "0":\r\n\t\treturn int(cursor),r;\r\n\treturn cursor, r\r\n\r\nredis.client.AbstractRedis.RESPONSE_CALLBACKS["SCAN"] = parse_scan;\r\n\r\n\r\n# Redis scan_iter etc\r\n```\r\n\r\nI\
Issue #1401: Labels: No Labels
@torwig thanks for help in discovering this bug
Issue #1400: Labels: No Labels
Issue #1399: Labels: No Labels
- please write a more descriptive PR title (done by me, but please do that next time);\r\n- please add some PR description.
Issue #1398: Labels: No Labels
Thanks all. Merging...
Issue #1397: Labels: No Labels
I tested it locally (with the CONFIG REWRITE)\r\nand the ref: https://stackoverflow.com/questions/5605125/why-is-iostreameof-inside-a-loop-condition-i-e-while-stream-eof-cons
Issue #1396: Labels: bug, good first issue
<img width="569" alt="image" src="https://user-images.githubusercontent.com/7236171/233042866-db93476a-5db4-4645-b4e6-331ffbb29b79.png">\r\n
Issue #1395: Labels: enhancement, help wanted, good first issue, A-site
Issue #1394: Labels: No Labels
having trouble with how to add a time test case...
Issue #1393: Labels: enhancement, good first issue
redis used gettimeofday in the past, should we also use gettimeofday directly? (in Redis 7.2, TIME use a cached time)
Issue #1392: Labels: No Labels
Hi @zevin02, thanks for your contribution!\r\n\r\nWe setup lots of code checks in our CI, which requires you to pass for better code quality.\r\n\r\nFor example, from a glance to your code, maybe these checks will fail: \r\n- local variables must be lower_case with underscore,\r\n- NULL must be replaced with nullptr\r\n\r\nYou can check the CI log for more details and for how to modify your code to pass the CI.\r\n\r\nIt is recommended to try some commands to solve these problems, but maybe not all problems:\r\n- `./x.py format`\r\n- `./x.py check tidy --fix`\r\n\r\nAnother thing is that, it would be better to have some unit tests for this function before it is merged : )
Issue #1391: Labels: No Labels
Issue #1390: Labels: No Labels
Thanks all. Merging...
Issue #1389: Labels: enhancement, help wanted
tbb or folly::concurrentHashMap ?
Issue #1388: Labels: No Labels
Thanks all. Merging...
Issue #1387: Labels: No Labels
Issue #1386: Labels: No Labels
Thanks. Merging...
Issue #1385: Labels: No Labels
Issue #1384: Labels: No Labels
Thanks all, merging...
Issue #1383: Labels: No Labels
Issue #1382: Labels: enhancement, help wanted
Issue #1381: Labels: enhancement, good first issue
please assign to me
Issue #1380: Labels: No Labels
Issue #1379: Labels: No Labels
another question, i see the code i added, now cluster info is below rocksdb sestion, the location feels a bit strange, should i move it?
Issue #1378: Labels: enhancement, good first issue
Issue #1377: Labels: bug
> Please make sure that there is redirection happening when executing the XADD command.\r\n\r\nDo you mean need to trigger the slot migration between step 1 and step 2?
Issue #1376: Labels: enhancement
This sounds good to me. cc @torwig @PragmaTwice @ShooterIT 
Issue #1375: Labels: No Labels
Good, thanks! Now I use a redisInsight tool im work and we have two separated service, redis and kvroks, and this features very good to me!
Issue #1374: Labels: No Labels
i want to rewrite code and checker failed. @PragmaTwice
Issue #1373: Labels: No Labels
@PragmaTwice Could you please have a look at my PR? As @tisonkun advised, I can split it into several distinct PRs to make the review more convenient. What do you think?
Issue #1372: Labels: enhancement, help wanted, good first issue
@git-hulk I see this issue in the roadmap, and as it seems that no one is working on it (because this issue is troublesome and dirty...?), could you assign it to me?\n\nCurrently I only have some unclear thoughts on this topic. I think to check the data encoding compatibility, we are supposed to:\n\n1. Write the raw data in different version\
Issue #1371: Labels: enhancement
#1257
Issue #1370: Labels: No Labels
Merging..
Issue #1369: Labels: No Labels
@io55555 Thanks for picking it up! Could you share the motivation for doing this upgrade? We don\
Issue #1368: Labels: No Labels
I remember I review a similar patch before, but I cannot find it now..\r\n\r\nGood to merge for this one.
Issue #1367: Labels: No Labels
Update: I have tested if the prefix extractor can bring better performance when seeking, but the result doesn\
Issue #1366: Labels: No Labels
Thanks all. Merging...
Issue #1365: Labels: enhancement
Seems we already have a `daemonize` option. Does this fit your needs?
Issue #1364: Labels: No Labels
Thanks. Merging...
Issue #1363: Labels: No Labels
Issue #1362: Labels: No Labels
Issue #1361: Labels: No Labels
Issue #1360: Labels: No Labels
Random thoughts - such service config can work better if integrated with package manager like AUR (pacman) or Homebrew.
Issue #1359: Labels: No Labels
@PragmaTwice Impressive optimization!
Issue #1358: Labels: No Labels
Issue #1356: Labels: No Labels
demo output\r\n```\r\nStarting 30001\r\ninstance is not ready wait 1/5s\r\nOK\r\nOK\r\nStarting 30002\r\ninstance is not ready wait 1/5s\r\nOK\r\nOK\r\nStarting 30003\r\ninstance is not ready wait 1/5s\r\ninstance is not ready wait 2/5s\r\nOK\r\nOK\r\nStarting 30004\r\ninstance is not ready wait 1/5s\r\nOK\r\nOK\r\nStarting 30005\r\ninstance is not ready wait 1/5s\r\ninstance is not ready wait 2/5s\r\nOK\r\nOK\r\nStarting 30006\r\ninstance is not ready wait 1/5s\r\ninstance is not ready wait 2/5s\r\nOK\r\nOK\r\n```
Issue #1355: Labels: No Labels
Issue #1354: Labels: No Labels
Cool, Thanks for your contribution. @enjoy-binbin We can use the command `./x.py format` to auto-format and make the linter happy.
Issue #1352: Labels: No Labels
Issue #1351: Labels: No Labels
Issue #1350: Labels: feature
https://github.com/apache/incubator-kvrocks/pull/529
Issue #1349: Labels: No Labels
Good catch, thanks
Issue #1348: Labels: No Labels
Thanks all. Merging...
Issue #1347: Labels: No Labels
i am new to kvrocks / c++ / go, so I pick a simple task to do first.\r\nplease let me know if i do something wrong or i can do something to make the code better. thanks
Issue #1346: Labels: bug
Duplicated. See #1305, https://github.com/apache/incubator-kvrocks/issues/534 and https://github.com/apache/incubator-kvrocks/discussions/417.\r\n\r\nTo modify the client implementation, see [e9c53fb1398e636106c0ec0165ba564943564a83](https://github.com/hashlookup/redis-py/commit/e9c53fb1398e636106c0ec0165ba564943564a83).
Issue #1345: Labels: bug, A-cluster
@torwig Thank you. So for the XSETID command, I should parse the last_added_id / entries_added / max_deleted_id, then translate it into the XSETID. Is it right?
Issue #1344: Labels: enhancement, feature
A some internal discussion are here - https://github.com/apache/incubator-kvrocks/discussions/483
Issue #1343: Labels: No Labels
```\r\n./x.py test go build -deleteOnExit true\r\n```
Issue #1342: Labels: feature, major decision, A-build
@PragmaTwice Wow! Awesome feature, especially 64-bit size.
Issue #1341: Labels: No Labels
Thanks all. Merging...
Issue #1340: Labels: No Labels
@PragmaTwice Hi, i suppose you can do the review, thanks.
Issue #1339: Labels: No Labels
Thanks, merging...
Issue #1338: Labels: enhancement, help wanted
It should be hard to add Go test cases for this tool but can add a fixed dataset to make sure it works well with those data types.
Issue #1337: Labels: No Labels
Thanks all. Merging...
Issue #1336: Labels: No Labels
Thanks all, merging...
Issue #1335: Labels: No Labels
> Could you elaborate a bit how you fix this race condition logically? Generally, "wait for a while" is not logically correct but best effort.\r\n\r\nHi @tisonkun , this race is triggered by modifying the expire time of a key while compacting. Rare in real-world but indeed a race. \r\n\r\nIn my view, since it is hard and expensive to add locking to both compacting and command executing, waiting is the currently best way to avoid the race.
Issue #1334: Labels: No Labels
Good job! Could you append `modernize-return-braced-init-list` to `WarningsAsErrors` in `.clang-tidy`?
Issue #1333: Labels: No Labels
Great thanks for @aleksraiden proposing this change.
Issue #1332: Labels: No Labels
Issue #1331: Labels: No Labels
Issue #1330: Labels: No Labels
There are still ICE:\r\n\r\n```\r\nlto1: internal compiler error: in add_symbol_to_partition_1, at lto/lto-partition.c:153\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.\r\nlto-wrapper: fatal error: /usr/bin/g++ returned 1 exit status\r\ncompilation terminated.\r\n/usr/bin/ld: error: lto-wrapper failed\r\ncollect2: error: ld returned 1 exit status\r\n```
Issue #1329: Labels: No Labels
Issue #1328: Labels: enhancement
close this pr, new pr is  https://github.com/apache/incubator-kvrocks/pull/1374
Issue #1327: Labels: No Labels
Merging...\r\n\r\nThanks for your review :)
Issue #1326: Labels: No Labels
Issue #1325: Labels: enhancement
@ellutionist can you help to resolve conflicts?
Issue #1324: Labels: No Labels
Thanks all.
Issue #1323: Labels: No Labels
Do we plan to optimize more places with TBB in the future?
Issue #1322: Labels: No Labels
Issue #1321: Labels: No Labels
Merging.. Thanks all.
Issue #1320: Labels: No Labels
@torwig @caipengbo I extended the sequence limitation to require the checkpoint sequence must be greater or equal to the WAL sequence instead of strictly matching.\r\n\r\n```\r\n  if (seq < wal_seq) {\r\n    return {Status::NotOK, fmt::format("checkpoint seq: {} is smaller than the WAL seq: {}", seq, wal_seq)};\r\n  }\r\n```\r\n\r\nAnd I have tested if this check works correctly on my side.\r\n\r\n
Issue #1319: Labels: bug
Issue #1318: Labels: No Labels
Issue #1317: Labels: enhancement
将2.3的storge.cc  stream column family去掉，然后用2.3的数据启动无法启动
Issue #1316: Labels: No Labels
Issue #1315: Labels: No Labels
Thanks @torwig , merging...
Issue #1314: Labels: No Labels
Issue #1313: Labels: No Labels
Issue #1312: Labels: No Labels
Issue #1311: Labels: bug, good first issue
please fix it ASAP, thanks.
Issue #1310: Labels: No Labels
Thanks @torwig, merging...
Issue #1309: Labels: enhancement
Thanks @aleksraiden, can use `redis-benchmark -p 6666 -t set -d 102400 -r 100000000 -n 10000000` to check if the bug still exists.
Issue #1307: Labels: help wanted, feature
I am working on this,just assign to me
Issue #1306: Labels: help wanted, feature
I think  https://github.com/danielaparker/jsoncons is very appropriate。
Issue #1305: Labels: bug
Duplicated. See #534 and #417.
Issue #1303: Labels: No Labels
Thanks all, merging...
Issue #1302: Labels: No Labels
Thanks all. Merging...
Issue #1301: Labels: enhancement
Thanks for  proposing this. +1 for this feature.
Issue #1299: Labels: No Labels
Issue #1298: Labels: bug
@dongdongwcpp Thanks for your feedback. Agree that lazy deletion can fix this corner case.
Issue #1297: Labels: No Labels
Thanks all, merging...
Issue #1296: Labels: No Labels
@aleksraiden Thanks for your contribution.
Issue #1295: Labels: question
AFAIK it is an expected behavior:\r\n\r\nThe symbol `#` stands for the start of comments, e.g.\r\n```\r\npass 123 # this is a comment, password is 123\r\npass "123#456" # password is 123#456\r\n```\r\n\r\nSo if the value contains `#`, it is expected to be quoted.\r\n\r\nI will close this issue if no further problems.
Issue #1294: Labels: enhancement, good first issue
This needs for use HSET as append-only storage and optimize performance
Issue #1293: Labels: No Labels
@guoxiangCN Thanks for your contribution!
Issue #1292: Labels: enhancement, help wanted, good first issue
Will do this. Please assign to me.
Issue #1291: Labels: enhancement, help wanted, good first issue
Will do this. Please assign to me.
Issue #1290: Labels: enhancement
https://github.com/apache/incubator-kvrocks/blob/unstable/src/cluster/replication.cc#L201
Issue #1289: Labels: bug
I think it happens while another process creates a file lock upon `kvrocks.conf`.\r\n\r\nClose the corresponding program and try again.
Issue #1288: Labels: No Labels
Issue #1287: Labels: No Labels
Just parallel exec can be put into a "Session.Context" rather than `Storage`. A exec can write to it own session, and read first it own session.\r\n\r\nThough it\
Issue #1286: Labels: No Labels
@jjz921024 Merged. Thanks for your contribution again!
Issue #1285: Labels: No Labels
Issue #1281: Labels: enhancement
Very important to me, waiting for this in upstream. Lot of thanks! 
Issue #1280: Labels: No Labels
Thanks all. Merging...
Issue #1279: Labels: feature
This PR is generally good for me, to see if other folks have comments. @torwig @ShooterIT @caipengbo 
Issue #1278: Labels: bug, good first issue
@jjz921024 Thanks for your good catch. 
Issue #1277: Labels: enhancement
Thanks for @tarvfx filing this issue.
Issue #1274: Labels: No Labels
Issue #1273: Labels: enhancement
@GoodManWEN Thanks for your warm proposal, I think it makes a lot of sense to have multi-language documentation. \r\n\r\n@tisonkun @PragmaTwice How about putting them on our official website? 
Issue #1272: Labels: No Labels
Thanks all. Merging...
Issue #1271: Labels: No Labels
Thanks all, merging...
Issue #1269: Labels: No Labels
Thanks all, merging...
Issue #1268: Labels: No Labels
Thanks all. Merging...
Issue #1267: Labels: bug
Hi @hlf2016, thanks for your feedback, it should be related to this issue:https://github.com/apache/incubator-kvrocks/pull/930. Kvrocks will return an empty bulk string(`nil` for redis-cli), you can have a check if you have the empty key name like below:\r\n\r\n```\r\n127.0.0.1:6666> get ""\r\n"1"\r\n```\r\nAnd delete if this key was not expected, then the `nil` will be disappeared.\r\n\r\nWe will fix this issue soon.
Issue #1265: Labels: enhancement
Can hash tag meet your needs?\r\n\r\nhttps://github.com/apache/incubator-kvrocks/blob/e1cc7f68aeb6b649286157b5676631f41936bf27/src/cluster/redis_slot.cc#L67
Issue #1264: Labels: No Labels
> Generally looks good. One comment here:\r\n> \r\n> As we have #1037 now I\
Issue #1263: Labels: No Labels
Issue #1261: Labels: enhancement
I actually want a time series database on rocksdb, and it has replica that can failover.\r\nTake HBase as example, query n rows scan by rowkey，it is just read some hfiles(sstable) because the rowkeys are ordered.\r\n
Issue #1260: Labels: enhancement
Issue #1259: Labels: No Labels
Merging...
Issue #1258: Labels: No Labels
Issue #1257: Labels: enhancement, A-site
FYI @git-hulk @PragmaTwice 
Issue #1256: Labels: No Labels
Thanks all. Merging...
Issue #1255: Labels: No Labels
Thanks for your contribution!
Issue #1254: Labels: bug
Will this be a feature?  @PragmaTwice 
Issue #1253: Labels: No Labels
Issue #1252: Labels: No Labels
Thanks all. Merging...
Issue #1251: Labels: No Labels
Thanks all. Merging...
Issue #1250: Labels: No Labels
Thanks all, merging...
Issue #1249: Labels: No Labels
Thanks all. Merging...
Issue #1248: Labels: No Labels
Issue #1247: Labels: No Labels
Thanks all, merging...\r\n\r\n@caipengbo Can help to push a new tag to have a try, the DOCKER_USERNAME and DOCKER_PASSWORD had existed before if my memory serves.
Issue #1246: Labels: enhancement
Issue #1245: Labels: No Labels
Thanks all. Merging...
Issue #1244: Labels: No Labels
Though, the current one is acceptable for me.
Issue #1242: Labels: enhancement
@QQxiaoyuyu Thanks for your feedback, it makes sense to allow resetting the cluster nodes in flight. The kvrocks controller also needs this feature to reset the cluster after destroying the cluster.
Issue #1241: Labels: No Labels
Issue #1240: Labels: No Labels
Thanks all. Merging...
Issue #1239: Labels: No Labels
Thanks all, merging...
Issue #1238: Labels: No Labels
Thanks all. Merging...
Issue #1237: Labels: No Labels
Issue #1236: Labels: enhancement
Great thanks for @mapleFU suggestions.
Issue #1235: Labels: bug
Hi, thanks for your feedback.\r\n\r\nDo you mean it missing the ERR prefix before the error message? It should be in compliance with RESP since it only requires the error reply starting with \
Issue #1234: Labels: bug
Issue #1233: Labels: No Labels
> For confirmation, will MORE_BUILD_ARGS override ENABLE_OPENSSL and PORTABLE if specified?\r\n\r\nYeah.
Issue #1232: Labels: No Labels
Merging...
Issue #1231: Labels: No Labels
Thanks all. Merging...
Issue #1230: Labels: No Labels
Merging...
Issue #1229: Labels: No Labels
I think maybe we cannot bump the version of snappy due to some unknown bugs, refer to #788 and #790.
Issue #1228: Labels: No Labels
Thanks, @torwig \r\n\r\nNow all works fine!
Issue #1227: Labels: No Labels
I notice that gcc implemented floating-point version `std::from_chars` since 11.1, which is a sad story. It means we cannot use `std::from_chars` because it comes too late and the gcc version is too new for some users. So I will implement it using `strto*` in c std library instead.
Issue #1225: Labels: No Labels
> May you add a description on what is fixed and the different before and after?\r\n\r\n\r\nhttps://github.com/apache/incubator-kvrocks/blob/f1f7c10a30dc3387f6ffd77fe3c6efe2f393ed38/src/server/server.cc#L135\r\n\r\nFor example, before the PR, the error message in this line can never be dumped into log. So users can hardly know why the server fail to start.
Issue #1224: Labels: enhancement
Issue #1223: Labels: enhancement, tracking-issue
@caipengbo Do you mean that we can send the write batch directly instead of the RESP format？
Issue #1222: Labels: No Labels
Merging...
Issue #1221: Labels: No Labels
Thanks all. Merging...
Issue #1220: Labels: bug
Issue #1219: Labels: No Labels
I have some comments on the file format. \r\n\r\nI think it is a new file format that relies on what is in the comments (starting with `#`) as part of the parsing, which is puzzling. I think we can try not to create a new file format as well as a new parsing logic. If this file is named `*.conf` (it is weird to have two different file format in one program that both have suffix `.conf`), I think we could better refer to the previous kvrocks conf file format, i.e.\r\n\r\n```\r\n# a comment that does not affect parsing...\r\nversion 1\r\nid 0123456789012345678901234567890123456789\r\nnode 07c37dfeb235213a872192d90877d0cd55635b91 127.0.0.1 63262 master -  0-2 4-8193 10000 10002-11002 16381-16383\r\nnode ...\r\n```\r\n\r\nAnd there are some util functions in `config/config_util.h` that can help parsing text in such file format.\r\n
Issue #1218: Labels: No Labels
@PragmaTwice Could you please link the motivation of adding such a feature?
Issue #1217: Labels: No Labels
Thanks all. Merging...
Issue #1216: Labels: enhancement
Issue #1215: Labels: No Labels
Since this option is marked as `Experimental` in the `rocksdb` codebase, I agree to make this option configurable.\r\n@xiaobiaozhao Thank you for the benchmarks. Nice job!
Issue #1214: Labels: No Labels
Great changes. Since all warnings are fixed, could you modify the CMakeFiles to make the warning as error? You can just follow this TODO, and put `-Werror=unused-result` to L181.\r\n\r\nhttps://github.com/apache/incubator-kvrocks/blob/09d3d18dd9d4e2afebdda13560a8de392b0540d1/CMakeLists.txt#L180-L181
Issue #1213: Labels: bug
@lt1946 Thanks for your report, but I can\
Issue #1212: Labels: A-docs, enhancement
Hi @lt1946, thank you for your report. \r\nOn my machine, with Redis I have the following:\r\n```\r\n[yaroslav@localhost ~]$ redis-cli\r\n127.0.0.1:6379> SET mykey1 "\\x00\\xff\\xf0"\r\nOK\r\n127.0.0.1:6379> BITPOS mykey1 1 7 15 BIT\r\n(integer) 8\r\n```\r\nHowever, you said that you expect to see `9`.\r\n\r\nKvrocks behaves in the following way:\r\n```\r\n127.0.0.1:6666> SET mykey "\\x00\\xff\\xf0"\r\nOK\r\n127.0.0.1:6666> BITPOS mykey 1 7 15 BIT\r\n(integer) -1\r\n```\r\nAnd it needs an investigation.\r\n
Issue #1211: Labels: bug
Hi @lt1946 , could you provide more info about your case? What is the error message?\r\nI just executed the following:\r\n```\r\n127.0.0.1:6666> sadd set1 10 20 30 40 50 60 80 80 40 50 20\r\n(integer) 11\r\n127.0.0.1:6666> sscan set1 0 count 10\r\n1) "0"\r\n2) 1) "10"\r\n   2) "20"\r\n   3) "30"\r\n   4) "40"\r\n   5) "50"\r\n   6) "60"\r\n   7) "80"\r\n```\r\nIn this case, `count` is greater than 0 and there is no error.
Issue #1210: Labels: No Labels
it should not be a bug.\r\ni think the result is `value1 , value10, value2 , value3 `, the Lexicographic order of `value10` is less than `value2`
Issue #1209: Labels: No Labels
Thanks all, merging...
Issue #1208: Labels: No Labels
Merging...
Issue #1207: Labels: No Labels
Issue #1206: Labels: No Labels
Closing...\r\n\r\nSee https://github.com/apache/incubator-kvrocks/pull/1206#pullrequestreview-1229819085.
Issue #1205: Labels: No Labels
Issue #1204: Labels: enhancement
Maybe I made an oversight during the code review of #1171, since I thought that the previous PR was able to do this by sending `config set log-retention-days -1` from a kvrocks client.
Issue #1203: Labels: No Labels
Merging...
Issue #1202: Labels: bug
Issue #1201: Labels: No Labels
@PragmaTwice I suggest you involve those users directly here to test the implementation, since such local archive server is a customized syntax to use.
Issue #1200: Labels: No Labels
Thanks all. Merging...
Issue #1199: Labels: No Labels
Issue #1198: Labels: No Labels
Thanks all. Merging...
Issue #1197: Labels: No Labels
Thanks all. Merging...
Issue #1196: Labels: enhancement
Issue #1195: Labels: No Labels
Thanks all, merging...
Issue #1194: Labels: bug
Issue #1193: Labels: No Labels
Issue #1192: Labels: No Labels
Thanks all. Merging...
Issue #1191: Labels: No Labels
Thanks all. Merging...
Issue #1190: Labels: No Labels
Thanks all. Merging...
Issue #1189: Labels: No Labels
Issue #1188: Labels: A-docs, enhancement
Issue #1187: Labels: A-docs, enhancement
Issue #1186: Labels: A-docs, enhancement
Closed by https://github.com/apache/incubator-kvrocks-website/pull/50
Issue #1185: Labels: enhancement, help wanted
Closed as all subtasks done.
Issue #1183: Labels: No Labels
Thanks all, merging...
Issue #1182: Labels: bug
Many thanks for @juancrescente reporting this issue.
Issue #1181: Labels: No Labels
Issue #1180: Labels: bug
Hi, thanks for your issue.\r\n\r\nKvrocks does not support Redis logical database selection.\r\n\r\nInstead, Kvrocks provides a similiar feature named `namespace`, where you can check out the document to learn how to use it: https://kvrocks.apache.org/docs/namespace\r\n\r\nIt performs more functional selection and isolation rather than Redis `SELECT`.
Issue #1173: Labels: No Labels
Thanks for your contribution. Merging...
Issue #1172: Labels: No Labels
Does CI fail because timeout is too short? @git-hulk 
Issue #1171: Labels: No Labels
General looks good to me, except for two suggestions.
Issue #1170: Labels: bug
Cool, got it.
Issue #1168: Labels: enhancement, help wanted, good first issue, feature
I would like to work on it !
Issue #1165: Labels: bug
Issue #1163: Labels: enhancement
Issue #1162: Labels: No Labels
Thanks all, merging...
Issue #1161: Labels: bug
Issue #1159: Labels: No Labels
Thanks all, merging...
Issue #1158: Labels: No Labels
@PragmaTwice @ShooterIT Does it look good to you?
Issue #1157: Labels: enhancement
Issue #1156: Labels: No Labels
Thanks all, merging...
Issue #1155: Labels: No Labels
Thanks all. Merging...
Issue #1154: Labels: No Labels
Thanks all. Merging...
Issue #1153: Labels: No Labels
Thanks for your contribution. Merging...
Issue #1151: Labels: bug
Thanks all. Merging...
Issue #1150: Labels: bug
Issue #1149: Labels: No Labels
`x.py` is only invoked from the project root so using relative dir in `x.py` seems to be ok.
Issue #1148: Labels: enhancement, help wanted, good first issue
You should correspondingly update the build logic to fulfill VERSION information, including those in `x.py` and `CMakeList.txt`.
Issue #1147: Labels: enhancement, help wanted, good first issue
Closed as done.\r\n\r\n* https://github.com/apache/incubator-kvrocks-website/pull/29\r\n* https://github.com/apache/incubator-kvrocks-website/pull/30\r\n* https://github.com/apache/incubator-kvrocks/pull/1181
Issue #1146: Labels: bug
Hi, I am afraid kvrocks aborted due to the `Illegal Instruction` (128 + 4) signal, that is, the kvrocks executable binary in the docker image uses some instruction sets which is not supported by your cpu (in x64, it may be avx512 or something, you can use gdb to determine the concrete instruction which leads to termination).\r\n\r\nI will investigate this problem, and you can build kvrocks on your local device to avoid this problem. (or build the docker image on your local.)
Issue #1145: Labels: No Labels
Issue #1144: Labels: No Labels
Thanks all. Merging...
Issue #1143: Labels: No Labels
> Can we add some linter/checker rules to prevent regressions?\r\n\r\nHeaders are actually hard to precisely check by clang-tidy due to some reason, maybe I will dive into them later.
Issue #1142: Labels: No Labels
Issue #1141: Labels: No Labels
Issue #1140: Labels: No Labels
Thanks all. Merging...
Issue #1139: Labels: No Labels
@PragmaTwice Changes are good to me, but we need to update the NOTICE as well.
Issue #1138: Labels: enhancement
Issue #1137: Labels: No Labels
Thanks all, merging...
Issue #1136: Labels: enhancement, help wanted
Issue #1135: Labels: enhancement
Issue #1134: Labels: No Labels
Issue #1133: Labels: No Labels
Issue #1132: Labels: bug
thank you for your quick response\r\n\r\nis there any workaround to resolve this issue?\r\n
Issue #1131: Labels: enhancement, help wanted, good first issue, A-build
Issue #1130: Labels: No Labels
@PragmaTwice make sense. Perhaps `ARG BUILD_PARALLELISM`. You can read https://docs.docker.com/engine/reference/builder/#arg.
Issue #1129: Labels: No Labels
Issue #1128: Labels: No Labels
I think 4 seconds is long enough since the default read/write timeout of the Redis client is 3 seconds. 
Issue #1127: Labels: bug
@iushas Hi, you can try docker image apache/kvrocks:2.2.0 and see if it is solved. It is a prerelease now but will be an official release soon.
Issue #1126: Labels: enhancement
Issue #1125: Labels: No Labels
I like this change
Issue #1124: Labels: No Labels
Thanks for your contribution!
Issue #1123: Labels: bug
Fixed in #1195.
Issue #1122: Labels: question
@git-hulk btw, I just built and ran `kvrocks` from sources according to the [build section from doc.](https://github.com/apache/incubator-kvrocks#build) and it works good.\r\n\r\n```\r\n❯ uname -a\r\nDarwin nd9w29p9vd 21.6.0 Darwin Kernel Version 21.6.0: Mon Aug 22 20:19:52 PDT 2022; root:xnu-8020.140.49~2/RELEASE_ARM64_T6000 arm64\r\n```\r\n
Issue #1121: Labels: No Labels
Sorry guys, I ve removed old commented code, renamed variables, formatted code and updated .clang-tidy
Issue #1120: Labels: No Labels
I will try to finish this pr as soon as possible before the big refactoring.
Issue #1119: Labels: No Labels
I want to explain why kvrocks crashes when @tanruixiang is using `unique_ptr`.\r\n\r\nFirstly, he creates `ZrangeCommon` and some derived structs of it, like this:\r\n```\r\nstruct ZrangeCommon { ... };\r\nstruct ZrangeLex : ZrangeCommon { std::string x };\r\nstruct ZrangeIndex : ZrangeCommon { ... };\r\n```\r\n\r\nThen, he use `unique_ptr` to store `ZrangeCommon`:\r\n```\r\nunique_ptr<ZrangeCommon> spec_;\r\n\r\n...\r\n\r\nif (...) {\r\n  spec_ = make_unique<ZrangeLex>(...);\r\n} else if (...) {\r\n  spec_ = make_unique<ZrangeIndex>(...);\r\n}\r\n```\r\n\r\nNote: Unlike `shared_ptr`, `unique_ptr` does not do type erasure, which means that the default deleter in `unique_ptr` is determined at compile time for the destructor. In this case, destructor of `ZrangeCommon` will be called when `spec_` is destructed. Note that the actual object type at this point may be `ZRangeLex`, and calling the wrong destructor may not only lead to resource leaks, but also to other catastrophic consequences due to UB.\r\n\r\nThe design of `shared_ptr` is different in that `shared_ptr` does type erasure and its deleter is stored in runtime, which makes it store the exact function pointer of the destructor at construction (which, of course, adds runtime overhead), so there is no such problem.\r\n\r\nSo a better solution is to use a virtual destructor: `shared_ptr` is not needed here, because `shared_ptr` has extra overhead and other usefulness:\r\n\r\n```\r\nstruct ZrangeCommon {\r\n  ...\r\n  virtual ~ZrangeCommon() {}\r\n};\r\n```\r\n\r\n
Issue #1118: Labels: enhancement
Issue #1117: Labels: enhancement
Issue #1116: Labels: No Labels
Thank you very much for your contribution. Maybe you also need to add the go test, you can refer to `incubator-kvrocks/tests/gocase/unit/type/set/set_test.go`
Issue #1115: Labels: No Labels
Thanks all. Merging...
Issue #1114: Labels: No Labels
Thanks all. Merging...
Issue #1113: Labels: No Labels
Thanks for your contribution!
Issue #1112: Labels: No Labels
I think we can still use range-based for loop and remove these comment to continue with this PR if it is confirmed that these comments are out-of-date and not correct now. \r\ncc @git-hulk 
Issue #1111: Labels: No Labels
Thanks for your contribution!
Issue #1110: Labels: No Labels
Thanks for your contribution!
Issue #1109: Labels: No Labels
GitHub Actions was not being triggered, which is weird. I will try to reopen this PR.
Issue #1108: Labels: No Labels
Thanks for your contribution!
Issue #1107: Labels: No Labels
Thanks! Merging...
Issue #1106: Labels: No Labels
> BTW, if you configure your editor/IDE correctly (vim/vscode/emacs with clangd or clion), you should see a `fix` button in the pop-up window in every code segment where a report exists here. Some of them may also provide a button to fix all reports in the current source file.\r\n\r\nYes, vscode just need to download `Clang-Tidy` and take effect without any configuration.\r\n\r\n
Issue #1105: Labels: enhancement, good first issue
Issue #1104: Labels: enhancement, good first issue
Issue #1103: Labels: enhancement, good first issue
Issue #1102: Labels: enhancement, good first issue
Issue #1101: Labels: enhancement, good first issue
Issue #1100: Labels: enhancement, good first issue
assign to me
Issue #1099: Labels: enhancement, good first issue
Issue #1098: Labels: enhancement, good first issue
Issue #1097: Labels: enhancement, good first issue
Issue #1096: Labels: enhancement, good first issue
Issue #1095: Labels: enhancement, good first issue
Issue #1094: Labels: enhancement, good first issue
Issue #1093: Labels: enhancement, good first issue
@maochongxin assigned, thanks~
Issue #1092: Labels: enhancement, good first issue
Issue #1091: Labels: enhancement, good first issue
Issue #1090: Labels: enhancement, good first issue
Issue #1087: Labels: enhancement
Issue #1086: Labels: No Labels
Issue #1085: Labels: No Labels
Issue #1084: Labels: No Labels
Issue #1083: Labels: enhancement, feature
@boatrainlsz Thanks, assigned.
Issue #1082: Labels: enhancement
Good point, currently `ZRANGE` and `HRANGE` have different semantics (indexes v.s. elements) and argument types (integers v.s. strings), so I also think `ZRANGEBYLEX` is more concrete.\r\n\r\nBTW cc @tanruixiang 
Issue #1080: Labels: No Labels
Issue #1079: Labels: No Labels
Issue #1078: Labels: No Labels
Thanks all. Merging...
Issue #1077: Labels: No Labels
Issue #1076: Labels: No Labels
Issue #1075: Labels: No Labels
> Looks good to me.\r\n> \r\n> I just wonder if there is any check whose reports in kvrocks are all fixed. And then we can put them in `.clang-tidy`, according to #1029.\r\n\r\nI am fixing them in file order. I will try to see which checks have been fully fixed when I have time.
Issue #1074: Labels: No Labels
Thanks all. Merging...
Issue #1073: Labels: No Labels
Issue #1072: Labels: bug
This failure has been appearing not infrequently lately, and I thought we could do some investigation into it. cc @git-hulk @tisonkun 
Issue #1071: Labels: No Labels
@xiaobiaozhao Looks like you wrongly merged the previous commits and they appeared as new code. Please fix them first.
Issue #1070: Labels: No Labels
Issue #1069: Labels: No Labels
@PragmaTwice @git-hulk \r\n```\r\nI20221103 15:03:19.033007 40160 replication.cc:903] LogData(3 6)Put(\x0b__namespace\r\n\x037Ok/d�\x0fAA?\x02\x7f�������, 4373)PutCF(1, \x0b__namespace\r\n7Ok, \x03/d�\x0fAA?\x02\x11\x16\x7f�������\x7f�������)\r\nI20221103 15:03:19.033021 40160 replication.cc:903] LogData(3 6)Put(\x0b__namespace\r\n\x037Ok/d�\x0fAA?\x02\x7f�������, 4374)PutCF(1, \x0b__namespace\r\n7Ok, \x03/d�\x0fAA?\x02\x11\x17\x7f�������\x7f�������)\r\nI20221103 15:03:19.033035 40160 replication.cc:903] LogData(3 6)Put(\x0b__namespace\r\n\x037Ok/d�\x0fAA?\x02\x7f�������, 4375)PutCF(1, \x0b__namespace\r\n7Ok, \x03/d�\x0fAA?\x02\x11\x18\x7f�������\x7f�������)\r\nI20221103 15:03:19.033063 40160 replication.cc:903] LogData(3 6)Put(\x0b__namespace\r\n\x037Ok/d�\x0fAA?\x02\x7f�������, 4376)PutCF(1, \x0b__namespace\r\n7Ok, \x03/d�\x0fAA?\x02\x11\x19\x7f�������\x7f�������)\r\nI20221103 15:03:19.033077 40160 replication.cc:903] LogData(3 6)Put(\x0b__namespace\r\n\x037Ok/d�\x0fAA?\x02\x7f�������, 4377)PutCF(1, \x0b__namespace\r\n7Ok, \x03/d�\x0fAA?\x02\x11\x1a\x7f�������\x7f�������)\r\n```\r\n\r\nAfter inpecting hook, I think `WriteBatch::Handler` may works well, because program still coredump on `InternalKey`
Issue #1068: Labels: No Labels
Many thanks for the great core file from #1065, also thanks to folks who spent time to locate this issue. cc @PragmaTwice @mapleFU @torwig @tanruixiang
Issue #1067: Labels: No Labels
@PragmaTwice Good catch! I needed a few minutes to see the dangling reference in the code.
Issue #1066: Labels: No Labels
Issue #1065: Labels: No Labels
> Please update the PR description.\r\n\r\nDone. Thanks.
Issue #1064: Labels: No Labels
Issue #1063: Labels: No Labels
@ShooterIT Very excite to see you back again. 😆 ❤️ 
Issue #1062: Labels: No Labels
@tisonkun Good observation.\r\n@PragmaTwice Thank you for your hints.\r\nDone.
Issue #1061: Labels: No Labels
@git-hulk @PragmaTwice No idea why CI failed...
Issue #1060: Labels: No Labels
@manchurio Thanks for your report and PR, I think the root cause is using before the glog dir was specified in config::Load, so it will send logs to the default dir(/tmp), so this fix is not exactly correct.
Issue #1059: Labels: bug
@manchurio I have tried to fix this via #1061 , would you like to have a try?
Issue #1058: Labels: No Labels
Thanks all. Merging...
Issue #1057: Labels: No Labels
Thanks all. Merging...
Issue #1056: Labels: No Labels
I suggest putting the test results and conclusions here or in the issue.
Issue #1055: Labels: No Labels
Issue #1054: Labels: No Labels
Thanks all. Merging...
Issue #1053: Labels: No Labels
> Any description (what is to be implemented) of this change? It seems miscellaneous in one patch.\r\n\r\nAdded.
Issue #1052: Labels: enhancement
The go case log locates at `$WORKSPACE/tests/gocase/workspace`.
Issue #1051: Labels: No Labels
Thanks all. Merging...
Issue #1050: Labels: No Labels
Thanks all. Merging...
Issue #1049: Labels: enhancement, help wanted, good first issue
please assign to me
Issue #1048: Labels: No Labels
Thanks @torwig @PragmaTwice, merging...
Issue #1047: Labels: No Labels
https://github.com/apache/incubator-kvrocks/blob/debd8988d6f6978593ad35b7e06d0c3e773ee825/src/config/config.cc#L767-L771\r\n\r\nSince **ALL `MultiStringField` cannot be rewritten**, so I think you need to change it to something like\r\n```\r\nif (iter->second.IsMulti())\r\n```\r\nin case of someone use `MultiStringField` but forget to include the config key in this check.
Issue #1046: Labels: No Labels
Thanks all, merging...
Issue #1045: Labels: No Labels
Thanks all, merging..
Issue #1044: Labels: No Labels
Thanks all, merging...
Issue #1043: Labels: No Labels
Issue #1042: Labels: bug
Issue #1041: Labels: No Labels
Issue #1040: Labels: bug
@iushas Thanks for your feedback!
Issue #1039: Labels: No Labels
Issue #1038: Labels: No Labels
Hi, `clock_gettime` is a posix api. maybe `std::steady_clock` is better here.
Issue #1037: Labels: feature
wow, so speedy.
Issue #1036: Labels: No Labels
Issue #1035: Labels: No Labels
Issue #1034: Labels: enhancement, help wanted, feature
Yes, it makes a lot sense to support overriding configurations through passing environments.
Issue #1033: Labels: enhancement, major decision
I dislike the idea that using varint to store `expire`. The `varint` is sutable for "value tends to be small", maybe suitable for size, but using it as timestamp may be both harms cpu and storage.\r\n\r\n32bits\
Issue #1032: Labels: No Labels
@PragmaTwice After looking through the PR, I was a bit worry that it needs to take some time for most developers(include myself) to understand how to use it and how it works. And for Redis command arguments, there\
Issue #1029: Labels: enhancement, help wanted, good first issue
Issue #1028: Labels: No Labels
Issue #1027: Labels: No Labels
Issue #1026: Labels: No Labels
Hi @mapleFU, after a glance, I have two simple ideas:\r\n1. Could we add a new seperate mutex for directory changing? e.g. `backup_mu` and `backup_dir_mu`.\r\n2. If we use only one mutex `backup_mu`, could we use `try_lock` on the directory changing? e.g.\r\n```\r\nif(backup_mu.try_lock()) exchange ...\r\nelse report("backuping, cannot change...")\r\n```
Issue #1025: Labels: No Labels
May I ask do the comments here also need to be modified?\r\nhttps://github.com/apache/incubator-kvrocks/blob/unstable/src/common/event_util.h#L47\r\n```\r\nstruct UniqueEvbufReadln : UniqueFreePtr<char[]> {\r\n  // cppcheck-suppress uninitMemberVar\r\n  UniqueEvbufReadln(evbuffer *buffer, evbuffer_eol_style eol_style)\r\n      : UniqueFreePtr(evbuffer_readln(buffer, &length, eol_style)) {}\r\n\r\n  size_t length;\r\n};\r\n```
Issue #1024: Labels: enhancement, A-ci
Issue #1023: Labels: No Labels
Let me create an issue for it.
Issue #1022: Labels: No Labels
You can just run `./x.py format` to format the source code rather than manual formatting.
Issue #1021: Labels: enhancement, A-cluster
Issue #1020: Labels: No Labels
Issue #1019: Labels: enhancement
cc @tisonkun @torwig @ShooterIT @caipengbo 
Issue #1018: Labels: enhancement
Issue #1017: Labels: No Labels
Issue #1016: Labels: enhancement
https://github.com/apache/incubator-kvrocks/actions/runs/3288512905/jobs/5418990199
Issue #1015: Labels: No Labels
Issue #1014: Labels: enhancement
Related test code:\r\n\r\n```go\r\n\tt.Run("Kill normal client", func(t *testing.T) {\r\n\t\tdefer func() { rdb = srv.NewClient() }()\r\n\r\n\t\tc := srv.NewClient()\r\n\t\tdefer func() { require.NoError(t, c.Close()) }()\r\n\t\tr := c.Do(ctx, "CLIENT", "SETNAME", "normal")\r\n\t\trequire.NoError(t, r.Err())\r\n\t\trequire.Equal(t, "OK", r.Val())\r\n\t\trequire.Regexp(t, ".*name=normal.*", rdb.ClientList(ctx).Val())\r\n\r\n\t\trequire.EqualValues(t, 1, rdb.ClientKillByFilter(ctx, "skipme", "yes", "type", "normal").Val())\r\n\t\trequire.EqualValues(t, 1, rdb.ClientKillByFilter(ctx, "skipme", "no", "type", "normal").Val())\r\n\r\n\t\t// reconnect\r\n\t\trequire.NoError(t, rdb.Close())\r\n\t\trdb = srv.NewClient()\r\n\r\n\t\t// now the client should no longer be listed\r\n\t\trequire.Eventually(t, func() bool {\r\n\t\t\tr := rdb.ClientList(ctx).Val()\r\n\t\t\treturn !strings.Contains(r, "normal")\r\n\t\t}, 5*time.Second, 100*time.Millisecond)\r\n\t})\r\n```
Issue #1012: Labels: No Labels
```\r\n--- FAIL: TestBitmap (403.30s)\r\n    --- FAIL: TestBitmap/SETBIT/GETBIT/BITCOUNT/BITPOS_boundary_check_(type_bitmap) (15.33s)\r\n        bitmap_test.go:146: \r\n            \tError Trace:\t/Users/runner/work/incubator-kvrocks/incubator-kvrocks/tests/gocase/unit/type/bitmap/bitmap_test.go:146\r\n            \tError:      \tNot equal: \r\n            \t            \texpected: int(1)\r\n            \t            \tactual  : int64(0)\r\n            \tTest:       \tTestBitmap/SETBIT/GETBIT/BITCOUNT/BITPOS_boundary_check_(type_bitmap)\r\n```\r\n\r\n@PragmaTwice @git-hulk I don\
Issue #1011: Labels: No Labels
Thank you!
Issue #1010: Labels: enhancement
Issue #1009: Labels: No Labels
@tanruixiang ok , I get it ,thank you
Issue #1008: Labels: No Labels
```\r\n[TIMEOUT]: clients state report follows.\r\nsock5637433bc850 => (IN PROGRESS) BLPOP with same key multiple times should work (issue #801)\r\nKilling still running Redis server 43573\r\n\r\n                   The End\r\n\r\nExecution time of different units:\r\n\r\n!!! WARNING The following tests failed:\r\n\r\n*** [TIMEOUT]: clients state report follows.\r\n$ /usr/bin/tclsh tests/test_helper.tcl --server-path /home/runner/work/incubator-kvrocks/incubator-kvrocks/build/kvrocks --tls --single unit/tls --dont-clean\r\nTraceback (most recent call last):\r\n  File "/home/runner/work/incubator-kvrocks/incubator-kvrocks/./x.py", line 397, in <module>\r\n    args.func(**arg_dict)\r\n  File "/home/runner/work/incubator-kvrocks/incubator-kvrocks/./x.py", line 265, in test_tcl\r\n    run(tclsh, \
Issue #1007: Labels: enhancement, good first issue
Seems that after gothrough issue: \r\nhttps://github.com/redis/redis/issues/3594\r\nand code for redis about `dbfilename` and `server.rdb_filename`, it may not purge the old files. I think we can make user drop it themselves.\r\n\r\nAnother problem is, when a previous task is running, should `config` waiting for it or just grab the `rdb` mutex to avoid the tear read and  change the config? And how can I testing it, do we have some hooks for testing in our code?
Issue #1006: Labels: No Labels
I compiled successfully on Macos! Thank you very much for your contribution.❤️
Issue #1005: Labels: No Labels
@git-hulk migrated two more test cases.
Issue #1004: Labels: No Labels
Issue #1003: Labels: No Labels
Issue #1002: Labels: No Labels
Closed as partially completed.
Issue #1001: Labels: enhancement
cool, thanks for @ColinChamber great work.
Issue #1000: Labels: No Labels
Please reformat code :)
Issue #999: Labels: No Labels
Yes, I will handle it.
Issue #998: Labels: No Labels
```\r\n--- FAIL: TestReplicationWithLimitSpeed (10.10s)\r\n    client.go:72: \r\n        \tError Trace:\t/Users/runner/work/incubator-kvrocks/incubator-kvrocks/tests/gocase/integration/replication/client.go:72\r\n        \t            \t\t\t\t/Users/runner/work/incubator-kvrocks/incubator-kvrocks/tests/gocase/integration/replication/replication_test.go:209\r\n        \tError:      \tReceived unexpected error:\r\n        \t            \ti/o timeout\r\n        \tTest:       \tTestReplicationWithLimitSpeed\r\n```\r\n\r\nUnstable test. @git-hulk perhaps release the read timeout for the specific case.
Issue #997: Labels: No Labels
@ShooterIT @caipengbo Can have a look the bug which mentioned in #996 
Issue #996: Labels: bug
Issue #995: Labels: enhancement
@PragmaTwice could you spend some time taking care of the TLS tests?
Issue #994: Labels: No Labels
Issue #993: Labels: No Labels
Thank you! @tanruixiang 
Issue #992: Labels: bug
Issue #991: Labels: No Labels
please assign to me\r\n
Issue #990: Labels: No Labels
Issue #989: Labels: No Labels
> `log_collector` is not a network thing, and i think it should be put under `common`\r\n\r\nI think both `common` and `network` is ok, I put it into `network` because I find that this file relies on `redis_reply` and is using redis protocol. I will move it to `common`.
Issue #988: Labels: No Labels
@tisonkun Thanks for your help , I will pay attention to this kind of problems !
Issue #987: Labels: No Labels
Issue #986: Labels: No Labels
Issue #985: Labels: No Labels
Issue #984: Labels: No Labels
Issue #983: Labels: bug
It\
Issue #982: Labels: No Labels
Issue #981: Labels: No Labels
Hi. Is it better to use `constexpr` here too?\r\nhttps://github.com/apache/incubator-kvrocks/blob/unstable/src/redis_cmd.cc#L63
Issue #980: Labels: No Labels
Issue #979: Labels: No Labels
@PragmaTwice Good job! 
Issue #978: Labels: No Labels
Issue #977: Labels: enhancement
In my thought, these source folders are all in the `src` directory.\r\n\r\nI am not sure where to put `version.h.in` now, maybe just in `src/`.
Issue #976: Labels: No Labels
Issue #975: Labels: enhancement
https://github.com/apache/incubator-kvrocks/actions/runs/3228064427/jobs/5283723078
Issue #974: Labels: No Labels
Issue #973: Labels: No Labels
> LGTM. Although, as we write more and more code, it can be a good time to try modularizing source files into folders.\r\n\r\nGood idea, I will try to do this.
Issue #972: Labels: No Labels
> I think you should update the version constant on `x.py` correspondingly:\r\n> \r\n> https://github.com/apache/incubator-kvrocks/blob/unstable/x.py#L31\r\n\r\nOh thanks.
Issue #971: Labels: No Labels
@PragmaTwice Complete the refactoring according to your suggestion.
Issue #969: Labels: No Labels
Can review commits one by one, this PR also solves some typos and naming issue.
Issue #968: Labels: No Labels
Thank you! Merging...
Issue #967: Labels: No Labels
Something wrong in CI-mode, when I try to start default kvrocks server  from x.py
Issue #966: Labels: No Labels
cc @git-hulk @ShooterIT @ChrisZMF please help with reviewing.
Issue #965: Labels: bug
Issue #964: Labels: bug
@manchurio Good catch!
Issue #963: Labels: No Labels
@git-hulk @PragmaTwice @torwig @caipengbo Do you have any better ideas? After discussing a suitable method, I will follow up the replacement work.
Issue #962: Labels: bug
I notice that actually it is ok in redis to repeat the same keyword and arguments, e.g.\r\n\r\n```\r\n127.0.0.1:6379> set key value ex 22 ex 333\r\nOK\r\n127.0.0.1:6379> ttl key\r\n(integer) 331\r\n```
Issue #961: Labels: No Labels
cool, thanks for your contribution.\r\n\r\n@maochongxin Can we put the ttl argument parse into a single function? so that we can avoid duplicate codes, the expire argument can be translated into ttl as well.
Issue #960: Labels: enhancement, good first issue, feature
Can I try it on ? #961 
Issue #959: Labels: No Labels
Issue #958: Labels: No Labels
@ColinChamber Can you help to add more background information?
Issue #957: Labels: enhancement
Will pick this up
Issue #956: Labels: No Labels
@git-hulk Thank you! Updated.
Issue #955: Labels: No Labels
orz, thanks masters, I will continue to contribute 
Issue #954: Labels: No Labels
Issue #953: Labels: No Labels
I do not quite love the current design for configuration, I think a better way would be something like:\r\n\r\n```\r\nrocksdb.db_paths /mnt/ssd /mnt/hdd\r\nrocksdb.db_paths_size 10 10\r\n```\r\n\r\nOr simply:\r\n```\r\nrocksdb.db_paths /mnt/ssd 10 /mnt/hdd 10\r\n```\r\n\r\nSince we have no quoted multiple field configuration now, I think we can just forbid pathes that include spaces.
Issue #952: Labels: bug
Good Catch. It seems that the reason for the problem is that the namespace information in `Connection` is not used.
Issue #951: Labels: No Labels
Issue #950: Labels: enhancement, help wanted, good first issue
Issue #949: Labels: enhancement, help wanted, good first issue
@tisonkun i would like to work on this. Can you point me where to get started and assign the issue to me?
Issue #948: Labels: enhancement, help wanted, good first issue
@tisonkun I will handle it this weekend, assigned to myself.
Issue #947: Labels: enhancement, help wanted, good first issue
Issue #946: Labels: enhancement, help wanted, good first issue
https://github.com/lammertb/libcrc/blob/master/src/crc16.c#L124 here?
Issue #945: Labels: enhancement, help wanted, good first issue
Issue #944: Labels: No Labels
You possibly need to remove the entry of string tests for TCL test helper. Otherwise, the TCL suite can fail.\r\n\r\nSee https://github.com/apache/incubator-kvrocks/commit/43cca6a1ec50bfc850b8d9d08c552a61de8c0034#diff-44b16c150e71ef9382d728c10c9098bf483e57731d98f84f94a394e81c9172c3 as an example.
Issue #943: Labels: No Labels
Lot of thanks @torwig for awesome help and fix cpp linter. Please, review
Issue #942: Labels: No Labels
Issue #941: Labels: enhancement
Also, tcl will be upgraded to 8.6 (default in Ubuntu 20.04 and above)
Issue #940: Labels: No Labels
@tisonkun Thanks! 
Issue #939: Labels: No Labels
@PragmaTwice updated.
Issue #938: Labels: No Labels
Closed for now. Probably pick it up later.
Issue #937: Labels: No Labels
Issue #936: Labels: No Labels
Issue #935: Labels: No Labels
@tanruixiang Thank you!
Issue #934: Labels: No Labels
Issue #933: Labels: No Labels
Issue #932: Labels: No Labels
@torwig please, review
Issue #931: Labels: No Labels
Issue #930: Labels: No Labels
@caipengbo Can you add some tests for this fix?
Issue #929: Labels: bug
Good catch! Thanks. Are you willing to submit a PR?
Issue #928: Labels: bug
Agree. Also, SCAN returns "_cursor" instead of "cursor" on Redis, which causes #842 cannot directly make use of `redis.Client#Scan`.
Issue #927: Labels: bug
Which python version are you using? We support only python 3+.
Issue #926: Labels: bug
wow, it refreshes my knowledge.😃
Issue #925: Labels: No Labels
Issue #924: Labels: No Labels
@git-hulk @PragmaTwice Thank you so much. They have been fixed.
Issue #923: Labels: No Labels
Issue #922: Labels: No Labels
@git-hulk  @PragmaTwice  Hi. Do you have time to review?
Issue #921: Labels: No Labels
Hi @tanruixiang , you can also replace `atol`, `atoll` and other `sto*` or `ato*` in this PR if you like. \r\n\r\nThey belong to one function series, you can check cppreference to ensure all functions in this series are included.
Issue #920: Labels: No Labels
This is because the redis build uses cache, and you need to update cache-redis to add redis-server to it \r\nhttps://github.com/apache/incubator-kvrocks/blob/unstable/.github/workflows/kvrocks.yaml#L137-L143
Issue #919: Labels: No Labels
I notice that CI is down in darwin clang. Maybe `#include <chrono>` is needed to use namespace `std::chrono_literals`.
Issue #918: Labels: enhancement
Hi @xiaobiaozhao, I have two questions: \r\n1. Why can multiple disks improve performance? Multiple paths do not seem to work in parallel.\r\n3. How do we judge hot and cold data in kvrocks? Rocksdb simply determines where to place the SST based on when the SST was generated.
Issue #917: Labels: No Labels
Issue #916: Labels: No Labels
Merging...
Issue #915: Labels: enhancement
I think if the code of `StartServer` can be reused well for both kvrocks and redis, they can be implemented in one function. If it is just a dispatch, but the two parts of the code need to be completely separately implemented, then I think it is better to implement it as two functions `StartKvrocksServer` and `StartRedisServer`, and then you can implement a function like `StartServer` to do a dynamic dispatch. cc @tisonkun 
Issue #914: Labels: No Labels
Issue #913: Labels: No Labels
Cool！How much performance improvement did you get from testing?
Issue #912: Labels: No Labels
Issue #911: Labels: No Labels
Do we need to enable TLS in docker images? Currently TLS is enabled in nightly dockerhub images.
Issue #909: Labels: No Labels
Thanks all, merging..
Issue #908: Labels: enhancement
@git-hulk It\
Issue #907: Labels: enhancement
Issue #906: Labels: No Labels
The problem we had was that when we migrated, we had a lot of disk reads, but with this optimized version, these abnormal disk reads disappeared, so I think GetMetaData calls the Get interface
Issue #904: Labels: enhancement
Yes, good catch.
Issue #903: Labels: No Labels
@tanruixiang why i can\
Issue #902: Labels: No Labels
Issue #901: Labels: No Labels
@ellutionist Can you help to resolve the conflict in redis_cmd.cc
Issue #900: Labels: No Labels
Issue #899: Labels: No Labels
Issue #898: Labels: No Labels
Thank you!
Issue #897: Labels: No Labels
@PragmaTwice  Hi. The original code uses `std:: stol` , but using `ParseInt<long int> `instead the lint will report an error. Do you have any better suggestions?
Issue #896: Labels: enhancement
Issue #895: Labels: No Labels
Thanks for @tanruixiang contribution, this PR looks good to me. Do you mind adding the `gocase` for the hrange command as well first, then we can migrate the other test cases later.
Issue #894: Labels: enhancement
It would be nice to explain the syntax of the hrange command in this PR, not only to make it easier to read the code, but also to migrate the syntax to a document (website) in the future.
Issue #893: Labels: enhancement
Issue #892: Labels: No Labels
BTW, it seems there are some issues with local time in your device, the commit is with a timestamp of `Sep 20, 2022, 4:48 AM GMT+8`.\r\n\r\nThis value is from the future.
Issue #891: Labels: bug
Cool, thanks for your feedback.
Issue #890: Labels: enhancement, help wanted, good first issue
Issue #889: Labels: enhancement, help wanted, good first issue
Issue #888: Labels: No Labels
Issue #887: Labels: No Labels
> @PragmaTwice please check whether the title change is correct. I suggest we write the solution/expected state on PRs, while the issue/error state on issues.\r\n\r\nYeah, and it is more accurate than before. Thanks!
Issue #886: Labels: enhancement
@tufitko This is a good optimization point, in most cases we can make a decision about a key-value solely based on the key in compaction filter. \r\n\r\nJust as you said we can introduce new `FilterBlobByKey` interface to optimize it:\r\n- For the bitmap type, we can return `kUndetermined` in `FilterBlobByKey` to read the value further. \r\n- For the other types, we just need to read the key through `FilterBlobByKey`.
Issue #885: Labels: No Labels
🤔 @tanruixiang  I think I need to return the old Write interface and add a method to return default write options from storage. Is it ok?
Issue #884: Labels: enhancement, help wanted
I thinked about this feature. Very cool, we need this tests.\r\n\r\nIMHO, we can add to x.py file something like this:\r\n\r\n`./x.py benchmark --bench-path=` \r\n\r\nwith default value of client/request etc. \r\n\r\nIn CI script, we change step "Install redis" and copy redis-benchmark into  $HOME/local/bin/.\r\n\r\nThen we use -q options and run benchmark in quite format, just output req/sec. \r\n\r\nIn a first stage this numbers only for view, but maybe we can store a some historical tests results into file and after bench are running, check deviations. \r\n\r\nSo, I\
Issue #883: Labels: No Labels
Thanks @tanruixiang 
Issue #882: Labels: No Labels
@PragmaTwice Hi. Do you have any more suggestions on reducing redundant code?
Issue #881: Labels: feature, release notes
@git-hulk mind take a look? I need some help here
Issue #880: Labels: enhancement, help wanted, feature
BTW, we can split the task to many functions and support the resp3 protocol gradually.\r\n\r\nWe can give a tracking issue based on different types from [resp3.md](https://github.com/redis/redis-specifications/blob/master/protocol/RESP3.md) currently.\r\n\r\nCould I ask your advice? @torwig @PragmaTwice @git-hulk 
Issue #879: Labels: enhancement, help wanted, feature
Issue #878: Labels: enhancement
What is the benefits from disabling WAL? This mechanism, as I remember, used for parallels writers, thats can work without blocking too. And, of course, data safety are poor. This only reduce a disk I/O, but in sequential mode (like WAL) I think, its no a lot of problem. maybe you want to reduce storage - you can disable wal history (in archive directory inside). Maybe this can help you quickly?
Issue #877: Labels: enhancement
Seems that redis implement `--bigkey` as a client tool: https://github.com/redis/redis/blob/unstable/src/redis-cli.c#L8257 , it will send `scan` to sample the bigkeys.\r\n\r\nMaybe I can try to test using `--bigkey` in client in next few weeks
Issue #876: Labels: enhancement
Issue #875: Labels: No Labels
@git-hulk @PragmaTwice Hi. Do you have time to review for me? Thank you very much for your help.
Issue #874: Labels: enhancement, help wanted, good first issue
Do you mean the disk space usage of key? Kvrocks stores its data in disk instead of the memory, so the memory usage of key is meaningless for Kvrocks.
Issue #873: Labels: bug
Issue #872: Labels: enhancement, help wanted, good first issue
[list_test.go](https://github.com/apache/incubator-kvrocks/actions/runs/3061992524/jobs/4942482133) is also unstable.
Issue #871: Labels: No Labels
refer to #857 
Issue #870: Labels: No Labels
@git-hulk thanks! I rerun the CI for now.
Issue #869: Labels: No Labels
Issue #868: Labels: bug
cc @torwig It seems this is an unstable test. Could you try to dig it out?
Issue #867: Labels: bug
Issue #866: Labels: No Labels
Closed as inactive. Code conflict by the way. @suica you can resubmit the patch when it gets completed.
Issue #865: Labels: No Labels
Issue #864: Labels: enhancement
Issue #863: Labels: No Labels
Thanks, @torwig
Issue #862: Labels: enhancement
It sounds good to me. cc @tisonkun 
Issue #861: Labels: enhancement, help wanted, good first issue
Issue #860: Labels: enhancement, help wanted, good first issue
Please assign it to me.
Issue #859: Labels: A-docs, enhancement, help wanted, good first issue
Hi can I work on this issue?
Issue #858: Labels: No Labels
@tisonkun @git-hulk  @PragmaTwice  HI.  I found that the results of CI were a bit random. My same code failed in different places the first two times, and I passed it the last time.
Issue #857: Labels: enhancement, help wanted, good first issue
I would like to work on it !
Issue #856: Labels: enhancement, help wanted, good first issue
@maochongxin assigned. Go ahead!
Issue #855: Labels: enhancement, help wanted, good first issue
Issue #854: Labels: No Labels
Issue #852: Labels: No Labels
Issue #851: Labels: enhancement
Closed by #854.
Issue #850: Labels: No Labels
I think, if we want to support command line options for configurations, we need to implement it in a more direct way, rather than `sed`, which is more like a workaround.
Issue #849: Labels: No Labels
Hi everyone, I think this PR is ready to review now : )
Issue #846: Labels: No Labels
Thanks for @tisonkun carefully review, will merge after the CI become green.
Issue #845: Labels: No Labels
Issue #844: Labels: bug
Issue #843: Labels: No Labels
Thanks @tisonkun ! Merging...
Issue #842: Labels: enhancement, help wanted, good first issue
Issue #841: Labels: enhancement, help wanted, good first issue
Issue #840: Labels: No Labels
Thank you! Merging...
Issue #839: Labels: No Labels
Thanks all, merging...
Issue #838: Labels: No Labels
Thank you!
Issue #837: Labels: No Labels
@tisonkun I noticed you were online. Can you open the CI for me?
Issue #836: Labels: enhancement
@git-hulk @PragmaTwice @tisonkun Do we have any blockers or considerations that might stop us from updating RocksDb to a newer major version?
Issue #835: Labels: No Labels
You can rebase on latest unstable version to catch up #834 for golangci-lint reports.
Issue #834: Labels: No Labels
Verified linter violence can trigger CI failure correctly https://github.com/tisonkun/incubator-kvrocks/runs/8228711764?check_suite_focus=true.
Issue #833: Labels: No Labels
For the first time I know that Go files can have `-` in name :)
Issue #832: Labels: No Labels
@tisonkun Added `-bench=.`
Issue #831: Labels: bug, help wanted, good first issue
Issue #830: Labels: No Labels
Issue #829: Labels: enhancement
Issue #828: Labels: No Labels
Thanks @xiaobiaozhao. Please review - @git-hulk @PragmaTwice @tisonkun   @torwig 
Issue #827: Labels: No Labels
Not so trivial, need to use macros for define options only for CMake > 3.24.0. I will patch this asap
Issue #826: Labels: enhancement
Issue #825: Labels: No Labels
Issue #824: Labels: enhancement, help wanted, good first issue
@tisonkun maybe some script error, because a lot of identical issue created?
Issue #823: Labels: enhancement, help wanted, good first issue
I would like to work on it ! 
Issue #822: Labels: enhancement, help wanted, good first issue
@tanruixiang Assigned. Go ahead!
Issue #821: Labels: enhancement, help wanted, good first issue
i would like to work on it !
Issue #820: Labels: enhancement, help wanted, good first issue
i would like to do it !
Issue #819: Labels: enhancement, help wanted, good first issue
@tanruixiang Assigned. Go ahead!
Issue #818: Labels: enhancement, help wanted, good first issue
I would like to do this task :)
Issue #817: Labels: enhancement, help wanted, good first issue
Hi, I would like to work on this issue :)
Issue #816: Labels: enhancement, help wanted, good first issue
I would like to migrate all list test cases. Please assign this issue to me :)
Issue #815: Labels: enhancement, help wanted, good first issue
@tanruixiang assigned. Go ahead!
Issue #814: Labels: enhancement, help wanted, good first issue
i would like to work on this issue😋
Issue #813: Labels: enhancement, help wanted
I am thinking whether the makefile is necessary, since it is just a test module and we already have `x.py` which is a general script for developers. \r\n\r\nIf there are two scripts that need to be maintained, I think it might cause some confusion. The functionality of the makefile is not orthogonal to our current `x.py`, they have similiar capabilities.
Issue #812: Labels: enhancement
Issue #811: Labels: enhancement
Closed as done. @vmihailenco You may notice now we have a "compatibility tests set" for interacting Kvrocks with go-redis :)
Issue #810: Labels: No Labels
Issue #809: Labels: No Labels
Awesome, @torwig, lot of thanks! Please, review @PragmaTwice @ShooterIT @git-hulk 
Issue #808: Labels: No Labels
> In the [RESP spec](https://redis.io/docs/reference/protocol-spec/) it seems only CRLF("\\r\\n") is the allowed delimiter. Does Redis implement a different manner actually?\r\n\r\nYes, RESP only allows CRLF but inline mode allows the LF end of line as well: https://github.com/redis/redis/blob/unstable/src/networking.c#L2080
Issue #807: Labels: bug
Hello @dirkpetersen, many thanks for your feedback.\r\n\r\nThe root cause is that Kvrocks\
Issue #806: Labels: No Labels
Thanks @tisonkun\r\n\r\nThe tcl is really hard to debug for myself. Go or Rust are good to me but I think Go will be easier for developers to learn and participate. Can see other guys have any feedback on this topic, 
Issue #805: Labels: enhancement
Update: if we have one another instance kvrocks with TCP, second server instance with commented options not runned with message: main.cc:293] Could not create server TCP since the specified port[6666] is already in use
Issue #804: Labels: bug
Something are wrong. After I install tcl for tests, build are broken. Try to reset and re-install all dependency 
Issue #803: Labels: No Labels
@torwig @aleksraiden Hi, could you guys help me to check whether this PR really fixed the CMake error on Fedora or Debian? So thanks!\r\n\r\nHere is a simple script for reference to check it:\r\n```sh\r\ngit clone -b fix-792 https://github.com/PragmaTwice/incubator-kvrocks\r\ncd incubator-kvrocks && ./x.py build\r\n```
Issue #802: Labels: No Labels
Thanks all, merging...
Issue #801: Labels: bug
Issue #800: Labels: enhancement
By the way, I get the same result with clang14 which is the default version of macos. The latest clang is 15. If you can be sure that the result of 15 is the same, maybe there is no need to make judgments here. I think at least we can give a warning here and give the recommended clang version. Direct RuntimeError seems a bit inappropriate.@PragmaTwice \r\nhttps://github.com/apache/incubator-kvrocks/blob/unstable/x.py#L140
Issue #799: Labels: bug, help wanted
Issue #798: Labels: enhancement
Issue #797: Labels: No Labels
Hi all, this PR is now ready for review!\r\n\r\nThere is an error in TCL TLS test only in macOS, and I think I test a lot to ensure it works well in linux(centos or archlinux, openssl 1.0 or 1.1, tls v1 v1.1 v1.2 or v1.3).\r\nI will try to figure out the error in mac, and I will be very appreciated if you help me, since I have no Mac device.\r\n\r\ncc @git-hulk @ShooterIT @tisonkun @caipengbo 
Issue #796: Labels: No Labels
Thanks all. Merging...
Issue #795: Labels: enhancement, help wanted
@PragmaTwice the issue here is what distros are supported on GitHub Actions (public).
Issue #794: Labels: enhancement
Many thanks for @PragmaTwice bringing those awesome features to the community.
Issue #793: Labels: No Labels
Issue #792: Labels: bug
Many thanks to @torwig. We can add the `Fedora` OS as well if you know how to do that. ❤️ 
Issue #791: Labels: No Labels
@git-hulk BTW, after reverting snappy version I have Cmake error on Fedora 35\r\n\r\n```\r\nCMake Error at /usr/lib64/cmake/GTest/GTestTargets.cmake:37 (message):\r\n  Some (but not all) targets in this export set were already defined.\r\n\r\n  Targets Defined: GTest::gtest;GTest::gtest_main\r\n\r\n  Targets not yet defined: GTest::gmock;GTest::gmock_main\r\n\r\nCall Stack (most recent call first):\r\n  /usr/lib64/cmake/GTest/GTestConfig.cmake:42 (include)\r\n  /usr/share/cmake/Modules/FindGTest.cmake:187 (find_package)\r\n  build/_deps/snappy-src/CMakeLists.txt:40 (find_package)\r\n```\r\nHowever, I see that all builds you have in your CI are successful.
Issue #790: Labels: No Labels
> If it can only be reproduced in centos, I wonder if it is some bug or incompatible in old version gcc compiler, libstdc++ or glibc.\r\n\r\nYes, I also suspected that. I read through compressions code in RocksDB, it do nothing special except using RawCompress and RawUncompress, so I think it may cause by the behavior old version compiler since the compress/uncompression are user space behaviors.
Issue #789: Labels: No Labels
Issue #788: Labels: bug
@corningsun Thanks for your feedback.\r\n\r\nThis issue looks like the same with https://github.com/apache/incubator-kvrocks/issues/607, you can have a try at installing snappy. But I think it should a bug even it works after installing  the snappy since we expected to static link the snappy.
Issue #787: Labels: No Labels
> Could you link this PR to the master issue? And is there a description about "the new command parsing module"?\r\n\r\nHi @tisonkun , there is an old issue #598 to describe it but maybe a little out-dated, and I will create a new issue.
Issue #786: Labels: No Labels
Thanks all. Merging...
Issue #785: Labels: bug
Hi @corningsun , thanks for your report.\r\n\r\nCould you try `yum install libstdc++-static` and rerun the script?
Issue #784: Labels: enhancement, help wanted
remitted in #796
Issue #783: Labels: enhancement, help wanted
@mathspanda Thanks for your report, `internal_delete_skipped_count ` makes a lot sense, would you like to contribute it?
Issue #782: Labels: No Labels
@xiaobiaozhao would you like to rebase this patch onto latest unstable? Then I can find some time to review it :)
Issue #781: Labels: No Labels
Hi, thanks for your contribution.\r\n\r\nSince there is no `std::make_unique` in c++11, you can use `Util::MakeUnique` in `util.h` as an alternative.
Issue #780: Labels: No Labels
Good catch, thanks for your contribution.
Issue #778: Labels: feature, release notes
Thanks to @mathspanda contribution and @torwig review, merging...
Issue #777: Labels: enhancement
Issue #776: Labels: enhancement
My current plan was narrated above:\r\n> If you want to try to fix this problem, you can add an if ... else ... to CMakeLists, i.e. when it is currently in macos and CMAKE_OSX_DEPLOYMENT_TARGET is not configured, an error should be reported and the user will be reminded to configure it.\r\n\r\nIf you want to specify a default value, maybe you need to investigate how to specify a valid (and proper) default value for various macos version (10.x, 11, ...) that mac users are currently using, e.g. if you specify 11.0 then you need to know the behavior when macos10 users build the repo.
Issue #775: Labels: No Labels
By the way, can someone tell me that how can I run CI on my PC?
Issue #774: Labels: bug
Sorry for the false alarm. Issue seems to be addressed already.
Issue #773: Labels: No Labels
Thank you!
Issue #772: Labels: No Labels
@mathspanda Thanks for finding out and solving this issue, left a few suggestions. You can commit them if look good to you.
Issue #771: Labels: feature, release notes
@Ranxy Thanks for your contribution~
Issue #770: Labels: bug
@mathspanda good catch
Issue #769: Labels: enhancement
Issue #768: Labels: No Labels
In fact, I think `StatusOr` is not only more expressive, but also performs better than `Status` in some cases. \r\n\r\nThis is because `Status` is a large structure (`std::string` is usually larger than two words because SSO (small string optimization) is generally used in the implementation of `std::string`, for example, the implementation of `std::string` in libstdc++ is 32 bytes under 64 bits), so just `Status` is 40 bytes long, not including pointers for output. And Status inevitably constructs a `std::string` for any execution path.\r\n\r\nBut `StatusOr` instance like `StatusOr<int>` is only 16 bytes long and does not initialize `std::string` when no error occurs, and it initializes the resulting integer directly in-place inside these 16 bytes.
Issue #767: Labels: No Labels
Thanks all, merging...
Issue #766: Labels: enhancement
Good catch, I think we can use `Util::OctalStringToNum` to replace the `atoi` which also can check the min/max boundary.
Issue #765: Labels: No Labels
Thanks all! Merging...
Issue #764: Labels: No Labels
It seems GCC builds in linux work well but Clang builds fail in linking phase (https://github.com/apache/incubator-kvrocks/runs/7631095274?check_suite_focus=true). \r\n\r\nI have not tried it manually but I guess it maybe due to ld, which cannot recognize `*.o` generated by Clang with `-flto` enabled (it is actually LLVM bytecode in LTO mode, not native object file).\r\n\r\nHence you can try to replace ld with lld while clang is used. I can help you to do that if you do not familiar with those stuff. 
Issue #762: Labels: No Labels
Thanks to @tisonkun, merging…
Issue #761: Labels: No Labels
Thanks all, merging...
Issue #760: Labels: bug
Issue #759: Labels: No Labels
```\r\n*** [err]: requests on cluster are ok in tests/integration/cluster.tcl\r\nExpected \
Issue #758: Labels: No Labels
Thanks! Merging...
Issue #757: Labels: No Labels
LGTM
Issue #756: Labels: enhancement, good first issue
Issue #755: Labels: enhancement, help wanted
@liangyuanpeng Thanks for your feedback, it makes a lot sense.
Issue #754: Labels: No Labels
Thanks all, merging...
Issue #753: Labels: enhancement, good first issue
Hi hulk, after reading document and code of redis (mainly https://github.com/redis/redis/blob/unstable/src/networking.c#L3432 ), I found that `hello` defines the protocol redis use ( RESP2 or RESP3), and return the data via `hello`\
Issue #752: Labels: No Labels
I tried to fix the release workflow and upload packages automatically to a draft release in #751. \r\n\r\n@tisonkun suggested that we can directly remove the release workflow and move packaging scripts to x.py.\r\n\r\nI do not know whether the release vote process and the  release workflow are compatible, maybe we can have a discussion.
Issue #751: Labels: No Labels
I think we should disable releasing from GitHub Actions Workflow though.
Issue #750: Labels: No Labels
Issue #749: Labels: enhancement, good first issue
Issue #748: Labels: No Labels
Thanks all. Merging...
Issue #747: Labels: No Labels
Aha, no worry, my review also misses this issue.
Issue #746: Labels: No Labels
Thanks all. Merging...
Issue #745: Labels: feature, release notes, major decision
Can you add some design documents so that people can understand your design ideas :)
Issue #744: Labels: No Labels
> some little typos, and seems luaJIT is missing : )\r\n\r\nThanks twice, we won’t release luajit in 2.1.0, so will add it later.
Issue #743: Labels: No Labels
Issue #742: Labels: enhancement
Thanks @PragmaTwice, also fixed it by add some tolerant range.
Issue #741: Labels: No Labels
Very love this feature, users can use the latest version if they want to have a try.
Issue #740: Labels: No Labels
Thanks all, merging...
Issue #739: Labels: No Labels
Issue #738: Labels: enhancement
Issue #737: Labels: bug
Hi @luger1990 FYI https://github.com/apache/incubator-kvrocks/discussions/417
Issue #736: Labels: bug
> After Tomcat is started,i used Redisson 3.17.3 to get kvrocks data\r\n\r\nThis is quite vague. I suppose you start a Kvrocks server or cluster in someway. It would be better if you can provide a sample repo to reproduce the issue.
Issue #735: Labels: No Labels
Too many conflicts, will checkout from unstable instead of 2.0
Issue #734: Labels: No Labels
Issue #733: Labels: A-docs
Issue #732: Labels: No Labels
I tried on my side and also found it missing the `incubating` keyword
Issue #730: Labels: No Labels
Issue #729: Labels: No Labels
Thanks @tisonkun
Issue #727: Labels: bug
Issue #725: Labels: No Labels
Merging...
Issue #724: Labels: No Labels
Thanks for your reviews! Merging...
Issue #723: Labels: No Labels
Thanks! \r\nHas fixed it.\r\n
Issue #722: Labels: No Labels
Merging...\r\n\r\nThanks for your contribution @jackwener !
Issue #721: Labels: No Labels
LGTM
Issue #718: Labels: enhancement, help wanted, good first issue
Perhaps useful references:\r\n\r\n* https://docs.travis-ci.com/user/docker/\r\n* https://docs.travis-ci.com/user/installing-dependencies/\r\n* https://docs.travis-ci.com/user/languages/cpp/
Issue #717: Labels: enhancement
Issue #716: Labels: No Labels
Thanks @AvivPl 
Issue #715: Labels: enhancement
Issue #714: Labels: No Labels
Last failure was caused by the monitor command, will fix it
Issue #713: Labels: bug
Issue #711: Labels: No Labels
Merged. Thanks for you contribution!
Issue #709: Labels: No Labels
> ASAN:DEADLYSIGNAL\r\n=================================================================\r\n==30388==ERROR: AddressSanitizer: SEGV on unknown address 0x0000000000f0 (pc 0x55c5e3f1823b bp 0x7fb31cbe58b0 sp 0x7fb31cbe5888 T103)\r\n==30388==The signal is caused by a READ memory access.\r\n==30388==Hint: address points to the zero page.\r\n\r\nemmm, does this caused by my commits? No idea why this occurs
Issue #708: Labels: enhancement
Solved in #709.
Issue #707: Labels: No Labels
Thanks for @mapleFU contribution, merging...
Issue #706: Labels: enhancement, good first issue
Great catch. Feel free to submite patches!
Issue #705: Labels: No Labels
@PragmaTwice I don\
Issue #704: Labels: No Labels
Thanks @jackwener, merging...
Issue #703: Labels: No Labels
Issue #702: Labels: bug
Issue #701: Labels: No Labels
Issue #700: Labels: No Labels
Issue #699: Labels: bug
I think I found the root cause:\r\n\r\nThe the current `CommandBPop` object is deallocated while `CommandBPop::WriteCB` is called by bufferevent.
Issue #698: Labels: No Labels
```\r\ntests/tmp/server.20197.3/stderr:==21201==ERROR: AddressSanitizer: heap-use-after-free on address 0x608000014068 at pc 0x0000006a79ef bp 0x7f33e0b7e9f0 sp 0x7f33e0b7e9e8 \r\ntests/tmp/server.20197.3/stderr:SUMMARY: AddressSanitizer: heap-use-after-free /home/runner/work/incubator-kvrocks/incubator-kvrocks/src/redis_cmd.cc:1568:25 in Redis::CommandBPop::TryPopFromList()\r\n```\r\n\r\nSeems there are some ASan errors in TCL tests: https://github.com/apache/incubator-kvrocks/runs/7125505577?check_suite_focus=true
Issue #697: Labels: No Labels
Thanks for your hard work.\r\n\r\n> rm test case "cmsgpack can pack and unpack circular references". Becase luajit\
Issue #696: Labels: enhancement
Solved by #741, #746, #747 and #748. 
Issue #695: Labels: No Labels
Issue #694: Labels: No Labels
cool, thanks
Issue #692: Labels: No Labels
Does this patch fix some issues existing now? BTW as the building logic grow complexity, we may rewrite it with Python or other more structural tools :)
Issue #691: Labels: No Labels
The QEMU was introduce in PR: https://github.com/apache/incubator-kvrocks/pull/550, maybe we can move other jobs to per CI from daily CI except the QEMU docker image.
Issue #690: Labels: No Labels
Issue #689: Labels: No Labels
Push 62c2952b8a8792bedfb308ba278303085b81c629 to ensure that cache logic works.
Issue #688: Labels: No Labels
Issue #687: Labels: No Labels
Issue #686: Labels: No Labels
Issue #685: Labels: No Labels
> LGTM. @PragmaTwice I think we can add a short section in README.md for consumers of this feature.\r\n\r\nThanks for your suggestion, done. @tisonkun 
Issue #684: Labels: No Labels
Issue #683: Labels: No Labels
Issue #682: Labels: No Labels
Thanks for your contribution! Merging...
Issue #681: Labels: No Labels
 Can we merge this PR and #680 into one? I think they are almost the same.
Issue #680: Labels: No Labels
move to #681
Issue #679: Labels: No Labels
Issue #678: Labels: No Labels
Issue #677: Labels: enhancement
@PragmaTwice it sounds like something similar to "MergeCI" in TiDB project. However, I\
Issue #676: Labels: help wanted
and https://github.com/apache/incubator-kvrocks/runs/7052214974?check_suite_focus=true
Issue #675: Labels: No Labels
Issue #674: Labels: No Labels
Issue #673: Labels: No Labels
This patch can be blocked by #645 as `missingInclude` is tricky to address. See also https://github.com/apache/incubator-kvrocks/pull/645#issuecomment-1162042973.
Issue #672: Labels: No Labels
```c++\r\ntemplate<typename T, typename ...Args> auto UniqueConfig(Args &&... args) {\r\n  return std::unique_ptr<ConfigField>(new T(std::forward<Args>(args)...));\r\n}\r\n```\r\nYou can add this utility function to smplify the changes : )
Issue #671: Labels: No Labels
I have use `emplace_back` place the vector [List-initialization](https://en.cppreference.com/w/cpp/language/list_initialization).\r\n\r\nBecause it will use `copy constructor`, it will call `FieldWrapper(const FieldWrapper &wrapper)`.\r\n\r\nSo, I use `emplace_back`
Issue #669: Labels: No Labels
Issue #668: Labels: No Labels
Issue #667: Labels: No Labels
Oh, my IDE cleaned all space in workflow files too. Although they are not intended to be changed in this PR but seem cool?
Issue #666: Labels: No Labels
Issue #665: Labels: enhancement, help wanted
cc @Xuanwo IIRC you have the knowledge to implement this requirement. Would you like to take over this issue or help on sharing knowledge need to implement this feature?
Issue #664: Labels: enhancement, help wanted, good first issue
For more information about GitHub Actions settings, see also https://docs.github.com/en/actions/using-jobs/using-concurrency#example-only-cancel-in-progress-jobs-or-runs-for-the-current-workflow
Issue #663: Labels: enhancement, help wanted
@PragmaTwice is there any remaining works and do you want to continue driving this effort?
Issue #662: Labels: enhancement
cc @git-hulk \r\n\r\n<img width="1728" alt="image" src="https://user-images.githubusercontent.com/18818196/197383662-02ed392d-69be-447a-82e6-f2b0c0cd6870.png">\r\n\r\nCurrently, I found only these three lines in the source code that we print to the stdout in starting up logic. I don\
Issue #661: Labels: No Labels
Thanks all, merging.
Issue #660: Labels: No Labels
> @tisonkun You\
Issue #659: Labels: No Labels
Issue #658: Labels: No Labels
Let me track this problem.
Issue #657: Labels: No Labels
This test case spent almost 30s on my local machine and it should be even slower in CI environment. So we can increase the wait time from 50s => 100s if has no idea. Do guys\r\nhave any thoughts about this case? @ChrisZMF @ShooterIT @caipengbo
Issue #656: Labels: No Labels
Issue #655: Labels: No Labels
I will follow up this issue, it should be caused by forbidding to get role when restoring\r\nthe data.
Issue #654: Labels: No Labels
Issue #653: Labels: No Labels
I have tried four time but failed reproduce it.😂. (It may be related with OS)\r\n\r\nEnv:\r\n- mbp m1\r\n- clang version 13.0.1\r\n\r\ninvestigate this problem later (other PR), this PR just fix warning.\r\n\r\n
Issue #652: Labels: No Labels
Cool, can you add some test cases in [protocol.tcl](https://github.com/apache/incubator-kvrocks/blob/unstable/tests/tcl/tests/unit/protocol.tcl) to make sure it has already fixed?
Issue #651: Labels: No Labels
Issue #650: Labels: No Labels
Thanks everyone, merging...
Issue #649: Labels: No Labels
Issue #648: Labels: No Labels
Issue #647: Labels: enhancement
You may give a report (sheet) for flaky tests, sorting out by categorizes. For example, tcl tests or unit tests.\r\n\r\nIt should be helpful for anyone who tries to contribute to stabilize tests.
Issue #646: Labels: No Labels
Hi @PragmaTwice is there a bug? what is its danger?
Issue #645: Labels: No Labels
Probably we could switch from cppcheck to clang tidy for static analysis 🤣 
Issue #644: Labels: No Labels
Thanks everyone! Merging...
Issue #643: Labels: No Labels
Issue #642: Labels: bug, release notes
Thanks for your contribution again @fishery86
Issue #641: Labels: No Labels
Issue #640: Labels: bug
Issue #639: Labels: bug
RocksDB will only have one "writeable" memtable, on default, it will be a lock-free skiplist. And when it\
Issue #638: Labels: No Labels
Issue #637: Labels: enhancement, help wanted
This improvement makes sense to me
Issue #636: Labels: No Labels
Issue #635: Labels: No Labels
Required CI name changed. Perhaps We can update `.asf.yaml` first.
Issue #634: Labels: No Labels
@PragmaTwice PTAL
Issue #633: Labels: bug
I would like to fix this issue.
Issue #632: Labels: No Labels
Thanks for @GoGim1 contribution.
Issue #630: Labels: No Labels
Wow, thanks for your great work,
Issue #628: Labels: No Labels
LGTM, it seems, in cloud environments, we may encounter this error.
Issue #627: Labels: bug
Issue #626: Labels: No Labels
Thanks for your contribution!
Issue #624: Labels: enhancement
Issue #623: Labels: enhancement, help wanted
Thanks @tisonkun, the original designer has helped to update the logo, will submit soon.
Issue #622: Labels: enhancement
Sounds reasonable :)
Issue #621: Labels: enhancement
Issue #620: Labels: bug, release notes
Issue #619: Labels: No Labels
Issue #618: Labels: No Labels
Merging...\r\n\r\nFWIW a discussion (#615) cannot be resolved. You may create an issue from the discussion the next time.
Issue #617: Labels: A-ci
@ShooterIT So quickly.
Issue #616: Labels: bug
Issue #614: Labels: No Labels
There are some weird problem in the default xcode toolchains (i.e. apple clang):\r\n```\r\n$ echo "#include <assert.h>" | /Applications/Xcode_13.2.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -c -\r\nclang: warning: treating \
Issue #613: Labels: feature, release notes
This CI failure seems was related to issue: https://github.com/google/snappy/pull/128, will investigate why it only happens in current PR(maybe the GCC version was updated).
Issue #612: Labels: enhancement
Issue #611: Labels: No Labels
Is there some background of this change, e.g., a linked issue?
Issue #610: Labels: No Labels
@WyattJia please also check again\r\n```\r\n  options->max_bytes_for_level_base = config_->RocksDB.max_bytes_for_level_base * MiB;\r\n```\r\nneed to remove `* MiB`\r\n
Issue #609: Labels: bug
Cool, Thanks for Twice great investigation.
Issue #608: Labels: No Labels
Thanks @PragmaTwice 
Issue #607: Labels: bug
@luger1990 Thanks for your feedback. Did you install the snappy library on your machine?
Issue #606: Labels: bug, release notes
Issue #605: Labels: No Labels
> @PragmaTwice could you share the ASan report before and after this change?\r\n\r\nThe ASan report before this is about 6MiB, I will soon find a way to upload. Seems reach the size limit in GitHub?
Issue #603: Labels: bug
Sorry for forgetting to add more information. From the ip, we can see it crashed\r\nat [src/server.cc:496](https://github.com/apache/incubator-kvrocks/blob/v2.0.6/src/server.cc#L496):\r\n\r\n> addr2line -e /www/kvrocks/bin/kvrocks 0x00000000004eecfc\r\n\r\n/__w/kvrocks/kvrocks/src/server.cc:496\r\n\r\ncc @ShooterIT @tisonkun 
Issue #602: Labels: enhancement
Issue #601: Labels: enhancement
Cool, agreed.\r\n\r\nthe compression ration and performance are better than `snappy`\r\nin many scenarios. Someone also requests this feature if my memory serves.
Issue #600: Labels: bug
@joeylichang Can you have a try at the latest version, it should be fixed at: https://github.com/apache/incubator-kvrocks/commit/f3a1fb54526b30734737d814eb39994c34421c6b
Issue #599: Labels: No Labels
`./unittest` aborted while executed with AddressSanitizer:\r\n```\r\nSUMMARY: AddressSanitizer: 11268648 byte(s) leaked in 67853 allocation(s).\r\n```
Issue #598: Labels: enhancement
Issue #596: Labels: No Labels
Issue #595: Labels: enhancement, help wanted, good first issue
Here an issue #456 is needed to resolve\r\n\r\nmove comments from @PragmaTwice  to #456 to trace
Issue #594: Labels: enhancement, release notes
Thanks @torwig, we can use `popMulti` to implement the `pop` as well? since I think pop is the special condition for popMulti.
Issue #593: Labels: No Labels
Issue #592: Labels: No Labels
I first try to use `find_library` to find `libstdc++.a`, but in some environment (like github actions), cmake cannot find it via `find_library` but `gcc -static-libstdc++` actually works.\r\nSo I change the method to `try_compile`, the command will try to compile source files with some special compile&link options to test whether these options exist and work well.
Issue #590: Labels: enhancement
cool, thanks, l like this idea. And we can also run tests with ASan and TSan in daily CI.
Issue #589: Labels: enhancement
+1
Issue #588: Labels: No Labels
FWIW we may not use GitHub Actions to do the release work. At least the artifacts should go to Apache distribution file server.
Issue #587: Labels: bug
Could you provide the full error log? i.e. the full output of `cmake -DCMAKE_VERBOSE_MAKEFILE=ON ..; make` in a fresh build directory (e.g. empty dir). Thanks!\r\nIt is sad that I do not have any device with apple silicon. 😢 
Issue #586: Labels: enhancement, release notes
I cannot reproduce the test error of github actions on my local, could you check it for whether it is about the PR or not? Thanks! @git-hulk 
Issue #585: Labels: bug
thanks @tisonkun change my title to english\r\n\r\nI found the cause of the problem. The redis-7xx version does not support the command `SENTINEL slaves`, just replace it with redis-6xx
Issue #584: Labels: enhancement, release notes
The biggest problem we need to solve is how to compile these compression algorithms. 
Issue #583: Labels: No Labels
@PragmaTwice can u have a look at this fix?
Issue #582: Labels: bug
Issue #581: Labels: enhancement
Closed as no more insights here. If you find more patterns to adopt, feel free to start a new initiative.
Issue #580: Labels: enhancement
Issue #579: Labels: No Labels
Thanks @PragmaTwice 👍 
Issue #578: Labels: No Labels
Thanks for your review! This patch is trivial. Merging...
Issue #577: Labels: feature, release notes
Thanks @torwig.\r\n\r\nNo worry, I can add test cases before merging.
Issue #576: Labels: No Labels
@PragmaTwice we may still keep some targets in Makefile such as lints to running checker.\r\n\r\nIn a separated pass we can consider whether adopt Makefile to do such job or port them in scripts or other approaches.\r\n\r\nNOTICE: CI failed because of `make lint` missing a Makefile.
Issue #575: Labels: enhancement
Can you locate `libstdc++.a` in your environment?\r\nRefer to [here](https://www.linuxquestions.org/questions/fedora-35/fedora-22-ld-cannot-find-lstdc-4175555440/), the command in fedora maybe `dnf provides */libstdc++.a`, and you could try to install `libstdc++-static`.\r\n\r\nhttps://unix.stackexchange.com/questions/416875/fedora-27-usr-bin-ld-cannot-find-lstdc
Issue #574: Labels: enhancement
+1
Issue #573: Labels: No Labels
Good catch
Issue #572: Labels: enhancement
Issue #571: Labels: No Labels
Thanks for the timely review, I will put forward any ideas in time.
Issue #570: Labels: No Labels
do you have core dump stack trace?
Issue #569: Labels: No Labels
Issue #568: Labels: No Labels
Issue #567: Labels: No Labels
Closed as conflict and no activities. @Hexiaoqiao you may open another PR to finish the task based on the nightly default branch.
Issue #566: Labels: No Labels
Issue #565: Labels: A-ci
Issue #564: Labels: No Labels
After this PR, the cmake build process will not depend on any files in the `externel` directory. However, in order to make Makefiles still work, I will restore the `externel` directory (which is currently deleted in this pr).
Issue #563: Labels: No Labels
Issue #562: Labels: enhancement
I noticed that this project also maintains handwritten Makefiles, \r\nis it acceptable to keep cmake and delete the handwritten Makefiles?\r\n\r\nI think keeping only cmake will reduce the maintenance cost.
Issue #561: Labels: No Labels
+1, other guys also suffered this problem, I think we can reintroduce `gtest` to make the build process easier.
Issue #560: Labels: No Labels
+1, really cool.
Issue #559: Labels: No Labels
Current solution is not a good idea. But i think kvrocks should provide a way to start without conf file. i.e. without `-c xxx.conf`, this makes it easy to try.
Issue #558: Labels: No Labels
Issue #557: Labels: No Labels
Issue #556: Labels: No Labels
I\
Issue #555: Labels: No Labels
Issue #554: Labels: enhancement, feature
Issue #553: Labels: No Labels
Issue #552: Labels: No Labels
Kvrocks supports rich Redis data types, some of which support range related APIs, like `zrange`, `lrange` etc, which you can find [here](https://github.com/apache/incubator-kvrocks/wiki/Support-Commands). Kvrocks implements the above APIs based on the rocksdb range APIs.
Issue #551: Labels: No Labels
@git-hulk Thanks for your review. And sorry to overwrite your update since I followed mail list only but not take care the latest commit. Anyway the latest commit fix issue mentioned above. Thanks.
Issue #550: Labels: enhancement, A-build
@foxdalas Thanks for your contribution. No worry about the failure of CI tests, will find the root cause and fix it later.
Issue #549: Labels: No Labels
Thanks @liuqian1990 feedback. \r\n\r\nThe String::getValues also clears the input values when calling the function `getRawValues`. 
Issue #548: Labels: No Labels
cc @Hexiaoqiao @git-hulk 
Issue #547: Labels: No Labels
Issue #546: Labels: No Labels
cool, thanks @adulau 
Issue #545: Labels: No Labels
cc @git-hulk @Hexiaoqiao 
Issue #544: Labels: No Labels
Issue #543: Labels: No Labels
Issue #542: Labels: No Labels
Issue #541: Labels: No Labels
@ygmyth Feel free to reopen if you have any question.
Issue #540: Labels: No Labels
Issue #539: Labels: bug, release notes
Issue #538: Labels: bug, release notes, major decision
@ShooterIT Need to add the License Header for new files
Issue #537: Labels: No Labels
Issue #536: Labels: No Labels
@supermy Thanks for your feedback. Did you install the jemalloc on you side? 
Issue #535: Labels: No Labels
I think this idea makes sense. I ever also wanted to support it, this feature may bring many advantages\r\n- If there are some small disks, we also could provide big db\r\n- As we know, now there are many storage media with different speeds, such as AEP, SSD, HDD, we can store low level data on the fast storage, to gain better performance.\r\n- In cloud environment, we could use local disk and remote storage simultaneously.\r\n\r\nSome related problems\r\n- Multi db paths bring troubles to maintain database storage.\r\n- For backup, it may bring some problems, since we may not just use hard link for rocksdb backup\r\n- Similar with backup, full replication needs also one checkpoint. And replica needs to handle how to store checkpoint of master.\r\n\r\nPS: to acquire more people concerns, l add descriptions  in English, please correct me if I have misunderstandings
Issue #534: Labels: No Labels
@VictorCam Thanks for your report\r\nthere are two difference with redis, i find\r\n- return value is string instead of integer, the reason is here https://github.com/KvrocksLabs/kvrocks/discussions/417\r\n- From code, Kvrocks currently only support "prefix" match, so it return 0 when `match *he*`, for this, we can support it i think, even it may be inefficient.
Issue #533: Labels: No Labels
In #530, all contributors agree to change license to Apache 2.0
Issue #532: Labels: No Labels
We want to use one and simple storage and in-memory. Kafka is too complicity and for one function need a dedicated system and infrastructure (for us).  
Issue #531: Labels: feature, release notes
Cool, thanks for your great contribution!
Issue #530: Labels: No Labels
Approved
Issue #529: Labels: No Labels
@ChrisZMF you may separate the fix typo part into a dedicated patch and resolve the conflict so that we can continue reviewing this patch :)
Issue #528: Labels: No Labels
thank u.
Issue #527: Labels: No Labels
CI also failed 🙃
Issue #526: Labels: No Labels
Issue #525: Labels: No Labels
Hi @ColinChamber #478  wishes to put log to stdout instead of stderr.
Issue #524: Labels: No Labels
Issue #523: Labels: No Labels
Cool, can u help to add more information about the design of this fix.
Issue #522: Labels: No Labels
Issue #521: Labels: No Labels
Issue #520: Labels: No Labels
Issue #519: Labels: No Labels
Yes, but it seems ok for most scenes, implementation in this way can keep the code more clean and simple.
Issue #518: Labels: bug
Issue #517: Labels: feature, release notes
Issue #516: Labels: A-build
Do you install dependencies first, seems missing the libtool:\r\n\r\n```shell\r\nsudo apt-get install gcc g++ make libsnappy-dev autoconf automake libtool which libgtest-dev\r\n```
Issue #515: Labels: bug, release notes
@patpatbear Thanks for your contribution, cheers!
Issue #514: Labels: No Labels
> LGTM, for `CheckResponseOnce`, I think we should return status instead of boolean since we need to propagate the status to callers. But it should not refactor in this PR, just for reminding.\r\n\r\nGot it, it should be refactored in the future PR.
Issue #513: Labels: No Labels
cool, can you help to handle this issue? @ChrisZMF 
Issue #512: Labels: No Labels
Yes, the config item `supervised` was used to interact with your supervision tree which means you need to install tools like supervisor or systemd first.
Issue #511: Labels: No Labels
Issue #510: Labels: enhancement
I will support batch slot operation for command setslot first.
Issue #509: Labels: No Labels
Will be supported as soon as possible
Issue #508: Labels: No Labels
@ShooterIT do you still need this draft? Is there an estimate to continue this patch?
Issue #507: Labels: No Labels
Issue #506: Labels: bug, release notes
Issue #505: Labels: No Labels
Issue #504: Labels: No Labels
good catch
Issue #503: Labels: bug
CC @caipengbo 
Issue #502: Labels: No Labels
I think I should append some documentation about how to install compression libraries.
Issue #501: Labels: No Labels
Issue #500: Labels: No Labels
Issue #499: Labels: No Labels
Issue #498: Labels: No Labels
@iushas Indeed, the tool is not perfect yet, would you be interested in contributing a PR?
Issue #497: Labels: feature
Cool, thanks for your contribution.
Issue #496: Labels: No Labels
Merged, thanks @patpatbear 
Issue #495: Labels: No Labels
opened new PR to unstable branch https://github.com/KvrocksLabs/kvrocks/pull/496, closing this one.
Issue #494: Labels: No Labels
also note that hash/set performance also drops on similar hot key senario.
Issue #493: Labels: No Labels
Issue #492: Labels: No Labels
Got it.\r\nAny guidelines or docs for this `namespace` feature?\r\n\r\n\r\nAll I found in `kvrocks.conf` :\r\n```\r\n################################ NAMESPACE #####################################\r\n# namespace.test change.me\r\n```\r\nHow to config mutiple-user-namespace mappings?
Issue #491: Labels: No Labels
Issue #490: Labels: No Labels
kvrocks2redis was NOT supported to migrate data kvrocks cluster directly
Issue #489: Labels: bug
Yes, thanks for your feedback. We should use `flushdb` instead of `flushall` when flushing the target db.
Issue #488: Labels: feature
Closed by #497.
Issue #487: Labels: bug
Thanks for opening this issue @ShooterIT \r\nAs of late 2021 [RocksDB supports transactions](https://github.com/facebook/rocksdb/wiki/Transactions) , such that no other threads can see the changes in a transaction until it has been committed.\r\nI didnt check the code yet but I assume they already take care of consistency also in case of a failure during the commit phase.\r\n\r\nI suggest to use the API they are providing.\r\nThis would also allow you to remove the global lock you are using to protect the EXEC stage.
Issue #486: Labels: No Labels
ok，改成 127.0.0.1 正常了。\r\n之前我改了 `tools/try_cluster/default.conf`  中 把绑定ip 改成了 0.0.0.0， 没想到 try_cluster.sh 里面还有ip设置\r\n\r\n另外吐槽一下，kvrocks 的文档太少了。\r\n\r\nhttps://github.com/KvrocksLabs/kvrocks/wiki/Kvrocks-%E9%9B%86%E7%BE%A4%E6%96%B9%E6%A1%88%E7%AE%80%E4%BB%8B\r\n\r\n集群介绍这里的示例格式并不能直接去执行，建议修改一下\r\n```\r\nCLUSTERX SETNODES\r\n  "67ed2db8d677e59ec4a4cefb06858cf2a1a89fa1 127.0.0.1 30002 master - 5461-10922 16380 16383\r\n    07c37dfeb235213a872192d90877d0cd55635b91 127.0.0.1 30004 slave 67ed2db8d677e59ec4a4cefb06858cf2a1a89fa1"\r\n  1\r\n```\r\n- `CLUSTERX SETNODES` 后面没有换行\r\n- 不能进入redis-cli 里面再执行，必须在外面 `redis-cli -h 127.0.0.1 -p 30001 clusterx setnodes "节点配置，一行一个"  1`\r\n\r\n不看try_cluster.sh  根本不知道\r\n\r\n
Issue #485: Labels: No Labels
I have an idea for this issue that we can recognize SHA or literal name with the name length.\r\n\r\n* For creating, when the name length was equal to 40 chars, use it directly as raw function name, or hash(name) to fixed 40 chars.\r\n* For looking, when the name length was 40, use it as key directly, or use hash(name) as key.\r\n
Issue #484: Labels: No Labels
done via https://github.com/apache/incubator-kvrocks/pull/1303
Issue #479: Labels: No Labels
Issue #478: Labels: No Labels
https://github.com/google/glog/pull/790 has supported logging to stdout, but need to wait for release.
Issue #473: Labels: No Labels
Issue #472: Labels: bug, release notes
Issue #471: Labels: enhancement, feature, release notes
@ColinChamber Yeah, the key order was easy to change, what i think was to seek out all fragments and apply the operator on those fragments without depending on the key order.
Issue #470: Labels: No Labels
Issue #469: Labels: No Labels
FYI @ChrisZMF 
Issue #468: Labels: No Labels
Issue #467: Labels: No Labels
FYI @ColinChamber 
Issue #465: Labels: bug, release notes
Merged, thanks @ColinChamber 
Issue #464: Labels: No Labels
Issue #463: Labels: release notes, A-cluster
Issue #462: Labels: bug
@shangxiaoxiong is it related with your findings?
Issue #461: Labels: bug, release notes
Issue #460: Labels: No Labels
TCL test script failed:  tests/unit/pubsub.tcl  
Issue #459: Labels: No Labels
> We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\r\n\r\nYes, this is our goal❤️
Issue #458: Labels: No Labels
Issue #457: Labels: No Labels
Do you mean can we monitor the number of expired key numbers?
Issue #456: Labels: good first issue
@guoxiangCN has no spare time to do that, if someone wants to do that, go ahead
Issue #455: Labels: No Labels
thanks, merged!
Issue #454: Labels: No Labels
Ok, I will fix it today.
Issue #453: Labels: No Labels
Resolved in #452
Issue #452: Labels: No Labels
Redis with the right version should be installed to ensure that tcl tests pass. I failed on my mac. @git-hulk \r\nThere may be no corresponding installation package in some env.
Issue #451: Labels: No Labels
@bisho Fixed, can have a try again. For excluding `psync`, can modify it after importing since it would be strange to remove it from the basic template.
Issue #450: Labels: No Labels
@git-hulk First step, i want to support compile, currently, macOS leaks tool reports some errors and i have no idea to resolve, so i just remove `test tcl` in macOS CI, we can add it into daily CI and resolve it gradually. WDYT?
Issue #449: Labels: No Labels
Issue #448: Labels: No Labels
Maybe we can have a try at Ubuntu with enabling the thread sanitizer.
Issue #447: Labels: No Labels
cool, many thanks for @ColinChamber doing this improvement.
Issue #446: Labels: bug, release notes
Issue #445: Labels: No Labels
@calvinxiao cool, can also help to fix the size in the metadata should be 4 bytes instead of 8 bytes.
Issue #444: Labels: No Labels
l found a bug through test and l am locating
Issue #443: Labels: No Labels
Issue #442: Labels: No Labels
Happy New Year! Best wishes to the Kvrocks community!
Issue #441: Labels: No Labels
Issue #440: Labels: bug, release notes
> Thanks @calvinxiao , cool job. I add some comments, please have a look.\r\n> \r\n> @git-hulk We should add memory and thread sanitizer to CI ASAP.\r\n\r\nyeah
Issue #439: Labels: No Labels
Issue #438: Labels: enhancement, release notes
Issue #437: Labels: No Labels
Have you tried to modify the `dir` item in the configuration file?
Issue #436: Labels: No Labels
Allow to run the CI with jemalloc, but I think we should only run it manually labelled with `run ci without jemalloc` like the current PR. HDYT @ShooterIT 
Issue #435: Labels: release notes
Issue #434: Labels: bug, release notes
Good Catch!
Issue #433: Labels: enhancement
@iushas Thanks for your feedback, would add more informations for bgsave soon.
Issue #432: Labels: No Labels
Issue #431: Labels: No Labels
thanks @fishery86 currently code also is fine to me.\r\n\r\nBut there are remaining jobs after merging\r\n\r\n- [ ] Test kvrocks2redis (include  converting sortedint to zset) , and add tests into CI jobs\r\n- [ ] Update kvrocks2redis readme.md for converting sortedint to zset implicitly\r\n\r\n could you do these jobs? @fishery86  or @caipengbo 
Issue #430: Labels: No Labels
@ChrisZMF  Please resolve conflicts （related to kvrocks2redis）
Issue #429: Labels: bug, release notes
Issue #428: Labels: No Labels
复现过程：主从切换后，新的master会发生上述问题\r\n\r\n环境：version 2.0.4 ，一主一从 ， 接了sentinel监控\r\n\r\n1、查看配置正常\r\nroot@redis-kvsenior02-290041:/home/redis/data/conf# cat kvrocks.conf\r\n```\r\n# server\r\nbind                           7.33.107.212 10.91.38.110 127.0.0.1\r\n\r\n# rename\r\n\r\n\r\n# autofailover\r\nslaveof 7.33.106.212 6379\r\nslave-serve-stale-data         yes\r\nslave-read-only                yes\r\n\r\n\r\n\r\n# rename\r\nrename-command flushall                            290041_dont_run_flushall_rudely\r\nrename-command flushdb                             290041_dont_run_flushdb_rudely\r\nrename-command bgsave                              290041_dont_run_bgsave_rudely\r\nrename-command shutdown                            290041_dont_run_shutdown_rudely\r\nrename-command keys                                290041_dont_run_keys_rudely\r\nrename-command debug                               290041_dont_run_debug_rudely\r\nrename-command compact                             290041_dont_run_compact_rudely\r\n\r\n# server\r\nport                                               6379\r\ntimeout                                            0\r\nworkers                                            1\r\n...\r\n```\r\n2、手动执行slaveof no one 和切换 。 \r\n  * 这里有两个问题， slaveof no one后发现角色还是slave。 \r\n  * 再次执行slaveof no one ，变为了master\r\n```\r\nroot@redis-kvsenior02-290041:/home/redis/data/conf# redis-cli\r\ncann\
Issue #427: Labels: No Labels
resolved in #431
Issue #426: Labels: No Labels
Issue #425: Labels: bug
Issue #424: Labels: No Labels
Resolved by #555, sorry for forgetting to mention and close this issue in the PR.
Issue #423: Labels: release notes
Issue #422: Labels: enhancement
Issue #421: Labels: No Labels
Issue #420: Labels: No Labels
Issue #419: Labels: No Labels
Issue #418: Labels: release notes
Issue #415: Labels: release notes
lgtm, cool job!\r\n\r\nAfter merging this PR, i think we should support EXAT PXAT options for SET and CAS, since these options are frequently-used and friendly, WDYT? @caipengbo @git-hulk 
Issue #414: Labels: No Labels
Organization: Coinindex Ltd\r\nLocation: London, UK, Kiev, Ukraine\r\nContact：raiden@coinindex.agency\r\nPurpose: KV-storage and real-time PubSub bus for crypto/non-crypto fintech projects (market data aggregation, trading)\r\nFeature: hash fields expiration, latest rocksdb version, re-implement new features from redis 7.0rc1
Issue #413: Labels: release notes
Issue #412: Labels: feature, release notes, major decision, A-cluster
Since we encode slot id into key only when enabling cluster mode, so i think we should only support slot migration in cluster mode, and the migrate command should be consistent with cluster command.\r\n\r\ni prefer to use CLUSTER subcommand to implement slot migration instead of separate commands , see also redis issue https://github.com/redis/redis/issues/2807 and in redis cluster v2 project https://github.com/redis/redis/issues/8948, they also want to support this.
Issue #411: Labels: No Labels
Issue #410: Labels: No Labels
Issue #409: Labels: feature
Twemproxy and Codis also have the same issue, and RedisShake supports parsing the restore command to AOF: https://github.com/alibaba/RedisShake/wiki/FAQ#q-does-redisshake-supports-codis-and-twemproxy
Issue #408: Labels: No Labels
Can deal with part of the #283 
Issue #407: Labels: release notes, major decision
Meta data is mostly a point-query scenario, subkey is often a range query. Can we use only row cache in meta and only block cache in subkey?
Issue #406: Labels: No Labels
Issue #405: Labels: No Labels
I think we can close this issue since we have already done them.
Issue #404: Labels: No Labels
Issue #403: Labels: No Labels
Issue #402: Labels: No Labels
Issue #401: Labels: No Labels
ping @caipengbo 
Issue #396: Labels: release notes
> should we also show "io_stalls.total_slowdown" and "io_stalls.total_stop"\r\n\r\n@ShooterIT I don\
Issue #395: Labels: release notes
Really good feature, some users also look forward to the blob store. https://github.com/KvrocksLabs/kvrocks/issues/366
Issue #394: Labels: No Labels
close this for repeated #393 
Issue #393: Labels: No Labels
WOW, many thanks for @singgel contribution.
Issue #392: Labels: No Labels
Issue #391: Labels: No Labels
Issue #390: Labels: A-docs
Issue #387: Labels: enhancement
great idea!\r\ncould you add some tcl tests?
Issue #386: Labels: No Labels
Issue #385: Labels: No Labels
why did you close it? want to update something?
Issue #384: Labels: No Labels
Looks fine for me
Issue #383: Labels: No Labels
The word `logo` is spelt incorrectly in the title.
Issue #382: Labels: No Labels
Issue #381: Labels: feature, release notes
Thanks @nioshield merged
Issue #380: Labels: No Labels
How do you think @KvrocksLabs/committers 
Issue #379: Labels: No Labels
Issue #378: Labels: No Labels
The reason about UT failed is that I forgot to call `PopulateCommands` before calling `Redis::IsCommandExists()`, causing `original_commands` to be empty.
Issue #377: Labels: No Labels
like cleaning up
Issue #376: Labels: No Labels
For the command `flushdb`, it would delete all keys in the current namespace(which was determined by the auth token) and NOT affect other namespaces.
Issue #375: Labels: No Labels
Tests will be added in the next PR.
Issue #374: Labels: No Labels
Issue #373: Labels: No Labels
cool,  really speedy.
Issue #372: Labels: No Labels
Yes, it is a good idea to turn `rocksdb.share_metadata_and_subkey_block_cache` to `yes` by default.
Issue #371: Labels: bug
Issue #370: Labels: No Labels
需要补充一下，对应执行的时候， Redis monitor 返回结果是什么，kvrocks  返回结果是什么
Issue #369: Labels: feature, release notes, major decision
> A lot of comments, maybe it makes no sense, please check i think we should add more comments for some special operations, otherwise, it is hard to understand.\r\n\r\nmost advice totally made sense and was great, I have fixed them but some comments. You can have a look again.
Issue #368: Labels: bug, release notes
Issue #367: Labels: No Labels
Issue #366: Labels: No Labels
Not use blob store now but would support it after the blob store was production-ready. \r\n\r\n> The KVROCKS I use has 100 billion records ， VALUE IS 4KB BYTES ， Reading speed ( GET ) is very slow\r\n\r\nCan u show the configuration, the default metadata/subkey column family cache(2 GiB) should be too small for 100 billion records, you can have a try to increase the metadata column family: https://github.com/KvrocksLabs/kvrocks/blob/unstable/kvrocks.conf#L324 and enable the shared cache between metadata and subkey with `rocksdb.share_metadata_and_subkey_block_cache` = `yes`\r\n
Issue #365: Labels: No Labels
wow, really a good feature.
Issue #364: Labels: No Labels
Thanks dude.\r\nLooking forward to a production ready docker image, easier to roll out to cloud.
Issue #363: Labels: release notes, major decision
 Still 10,000 feet to achieve the whole functions of the Redis scripts, but at least the `eval` command works now. We would implement other scripting commands after this PR was merged.
Issue #362: Labels: No Labels
Issue #361: Labels: No Labels
Issue #360: Labels: bug, release notes
So the replica would be failed after restarting the server if we rewrite the config file, right?
Issue #358: Labels: No Labels
Issue #357: Labels: No Labels
Issue #356: Labels: release notes
Issue #355: Labels: No Labels
Thanks, we should describe that in documents, currently most commands are compatible with Redis 4.0. It is hard to support all command of Redis latest release, we will implement more commands gradually.
Issue #354: Labels: No Labels
Thanks, I also thought this question, but i did not test😜, currently we also use ext4 filesystem, XFS has better performance in some scenes, it truly worths to test, @git-hulk did you ever test for different filesystem?\r\nAnd kvrocks is based on rocksdb, maybe this is a generic questions.
Issue #353: Labels: No Labels
这是设计文档 https://github.com/KvrocksLabs/kvrocks/blob/unstable/docs/multi-tenant.CN.md\r\nnamespace会作为key的前缀存储，应该不会丢失，有没有复现的步骤
Issue #352: Labels: bug, release notes, major decision
Issue #351: Labels: No Labels
Issue #347: Labels: bug, release notes
Issue #346: Labels: bug
let me fix that, and i want to lightly refactor other somethings
Issue #345: Labels: No Labels
Issue #344: Labels: bug, release notes
After this PR, maybe this card is not urgent, https://github.com/KvrocksLabs/kvrocks/projects/1#card-62672516
Issue #343: Labels: No Labels
We still need it, because it can check indent, tab width, max line length...\r\nAs you said, `#include <glog/logging.h>` instead of `#include "glog/logging.h"` make it hard to distinguish third party lib with c system lib, maybe it is the problem of kvrocks.
Issue #342: Labels: No Labels
cpplint is replaced with clang-format and clang-tidy in #800.\r\n\r\nClosed as invalid.
Issue #341: Labels: bug
What version are you using? Maybe this PR #284 fixed this problem, the latest version 2.0.2 that has this patch is released.
Issue #340: Labels: No Labels
Issue #339: Labels: No Labels
Do you mean how to shut down the kvrocks? If yes, use redis-cli to send the shutdown command.
Issue #338: Labels: enhancement
Issue #337: Labels: bug, release notes
@git-hulk @ShooterIT Do you guys remember how this atomicity was broken? Is there any example?\r\n\r\nseem the change casue this issue:\r\n```\r\n127.0.0.1:6379> flushall\r\nOK\r\n127.0.0.1:6379> msetnx k v1 k v2\r\n(integer) 1\r\n127.0.0.1:6379> get k\r\n"v2\r\n\r\n127.0.0.1:6666> flushall\r\nOK\r\n127.0.0.1:6666> msetnx k v1 k v2\r\n(integer) 0\r\n127.0.0.1:6666> get k\r\n"v1"\r\n```\r\n\r\nRedis allow we overriding the same key but kvrocks will fail in this case
Issue #336: Labels: No Labels
Issue #335: Labels: bug, release notes
good catch @smartlee
Issue #334: Labels: A-docs, enhancement
cool, thanks for your contribution. Can u help to fix issues found by cpplint?\r\n\r\n```\r\nsrc/redis_db.cc:468:  Extra space for operator  ++;  [whitespace/operators] [4]\r\nsrc/redis_hash.cc:178:  Add #include <utility> for move  [build/include_what_you_use] [4]\r\n```
Issue #333: Labels: No Labels
Issue #332: Labels: No Labels
Can u offer more information about the CPU(how many cores), Memory/Disk Type(HDD/SSD/NVMe...), as well as the benchmark command. BTW, seems you benched with the pipeline mode? It makes no sense that Redis performance up to the millilion QPS in single request mode.
Issue #331: Labels: enhancement, release notes
It is great not to link `unwind` if it is not existed, i also find this problem, cool job 💯 , from this point, i want to merge this commit into 2.0.2. But in this commit, you also changed some others. so should we open another pr to resolve `unwind` warnings?
Issue #330: Labels: No Labels
Issue #329: Labels: No Labels
I update my comments, please have a look, please tell me if you still have questions.
Issue #328: Labels: No Labels
Issue #327: Labels: No Labels
Issue #326: Labels: No Labels
Issue #325: Labels: No Labels
Issue #324: Labels: No Labels
Issue #323: Labels: release notes
Issue #322: Labels: No Labels
It makes no sense to compare the Kvrocks with Redis directly since the storage and thread model was totally different. We have a simple performance benchmark on README: https://github.com/KvrocksLabs/kvrocks#performance, from the throughput side, the Kvrocks would be better than Redis in many commands.
Issue #321: Labels: release notes
thanks, merged
Issue #320: Labels: No Labels
Issue #317: Labels: enhancement, feature
@smartlee I have added more detailed information and high IO was expected in this scene. `repl-timeout` should be another issue, can u help to describe the context about when and why we need it.
Issue #316: Labels: release notes
Issue #315: Labels: feature
@git-hulk any update about this feature?
Issue #314: Labels: bug, release notes
so i may ask you to add tcl test cases, the list must have not less than 20 items to `trim` some range in test cases
Issue #313: Labels: No Labels
Issue #312: Labels: good first issue
Issue #311: Labels: No Labels
Issue #310: Labels: release notes
Issue #309: Labels: No Labels
Really cool!! Have tested in ARM MacOSX?
Issue #308: Labels: No Labels
Issue #307: Labels: No Labels
Issue #306: Labels: No Labels
Issue #305: Labels: No Labels
any updates on this? I am working on a project that would make this a deal breaker. \r\n\r\nbasically RedisSearch is needed to index a high volume dataset. 
Issue #304: Labels: No Labels
Issue #303: Labels: No Labels
Issue #302: Labels: release notes, major decision
@git-hulk That is a good question, I still consider that, we must should know the nodes may keep old cluster topology if restarted. That may cause terrible things  if the IP and port are reused.
Issue #301: Labels: release notes
Just as we discussed, i record one card https://github.com/bitleak/kvrocks/projects/1#card-62672516, we should do that ASAP @bitleak/kvrocks-contributors 
Issue #300: Labels: A-docs
Thank you @git-hulk , I will modify those problems and update the contents based on latest source code.
Issue #299: Labels: No Labels
Issue #298: Labels: bug, release notes
Many thanks for @smartlee finding this issue
Issue #297: Labels: No Labels
 this is manual trigger by the auto background compaction thread? \r\n ```` \r\n Finally, we recycle those old versions key-values in the background compaction thread\r\n ````\r\nbasically u are saying u perform a "fast delete" BUT there\
Issue #296: Labels: No Labels
You may aslo need to fix `PUBLISH/PSUBSCRIBE after PUNSUBSCRIBE without arguments` test\r\n\r\n> `punsubscribe $rd1`
Issue #295: Labels: No Labels
Issue #294: Labels: release notes
Issue #293: Labels: bug
Now, It works good. Thank you all!
Issue #292: Labels: bug
cool, thanks for finding out about this issue, do you want to create a PR to fix it?
Issue #291: Labels: release notes, major decision
@shangxiaoxiong Maybe you should add a new rocksdb CF to identify cluster mode and check if it is safe to enable/disable cluster mode in config file. WDYT?
Issue #290: Labels: No Labels
Issue #289: Labels: bug, release notes
auto resize block_size will be added in another PR (rocksdb 6.18.0 add this feature https://github.com/facebook/rocksdb/pull/7936)
Issue #288: Labels: No Labels
Issue #287: Labels: bug
Issue #286: Labels: No Labels
I think we maybe should provide one config to enable auto-adjust of the write_buffer_size  and memtable, instead of always enable, because, users maybe have their own method or optimization strategy such as munual config
Issue #285: Labels: release notes, major decision
Issue #284: Labels: bug, release notes
Very cool for finding out such a corner case in replication. I have a question that the master should transmit the TCP `fin` packet to the slave after closing the connection, and the slave would get an `EOF` if it reads the fd(write operation would get the broken pipe error), right?
Issue #283: Labels: feature
Issue #282: Labels: No Labels
@git-hulk oh, thanks, i missed this, let me fix
Issue #281: Labels: No Labels
It may affect the performance since we use the read lock when executing commands, right? We can have a simple benchmark before merging.
Issue #280: Labels: No Labels
For me, it is ok, actually, I also want to remove it, but just one concern, old version maybe need this tool?
Issue #279: Labels: No Labels
Issue #278: Labels: major decision
Issue #277: Labels: No Labels
Issue #276: Labels: No Labels
Issue #275: Labels: No Labels
Thanks!\r\nand Thank you for nice KVROCKS open source.
Issue #274: Labels: release notes
Issue #273: Labels: No Labels
wow !! \r\n
Issue #272: Labels: feature, release notes
@karelrooted And could you supplement some tcl tests
Issue #271: Labels: No Labels
Maybe this way should be default way in CI, or one job
Issue #270: Labels: release notes, major decision
cool~ @bitleak/kvrocks-core-team 
Issue #269: Labels: No Labels
Really cool!!!
Issue #268: Labels: No Labels
Issue #267: Labels: No Labels
Issue #266: Labels: No Labels
Issue #265: Labels: bug, release notes
Issue #264: Labels: enhancement, release notes
cool, i always want it 
Issue #263: Labels: No Labels
https://github.com/bitleak/kvrocks/runs/2584412916?check_suite_focus=true#step:4:1795\r\nhi @git-hulk do you know why
Issue #262: Labels: No Labels
WoW, I love this PR!
Issue #261: Labels: bug
@Mergifyio backport 1.3
Issue #260: Labels: bug, release notes
cool, do you mean that got a stale manifest number when adding test cases?
Issue #259: Labels: No Labels
Issue #258: Labels: No Labels
Issue #257: Labels: No Labels
Right, it will get unlocked after each loop.
Issue #256: Labels: bug
Issue #255: Labels: No Labels
Issue #254: Labels: bug, release notes
@Mergifyio backport 1.3
Issue #253: Labels: bug, enhancement, release notes
Result of this PR:\r\n\r\n1. No more warning from tsan when starting up the server\r\n2. No more warning from tsan when `make test`\r\n3. All tests passed.\r\n4. Only one warning left\r\n```\r\n==================\r\nWARNING: ThreadSanitizer: signal-unsafe call inside of a signal (pid=24508)\r\n    #0 operator new(unsigned long) <null> (libtsan.so.0+0x8c012)\r\n    #1 google::LogMessage::Init(char const*, int, int, void (google::LogMessage::*)()) <null> (kvrocks+0x2359cb)\r\n    #2 std::function<void ()>::operator()() const /usr/include/c++/9/bits/std_function.h:688 (kvrocks+0x23298d)\r\n    #3 signal_handler /home/eagle/github/my/kvrocks/src/main.cc:38 (kvrocks+0x23298d)\r\n    #4 <null> <null> (libtsan.so.0+0x2c4e3)\r\n    #5 std::thread::join() <null> (libstdc++.so.6+0xd6fe6)\r\n    #6 Server::Join() /home/eagle/github/my/kvrocks/src/server.cc:118 (kvrocks+0x1dd18f)\r\n    #7 main /home/eagle/github/my/kvrocks/src/main.cc:318 (kvrocks+0x94882)\r\n\r\nSUMMARY: ThreadSanitizer: signal-unsafe call inside of a signal (/lib/x86_64-linux-gnu/libtsan.so.0+0x8c012) in operator new(unsigned long)\r\n==================\r\n```
Issue #252: Labels: No Labels
Issue #251: Labels: feature, release notes
LGTM, not read. Could you add some tcl tests for that
Issue #250: Labels: No Labels
Issue #249: Labels: No Labels
Issue #248: Labels: enhancement
Issue #247: Labels: enhancement
Issue #246: Labels: No Labels
@Mergifyio backport 1.3
Issue #245: Labels: release notes
Issue #244: Labels: No Labels
Issue #243: Labels: No Labels
Issue #242: Labels: No Labels
Fixed in https://github.com/bitleak/kvrocks/pull/244
Issue #241: Labels: No Labels
Issue #240: Labels: No Labels
Issue #239: Labels: No Labels
Issue #238: Labels: bug, release notes
do we need a new way to implement pub/sub without rely on wal replication ?   the current solution write to db  cause  wal seq to increase (have some feedback from user that it sometimes cause a fullsync when a redis-sentinel failover is trigged, cause by "publish __sentinel:hello" message in new slave)
Issue #237: Labels: No Labels
Issue #236: Labels: release notes
@Mergifyio backport 1.3
Issue #235: Labels: No Labels
Issue #234: Labels: No Labels
Issue #233: Labels: release notes, major decision
Issue #232: Labels: release notes, major decision
Issue #231: Labels: No Labels
@Mergifyio backport 1.3
Issue #230: Labels: No Labels
@Mergifyio refresh
Issue #229: Labels: bug, release notes
related rocksdb issue: https://github.com/facebook/rocksdb/issues/8217
Issue #228: Labels: No Labels
Issue #227: Labels: No Labels
OK thanks for the clarification
Issue #226: Labels: enhancement, release notes
Successly compile on Docker centos 8.2 ( gcc 8.3.1), Docker ubuntu 20.04 (gcc  9.3.0), Mac OS 10.15.7 (cmake)
Issue #225: Labels: bug
We have confirmed that the newer version(after 6.15.1) of rocksdb has compatible with gcc9 in ubuntu20.04. @karelrooted would help to investigate whether the newer version has other issues within kvrocks, and we would upgrade the rocksdb dependence to the latest if all works well. 
Issue #224: Labels: No Labels
Issue #223: Labels: No Labels
Thanks :)
Issue #222: Labels: No Labels
Issue #221: Labels: bug, release notes
Many thanks to @karelrooted try hard to fix this hidden deep issue.
Issue #220: Labels: help wanted
For incremental backup, maybe https://github.com/bitleak/kvrocks/wiki/How-to-backup can give you a idea :)
Issue #219: Labels: release notes, major decision
Reopen for unfinished extra work
Issue #218: Labels: No Labels
Issue #217: Labels: release notes, major decision
 Awesome speed, many thanks to @karelrooted !
Issue #216: Labels: release notes
Issue #215: Labels: release notes
Issue #214: Labels: No Labels
Issue #213: Labels: release notes
Issue #212: Labels: No Labels
Issue #211: Labels: No Labels
@git-hulk Is it necessary to back port to 1.3 version? it looks like just a rare case, right?
Issue #210: Labels: No Labels
Issue #209: Labels: No Labels
`memtable_prefix_bloom_size_ratio` seems need a prefix_extractor, can it work for redis like system?
Issue #208: Labels: No Labels
Issue #207: Labels: No Labels
Issue #206: Labels: No Labels
Issue #205: Labels: release notes, major decision
Issue #204: Labels: bug, release notes
Issue #203: Labels: No Labels
Issue #202: Labels: No Labels
Issue #201: Labels: release notes
Issue #200: Labels: enhancement, release notes, major decision
Issue #199: Labels: No Labels
close #198 
Issue #198: Labels: No Labels
Issue #197: Labels: A-docs
Issue #196: Labels: No Labels
Issue #195: Labels: No Labels
Issue #194: Labels: enhancement, release notes
Issue #193: Labels: bug
Issue #192: Labels: No Labels
Issue #191: Labels: release notes
Issue #190: Labels: enhancement
Issue #189: Labels: No Labels
@git-hulk OK, i will optimize it later
Issue #188: Labels: No Labels
Issue #187: Labels: No Labels
Issue #186: Labels: No Labels
Issue #185: Labels: No Labels
Issue #184: Labels: No Labels
Issue #183: Labels: No Labels
Issue #182: Labels: No Labels
Issue #181: Labels: No Labels
awesome!!!
Issue #180: Labels: No Labels
Issue #179: Labels: No Labels
Issue #178: Labels: No Labels
Issue #177: Labels: No Labels
Issue #176: Labels: No Labels
Issue #175: Labels: release notes
Issue #174: Labels: release notes
Issue #173: Labels: No Labels
Issue #172: Labels: No Labels
Issue #171: Labels: No Labels
Issue #170: Labels: No Labels
Issue #169: Labels: No Labels
Hi @git-hulk i think you can merge firstly, and i will change my PR to resolve conflict.
Issue #168: Labels: No Labels
Issue #167: Labels: No Labels
Issue #166: Labels: No Labels
Issue #165: Labels: No Labels
Issue #164: Labels: No Labels
Issue #163: Labels: No Labels
Issue #162: Labels: No Labels
Issue #161: Labels: No Labels
Issue #160: Labels: No Labels
Issue #159: Labels: No Labels
Issue #158: Labels: No Labels
Issue #157: Labels: No Labels
Issue #156: Labels: No Labels
Issue #155: Labels: No Labels
Issue #154: Labels: No Labels
Issue #153: Labels: No Labels
Issue #152: Labels: No Labels
Issue #151: Labels: No Labels
Got it. Many thanks!
Issue #150: Labels: No Labels
Hi, this is my GCC version, installed by `apt install`:\r\n\r\n```\r\nCOLLECT_GCC=gcc\r\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper\r\nOFFLOAD_TARGET_NAMES=nvptx-none:hsa\r\nOFFLOAD_TARGET_DEFAULT=1\r\nTarget: x86_64-linux-gnu\r\nConfigured with: ../src/configure -v --with-pkgversion=\
Issue #149: Labels: No Labels
Issue #148: Labels: enhancement, feature
Issue #147: Labels: enhancement
yup, it should be easy but we have no plan now
Issue #146: Labels: No Labels
Issue #145: Labels: bug
can u help to check this issue?
Issue #144: Labels: No Labels
the key length was not limited directly, it only limits the max bulk string to  512 MiB.
Issue #143: Labels: enhancement
it’s really a good point to enhance the security by encrypting the data node. I would have a look at how can we achieve it on the kvrocks.
Issue #142: Labels: No Labels
LGTM 
Issue #141: Labels: No Labels
Issue #140: Labels: No Labels
centos 应该需要 epel 源才有 gtest, 不过不影响先合并
Issue #139: Labels: No Labels
Issue #138: Labels: No Labels
LGTM, thanks @clyang 
Issue #137: Labels: No Labels
Issue #136: Labels: No Labels
LGTM, nice~
Issue #135: Labels: No Labels
Issue #134: Labels: No Labels
Issue #133: Labels: No Labels
Issue #132: Labels: No Labels
Issue #131: Labels: No Labels
Issue #130: Labels: No Labels
Issue #129: Labels: No Labels
Issue #128: Labels: No Labels
Issue #127: Labels: No Labels
Issue #126: Labels: No Labels
Issue #125: Labels: No Labels
cool,  thanks for your excellent work! @popunit\r\n\r\nI would merge this PR after fixing warnings reported by cpplint
Issue #124: Labels: No Labels
Issue #123: Labels: good first issue
Debian9 and debian10 have the same error\r\n\r\n```\r\n[root@debian ~/kvrocks]#  ./src/kvrocks -c kvrocks.conf\r\nVersion: 1.1.28 @8e8fa5ca\r\nE0904 15:56:45.020162 26024 main.cc:305] Failed to open: IO error: No such file or directoryWhile opening a file for sequentially reading: /tmp/kvrocks/db/CURRENT: No such file or directory\r\n```\r\n
Issue #122: Labels: No Labels
Issue #121: Labels: No Labels
1. CentOS7  \r\n2. 这个命令也是同样的错\r\n3. 有安装, 之前编译rocksdb装的\r\n![image](https://user-images.githubusercontent.com/8556916/91267004-f50acd00-e7a4-11ea-8130-9f7612d53210.png)\r\n
Issue #120: Labels: No Labels
Issue #119: Labels: No Labels
Issue #118: Labels: enhancement, feature
related issue: https://github.com/facebook/rocksdb/issues/7385\r\nrelated PR: https://github.com/facebook/rocksdb/pull/7936
Issue #117: Labels: No Labels
Issue #116: Labels: No Labels
Issue #115: Labels: No Labels
Issue #114: Labels: No Labels
Issue #113: Labels: No Labels
Issue #112: Labels: No Labels
Issue #111: Labels: No Labels
Issue #110: Labels: No Labels
Issue #109: Labels: No Labels
Issue #108: Labels: No Labels
Issue #107: Labels: No Labels
Issue #106: Labels: No Labels
Issue #105: Labels: No Labels
Issue #104: Labels: No Labels
Issue #103: Labels: No Labels
Issue #102: Labels: No Labels
Issue #101: Labels: No Labels
Issue #100: Labels: No Labels
Issue #99: Labels: No Labels
compare with Redis or others? can you paste the Redis benchmark log? 
Issue #98: Labels: No Labels
LGTM
Issue #97: Labels: No Labels
Just curious, are you adding new commands which are not part of the official Redis core? 
Issue #96: Labels: No Labels
@aniruddhadas the info command supported `info rocksdb` now
Issue #95: Labels: No Labels
i see thanks @git-hulk.. does using namespace guarantee compartmentalization? or does the data in 2 different namespaces share the same memtables and ssts?
Issue #94: Labels: No Labels
Issue #93: Labels: No Labels
Issue #92: Labels: No Labels
Issue #91: Labels: No Labels
Issue #90: Labels: No Labels
Issue #89: Labels: No Labels
Issue #88: Labels: No Labels
Issue #87: Labels: No Labels
Issue #86: Labels: bug
Issue #85: Labels: No Labels
Issue #84: Labels: No Labels
Issue #83: Labels: No Labels
Issue #82: Labels: No Labels
Issue #81: Labels: No Labels
this is what is installed\r\n\r\nrpm -q -a | grep libstd\r\n\r\nlibstdc++-devel-4.8.5-4.el7.x86_64\r\nlibstdc++-4.8.5-4.el7.x86_64
Issue #80: Labels: No Labels
Issue #79: Labels: No Labels
Issue #78: Labels: No Labels
Issue #77: Labels: No Labels
Issue #76: Labels: No Labels
Issue #75: Labels: No Labels
Issue #74: Labels: No Labels
Issue #73: Labels: No Labels
Issue #72: Labels: bug
Issue #71: Labels: No Labels
Issue #70: Labels: No Labels
Issue #69: Labels: No Labels
Issue #68: Labels: bug
这里确实是会有死锁的可能性
Issue #67: Labels: No Labels
@smartlee 所有写入的地方需要生成版本，比如 Hash::IncrBy,  之前所有Metadata的实例化直接调用了generateVersion （即使是读的不需要的地方也合成了版本）\r\n
Issue #66: Labels: enhancement
Issue #65: Labels: No Labels
Issue #64: Labels: No Labels
这个看起来不是 kvrocks 的堆栈来着
Issue #63: Labels: No Labels
欢迎，这两个东西建议拆分提
Issue #62: Labels: bug
@smartlee 可以帮忙提供一下问题和复现步骤
Issue #61: Labels: bug
Issue #60: Labels: No Labels
Issue #59: Labels: enhancement
Issue #58: Labels: No Labels
Issue #57: Labels: No Labels
这个不太应该，我之前测试数据来看性能是差不多。你看看配置的worker 线程数是否一直，kvrocks 默认只有 4
Issue #56: Labels: No Labels
你这个是在同步的时候手动删除 backup 目录吗, 另外你是主库和从库配置到同一个数目么，这个从库的错误看起来的 dir 名字是 master
Issue #55: Labels: bug
Issue #54: Labels: No Labels
这个看起来是 gflags 在分配内存的时候 jemalloc 死锁了，麻烦帮忙执行：\r\n```\r\nthread apply all bt\r\n```\r\n提供一下完整的堆栈，然后可以尝试把 docker 基础镜像中的 gflags 依赖库去掉
Issue #53: Labels: No Labels
@smartlee 在 kvrocks 这层目录编译，不要进入 src
Issue #52: Labels: No Labels
Issue #51: Labels: No Labels
LGTM
Issue #50: Labels: No Labels
Issue #49: Labels: No Labels
Issue #48: Labels: enhancement
Issue #47: Labels: No Labels
Issue #46: Labels: bug
Issue #45: Labels: No Labels
Issue #44: Labels: No Labels
Issue #43: Labels: No Labels
Issue #42: Labels: No Labels
Issue #41: Labels: No Labels
Issue #40: Labels: enhancement
Issue #39: Labels: No Labels
Issue #38: Labels: No Labels
Issue #37: Labels: No Labels
Issue #36: Labels: No Labels
Issue #35: Labels: No Labels
Issue #34: Labels: No Labels
Issue #33: Labels: No Labels
Issue #32: Labels: No Labels
Issue #31: Labels: No Labels
Issue #30: Labels: No Labels
Close this stale issue and can reopen a new one if needed.
Issue #29: Labels: No Labels
Issue #28: Labels: No Labels
Issue #27: Labels: No Labels
Issue #26: Labels: bug
Issue #25: Labels: No Labels
Issue #24: Labels: No Labels
Issue #23: Labels: No Labels
Issue #22: Labels: No Labels
LGTM
Issue #21: Labels: No Labels
Issue #20: Labels: No Labels
Issue #19: Labels: No Labels
Issue #18: Labels: enhancement
Issue #17: Labels: No Labels
Issue #16: Labels: feature
LGTM
Issue #15: Labels: No Labels
Issue #14: Labels: No Labels
LGTM
Issue #13: Labels: No Labels
Issue #12: Labels: enhancement
LGTM
Issue #11: Labels: bug
Issue #10: Labels: No Labels
Thanks for answering. Closing this issue.
Issue #9: Labels: No Labels
Issue #8: Labels: No Labels
Issue #7: Labels: No Labels
Issue #6: Labels: enhancement
Issue #5: Labels: bug
Issue #4: Labels: bug
Issue #3: Labels: No Labels
Your docs say it supports hscan, and I did a one-off test to see it worked with 1 element. Perhaps this test may reveal a corner case your code fails at.
Issue #2: Labels: No Labels
fixed, https://github.com/meitu/kvrocks/commit/99fccfe5fef540568cb49667b415a652ca7de300
Issue #1: Labels: No Labels