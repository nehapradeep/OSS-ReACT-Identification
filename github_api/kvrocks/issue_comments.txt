Comments for Issue 2790: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2657404331', 'html_url': 'https://github.com/apache/kvrocks/pull/2790#issuecomment-2657404331', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2790', 'id': 2657404331, 'node_id': 'IC_kwDODBGmlM6eZMWr', 'user': {'login': 'sonarqubecloud[bot]', 'id': 39514782, 'node_id': 'MDM6Qm90Mzk1MTQ3ODI=', 'avatar_url': 'https://avatars.githubusercontent.com/in/12526?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D', 'html_url': 'https://github.com/apps/sonarqubecloud', 'followers_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/received_events', 'type': 'Bot', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-13T18:22:28Z', 'updated_at': '2025-02-13T18:22:28Z', 'author_association': 'NONE', 'body': "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=apache_kvrocks&pullRequest=2790) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=apache_kvrocks&pullRequest=2790&issueStatuses=OPEN,CONFIRMED&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/project/issues?id=apache_kvrocks&pullRequest=2790&issueStatuses=ACCEPTED)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=apache_kvrocks&pullRequest=2790&issueStatuses=OPEN,CONFIRMED&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0.0% Coverage on New Code](https://sonarcloud.io/component_measures?id=apache_kvrocks&pullRequest=2790&metric=new_coverage&view=list)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0.0% Duplication on New Code](https://sonarcloud.io/component_measures?id=apache_kvrocks&pullRequest=2790&metric=new_duplicated_lines_density&view=list)  \n  \n[See analysis details on SonarQube Cloud](https://sonarcloud.io/dashboard?id=apache_kvrocks&pullRequest=2790)\n\n", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2657404331/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': {'id': 12526, 'client_id': 'Iv1.dc610988574d1724', 'slug': 'sonarqubecloud', 'node_id': 'MDM6QXBwMTI1MjY=', 'owner': {'login': 'SonarSource', 'id': 545988, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjU0NTk4OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/545988?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/SonarSource', 'html_url': 'https://github.com/SonarSource', 'followers_url': 'https://api.github.com/users/SonarSource/followers', 'following_url': 'https://api.github.com/users/SonarSource/following{/other_user}', 'gists_url': 'https://api.github.com/users/SonarSource/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/SonarSource/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/SonarSource/subscriptions', 'organizations_url': 'https://api.github.com/users/SonarSource/orgs', 'repos_url': 'https://api.github.com/users/SonarSource/repos', 'events_url': 'https://api.github.com/users/SonarSource/events{/privacy}', 'received_events_url': 'https://api.github.com/users/SonarSource/received_events', 'type': 'Organization', 'user_view_type': 'public', 'site_admin': False}, 'name': 'SonarQubeCloud', 'description': "\r\nSonarQube Cloud (formerly SonarCloud) is a SaaS code analysis tool designed to detect coding issues in 30+ languages, frameworks, and IaC platforms.Your code is checked against an extensive set of rules that cover many attributes of code, such as maintainability, reliability, and security issues, on each merge/pull request.\r\n\r\nSonarQube Cloud integrates seamlessly into your GitHub workflow and provides clear guidance for resolving any code quality and security issues detected. The majority of popular languages can be analyzed automatically; no configuration is required!\r\n\r\nWith [SonarQube Cloud](https://sonarcloud.io/github), you get:\r\n\r\n-   Fast, precise static analysis and feedback on your code\r\n    \r\n-   Support for popular languages, frameworks, and IaC tools\r\n    \r\n-   Free analysis for open-source projects and private projects up to max 50k LoC\r\n    \r\n-   Automatic analysis of pull requests and branches with results reported inline\r\n    \r\n-   IDE Support with [SonarQube for IDE](https://www.sonarsource.com/products/sonarlint/) integration\r\n    \r\n-   Quality Gate (added as a GitHub check) acting at two different levels - first, preventing you from merging pull requests that contain issues - and later, helping you to release only clean, safe code\r\n    \r\n-   Sign up for SonarQube free tier and begin scanning your private and public repositories\r\n    \r\n\r\nA [GitHub Action](https://github.com/marketplace/actions/sonarcloud-scan) is available in the marketplace to make it easy for you (for projects where automatic analysis isn't available). SonarQube Cloud also integrates smoothly with Jenkins, CircleCI, TravisCI, CirrusCI, and many other tools.\r\n\r\nA free tier is available that allows you to explore the benefits of SonarQube Cloud using your public and private repositories. We also provide a no-commitment, [14-day trial](https://www.sonarsource.com/products/sonarcloud/signup/) of SonarQube Cloud Team for unlimited team members, up to 1.9M LoC, AI CodeFix recommendations, and more. No need to speak with a sales rep or request a license key - get automatic code analysis results on your private projects in minutes! Want to see more examples of SonarCloud in action? You can [explore current Open Source projects in SonarCloud](https://sonarcloud.io/explore/projects?sort=-analysis_date) that are using the [Clean as You Code](https://www.sonarsource.com/solutions/our-unique-approach/) methodology.\r\n\r\nWhat are you waiting for? SonarQube Cloud helps you consistently deliver cleaner, secure software that future developers will appreciate and your users will love. Start writing Clean Code. [Now](https://www.sonarsource.com/products/sonarcloud/signup/)!", 'external_url': 'https://sonarcloud.io', 'html_url': 'https://github.com/apps/sonarqubecloud', 'created_at': '2018-05-22T07:36:37Z', 'updated_at': '2024-12-19T05:52:18Z', 'permissions': {'checks': 'write', 'contents': 'read', 'emails': 'read', 'members': 'read', 'metadata': 'read', 'pull_requests': 'write', 'security_events': 'write', 'statuses': 'write'}, 'events': ['code_scanning_alert', 'organization', 'pull_request', 'push', 'repository']}}]
Comments for Issue 2786: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2654849317', 'html_url': 'https://github.com/apache/kvrocks/pull/2786#issuecomment-2654849317', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2786', 'id': 2654849317, 'node_id': 'IC_kwDODBGmlM6ePckl', 'user': {'login': 'aleksraiden', 'id': 65920, 'node_id': 'MDQ6VXNlcjY1OTIw', 'avatar_url': 'https://avatars.githubusercontent.com/u/65920?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/aleksraiden', 'html_url': 'https://github.com/aleksraiden', 'followers_url': 'https://api.github.com/users/aleksraiden/followers', 'following_url': 'https://api.github.com/users/aleksraiden/following{/other_user}', 'gists_url': 'https://api.github.com/users/aleksraiden/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/aleksraiden/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/aleksraiden/subscriptions', 'organizations_url': 'https://api.github.com/users/aleksraiden/orgs', 'repos_url': 'https://api.github.com/users/aleksraiden/repos', 'events_url': 'https://api.github.com/users/aleksraiden/events{/privacy}', 'received_events_url': 'https://api.github.com/users/aleksraiden/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-12T21:09:21Z', 'updated_at': '2025-02-12T21:09:21Z', 'author_association': 'CONTRIBUTOR', 'body': 'Update to 1.64.3 release with latest fix https://github.com/golangci/golangci-lint/releases/tag/v1.64.3', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2654849317/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2766: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2631284272', 'html_url': 'https://github.com/apache/kvrocks/issues/2766#issuecomment-2631284272', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2766', 'id': 2631284272, 'node_id': 'IC_kwDODBGmlM6c1jYw', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-03T15:11:55Z', 'updated_at': '2025-02-03T15:11:55Z', 'author_association': 'MEMBER', 'body': "@webfrank Thanks for your report. Which Kvrocks version you're using?", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2631284272/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2631454545', 'html_url': 'https://github.com/apache/kvrocks/issues/2766#issuecomment-2631454545', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2766', 'id': 2631454545, 'node_id': 'IC_kwDODBGmlM6c2M9R', 'user': {'login': 'webfrank', 'id': 4688664, 'node_id': 'MDQ6VXNlcjQ2ODg2NjQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4688664?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/webfrank', 'html_url': 'https://github.com/webfrank', 'followers_url': 'https://api.github.com/users/webfrank/followers', 'following_url': 'https://api.github.com/users/webfrank/following{/other_user}', 'gists_url': 'https://api.github.com/users/webfrank/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/webfrank/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/webfrank/subscriptions', 'organizations_url': 'https://api.github.com/users/webfrank/orgs', 'repos_url': 'https://api.github.com/users/webfrank/repos', 'events_url': 'https://api.github.com/users/webfrank/events{/privacy}', 'received_events_url': 'https://api.github.com/users/webfrank/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-03T16:15:41Z', 'updated_at': '2025-02-03T16:15:41Z', 'author_association': 'NONE', 'body': "Hi, I'm using latest 2.11 inside docker.\n\nAnother occurrence:\n\nI20250203 16:14:00.264371 140022818768576 compaction_checker.cc:37] [compaction checker] Compact the column family: propagate finished, result: Corruption: WriteBatch has wrong count\n\nWhenever I restart the client", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2631454545/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2632782564', 'html_url': 'https://github.com/apache/kvrocks/issues/2766#issuecomment-2632782564', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2766', 'id': 2632782564, 'node_id': 'IC_kwDODBGmlM6c7RLk', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-04T04:20:06Z', 'updated_at': '2025-02-04T04:20:06Z', 'author_association': 'MEMBER', 'body': 'Would you mind to provide detailed steps to reproduce such issue?', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2632782564/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2633071006', 'html_url': 'https://github.com/apache/kvrocks/issues/2766#issuecomment-2633071006', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2766', 'id': 2633071006, 'node_id': 'IC_kwDODBGmlM6c8Xme', 'user': {'login': 'webfrank', 'id': 4688664, 'node_id': 'MDQ6VXNlcjQ2ODg2NjQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4688664?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/webfrank', 'html_url': 'https://github.com/webfrank', 'followers_url': 'https://api.github.com/users/webfrank/followers', 'following_url': 'https://api.github.com/users/webfrank/following{/other_user}', 'gists_url': 'https://api.github.com/users/webfrank/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/webfrank/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/webfrank/subscriptions', 'organizations_url': 'https://api.github.com/users/webfrank/orgs', 'repos_url': 'https://api.github.com/users/webfrank/repos', 'events_url': 'https://api.github.com/users/webfrank/events{/privacy}', 'received_events_url': 'https://api.github.com/users/webfrank/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-04T07:19:43Z', 'updated_at': '2025-02-04T07:19:43Z', 'author_association': 'NONE', 'body': "Hi, I cannot disclose the code but I will try to extract the logic. What I'm doing is to have KVRocks in a container, one separate container for the job queue controller (the one which schedules jobs on RQ) and 6 workers nodes consuming jobs and updating KVRocks.\nWhat happens is whenever I restart one of them, kvrocks included, connection cannot be stablished and the error arise. I need to restart from scratch every time.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2633071006/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2633501521', 'html_url': 'https://github.com/apache/kvrocks/issues/2766#issuecomment-2633501521', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2766', 'id': 2633501521, 'node_id': 'IC_kwDODBGmlM6c-AtR', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-04T10:33:38Z', 'updated_at': '2025-02-04T10:33:38Z', 'author_association': 'MEMBER', 'body': '@webfrank Is this issue still living after switching to 2.10.1?', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2633501521/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2633558088', 'html_url': 'https://github.com/apache/kvrocks/issues/2766#issuecomment-2633558088', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2766', 'id': 2633558088, 'node_id': 'IC_kwDODBGmlM6c-OhI', 'user': {'login': 'webfrank', 'id': 4688664, 'node_id': 'MDQ6VXNlcjQ2ODg2NjQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4688664?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/webfrank', 'html_url': 'https://github.com/webfrank', 'followers_url': 'https://api.github.com/users/webfrank/followers', 'following_url': 'https://api.github.com/users/webfrank/following{/other_user}', 'gists_url': 'https://api.github.com/users/webfrank/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/webfrank/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/webfrank/subscriptions', 'organizations_url': 'https://api.github.com/users/webfrank/orgs', 'repos_url': 'https://api.github.com/users/webfrank/repos', 'events_url': 'https://api.github.com/users/webfrank/events{/privacy}', 'received_events_url': 'https://api.github.com/users/webfrank/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-04T10:57:36Z', 'updated_at': '2025-02-04T11:00:35Z', 'author_association': 'NONE', 'body': 'Hi, yes, same issue on 2.11.0 and 2.10.1. Now, after 4 hours of running the error appears:\n\nI20250204 09:20:33.271770 139658734335680 event_listener.cc:122] [event_listener/flush_begin] column family: default, thread_id: 10, job_id: 4, reason: Write Buffer Full\nI20250204 09:20:36.592097 139658734335680 event_listener.cc:181] [event_listener/table_file_created] column family: default, file path: /var/lib/kvrocks/db/000023.sst, file size: 56482559, job_id: 4, reason: flush, status: OK\nI20250204 09:20:36.633254 139658734335680 event_listener.cc:129] [event_listener/flush_completed] column family: default, thread_id: 10, job_id: 4, file: /var/lib/kvrocks/db/000023.sst, reason: 6, is_write_slowdown: no, is_write_stall: no, largest seqno: 2010631, smallest seqno: 744991\nI20250204 10:14:04.949374 139658734335680 event_listener.cc:122] [event_listener/flush_begin] column family: default, thread_id: 10, job_id: 5, reason: Write Buffer Full\nI20250204 10:14:07.789879 139658734335680 event_listener.cc:181] [event_listener/table_file_created] column family: default, file path: /var/lib/kvrocks/db/000027.sst, file size: 39246905, job_id: 5, reason: flush, status: OK\nI20250204 10:14:07.831367 139658734335680 event_listener.cc:129] [event_listener/flush_completed] column family: default, thread_id: 10, job_id: 5, file: /var/lib/kvrocks/db/000027.sst, reason: 6, is_write_slowdown: no, is_write_stall: no, largest seqno: 3520980, smallest seqno: 2010632\nE20250204 10:51:20.839834 139658688194240 event_listener.cc:166] [event_listener/background_error] reason: memtable, bg_error: Corruption: WriteBatch has wrong count\n\nThe workers, after processing data, restarts and reconnect but once this error arise it not possible anymore, I need to wipe db folder.\n\nThis is the log of the worker (Python RQ)\n\n10:49:59 Cleaning registries for queue: acme\n10:49:59 Cleaning registries for queue: default\n10:51:18 default: b509929b-6106-4f46-a600-a3522c48e074\n10:51:20 acme: 6d183cbd-3adf-4851-81c8-522a1564821b\n10:51:20 Worker rq:worker:169fe88737364921aa70a81ac2c91596: found an unhandled exception, quitting...\nTraceback (most recent call last):\n  File "/usr/local/lib/python3.10/site-packages/rq/worker.py", line 425, in work\n    result = self.dequeue_job_and_maintain_ttl(timeout, max_idle_time)\n  File "/usr/local/lib/python3.10/site-packages/rq/worker.py", line 692, in dequeue_job_and_maintain_ttl\n    self.heartbeat()\n  File "/usr/local/lib/python3.10/site-packages/rq/worker.py", line 713, in heartbeat\n    connection.hset(self.key, \'last_heartbeat\', utcformat(utcnow()))\n  File "/usr/local/lib/python3.10/site-packages/redis/commands/core.py", line 5045, in hset\n    return self.execute_command("HSET", name, *pieces)\n  File "/usr/local/lib/python3.10/site-packages/redis/client.py", line 559, in execute_command\n    return self._execute_command(*args, **options)\n  File "/usr/local/lib/python3.10/site-packages/redis/client.py", line 567, in _execute_command\n    return conn.retry.call_with_retry(\n  File "/usr/local/lib/python3.10/site-packages/redis/retry.py", line 62, in call_with_retry\n    return do()\n  File "/usr/local/lib/python3.10/site-packages/redis/client.py", line 568, in <lambda>\n    lambda: self._send_command_parse_response(\n  File "/usr/local/lib/python3.10/site-packages/redis/client.py", line 542, in _send_command_parse_response\n    return self.parse_response(conn, command_name, **options)\n  File "/usr/local/lib/python3.10/site-packages/redis/client.py", line 584, in parse_response\n    response = connection.read_response()\n  File "/usr/local/lib/python3.10/site-packages/redis/connection.py", line 616, in read_response\n    raise response\nredis.exceptions.ResponseError: Corruption: WriteBatch has wrong count\n10:51:20 Unsubscribing from channel rq:pubsub:169fe88737364921aa70a81ac2c91596\n10:51:20 Worker rq:worker:42d58bc691d94f539e1081d597ec5c0f: found an unhandled exception, quitting...\nTraceback (most recent call last):\n  File "/usr/local/lib/python3.10/site-packages/rq/worker.py", line 425, in work\n    result = self.dequeue_job_and_maintain_ttl(timeout, max_idle_time)\n  File "/usr/local/lib/python3.10/site-packages/rq/worker.py", line 657, in dequeue_job_and_maintain_ttl\n    result = self.queue_class.dequeue_any(\n  File "/usr/local/lib/python3.10/site-packages/rq/queue.py", line 1365, in dequeue_any\n    result = cls.lpop(queue_keys, timeout, connection=connection)\n  File "/usr/local/lib/python3.10/site-packages/rq/queue.py", line 1289, in lpop\n    result = connection.blpop(queue_keys, timeout)\n  File "/usr/local/lib/python3.10/site-packages/redis/commands/core.py", line 2588, in blpop\n    return self.execute_command("BLPOP", *keys)\n  File "/usr/local/lib/python3.10/site-packages/redis/client.py", line 559, in execute_command\n    return self._execute_command(*args, **options)\n  File "/usr/local/lib/python3.10/site-packages/redis/client.py", line 567, in _execute_command\n    return conn.retry.call_with_retry(\n  File "/usr/local/lib/python3.10/site-packages/redis/retry.py", line 62, in call_with_retry\n    return do()\n  File "/usr/local/lib/python3.10/site-packages/redis/client.py", line 568, in <lambda>\n    lambda: self._send_command_parse_response(\n  File "/usr/local/lib/python3.10/site-packages/redis/client.py", line 542, in _send_command_parse_response\n    return self.parse_response(conn, command_name, **options)\n  File "/usr/local/lib/python3.10/site-packages/redis/client.py", line 584, in parse_response\n    response = connection.read_response()\n  File "/usr/local/lib/python3.10/site-packages/redis/connection.py", line 616, in read_response\n    raise response\nredis.exceptions.ResponseError: Corruption: WriteBatch has wrong count', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2633558088/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2634651954', 'html_url': 'https://github.com/apache/kvrocks/issues/2766#issuecomment-2634651954', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2766', 'id': 2634651954, 'node_id': 'IC_kwDODBGmlM6dCZky', 'user': {'login': 'webfrank', 'id': 4688664, 'node_id': 'MDQ6VXNlcjQ2ODg2NjQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4688664?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/webfrank', 'html_url': 'https://github.com/webfrank', 'followers_url': 'https://api.github.com/users/webfrank/followers', 'following_url': 'https://api.github.com/users/webfrank/following{/other_user}', 'gists_url': 'https://api.github.com/users/webfrank/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/webfrank/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/webfrank/subscriptions', 'organizations_url': 'https://api.github.com/users/webfrank/orgs', 'repos_url': 'https://api.github.com/users/webfrank/repos', 'events_url': 'https://api.github.com/users/webfrank/events{/privacy}', 'received_events_url': 'https://api.github.com/users/webfrank/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-04T17:42:29Z', 'updated_at': '2025-02-04T17:44:03Z', 'author_association': 'NONE', 'body': 'After "Corruption: WriteBatch has wrong count" the application stops because BLPOP times out. The list is of around 130K elements. I tried manually also BRPOP and it works. It seems something is really corrupted and list pointers are not aligned any more.\n\nIf I LPUSH more elements I can retries them with BLPOP but once removed the new ones the list blocks.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2634651954/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2635001590', 'html_url': 'https://github.com/apache/kvrocks/issues/2766#issuecomment-2635001590', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2766', 'id': 2635001590, 'node_id': 'IC_kwDODBGmlM6dDu72', 'user': {'login': 'aleksraiden', 'id': 65920, 'node_id': 'MDQ6VXNlcjY1OTIw', 'avatar_url': 'https://avatars.githubusercontent.com/u/65920?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/aleksraiden', 'html_url': 'https://github.com/aleksraiden', 'followers_url': 'https://api.github.com/users/aleksraiden/followers', 'following_url': 'https://api.github.com/users/aleksraiden/following{/other_user}', 'gists_url': 'https://api.github.com/users/aleksraiden/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/aleksraiden/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/aleksraiden/subscriptions', 'organizations_url': 'https://api.github.com/users/aleksraiden/orgs', 'repos_url': 'https://api.github.com/users/aleksraiden/repos', 'events_url': 'https://api.github.com/users/aleksraiden/events{/privacy}', 'received_events_url': 'https://api.github.com/users/aleksraiden/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-04T20:32:01Z', 'updated_at': '2025-02-04T20:32:01Z', 'author_association': 'CONTRIBUTOR', 'body': 'Hmm... In a conspiracy theory - you are use a default options, like: \n\n- rocksdb.enable_pipelined_write no\n- rocksdb.delayed_write_rate 0\n- rocksdb.write_options.sync no\n- rocksdb.write_options.memtable_insert_hint_per_batch no\n\nOr any custom?\n', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2635001590/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2635866597', 'html_url': 'https://github.com/apache/kvrocks/issues/2766#issuecomment-2635866597', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2766', 'id': 2635866597, 'node_id': 'IC_kwDODBGmlM6dHCHl', 'user': {'login': 'webfrank', 'id': 4688664, 'node_id': 'MDQ6VXNlcjQ2ODg2NjQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4688664?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/webfrank', 'html_url': 'https://github.com/webfrank', 'followers_url': 'https://api.github.com/users/webfrank/followers', 'following_url': 'https://api.github.com/users/webfrank/following{/other_user}', 'gists_url': 'https://api.github.com/users/webfrank/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/webfrank/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/webfrank/subscriptions', 'organizations_url': 'https://api.github.com/users/webfrank/orgs', 'repos_url': 'https://api.github.com/users/webfrank/repos', 'events_url': 'https://api.github.com/users/webfrank/events{/privacy}', 'received_events_url': 'https://api.github.com/users/webfrank/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-05T07:13:13Z', 'updated_at': '2025-02-05T07:13:13Z', 'author_association': 'NONE', 'body': 'Hi, only --rocksdb.block_cache_size 64 (or any other value) just to test memory consumption.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2635866597/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2639050909', 'html_url': 'https://github.com/apache/kvrocks/issues/2766#issuecomment-2639050909', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2766', 'id': 2639050909, 'node_id': 'IC_kwDODBGmlM6dTLid', 'user': {'login': 'webfrank', 'id': 4688664, 'node_id': 'MDQ6VXNlcjQ2ODg2NjQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4688664?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/webfrank', 'html_url': 'https://github.com/webfrank', 'followers_url': 'https://api.github.com/users/webfrank/followers', 'following_url': 'https://api.github.com/users/webfrank/following{/other_user}', 'gists_url': 'https://api.github.com/users/webfrank/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/webfrank/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/webfrank/subscriptions', 'organizations_url': 'https://api.github.com/users/webfrank/orgs', 'repos_url': 'https://api.github.com/users/webfrank/repos', 'events_url': 'https://api.github.com/users/webfrank/events{/privacy}', 'received_events_url': 'https://api.github.com/users/webfrank/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-06T07:39:03Z', 'updated_at': '2025-02-06T07:39:03Z', 'author_association': 'NONE', 'body': 'Started from scratch\n\ndocker-compose.yml\n\n```yaml\nservices:\n  kvrocks:\n    image: apache/kvrocks:2.11.0\n    command:\n    - --rocksdb.block_cache_size\n    - "64"\n    - --rocksdb.write_buffer_size\n    - "16"\n    - --rocksdb.max_write_buffer_number\n    - "4"\n    deploy:\n      resources:\n        limits:\n          memory: 512M\n    volumes:\n    - kvrocks:/var/lib/kvrocks\n    networks:\n    - internal\n```\n\nlogs\n\n```\nI20250206 07:30:56.051099 139693424336128 main.cc:144] kvrocks version 2.11.0 (commit 172d31af)\nI20250206 07:30:56.214070 139693424336128 storage.cc:395] [storage] Success to load the data from disk: 48 ms\nI20250206 07:30:56.245163 139693424336128 worker.cc:75] [worker] Listening on: 0.0.0.0:6666\nI20250206 07:30:56.249971 139693424336128 worker.cc:75] [worker] Listening on: 0.0.0.0:6666\nI20250206 07:30:56.250308 139693424336128 worker.cc:75] [worker] Listening on: 0.0.0.0:6666\nI20250206 07:30:56.250646 139693424336128 worker.cc:75] [worker] Listening on: 0.0.0.0:6666\nI20250206 07:30:56.251055 139693424336128 worker.cc:75] [worker] Listening on: 0.0.0.0:6666\nI20250206 07:30:56.251393 139693424336128 worker.cc:75] [worker] Listening on: 0.0.0.0:6666\nI20250206 07:30:56.251703 139693424336128 worker.cc:75] [worker] Listening on: 0.0.0.0:6666\nI20250206 07:30:56.252146 139693424336128 worker.cc:75] [worker] Listening on: 0.0.0.0:6666\nI20250206 07:30:56.252879 139693424336128 worker.cc:586] [worker] Thread #139693272295104 started\nI20250206 07:30:56.253008 139693424336128 worker.cc:586] [worker] Thread #139693280687808 started\nI20250206 07:30:56.253077 139693424336128 worker.cc:586] [worker] Thread #139693289080512 started\nI20250206 07:30:56.253216 139693424336128 worker.cc:586] [worker] Thread #139693343635136 started\nI20250206 07:30:56.253332 139693424336128 worker.cc:586] [worker] Thread #139693335242432 started\nI20250206 07:30:56.253451 139693424336128 worker.cc:586] [worker] Thread #139693326849728 started\nI20250206 07:30:56.253562 139693424336128 worker.cc:586] [worker] Thread #139693318457024 started\nI20250206 07:30:56.253669 139693424336128 worker.cc:586] [worker] Thread #139693310064320 started\nI20250206 07:30:56.254084 139693424336128 server.cc:240] [server] Ready to accept connections\nI20250206 07:31:56.327786 139693255509696 compaction_checker.cc:34] [compaction checker] Start the compact the column family: pubsub\nI20250206 07:31:56.327927 139693255509696 compaction_checker.cc:37] [compaction checker] Compact the column family: pubsub finished, result: OK\nI20250206 07:31:56.327940 139693255509696 compaction_checker.cc:34] [compaction checker] Start the compact the column family: propagate\nI20250206 07:31:56.327975 139693255509696 compaction_checker.cc:37] [compaction checker] Compact the column family: propagate finished, result: OK\nE20250206 07:32:01.985579 139693326849728 event_listener.cc:166] [event_listener/background_error] reason: memtable, bg_error: Corruption: WriteBatch has wrong count\n```\n\nThe error arise once the application connects and issue an HSET command to configure JOB queue.\n\n```\nTraceback (most recent call last):\nFile "/app/main.py", line 34, in <module>\n  main(redis)\nFile "/app/main.py", line 25, in main\n  w.work(max_jobs=1000)\nFile "/usr/local/lib/python3.10/site-packages/rq/worker.py", line 592, in work\n  self.bootstrap(logging_level, date_format, log_format)\nFile "/usr/local/lib/python3.10/site-packages/rq/worker.py", line 927, in bootstrap\n  self.set_state(WorkerStatus.STARTED)\nFile "/usr/local/lib/python3.10/site-packages/rq/worker.py", line 806, in set_state\n  connection.hset(self.key, \'state\', state)\nFile "/usr/local/lib/python3.10/site-packages/redis/commands/core.py", line 5045, in hset\n  return self.execute_command("HSET", name, *pieces)\nFile "/usr/local/lib/python3.10/site-packages/redis/client.py", line 559, in execute_command\n  return self._execute_command(*args, **options)\nFile "/usr/local/lib/python3.10/site-packages/redis/client.py", line 567, in _execute_command\n  return conn.retry.call_with_retry(\nFile "/usr/local/lib/python3.10/site-packages/redis/retry.py", line 62, in call_with_retry\n  return do()\nFile "/usr/local/lib/python3.10/site-packages/redis/client.py", line 568, in <lambda>\n  lambda: self._send_command_parse_response(\nFile "/usr/local/lib/python3.10/site-packages/redis/client.py", line 542, in _send_command_parse_response\n  return self.parse_response(conn, command_name, **options)\nFile "/usr/local/lib/python3.10/site-packages/redis/client.py", line 584, in parse_response\n  response = connection.read_response()\nFile "/usr/local/lib/python3.10/site-packages/redis/connection.py", line 616, in read_response\n  raise response\nredis.exceptions.ResponseError: Corruption: WriteBatch has wrong count\n```', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2639050909/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2639178019', 'html_url': 'https://github.com/apache/kvrocks/issues/2766#issuecomment-2639178019', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2766', 'id': 2639178019, 'node_id': 'IC_kwDODBGmlM6dTqkj', 'user': {'login': 'aleksraiden', 'id': 65920, 'node_id': 'MDQ6VXNlcjY1OTIw', 'avatar_url': 'https://avatars.githubusercontent.com/u/65920?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/aleksraiden', 'html_url': 'https://github.com/aleksraiden', 'followers_url': 'https://api.github.com/users/aleksraiden/followers', 'following_url': 'https://api.github.com/users/aleksraiden/following{/other_user}', 'gists_url': 'https://api.github.com/users/aleksraiden/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/aleksraiden/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/aleksraiden/subscriptions', 'organizations_url': 'https://api.github.com/users/aleksraiden/orgs', 'repos_url': 'https://api.github.com/users/aleksraiden/repos', 'events_url': 'https://api.github.com/users/aleksraiden/events{/privacy}', 'received_events_url': 'https://api.github.com/users/aleksraiden/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-06T08:46:13Z', 'updated_at': '2025-02-06T08:46:13Z', 'author_association': 'CONTRIBUTOR', 'body': 'Hmm, I have  a test with your options and have no problems. Could you check your instance with redis-benchmark?\nE.g.: redis-benchmark -h 127.0.0.1 -p 6666 -q\n\nAnd how a size of your data, written to HSET? ', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2639178019/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2642572657', 'html_url': 'https://github.com/apache/kvrocks/issues/2766#issuecomment-2642572657', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2766', 'id': 2642572657, 'node_id': 'IC_kwDODBGmlM6dgnVx', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-07T10:48:30Z', 'updated_at': '2025-02-07T10:48:30Z', 'author_association': 'MEMBER', 'body': '@webfrank It would be helpful if you could provide a reproduced sample code for this.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2642572657/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2644997876', 'html_url': 'https://github.com/apache/kvrocks/issues/2766#issuecomment-2644997876', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2766', 'id': 2644997876, 'node_id': 'IC_kwDODBGmlM6dp3b0', 'user': {'login': 'webfrank', 'id': 4688664, 'node_id': 'MDQ6VXNlcjQ2ODg2NjQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4688664?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/webfrank', 'html_url': 'https://github.com/webfrank', 'followers_url': 'https://api.github.com/users/webfrank/followers', 'following_url': 'https://api.github.com/users/webfrank/following{/other_user}', 'gists_url': 'https://api.github.com/users/webfrank/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/webfrank/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/webfrank/subscriptions', 'organizations_url': 'https://api.github.com/users/webfrank/orgs', 'repos_url': 'https://api.github.com/users/webfrank/repos', 'events_url': 'https://api.github.com/users/webfrank/events{/privacy}', 'received_events_url': 'https://api.github.com/users/webfrank/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-08T11:12:14Z', 'updated_at': '2025-02-08T11:12:14Z', 'author_association': 'NONE', 'body': '@aleksraiden \n\nHSET is around 5kB, some simple keys and one or two binary data (args of the task and result if available) this multiplied by the number of tasks, around 300k\n\nredis-benchmark output:\n\n```\nkvrocks@bb0374854df0:/$ redis-benchmark -h 127.0.0.1 -p 6666 -q\nWARNING: Could not fetch server CONFIG\nPING_INLINE: 21285.65 requests per second, p50=1.103 msec                   \nPING_MBULK: 23820.87 requests per second, p50=1.079 msec                   \nSET: 6615.94 requests per second, p50=5.215 msec                   \nGET: 23534.95 requests per second, p50=1.087 msec                   \nINCR: 6045.22 requests per second, p50=5.879 msec                   \nLPUSH: 5730.99 requests per second, p50=6.143 msec                   \nRPUSH: 5877.86 requests per second, p50=5.215 msec                   \nLPOP: 5724.43 requests per second, p50=5.727 msec                   \nRPOP: 5462.99 requests per second, p50=6.423 msec                   \nSADD: 5952.03 requests per second, p50=5.031 msec                   \nHSET: 6454.11 requests per second, p50=5.471 msec                   \nSPOP: 22946.31 requests per second, p50=1.135 msec                   \nZADD: 6343.97 requests per second, p50=6.015 msec                   \nZPOPMIN: 23153.51 requests per second, p50=1.127 msec                   \nLPUSH (needed to benchmark LRANGE): 5858.57 requests per second, p50=5.567 msec                   \nLRANGE_100 (first 100 elements): 18011.53 requests per second, p50=1.439 msec                   \nLRANGE_300 (first 300 elements): 11579.44 requests per second, p50=2.271 msec                   \nLRANGE_500 (first 500 elements): 8394.19 requests per second, p50=3.047 msec                   \nLRANGE_600 (first 600 elements): 7510.33 requests per second, p50=3.479 msec                  \nMSET (10 keys): 5357.05 requests per second, p50=7.431 msec  \n```\n\n@git-hulk I tried to reproduce it with a script but it only happens using RQ in a random way, usually the first batch of tasks works, the second not.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2644997876/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2645031692', 'html_url': 'https://github.com/apache/kvrocks/issues/2766#issuecomment-2645031692', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2766', 'id': 2645031692, 'node_id': 'IC_kwDODBGmlM6dp_sM', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-08T11:19:16Z', 'updated_at': '2025-02-08T11:19:16Z', 'author_association': 'MEMBER', 'body': '@webfrank Thanks for your input. I suppose this bug might be triggered while using some commands together. Would you mind having a look at if this happened in producing or consuming tasks?', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2645031692/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2645168741', 'html_url': 'https://github.com/apache/kvrocks/issues/2766#issuecomment-2645168741', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2766', 'id': 2645168741, 'node_id': 'IC_kwDODBGmlM6dqhJl', 'user': {'login': 'webfrank', 'id': 4688664, 'node_id': 'MDQ6VXNlcjQ2ODg2NjQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4688664?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/webfrank', 'html_url': 'https://github.com/webfrank', 'followers_url': 'https://api.github.com/users/webfrank/followers', 'following_url': 'https://api.github.com/users/webfrank/following{/other_user}', 'gists_url': 'https://api.github.com/users/webfrank/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/webfrank/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/webfrank/subscriptions', 'organizations_url': 'https://api.github.com/users/webfrank/orgs', 'repos_url': 'https://api.github.com/users/webfrank/repos', 'events_url': 'https://api.github.com/users/webfrank/events{/privacy}', 'received_events_url': 'https://api.github.com/users/webfrank/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-08T11:45:42Z', 'updated_at': '2025-02-08T11:45:42Z', 'author_association': 'NONE', 'body': 'Usually happens when starting enqueuing tasks or starting new worker. I think some SET command is involved. RQ uses hashsets, list, set and zset. \nIt would use streams but as kvrocks report version 4 are disabled. Btw, why is version 4 and not 5 if streams are supported?\nI will try to find a way to log all those commands using a TCP proxy as following RQ code it is not so simple. ', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2645168741/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2650028903', 'html_url': 'https://github.com/apache/kvrocks/issues/2766#issuecomment-2650028903', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2766', 'id': 2650028903, 'node_id': 'IC_kwDODBGmlM6d9Dtn', 'user': {'login': 'webfrank', 'id': 4688664, 'node_id': 'MDQ6VXNlcjQ2ODg2NjQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4688664?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/webfrank', 'html_url': 'https://github.com/webfrank', 'followers_url': 'https://api.github.com/users/webfrank/followers', 'following_url': 'https://api.github.com/users/webfrank/following{/other_user}', 'gists_url': 'https://api.github.com/users/webfrank/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/webfrank/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/webfrank/subscriptions', 'organizations_url': 'https://api.github.com/users/webfrank/orgs', 'repos_url': 'https://api.github.com/users/webfrank/repos', 'events_url': 'https://api.github.com/users/webfrank/events{/privacy}', 'received_events_url': 'https://api.github.com/users/webfrank/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-11T07:39:05Z', 'updated_at': '2025-02-11T07:39:05Z', 'author_association': 'NONE', 'body': 'Hi, I narrowed down the occurrence, it seems that an HSET triggers the corruption, once triggered the system does not work any more and the only way to recover is to start from scratch. ', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2650028903/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2763: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2630166848', 'html_url': 'https://github.com/apache/kvrocks/pull/2763#issuecomment-2630166848', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2763', 'id': 2630166848, 'node_id': 'IC_kwDODBGmlM6cxSlA', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-03T07:28:39Z', 'updated_at': '2025-02-03T07:45:52Z', 'author_association': 'MEMBER', 'body': 'https://github.com/apache/kvrocks/actions/runs/13107232513/job/36565873699?pr=2763#step:17:62\r\n\r\nInteresting that there\'s a server crash. Don\'t know if it is because of parallal test execution.\r\n\r\n```\r\nReplication thread operation failed: thread #140295113012800 cannot be `join`ed: Resource deadlock avoided\r\n```\r\n\r\nThe replication thread failed to join the thread while `Stop()` is called (due to "Resource deadlock avoided"), so that the dtor of `std::thread` leads to a `std::terminate` (while the dtor of ReplicationThread is called).\r\n\r\nThis indicates that, the ReplicationThread::Stop() is called from the replication thread itself (which is a deadlock). (but it looks impossible.)\r\n\r\ncc @git-hulk ', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2630166848/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2630220402', 'html_url': 'https://github.com/apache/kvrocks/pull/2763#issuecomment-2630220402', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2763', 'id': 2630220402, 'node_id': 'IC_kwDODBGmlM6cxfpy', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-03T08:01:48Z', 'updated_at': '2025-02-03T08:02:01Z', 'author_association': 'MEMBER', 'body': 'I think it should be due to that parallal execution is introduced for slotmigrate test cases. Maybe we can revert it for slot migration first, and create an issue for this problem.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2630220402/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2630255842', 'html_url': 'https://github.com/apache/kvrocks/pull/2763#issuecomment-2630255842', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2763', 'id': 2630255842, 'node_id': 'IC_kwDODBGmlM6cxoTi', 'user': {'login': 'lyang24', 'id': 20375035, 'node_id': 'MDQ6VXNlcjIwMzc1MDM1', 'avatar_url': 'https://avatars.githubusercontent.com/u/20375035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lyang24', 'html_url': 'https://github.com/lyang24', 'followers_url': 'https://api.github.com/users/lyang24/followers', 'following_url': 'https://api.github.com/users/lyang24/following{/other_user}', 'gists_url': 'https://api.github.com/users/lyang24/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lyang24/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lyang24/subscriptions', 'organizations_url': 'https://api.github.com/users/lyang24/orgs', 'repos_url': 'https://api.github.com/users/lyang24/repos', 'events_url': 'https://api.github.com/users/lyang24/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lyang24/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-03T08:20:23Z', 'updated_at': '2025-02-03T08:22:19Z', 'author_association': 'CONTRIBUTOR', 'body': '> . Don\'t know if it is because of parallal test execution.\r\n> \r\n> ```\r\n> Replication thread operation failed: thread #140295113012800 cannot be `join`ed: Resource deadlock avoided\r\n> ```\r\n> \r\n> The replication thread failed to join the thread while `Stop()` is called (due to "Resource deadlock avoided"), so that the dtor of `std::thread` leads to a `std::terminate` (while the dtor of ReplicationThread is called).\r\n> \r\n> This indicates that, the ReplicationThread::Stop() is called from the replication thread itself (which is a deadlock). (but it looks impossible.)\r\n\r\ni guess it may due to the parallelism consumed too much system resources, will try to limit parallelism to 4. If this fails too will revert slot migraiton.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2630255842/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2630256704', 'html_url': 'https://github.com/apache/kvrocks/pull/2763#issuecomment-2630256704', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2763', 'id': 2630256704, 'node_id': 'IC_kwDODBGmlM6cxohA', 'user': {'login': 'torwig', 'id': 8588372, 'node_id': 'MDQ6VXNlcjg1ODgzNzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/8588372?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/torwig', 'html_url': 'https://github.com/torwig', 'followers_url': 'https://api.github.com/users/torwig/followers', 'following_url': 'https://api.github.com/users/torwig/following{/other_user}', 'gists_url': 'https://api.github.com/users/torwig/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/torwig/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/torwig/subscriptions', 'organizations_url': 'https://api.github.com/users/torwig/orgs', 'repos_url': 'https://api.github.com/users/torwig/repos', 'events_url': 'https://api.github.com/users/torwig/events{/privacy}', 'received_events_url': 'https://api.github.com/users/torwig/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-03T08:20:44Z', 'updated_at': '2025-02-03T08:20:44Z', 'author_association': 'CONTRIBUTOR', 'body': 'Do our runners have enough memory to spawn all instances of Kvrocks we need to execute those tests in parallel?', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2630256704/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2633498049', 'html_url': 'https://github.com/apache/kvrocks/pull/2763#issuecomment-2633498049', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2763', 'id': 2633498049, 'node_id': 'IC_kwDODBGmlM6c9_3B', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-04T10:32:19Z', 'updated_at': '2025-02-04T10:32:19Z', 'author_association': 'MEMBER', 'body': "> This indicates that, the ReplicationThread::Stop() is called from the replication thread itself (which is a deadlock). (but it looks impossible.)\r\n\r\n@PragmaTwice From logs, it seems the replication thread was joined(due to receiving a TERM signal) before scheduling the thread. And we didn't check if it's joinable before joining the thread.\r\n\r\n```\r\nW20250203 07:12:02.381725 140295312238144 replication.cc:351] Clean old synced checkpoint successfully\r\nI20250203 07:12:02.382069 140295312238144 cluster.cc:271] Change server role to slave, stop migration task\r\nI20250203 07:12:02.382079 140295312238144 cluster.cc:273] SLAVE OF 127.0.0.1:38657 enabled by cluster topology setting\r\nI20250203 07:12:02.382861 140295113012800 main.cc:50] Signal Terminated (15) received, stopping the server\r\nW20250203 07:12:02.383481 140295113012800 replication.cc:371] Replication thread operation failed: thread #140295113012800 cannot be `join`ed: Resource deadlock avoided\r\nI20250203 07:12:02.383501 140295113012800 replication.cc:373] [replication] Stopped\r\nE20250203 07:12:02.427797 140295445802240 signal_util.h:33] Ooops! Apache Kvrocks unstable (commit c7ab45d3) got signal: Aborted (6)\r\n```", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2633498049/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2635284082', 'html_url': 'https://github.com/apache/kvrocks/pull/2763#issuecomment-2635284082', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2763', 'id': 2635284082, 'node_id': 'IC_kwDODBGmlM6dEz5y', 'user': {'login': 'lyang24', 'id': 20375035, 'node_id': 'MDQ6VXNlcjIwMzc1MDM1', 'avatar_url': 'https://avatars.githubusercontent.com/u/20375035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lyang24', 'html_url': 'https://github.com/lyang24', 'followers_url': 'https://api.github.com/users/lyang24/followers', 'following_url': 'https://api.github.com/users/lyang24/following{/other_user}', 'gists_url': 'https://api.github.com/users/lyang24/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lyang24/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lyang24/subscriptions', 'organizations_url': 'https://api.github.com/users/lyang24/orgs', 'repos_url': 'https://api.github.com/users/lyang24/repos', 'events_url': 'https://api.github.com/users/lyang24/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lyang24/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-04T23:22:25Z', 'updated_at': '2025-02-04T23:22:39Z', 'author_association': 'CONTRIBUTOR', 'body': 'looking at the ci failure here should we increase the wait time in `TestReplicationShareCheckpoint` to 100s to avoid flakeness?\r\n\r\n```\r\n\trequire.Eventually(t, func() bool {\r\n\t\t\treturn master.LogFileMatches(t, ".*Using current existing checkpoint.*")\r\n\t\t}, 50*time.Second, 100*time.Millisecond)\r\n```', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2635284082/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2636826993', 'html_url': 'https://github.com/apache/kvrocks/pull/2763#issuecomment-2636826993', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2763', 'id': 2636826993, 'node_id': 'IC_kwDODBGmlM6dKslx', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-05T13:14:52Z', 'updated_at': '2025-02-05T13:14:52Z', 'author_association': 'MEMBER', 'body': "> looking at the ci failure here should we increase the wait time in TestReplicationShareCheckpoint to 100s to avoid flakeness?\r\n\r\nHow about reducing the parallel to 2? I'm not sure how much resource can be allocated in GitHub Action Runner, guess it won't allocate 4 cores for each runner.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2636826993/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2644751078', 'html_url': 'https://github.com/apache/kvrocks/pull/2763#issuecomment-2644751078', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2763', 'id': 2644751078, 'node_id': 'IC_kwDODBGmlM6do7Lm', 'user': {'login': 'lyang24', 'id': 20375035, 'node_id': 'MDQ6VXNlcjIwMzc1MDM1', 'avatar_url': 'https://avatars.githubusercontent.com/u/20375035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lyang24', 'html_url': 'https://github.com/lyang24', 'followers_url': 'https://api.github.com/users/lyang24/followers', 'following_url': 'https://api.github.com/users/lyang24/following{/other_user}', 'gists_url': 'https://api.github.com/users/lyang24/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lyang24/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lyang24/subscriptions', 'organizations_url': 'https://api.github.com/users/lyang24/orgs', 'repos_url': 'https://api.github.com/users/lyang24/repos', 'events_url': 'https://api.github.com/users/lyang24/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lyang24/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-08T09:43:43Z', 'updated_at': '2025-02-08T09:43:43Z', 'author_association': 'CONTRIBUTOR', 'body': 'looks like slot migrate tests are unstable with parallel maybe i could drop the changes from this pr', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2644751078/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2646135762', 'html_url': 'https://github.com/apache/kvrocks/pull/2763#issuecomment-2646135762', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2763', 'id': 2646135762, 'node_id': 'IC_kwDODBGmlM6duNPS', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-09T09:03:21Z', 'updated_at': '2025-02-09T09:03:21Z', 'author_association': 'MEMBER', 'body': "> looks like slot migrate tests are unstable with parallel maybe i could drop the changes from this pr\r\n\r\nYeah let's drop it.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2646135762/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2646968532', 'html_url': 'https://github.com/apache/kvrocks/pull/2763#issuecomment-2646968532', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2763', 'id': 2646968532, 'node_id': 'IC_kwDODBGmlM6dxYjU', 'user': {'login': 'lyang24', 'id': 20375035, 'node_id': 'MDQ6VXNlcjIwMzc1MDM1', 'avatar_url': 'https://avatars.githubusercontent.com/u/20375035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lyang24', 'html_url': 'https://github.com/lyang24', 'followers_url': 'https://api.github.com/users/lyang24/followers', 'following_url': 'https://api.github.com/users/lyang24/following{/other_user}', 'gists_url': 'https://api.github.com/users/lyang24/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lyang24/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lyang24/subscriptions', 'organizations_url': 'https://api.github.com/users/lyang24/orgs', 'repos_url': 'https://api.github.com/users/lyang24/repos', 'events_url': 'https://api.github.com/users/lyang24/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lyang24/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-10T05:40:46Z', 'updated_at': '2025-02-10T05:40:46Z', 'author_association': 'CONTRIBUTOR', 'body': '> looking at the ci failure here should we increase the wait time in `TestReplicationShareCheckpoint` to 100s to avoid flakeness?\r\n> \r\n> ```\r\n> \trequire.Eventually(t, func() bool {\r\n> \t\t\treturn master.LogFileMatches(t, ".*Using current existing checkpoint.*")\r\n> \t\t}, 50*time.Second, 100*time.Millisecond)\r\n> ```\r\n\r\nwe might need to keep the parallelism to ensure `TestReplicationShareCheckpoint` has sufficient cpu', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2646968532/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2649774555', 'html_url': 'https://github.com/apache/kvrocks/pull/2763#issuecomment-2649774555', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2763', 'id': 2649774555, 'node_id': 'IC_kwDODBGmlM6d8Fnb', 'user': {'login': 'sonarqubecloud[bot]', 'id': 39514782, 'node_id': 'MDM6Qm90Mzk1MTQ3ODI=', 'avatar_url': 'https://avatars.githubusercontent.com/in/12526?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D', 'html_url': 'https://github.com/apps/sonarqubecloud', 'followers_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/received_events', 'type': 'Bot', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-11T04:28:44Z', 'updated_at': '2025-02-11T04:28:44Z', 'author_association': 'NONE', 'body': "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=apache_kvrocks&pullRequest=2763) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=apache_kvrocks&pullRequest=2763&issueStatuses=OPEN,CONFIRMED&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/project/issues?id=apache_kvrocks&pullRequest=2763&issueStatuses=ACCEPTED)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=apache_kvrocks&pullRequest=2763&issueStatuses=OPEN,CONFIRMED&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0.0% Coverage on New Code](https://sonarcloud.io/component_measures?id=apache_kvrocks&pullRequest=2763&metric=new_coverage&view=list)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0.0% Duplication on New Code](https://sonarcloud.io/component_measures?id=apache_kvrocks&pullRequest=2763&metric=new_duplicated_lines_density&view=list)  \n  \n[See analysis details on SonarQube Cloud](https://sonarcloud.io/dashboard?id=apache_kvrocks&pullRequest=2763)\n\n", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2649774555/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': {'id': 12526, 'client_id': 'Iv1.dc610988574d1724', 'slug': 'sonarqubecloud', 'node_id': 'MDM6QXBwMTI1MjY=', 'owner': {'login': 'SonarSource', 'id': 545988, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjU0NTk4OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/545988?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/SonarSource', 'html_url': 'https://github.com/SonarSource', 'followers_url': 'https://api.github.com/users/SonarSource/followers', 'following_url': 'https://api.github.com/users/SonarSource/following{/other_user}', 'gists_url': 'https://api.github.com/users/SonarSource/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/SonarSource/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/SonarSource/subscriptions', 'organizations_url': 'https://api.github.com/users/SonarSource/orgs', 'repos_url': 'https://api.github.com/users/SonarSource/repos', 'events_url': 'https://api.github.com/users/SonarSource/events{/privacy}', 'received_events_url': 'https://api.github.com/users/SonarSource/received_events', 'type': 'Organization', 'user_view_type': 'public', 'site_admin': False}, 'name': 'SonarQubeCloud', 'description': "\r\nSonarQube Cloud (formerly SonarCloud) is a SaaS code analysis tool designed to detect coding issues in 30+ languages, frameworks, and IaC platforms.Your code is checked against an extensive set of rules that cover many attributes of code, such as maintainability, reliability, and security issues, on each merge/pull request.\r\n\r\nSonarQube Cloud integrates seamlessly into your GitHub workflow and provides clear guidance for resolving any code quality and security issues detected. The majority of popular languages can be analyzed automatically; no configuration is required!\r\n\r\nWith [SonarQube Cloud](https://sonarcloud.io/github), you get:\r\n\r\n-   Fast, precise static analysis and feedback on your code\r\n    \r\n-   Support for popular languages, frameworks, and IaC tools\r\n    \r\n-   Free analysis for open-source projects and private projects up to max 50k LoC\r\n    \r\n-   Automatic analysis of pull requests and branches with results reported inline\r\n    \r\n-   IDE Support with [SonarQube for IDE](https://www.sonarsource.com/products/sonarlint/) integration\r\n    \r\n-   Quality Gate (added as a GitHub check) acting at two different levels - first, preventing you from merging pull requests that contain issues - and later, helping you to release only clean, safe code\r\n    \r\n-   Sign up for SonarQube free tier and begin scanning your private and public repositories\r\n    \r\n\r\nA [GitHub Action](https://github.com/marketplace/actions/sonarcloud-scan) is available in the marketplace to make it easy for you (for projects where automatic analysis isn't available). SonarQube Cloud also integrates smoothly with Jenkins, CircleCI, TravisCI, CirrusCI, and many other tools.\r\n\r\nA free tier is available that allows you to explore the benefits of SonarQube Cloud using your public and private repositories. We also provide a no-commitment, [14-day trial](https://www.sonarsource.com/products/sonarcloud/signup/) of SonarQube Cloud Team for unlimited team members, up to 1.9M LoC, AI CodeFix recommendations, and more. No need to speak with a sales rep or request a license key - get automatic code analysis results on your private projects in minutes! Want to see more examples of SonarCloud in action? You can [explore current Open Source projects in SonarCloud](https://sonarcloud.io/explore/projects?sort=-analysis_date) that are using the [Clean as You Code](https://www.sonarsource.com/solutions/our-unique-approach/) methodology.\r\n\r\nWhat are you waiting for? SonarQube Cloud helps you consistently deliver cleaner, secure software that future developers will appreciate and your users will love. Start writing Clean Code. [Now](https://www.sonarsource.com/products/sonarcloud/signup/)!", 'external_url': 'https://sonarcloud.io', 'html_url': 'https://github.com/apps/sonarqubecloud', 'created_at': '2018-05-22T07:36:37Z', 'updated_at': '2024-12-19T05:52:18Z', 'permissions': {'checks': 'write', 'contents': 'read', 'emails': 'read', 'members': 'read', 'metadata': 'read', 'pull_requests': 'write', 'security_events': 'write', 'statuses': 'write'}, 'events': ['code_scanning_alert', 'organization', 'pull_request', 'push', 'repository']}}]
Comments for Issue 2723: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2597341594', 'html_url': 'https://github.com/apache/kvrocks/issues/2723#issuecomment-2597341594', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2723', 'id': 2597341594, 'node_id': 'IC_kwDODBGmlM6a0Ema', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-17T03:08:23Z', 'updated_at': '2025-01-17T03:08:23Z', 'author_association': 'MEMBER', 'body': "@VIVALXH Great! thanks for your detailed information, it's helpful to identify this isue.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2597341594/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2629306536', 'html_url': 'https://github.com/apache/kvrocks/issues/2723#issuecomment-2629306536', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2723', 'id': 2629306536, 'node_id': 'IC_kwDODBGmlM6cuAio', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-02T09:01:06Z', 'updated_at': '2025-02-02T09:01:06Z', 'author_association': 'MEMBER', 'body': 'Hi @VIVALXH \n\ngo-redis might retry on network error. Would you mind disabling the retry to see if the issue is still existing? https://github.com/redis/go-redis/blob/1139bc3aa9073851f67faa6d68df07a566901dd7/options.go#L75C2-L75C12', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2629306536/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2639021906', 'html_url': 'https://github.com/apache/kvrocks/issues/2723#issuecomment-2639021906', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2723', 'id': 2639021906, 'node_id': 'IC_kwDODBGmlM6dTEdS', 'user': {'login': 'VIVALXH', 'id': 98531764, 'node_id': 'U_kgDOBd95tA', 'avatar_url': 'https://avatars.githubusercontent.com/u/98531764?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/VIVALXH', 'html_url': 'https://github.com/VIVALXH', 'followers_url': 'https://api.github.com/users/VIVALXH/followers', 'following_url': 'https://api.github.com/users/VIVALXH/following{/other_user}', 'gists_url': 'https://api.github.com/users/VIVALXH/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/VIVALXH/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/VIVALXH/subscriptions', 'organizations_url': 'https://api.github.com/users/VIVALXH/orgs', 'repos_url': 'https://api.github.com/users/VIVALXH/repos', 'events_url': 'https://api.github.com/users/VIVALXH/events{/privacy}', 'received_events_url': 'https://api.github.com/users/VIVALXH/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-06T07:20:22Z', 'updated_at': '2025-02-06T07:30:35Z', 'author_association': 'NONE', 'body': '@git-hulk thanks.\n\nNo duplicate data was generated, but this resulted in the loss of a significant amount of data that should have been written.\n\nI controlled the osscluster retry count by setting redis.UniversalOptions.MaxRedirects = -1. \n(https://github.com/redis/go-redis/blob/1139bc3aa9073851f67faa6d68df07a566901dd7/osscluster.go#L45)\n\nHowever, this inevitably led to Moved errors and TryAgain errors as mentioned in this PR(https://github.com/apache/kvrocks/pull/1240). \n\nThe Moved error occurs between the following two commands:\n- CLUSTERX MIGRATE $slot $dst_nodeid\n- CLUSTERX SETSLOT $slot NODE $node_id $new_version\n\nAdditionally, if the interval between these two commands is longer (e.g., 10 seconds), the probability of generating duplicate data increases. The duplicate data primarily appears on the new nodes after scaling out. Following the process I described, this issue can be consistently reproduced.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2639021906/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2639740318', 'html_url': 'https://github.com/apache/kvrocks/issues/2723#issuecomment-2639740318', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2723', 'id': 2639740318, 'node_id': 'IC_kwDODBGmlM6dVz2e', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-06T12:49:35Z', 'updated_at': '2025-02-06T12:49:44Z', 'author_association': 'MEMBER', 'body': '> I controlled the osscluster retry count by setting redis.UniversalOptions.MaxRedirects = -1.\n\n\n@VIVALXH You should set `MaxRetries` to `-1` instead of `MaxRedirects`. Or it will prevent retrying while receiving the TRYAGAIN error. ', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2639740318/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2639839999', 'html_url': 'https://github.com/apache/kvrocks/issues/2723#issuecomment-2639839999', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2723', 'id': 2639839999, 'node_id': 'IC_kwDODBGmlM6dWML_', 'user': {'login': 'VIVALXH', 'id': 98531764, 'node_id': 'U_kgDOBd95tA', 'avatar_url': 'https://avatars.githubusercontent.com/u/98531764?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/VIVALXH', 'html_url': 'https://github.com/VIVALXH', 'followers_url': 'https://api.github.com/users/VIVALXH/followers', 'following_url': 'https://api.github.com/users/VIVALXH/following{/other_user}', 'gists_url': 'https://api.github.com/users/VIVALXH/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/VIVALXH/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/VIVALXH/subscriptions', 'organizations_url': 'https://api.github.com/users/VIVALXH/orgs', 'repos_url': 'https://api.github.com/users/VIVALXH/repos', 'events_url': 'https://api.github.com/users/VIVALXH/events{/privacy}', 'received_events_url': 'https://api.github.com/users/VIVALXH/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-06T13:31:20Z', 'updated_at': '2025-02-06T13:31:20Z', 'author_association': 'NONE', 'body': '@git-hulk \n\nI am using ClusterClient, and internally it uses MaxRedirects instead of MaxRetries in its process function. It worked as expected and achieved our goal of preventing duplicate data. \nhttps://github.com/redis/go-redis/blob/1139bc3aa9073851f67faa6d68df07a566901dd7/osscluster.go#L967\n\nThis suggests that retries might have caused the data duplication, but in reality, we cannot set the retries to zero because it lost amount of data.\n', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2639839999/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2640026684', 'html_url': 'https://github.com/apache/kvrocks/issues/2723#issuecomment-2640026684', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2723', 'id': 2640026684, 'node_id': 'IC_kwDODBGmlM6dW5w8', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-06T14:44:32Z', 'updated_at': '2025-02-06T14:44:32Z', 'author_association': 'MEMBER', 'body': "@VIVALXH The cluster client also supports the [MaxRetries](https://github.com/redis/go-redis/blob/master/osscluster.go#L75), set MaxRedirects=-1 wouldn't retry when occuring the TRYGAIN error.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2640026684/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2640050793', 'html_url': 'https://github.com/apache/kvrocks/issues/2723#issuecomment-2640050793', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2723', 'id': 2640050793, 'node_id': 'IC_kwDODBGmlM6dW_pp', 'user': {'login': 'VIVALXH', 'id': 98531764, 'node_id': 'U_kgDOBd95tA', 'avatar_url': 'https://avatars.githubusercontent.com/u/98531764?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/VIVALXH', 'html_url': 'https://github.com/VIVALXH', 'followers_url': 'https://api.github.com/users/VIVALXH/followers', 'following_url': 'https://api.github.com/users/VIVALXH/following{/other_user}', 'gists_url': 'https://api.github.com/users/VIVALXH/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/VIVALXH/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/VIVALXH/subscriptions', 'organizations_url': 'https://api.github.com/users/VIVALXH/orgs', 'repos_url': 'https://api.github.com/users/VIVALXH/repos', 'events_url': 'https://api.github.com/users/VIVALXH/events{/privacy}', 'received_events_url': 'https://api.github.com/users/VIVALXH/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-06T14:53:35Z', 'updated_at': '2025-02-07T01:35:27Z', 'author_association': 'NONE', 'body': '> Hi [@VIVALXH](https://github.com/VIVALXH)\n> \n> go-redis might retry on network error. Would you mind disabling the retry to see if the issue is still existing? https://github.com/redis/go-redis/blob/1139bc3aa9073851f67faa6d68df07a566901dd7/options.go#L75C2-L75C12\n\n@git-hulk \nNow we conclude that the retry may have caused the duplicate data, but in practice it is impossible to cancel the retry.\n', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2640050793/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2641694474', 'html_url': 'https://github.com/apache/kvrocks/issues/2723#issuecomment-2641694474', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2723', 'id': 2641694474, 'node_id': 'IC_kwDODBGmlM6ddQ8K', 'user': {'login': 'VIVALXH', 'id': 98531764, 'node_id': 'U_kgDOBd95tA', 'avatar_url': 'https://avatars.githubusercontent.com/u/98531764?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/VIVALXH', 'html_url': 'https://github.com/VIVALXH', 'followers_url': 'https://api.github.com/users/VIVALXH/followers', 'following_url': 'https://api.github.com/users/VIVALXH/following{/other_user}', 'gists_url': 'https://api.github.com/users/VIVALXH/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/VIVALXH/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/VIVALXH/subscriptions', 'organizations_url': 'https://api.github.com/users/VIVALXH/orgs', 'repos_url': 'https://api.github.com/users/VIVALXH/repos', 'events_url': 'https://api.github.com/users/VIVALXH/events{/privacy}', 'received_events_url': 'https://api.github.com/users/VIVALXH/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-07T01:35:05Z', 'updated_at': '2025-02-07T01:37:37Z', 'author_association': 'NONE', 'body': "> [@VIVALXH](https://github.com/VIVALXH) The cluster client also supports the [MaxRetries](https://github.com/redis/go-redis/blob/master/osscluster.go#L75), set MaxRedirects=-1 wouldn't retry when occuring the TRYGAIN error.\n\n@git-hulk \nHello, I tried setting `MaxRetries=-1` today, but duplicate data still occurred. Only when I set `MaxRedirects=-1` did the duplicate data stop.\n\nSo I guess the data duplication is caused by retries due to `Moved` errors or `TryAgain` errors?", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2641694474/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2642749957', 'html_url': 'https://github.com/apache/kvrocks/issues/2723#issuecomment-2642749957', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2723', 'id': 2642749957, 'node_id': 'IC_kwDODBGmlM6dhSoF', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-07T12:08:58Z', 'updated_at': '2025-02-07T12:08:58Z', 'author_association': 'MEMBER', 'body': "> So I guess the data duplication is caused by retries due to Moved errors or TryAgain errors?\n\nI'm not quite sure about this. But after considering this issue, it's impossible to push an element exactly once in a list without the deduplicate mechanism. Because we always need to retry once there are any network issues or timeout, or it might lose data.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2642749957/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2643082602', 'html_url': 'https://github.com/apache/kvrocks/issues/2723#issuecomment-2643082602', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2723', 'id': 2643082602, 'node_id': 'IC_kwDODBGmlM6dij1q', 'user': {'login': 'VIVALXH', 'id': 98531764, 'node_id': 'U_kgDOBd95tA', 'avatar_url': 'https://avatars.githubusercontent.com/u/98531764?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/VIVALXH', 'html_url': 'https://github.com/VIVALXH', 'followers_url': 'https://api.github.com/users/VIVALXH/followers', 'following_url': 'https://api.github.com/users/VIVALXH/following{/other_user}', 'gists_url': 'https://api.github.com/users/VIVALXH/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/VIVALXH/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/VIVALXH/subscriptions', 'organizations_url': 'https://api.github.com/users/VIVALXH/orgs', 'repos_url': 'https://api.github.com/users/VIVALXH/repos', 'events_url': 'https://api.github.com/users/VIVALXH/events{/privacy}', 'received_events_url': 'https://api.github.com/users/VIVALXH/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-07T14:26:44Z', 'updated_at': '2025-02-07T14:26:44Z', 'author_association': 'NONE', 'body': "> > So I guess the data duplication is caused by retries due to Moved errors or TryAgain errors?\n> \n> I'm not quite sure about this. But after considering this issue, it's impossible to push an element exactly once in a list without the deduplicate mechanism. Because we always need to retry once there are any network issues or timeout, or it might lose data.\n\nyes, it is impossible to cancel the retry because it lost amount of data. \n\nAt present, the situation of duplicate data only occurs when scaling. Is there any other solution that can avoid this?", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2643082602/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2717: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2580021683', 'html_url': 'https://github.com/apache/kvrocks/pull/2717#issuecomment-2580021683', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2717', 'id': 2580021683, 'node_id': 'IC_kwDODBGmlM6ZyAGz', 'user': {'login': 'jjz921024', 'id': 19649281, 'node_id': 'MDQ6VXNlcjE5NjQ5Mjgx', 'avatar_url': 'https://avatars.githubusercontent.com/u/19649281?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jjz921024', 'html_url': 'https://github.com/jjz921024', 'followers_url': 'https://api.github.com/users/jjz921024/followers', 'following_url': 'https://api.github.com/users/jjz921024/following{/other_user}', 'gists_url': 'https://api.github.com/users/jjz921024/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jjz921024/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jjz921024/subscriptions', 'organizations_url': 'https://api.github.com/users/jjz921024/orgs', 'repos_url': 'https://api.github.com/users/jjz921024/repos', 'events_url': 'https://api.github.com/users/jjz921024/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jjz921024/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-09T12:20:24Z', 'updated_at': '2025-01-09T12:20:24Z', 'author_association': 'CONTRIBUTOR', 'body': '@ltagliamonte-dd Hi. Did you set this config `hash-field-expiration` to yes or run the unit tests in this branch?  If the field has an expiration, we have to check to the field expiration before each read operation.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2580021683/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2581169424', 'html_url': 'https://github.com/apache/kvrocks/pull/2717#issuecomment-2581169424', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2717', 'id': 2581169424, 'node_id': 'IC_kwDODBGmlM6Z2YUQ', 'user': {'login': 'ltagliamonte-dd', 'id': 51684360, 'node_id': 'MDQ6VXNlcjUxNjg0MzYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/51684360?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ltagliamonte-dd', 'html_url': 'https://github.com/ltagliamonte-dd', 'followers_url': 'https://api.github.com/users/ltagliamonte-dd/followers', 'following_url': 'https://api.github.com/users/ltagliamonte-dd/following{/other_user}', 'gists_url': 'https://api.github.com/users/ltagliamonte-dd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ltagliamonte-dd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ltagliamonte-dd/subscriptions', 'organizations_url': 'https://api.github.com/users/ltagliamonte-dd/orgs', 'repos_url': 'https://api.github.com/users/ltagliamonte-dd/repos', 'events_url': 'https://api.github.com/users/ltagliamonte-dd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ltagliamonte-dd/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-09T20:15:47Z', 'updated_at': '2025-01-09T20:16:28Z', 'author_association': 'CONTRIBUTOR', 'body': "> @ltagliamonte-dd Hi. Did you set this config `hash-field-expiration` to yes or run the unit tests in this branch? If the field has an expiration, we have to check to the field expiration before each read operation.\r\n\r\nHello @jjz921024 thanks for getting back to me, yes I did test all hash commands having `hash-field-expiration yes`.\r\nI plan to give another looks at the code today, i'd love to get in touch with you to better understand the check because from what i could briefly see the key expiration check is also done in each cmds implementations.\r\nI coudn't find your contact neither on the kvrocks slack nor zulipchat.\r\ni did run the unit test with no problem the go integration test only a test case is failing (i plan to look at it today):\r\n```\r\n--- FAIL: TestHashFieldExpiration (7.66s)\r\n    --- FAIL: TestHashFieldExpiration/HFE_check_hash_metadata_after_all_of_fields_expired (1.00s)\r\n        hash_test.go:1018: \r\n            \tError Trace:\t/Users/luigi.tagliamonte/Projects/doordash/kvrocks/tests/gocase/unit/type/hash/hash_test.go:1018\r\n            \tError:      \tNot equal: \r\n            \t            \texpected: -2ns\r\n            \t            \tactual  : -1ns\r\n            \tTest:       \tTestHashFieldExpiration/HFE_check_hash_metadata_after_all_of_fields_expired\r\nFAIL\r\nexit status 1\r\nFAIL\tgithub.com/apache/kvrocks/tests/gocase/unit/type/hash\t199.945s\r\n```", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2581169424/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2581652759', 'html_url': 'https://github.com/apache/kvrocks/pull/2717#issuecomment-2581652759', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2717', 'id': 2581652759, 'node_id': 'IC_kwDODBGmlM6Z4OUX', 'user': {'login': 'ltagliamonte', 'id': 10259338, 'node_id': 'MDQ6VXNlcjEwMjU5MzM4', 'avatar_url': 'https://avatars.githubusercontent.com/u/10259338?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ltagliamonte', 'html_url': 'https://github.com/ltagliamonte', 'followers_url': 'https://api.github.com/users/ltagliamonte/followers', 'following_url': 'https://api.github.com/users/ltagliamonte/following{/other_user}', 'gists_url': 'https://api.github.com/users/ltagliamonte/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ltagliamonte/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ltagliamonte/subscriptions', 'organizations_url': 'https://api.github.com/users/ltagliamonte/orgs', 'repos_url': 'https://api.github.com/users/ltagliamonte/repos', 'events_url': 'https://api.github.com/users/ltagliamonte/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ltagliamonte/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-10T03:07:10Z', 'updated_at': '2025-01-10T03:07:10Z', 'author_association': 'NONE', 'body': "@jjz921024 the CI seems to pass removing the check in GetMetadata and fixing GetTime.\r\nWould love to get it touch with you to see if I'm missing something here.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2581652759/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2585068688', 'html_url': 'https://github.com/apache/kvrocks/pull/2717#issuecomment-2585068688', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2717', 'id': 2585068688, 'node_id': 'IC_kwDODBGmlM6aFQSQ', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-11T04:54:33Z', 'updated_at': '2025-01-11T04:54:33Z', 'author_association': 'MEMBER', 'body': '@jjz921024 @ltagliamonte-dd Thanks for your great efforts. I took my first pass in a new PR and generally look in good shape from my perspective. Two nit points can be improved:\r\n\r\n1. Change `ExistValidField` to `GetValidFieldCount`, so that `Hash::Size` can also resue this function.\r\n2. Many places decode the hash metadata and check if it has any valid fields. We can avoid duplicate code by adding a dedicated function to this check. \r\n```C++\r\n    if (metadata.Type() == kRedisHash) {\r\n      HashMetadata hash_metadata(false);\r\n      s = hash_metadata.Decode(rocksdb::Slice(pin_values[i].data(), pin_values[i].size()));\r\n      if (!s.ok()) continue;\r\n      redis::Hash hash_db(storage_, namespace_);\r\n      if (hash_db.ExistValidField(ctx, slice_keys[i], hash_metadata)) {\r\n```', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2585068688/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2585716038', 'html_url': 'https://github.com/apache/kvrocks/pull/2717#issuecomment-2585716038', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2717', 'id': 2585716038, 'node_id': 'IC_kwDODBGmlM6aHuVG', 'user': {'login': 'jjz921024', 'id': 19649281, 'node_id': 'MDQ6VXNlcjE5NjQ5Mjgx', 'avatar_url': 'https://avatars.githubusercontent.com/u/19649281?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jjz921024', 'html_url': 'https://github.com/jjz921024', 'followers_url': 'https://api.github.com/users/jjz921024/followers', 'following_url': 'https://api.github.com/users/jjz921024/following{/other_user}', 'gists_url': 'https://api.github.com/users/jjz921024/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jjz921024/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jjz921024/subscriptions', 'organizations_url': 'https://api.github.com/users/jjz921024/orgs', 'repos_url': 'https://api.github.com/users/jjz921024/repos', 'events_url': 'https://api.github.com/users/jjz921024/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jjz921024/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-12T12:32:25Z', 'updated_at': '2025-01-12T12:41:37Z', 'author_association': 'CONTRIBUTOR', 'body': '@ltagliamonte-dd Hi, I create a [PR #1]( https://github.com/ltagliamonte-dd/kvrocks/pull/1) in your kvrocks fork repo. There are some polish about this feature for your reference. \r\n\r\nThe purpose of this this commit https://github.com/apache/kvrocks/pull/2402/commits/aac63cc83d0457bc1c02061063975e6a1736b8cc is to avoid unnecessary field expiration checks when executing the hset/hmset command, which comes from https://github.com/apache/kvrocks/pull/2402#discussion_r1894554219 @PragmaTwice  suggestion.\r\n\r\nThe  purpose of this this commit https://github.com/apache/kvrocks/pull/2402/commits/73062319eccf80ec06317b3541af8fca3313fd41 is make `ExistValidField` method more general so that Hash::Size can also resue it. which comes from @git-hulk suggestion.\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2585716038/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2587766096', 'html_url': 'https://github.com/apache/kvrocks/pull/2717#issuecomment-2587766096', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2717', 'id': 2587766096, 'node_id': 'IC_kwDODBGmlM6aPi1Q', 'user': {'login': 'ltagliamonte-dd', 'id': 51684360, 'node_id': 'MDQ6VXNlcjUxNjg0MzYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/51684360?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ltagliamonte-dd', 'html_url': 'https://github.com/ltagliamonte-dd', 'followers_url': 'https://api.github.com/users/ltagliamonte-dd/followers', 'following_url': 'https://api.github.com/users/ltagliamonte-dd/following{/other_user}', 'gists_url': 'https://api.github.com/users/ltagliamonte-dd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ltagliamonte-dd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ltagliamonte-dd/subscriptions', 'organizations_url': 'https://api.github.com/users/ltagliamonte-dd/orgs', 'repos_url': 'https://api.github.com/users/ltagliamonte-dd/repos', 'events_url': 'https://api.github.com/users/ltagliamonte-dd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ltagliamonte-dd/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-13T17:40:40Z', 'updated_at': '2025-01-13T17:40:40Z', 'author_association': 'CONTRIBUTOR', 'body': "Hello @jjz921024 thank you for the help on getting this through the finish line.\r\nAs I looked at the PR https://github.com/ltagliamonte-dd/kvrocks/pull/1 I can see that GetMetadata still contains the expiration check on all fields keys, that @PragmaTwice was pointing out as possible perf problem.\r\n\r\nDiscussing this check with @PragmaTwice and @git-hulk on [zulipchat](https://kvrocks.zulipchat.com/) we decided to move the check up in the call stack and perform it only when required. \r\n\r\nAs the CI on this PR is showing (and my verification) it looks like there is no need for expiration check in GetMetadata, I would love to hear from you if i'm missing something and why the check is required. Please join us on zulipchat so we can discuss this in a more interactive way.\r\n\r\nby removing the check in GetMetadata commit https://github.com/apache/kvrocks/commit/aac63cc83d0457bc1c02061063975e6a1736b8cc is not needed\r\n\r\nthank you for commit https://github.com/apache/kvrocks/commit/73062319eccf80ec06317b3541af8fca3313fd41 i will be importing it.\r\n ", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2587766096/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2588436894', 'html_url': 'https://github.com/apache/kvrocks/pull/2717#issuecomment-2588436894', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2717', 'id': 2588436894, 'node_id': 'IC_kwDODBGmlM6aSGme', 'user': {'login': 'ltagliamonte-dd', 'id': 51684360, 'node_id': 'MDQ6VXNlcjUxNjg0MzYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/51684360?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ltagliamonte-dd', 'html_url': 'https://github.com/ltagliamonte-dd', 'followers_url': 'https://api.github.com/users/ltagliamonte-dd/followers', 'following_url': 'https://api.github.com/users/ltagliamonte-dd/following{/other_user}', 'gists_url': 'https://api.github.com/users/ltagliamonte-dd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ltagliamonte-dd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ltagliamonte-dd/subscriptions', 'organizations_url': 'https://api.github.com/users/ltagliamonte-dd/orgs', 'repos_url': 'https://api.github.com/users/ltagliamonte-dd/repos', 'events_url': 'https://api.github.com/users/ltagliamonte-dd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ltagliamonte-dd/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-13T23:21:43Z', 'updated_at': '2025-01-13T23:21:43Z', 'author_association': 'CONTRIBUTOR', 'body': '@git-hulk I gave a look at your suggestion to remove duplicated code, it looks like duplicated but if you look closely they are all slightly different checks... we may be able to refactor with something like this:\r\n```\r\nrocksdb::Status Hash::HandleRedisHash(engine::Context &ctx, const Metadata &metadata, const std::string &value,\r\n                                  const std::string &key, std::function<void(int)> on_valid_field_count);\r\n```\r\nso we pass an handleFunction into the refactored function\r\nHappy to hear if you have better/different ideas about it.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2588436894/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2591480352', 'html_url': 'https://github.com/apache/kvrocks/pull/2717#issuecomment-2591480352', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2717', 'id': 2591480352, 'node_id': 'IC_kwDODBGmlM6adtog', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-15T02:03:16Z', 'updated_at': '2025-01-15T02:03:16Z', 'author_association': 'MEMBER', 'body': "@PragmaTwice @mapleFU @torwig @caipengbo To see if you guys can have a look at this PR. It generally looks good to me. It'd be nice to push this feature forward to avoid pending too long time.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2591480352/reactions', 'total_count': 2, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 2}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2606178958', 'html_url': 'https://github.com/apache/kvrocks/pull/2717#issuecomment-2606178958', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2717', 'id': 2606178958, 'node_id': 'IC_kwDODBGmlM6bVyKO', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-22T03:00:10Z', 'updated_at': '2025-01-22T03:01:09Z', 'author_association': 'MEMBER', 'body': "I'll take a look at this weekend if no other things happen : )\r\n\r\ncc @mapleFU PTAL.\r\n\r\nAlso now we need to solve git conflicts before reviewing and merging. cc @ltagliamonte-dd ", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2606178958/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2606812985', 'html_url': 'https://github.com/apache/kvrocks/pull/2717#issuecomment-2606812985', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2717', 'id': 2606812985, 'node_id': 'IC_kwDODBGmlM6bYM85', 'user': {'login': 'ltagliamonte-dd', 'id': 51684360, 'node_id': 'MDQ6VXNlcjUxNjg0MzYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/51684360?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ltagliamonte-dd', 'html_url': 'https://github.com/ltagliamonte-dd', 'followers_url': 'https://api.github.com/users/ltagliamonte-dd/followers', 'following_url': 'https://api.github.com/users/ltagliamonte-dd/following{/other_user}', 'gists_url': 'https://api.github.com/users/ltagliamonte-dd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ltagliamonte-dd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ltagliamonte-dd/subscriptions', 'organizations_url': 'https://api.github.com/users/ltagliamonte-dd/orgs', 'repos_url': 'https://api.github.com/users/ltagliamonte-dd/repos', 'events_url': 'https://api.github.com/users/ltagliamonte-dd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ltagliamonte-dd/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-22T10:10:03Z', 'updated_at': '2025-01-22T10:10:03Z', 'author_association': 'CONTRIBUTOR', 'body': '@PragmaTwice can you please re-trigger the CI it looks like a flaky test', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2606812985/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2613860368', 'html_url': 'https://github.com/apache/kvrocks/pull/2717#issuecomment-2613860368', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2717', 'id': 2613860368, 'node_id': 'IC_kwDODBGmlM6bzFgQ', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-25T09:25:59Z', 'updated_at': '2025-01-25T09:25:59Z', 'author_association': 'MEMBER', 'body': "> I'm thinking that, `size` in hash metadata will become nearly a useless field while expiration is enabled, so it's a little tricky since we can easily misuse it. cc @git-hulk @mapleFU\r\n\r\nYes, we need to take care of this after introducing the hash expiration feature. But we can try to improve this before formally releasing it.\r\n", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2613860368/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2614439931', 'html_url': 'https://github.com/apache/kvrocks/pull/2717#issuecomment-2614439931', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2717', 'id': 2614439931, 'node_id': 'IC_kwDODBGmlM6b1S_7', 'user': {'login': 'sonarqubecloud[bot]', 'id': 39514782, 'node_id': 'MDM6Qm90Mzk1MTQ3ODI=', 'avatar_url': 'https://avatars.githubusercontent.com/in/12526?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D', 'html_url': 'https://github.com/apps/sonarqubecloud', 'followers_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/received_events', 'type': 'Bot', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-26T14:08:26Z', 'updated_at': '2025-01-26T14:08:26Z', 'author_association': 'NONE', 'body': "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=apache_kvrocks&pullRequest=2717) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [40 New issues](https://sonarcloud.io/project/issues?id=apache_kvrocks&pullRequest=2717&issueStatuses=OPEN,CONFIRMED&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/project/issues?id=apache_kvrocks&pullRequest=2717&issueStatuses=ACCEPTED)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=apache_kvrocks&pullRequest=2717&issueStatuses=OPEN,CONFIRMED&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [69.9% Coverage on New Code](https://sonarcloud.io/component_measures?id=apache_kvrocks&pullRequest=2717&metric=new_coverage&view=list)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [12.6% Duplication on New Code](https://sonarcloud.io/component_measures?id=apache_kvrocks&pullRequest=2717&metric=new_duplicated_lines_density&view=list)  \n  \n[See analysis details on SonarQube Cloud](https://sonarcloud.io/dashboard?id=apache_kvrocks&pullRequest=2717)\n\n", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2614439931/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': {'id': 12526, 'client_id': 'Iv1.dc610988574d1724', 'slug': 'sonarqubecloud', 'node_id': 'MDM6QXBwMTI1MjY=', 'owner': {'login': 'SonarSource', 'id': 545988, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjU0NTk4OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/545988?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/SonarSource', 'html_url': 'https://github.com/SonarSource', 'followers_url': 'https://api.github.com/users/SonarSource/followers', 'following_url': 'https://api.github.com/users/SonarSource/following{/other_user}', 'gists_url': 'https://api.github.com/users/SonarSource/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/SonarSource/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/SonarSource/subscriptions', 'organizations_url': 'https://api.github.com/users/SonarSource/orgs', 'repos_url': 'https://api.github.com/users/SonarSource/repos', 'events_url': 'https://api.github.com/users/SonarSource/events{/privacy}', 'received_events_url': 'https://api.github.com/users/SonarSource/received_events', 'type': 'Organization', 'user_view_type': 'public', 'site_admin': False}, 'name': 'SonarQubeCloud', 'description': "\r\nSonarQube Cloud (formerly SonarCloud) is a SaaS code analysis tool designed to detect coding issues in 30+ languages, frameworks, and IaC platforms.Your code is checked against an extensive set of rules that cover many attributes of code, such as maintainability, reliability, and security issues, on each merge/pull request.\r\n\r\nSonarQube Cloud integrates seamlessly into your GitHub workflow and provides clear guidance for resolving any code quality and security issues detected. The majority of popular languages can be analyzed automatically; no configuration is required!\r\n\r\nWith [SonarQube Cloud](https://sonarcloud.io/github), you get:\r\n\r\n-   Fast, precise static analysis and feedback on your code\r\n    \r\n-   Support for popular languages, frameworks, and IaC tools\r\n    \r\n-   Free analysis for open-source projects and private projects up to max 50k LoC\r\n    \r\n-   Automatic analysis of pull requests and branches with results reported inline\r\n    \r\n-   IDE Support with [SonarQube for IDE](https://www.sonarsource.com/products/sonarlint/) integration\r\n    \r\n-   Quality Gate (added as a GitHub check) acting at two different levels - first, preventing you from merging pull requests that contain issues - and later, helping you to release only clean, safe code\r\n    \r\n-   Sign up for SonarQube free tier and begin scanning your private and public repositories\r\n    \r\n\r\nA [GitHub Action](https://github.com/marketplace/actions/sonarcloud-scan) is available in the marketplace to make it easy for you (for projects where automatic analysis isn't available). SonarQube Cloud also integrates smoothly with Jenkins, CircleCI, TravisCI, CirrusCI, and many other tools.\r\n\r\nA free tier is available that allows you to explore the benefits of SonarQube Cloud using your public and private repositories. We also provide a no-commitment, [14-day trial](https://www.sonarsource.com/products/sonarcloud/signup/) of SonarQube Cloud Team for unlimited team members, up to 1.9M LoC, AI CodeFix recommendations, and more. No need to speak with a sales rep or request a license key - get automatic code analysis results on your private projects in minutes! Want to see more examples of SonarCloud in action? You can [explore current Open Source projects in SonarCloud](https://sonarcloud.io/explore/projects?sort=-analysis_date) that are using the [Clean as You Code](https://www.sonarsource.com/solutions/our-unique-approach/) methodology.\r\n\r\nWhat are you waiting for? SonarQube Cloud helps you consistently deliver cleaner, secure software that future developers will appreciate and your users will love. Start writing Clean Code. [Now](https://www.sonarsource.com/products/sonarcloud/signup/)!", 'external_url': 'https://sonarcloud.io', 'html_url': 'https://github.com/apps/sonarqubecloud', 'created_at': '2018-05-22T07:36:37Z', 'updated_at': '2024-12-19T05:52:18Z', 'permissions': {'checks': 'write', 'contents': 'read', 'emails': 'read', 'members': 'read', 'metadata': 'read', 'pull_requests': 'write', 'security_events': 'write', 'statuses': 'write'}, 'events': ['code_scanning_alert', 'organization', 'pull_request', 'push', 'repository']}}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2649428403', 'html_url': 'https://github.com/apache/kvrocks/pull/2717#issuecomment-2649428403', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2717', 'id': 2649428403, 'node_id': 'IC_kwDODBGmlM6d6xGz', 'user': {'login': 'ltagliamonte-dd', 'id': 51684360, 'node_id': 'MDQ6VXNlcjUxNjg0MzYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/51684360?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ltagliamonte-dd', 'html_url': 'https://github.com/ltagliamonte-dd', 'followers_url': 'https://api.github.com/users/ltagliamonte-dd/followers', 'following_url': 'https://api.github.com/users/ltagliamonte-dd/following{/other_user}', 'gists_url': 'https://api.github.com/users/ltagliamonte-dd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ltagliamonte-dd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ltagliamonte-dd/subscriptions', 'organizations_url': 'https://api.github.com/users/ltagliamonte-dd/orgs', 'repos_url': 'https://api.github.com/users/ltagliamonte-dd/repos', 'events_url': 'https://api.github.com/users/ltagliamonte-dd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ltagliamonte-dd/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-10T22:46:41Z', 'updated_at': '2025-02-10T22:46:41Z', 'author_association': 'CONTRIBUTOR', 'body': 'Hello Folks any updates on review/merge this PR?\r\nCc @PragmaTwice @git-hulk ?', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2649428403/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2715: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2586076782', 'html_url': 'https://github.com/apache/kvrocks/issues/2715#issuecomment-2586076782', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2715', 'id': 2586076782, 'node_id': 'IC_kwDODBGmlM6aJGZu', 'user': {'login': 'hongleis', 'id': 24707850, 'node_id': 'MDQ6VXNlcjI0NzA3ODUw', 'avatar_url': 'https://avatars.githubusercontent.com/u/24707850?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hongleis', 'html_url': 'https://github.com/hongleis', 'followers_url': 'https://api.github.com/users/hongleis/followers', 'following_url': 'https://api.github.com/users/hongleis/following{/other_user}', 'gists_url': 'https://api.github.com/users/hongleis/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hongleis/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hongleis/subscriptions', 'organizations_url': 'https://api.github.com/users/hongleis/orgs', 'repos_url': 'https://api.github.com/users/hongleis/repos', 'events_url': 'https://api.github.com/users/hongleis/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hongleis/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-13T02:44:53Z', 'updated_at': '2025-01-13T02:44:53Z', 'author_association': 'NONE', 'body': 'I found the same issue in my tests.\r\nThere are 3 nodes in my cluster before migration, after migration, there are 5 nodes in my cluster.\r\nHere is my test steps:\r\n\r\n1. kvrocks version 2.9.0\r\n2. before migration: use` scan` command to check all the master nodes, there are 167005770 keys;\r\n3. set `migrate-type` =`raw-key-value` in kvrocks.conf\r\n4.  call the kv controller migrate API: {{host}}/api/v1/namespaces/{{namespace}}/clusters/{{cluster}}/migrate\r\n5.  call the kv controller API to check the migration is done: http://{{host}}/api/v1/namespaces/akv/clusters/kvrocks_29_test_migrate\r\n6. after migration: use` scan` command to check all the master nodes, there are 167016655 keys;\r\n7. there are 10885 keys depulicated after migration done.\r\n\r\nfeel free to contact me for more test details', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2586076782/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2586077360', 'html_url': 'https://github.com/apache/kvrocks/issues/2715#issuecomment-2586077360', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2715', 'id': 2586077360, 'node_id': 'IC_kwDODBGmlM6aJGiw', 'user': {'login': 'hongleis', 'id': 24707850, 'node_id': 'MDQ6VXNlcjI0NzA3ODUw', 'avatar_url': 'https://avatars.githubusercontent.com/u/24707850?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hongleis', 'html_url': 'https://github.com/hongleis', 'followers_url': 'https://api.github.com/users/hongleis/followers', 'following_url': 'https://api.github.com/users/hongleis/following{/other_user}', 'gists_url': 'https://api.github.com/users/hongleis/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hongleis/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hongleis/subscriptions', 'organizations_url': 'https://api.github.com/users/hongleis/orgs', 'repos_url': 'https://api.github.com/users/hongleis/repos', 'events_url': 'https://api.github.com/users/hongleis/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hongleis/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-13T02:45:48Z', 'updated_at': '2025-01-13T02:45:48Z', 'author_association': 'NONE', 'body': '@git-hulk ', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2586077360/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2586140197', 'html_url': 'https://github.com/apache/kvrocks/issues/2715#issuecomment-2586140197', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2715', 'id': 2586140197, 'node_id': 'IC_kwDODBGmlM6aJV4l', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-13T04:10:10Z', 'updated_at': '2025-01-13T04:10:10Z', 'author_association': 'MEMBER', 'body': '@903174293 @hongleis Thanks for your report. I have missed this issue in the past few days. I want to know:\r\n\r\n- Are all of those duplicated keys still living in the source node?\r\n- Do those duplicated keys have any new writes while migrating?', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2586140197/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2586529667', 'html_url': 'https://github.com/apache/kvrocks/issues/2715#issuecomment-2586529667', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2715', 'id': 2586529667, 'node_id': 'IC_kwDODBGmlM6aK0-D', 'user': {'login': '903174293', 'id': 32761339, 'node_id': 'MDQ6VXNlcjMyNzYxMzM5', 'avatar_url': 'https://avatars.githubusercontent.com/u/32761339?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/903174293', 'html_url': 'https://github.com/903174293', 'followers_url': 'https://api.github.com/users/903174293/followers', 'following_url': 'https://api.github.com/users/903174293/following{/other_user}', 'gists_url': 'https://api.github.com/users/903174293/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/903174293/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/903174293/subscriptions', 'organizations_url': 'https://api.github.com/users/903174293/orgs', 'repos_url': 'https://api.github.com/users/903174293/repos', 'events_url': 'https://api.github.com/users/903174293/events{/privacy}', 'received_events_url': 'https://api.github.com/users/903174293/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-13T08:56:33Z', 'updated_at': '2025-01-13T08:56:33Z', 'author_association': 'NONE', 'body': '> @903174293 @hongleis Thanks for your report. I have missed this issue in the past few days. I want to know:\r\n> \r\n> * Are all of those duplicated keys still living in the source node?\r\n> * Do those duplicated keys have any new writes while migrating?\r\n\r\nyes,but it cannot be found using get, but can be found using keys*;\r\nno', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2586529667/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2597240029', 'html_url': 'https://github.com/apache/kvrocks/issues/2715#issuecomment-2597240029', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2715', 'id': 2597240029, 'node_id': 'IC_kwDODBGmlM6azrzd', 'user': {'login': 'hongleis', 'id': 24707850, 'node_id': 'MDQ6VXNlcjI0NzA3ODUw', 'avatar_url': 'https://avatars.githubusercontent.com/u/24707850?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hongleis', 'html_url': 'https://github.com/hongleis', 'followers_url': 'https://api.github.com/users/hongleis/followers', 'following_url': 'https://api.github.com/users/hongleis/following{/other_user}', 'gists_url': 'https://api.github.com/users/hongleis/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hongleis/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hongleis/subscriptions', 'organizations_url': 'https://api.github.com/users/hongleis/orgs', 'repos_url': 'https://api.github.com/users/hongleis/repos', 'events_url': 'https://api.github.com/users/hongleis/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hongleis/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-17T01:24:32Z', 'updated_at': '2025-01-17T01:24:32Z', 'author_association': 'NONE', 'body': '\n@git-hulk  for the duplicated key, it located in both source node and destionation node. when we use the redis get command ,it will go to the destionation node to search. But I connect to the source node（not cluster mode） and use redis scan command to search, I can find the deplicated key.  In a word, it did not affect the first migration, but when we migration mulitiple times , i am afraid the depulicated keys which not cleaned may be the dirty values \n', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2597240029/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2597337125', 'html_url': 'https://github.com/apache/kvrocks/issues/2715#issuecomment-2597337125', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2715', 'id': 2597337125, 'node_id': 'IC_kwDODBGmlM6a0Dgl', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-17T03:03:51Z', 'updated_at': '2025-01-17T03:04:17Z', 'author_association': 'MEMBER', 'body': '@hongleis Got your point, thanks for both of your information. Will take a look at this issue when I get time.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2597337125/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2703: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2571341173', 'html_url': 'https://github.com/apache/kvrocks/pull/2703#issuecomment-2571341173', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2703', 'id': 2571341173, 'node_id': 'IC_kwDODBGmlM6ZQ411', 'user': {'login': 'sonarqubecloud[bot]', 'id': 39514782, 'node_id': 'MDM6Qm90Mzk1MTQ3ODI=', 'avatar_url': 'https://avatars.githubusercontent.com/in/12526?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D', 'html_url': 'https://github.com/apps/sonarqubecloud', 'followers_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/received_events', 'type': 'Bot', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-04T15:57:55Z', 'updated_at': '2025-01-04T15:57:55Z', 'author_association': 'NONE', 'body': "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=apache_kvrocks&pullRequest=2703) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [5 New issues](https://sonarcloud.io/project/issues?id=apache_kvrocks&pullRequest=2703&issueStatuses=OPEN,CONFIRMED&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/project/issues?id=apache_kvrocks&pullRequest=2703&issueStatuses=ACCEPTED)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=apache_kvrocks&pullRequest=2703&issueStatuses=OPEN,CONFIRMED&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [59.7% Coverage on New Code](https://sonarcloud.io/component_measures?id=apache_kvrocks&pullRequest=2703&metric=new_coverage&view=list)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [1.2% Duplication on New Code](https://sonarcloud.io/component_measures?id=apache_kvrocks&pullRequest=2703&metric=new_duplicated_lines_density&view=list)  \n  \n[See analysis details on SonarQube Cloud](https://sonarcloud.io/dashboard?id=apache_kvrocks&pullRequest=2703)\n\n", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2571341173/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': {'id': 12526, 'client_id': 'Iv1.dc610988574d1724', 'slug': 'sonarqubecloud', 'node_id': 'MDM6QXBwMTI1MjY=', 'owner': {'login': 'SonarSource', 'id': 545988, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjU0NTk4OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/545988?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/SonarSource', 'html_url': 'https://github.com/SonarSource', 'followers_url': 'https://api.github.com/users/SonarSource/followers', 'following_url': 'https://api.github.com/users/SonarSource/following{/other_user}', 'gists_url': 'https://api.github.com/users/SonarSource/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/SonarSource/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/SonarSource/subscriptions', 'organizations_url': 'https://api.github.com/users/SonarSource/orgs', 'repos_url': 'https://api.github.com/users/SonarSource/repos', 'events_url': 'https://api.github.com/users/SonarSource/events{/privacy}', 'received_events_url': 'https://api.github.com/users/SonarSource/received_events', 'type': 'Organization', 'user_view_type': 'public', 'site_admin': False}, 'name': 'SonarQubeCloud', 'description': "\r\nSonarQube Cloud (formerly SonarCloud) is a SaaS code analysis tool designed to detect coding issues in 30+ languages, frameworks, and IaC platforms.Your code is checked against an extensive set of rules that cover many attributes of code, such as maintainability, reliability, and security issues, on each merge/pull request.\r\n\r\nSonarQube Cloud integrates seamlessly into your GitHub workflow and provides clear guidance for resolving any code quality and security issues detected. The majority of popular languages can be analyzed automatically; no configuration is required!\r\n\r\nWith [SonarQube Cloud](https://sonarcloud.io/github), you get:\r\n\r\n-   Fast, precise static analysis and feedback on your code\r\n    \r\n-   Support for popular languages, frameworks, and IaC tools\r\n    \r\n-   Free analysis for open-source projects and private projects up to max 50k LoC\r\n    \r\n-   Automatic analysis of pull requests and branches with results reported inline\r\n    \r\n-   IDE Support with [SonarQube for IDE](https://www.sonarsource.com/products/sonarlint/) integration\r\n    \r\n-   Quality Gate (added as a GitHub check) acting at two different levels - first, preventing you from merging pull requests that contain issues - and later, helping you to release only clean, safe code\r\n    \r\n-   Sign up for SonarQube free tier and begin scanning your private and public repositories\r\n    \r\n\r\nA [GitHub Action](https://github.com/marketplace/actions/sonarcloud-scan) is available in the marketplace to make it easy for you (for projects where automatic analysis isn't available). SonarQube Cloud also integrates smoothly with Jenkins, CircleCI, TravisCI, CirrusCI, and many other tools.\r\n\r\nA free tier is available that allows you to explore the benefits of SonarQube Cloud using your public and private repositories. We also provide a no-commitment, [14-day trial](https://www.sonarsource.com/products/sonarcloud/signup/) of SonarQube Cloud Team for unlimited team members, up to 1.9M LoC, AI CodeFix recommendations, and more. No need to speak with a sales rep or request a license key - get automatic code analysis results on your private projects in minutes! Want to see more examples of SonarCloud in action? You can [explore current Open Source projects in SonarCloud](https://sonarcloud.io/explore/projects?sort=-analysis_date) that are using the [Clean as You Code](https://www.sonarsource.com/solutions/our-unique-approach/) methodology.\r\n\r\nWhat are you waiting for? SonarQube Cloud helps you consistently deliver cleaner, secure software that future developers will appreciate and your users will love. Start writing Clean Code. [Now](https://www.sonarsource.com/products/sonarcloud/signup/)!", 'external_url': 'https://sonarcloud.io', 'html_url': 'https://github.com/apps/sonarqubecloud', 'created_at': '2018-05-22T07:36:37Z', 'updated_at': '2024-12-19T05:52:18Z', 'permissions': {'checks': 'write', 'contents': 'read', 'emails': 'read', 'members': 'read', 'metadata': 'read', 'pull_requests': 'write', 'security_events': 'write', 'statuses': 'write'}, 'events': ['code_scanning_alert', 'organization', 'pull_request', 'push', 'repository']}}]
Comments for Issue 2642: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2629285853', 'html_url': 'https://github.com/apache/kvrocks/issues/2642#issuecomment-2629285853', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2642', 'id': 2629285853, 'node_id': 'IC_kwDODBGmlM6ct7fd', 'user': {'login': 'lyang24', 'id': 20375035, 'node_id': 'MDQ6VXNlcjIwMzc1MDM1', 'avatar_url': 'https://avatars.githubusercontent.com/u/20375035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lyang24', 'html_url': 'https://github.com/lyang24', 'followers_url': 'https://api.github.com/users/lyang24/followers', 'following_url': 'https://api.github.com/users/lyang24/following{/other_user}', 'gists_url': 'https://api.github.com/users/lyang24/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lyang24/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lyang24/subscriptions', 'organizations_url': 'https://api.github.com/users/lyang24/orgs', 'repos_url': 'https://api.github.com/users/lyang24/repos', 'events_url': 'https://api.github.com/users/lyang24/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lyang24/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-02T07:51:51Z', 'updated_at': '2025-02-02T07:51:51Z', 'author_association': 'CONTRIBUTOR', 'body': 'Hi i would like to take a shot with this issue. I ran the go test locally do you think its a good idea to take a look at the tests that rans over 20s?\n\n```\nok  \tgithub.com/apache/kvrocks/tests/gocase/integration/cluster\t26.165s\nok  \tgithub.com/apache/kvrocks/tests/gocase/integration/replication\t119.125s\nok  \tgithub.com/apache/kvrocks/tests/gocase/integration/slotmigrate\t95.155s\nok  \tgithub.com/apache/kvrocks/tests/gocase/unit/config\t27.430s\nok  \tgithub.com/apache/kvrocks/tests/gocase/unit/type/list\t49.528s\nok  \tgithub.com/apache/kvrocks/tests/gocase/unit/scripting\t20.098s\nok  \tgithub.com/apache/kvrocks/tests/gocase/unit/type/bitmap\t34.487s\nok  \tgithub.com/apache/kvrocks/tests/gocase/unit/type/zset\t21.468s\n```', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2629285853/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2629301686', 'html_url': 'https://github.com/apache/kvrocks/issues/2642#issuecomment-2629301686', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2642', 'id': 2629301686, 'node_id': 'IC_kwDODBGmlM6ct_W2', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-02T08:44:33Z', 'updated_at': '2025-02-02T08:45:04Z', 'author_association': 'MEMBER', 'body': "Yeah you can also pick a random workflow run and check the log, e.g.\nhttps://github.com/apache/kvrocks/actions/runs/13096047337/job/36538680033#step:17:55\n\nYou can see that execution time of lots of tests can exceed 100s. And it's similar to the list you give.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2629301686/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2629744642', 'html_url': 'https://github.com/apache/kvrocks/issues/2642#issuecomment-2629744642', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2642', 'id': 2629744642, 'node_id': 'IC_kwDODBGmlM6cvrgC', 'user': {'login': 'lyang24', 'id': 20375035, 'node_id': 'MDQ6VXNlcjIwMzc1MDM1', 'avatar_url': 'https://avatars.githubusercontent.com/u/20375035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lyang24', 'html_url': 'https://github.com/lyang24', 'followers_url': 'https://api.github.com/users/lyang24/followers', 'following_url': 'https://api.github.com/users/lyang24/following{/other_user}', 'gists_url': 'https://api.github.com/users/lyang24/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lyang24/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lyang24/subscriptions', 'organizations_url': 'https://api.github.com/users/lyang24/orgs', 'repos_url': 'https://api.github.com/users/lyang24/repos', 'events_url': 'https://api.github.com/users/lyang24/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lyang24/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-03T02:17:05Z', 'updated_at': '2025-02-03T06:09:27Z', 'author_association': 'CONTRIBUTOR', 'body': 'We can try run tests in parallel. Then we can identify the bottle neck cases to further improve\n\nFor example i added some debug logging on github.com/apache/kvrocks/tests/gocase/integration/replication looks like\nTestReplicationWithLimitSpeed is the bottle neck\n```\nTestReplicationAnnounceIP took 2.147078875s\nTestShouldNotReplicate took 2.154190125s\nTestReplicationContinueRunning took 2.247801667s\nTestReplicationChangePassword took 3.255705917s\nTestReplicationWithMultiSlaves took 3.894940417s\nTestReplicationShareCheckpoint took 4.605201458s\nTestFullSyncReplication took 10.106044083s\nTestShouldNotReplicate took 10.585230084s\nTestReplicationWithLimitSpeed took 29.336704s\n```\n\nAnd for unit tests with a lot of sub tests such as the bitmap tests I wonder if we can change the key of the different sub cases so they can be safely running concurrently with isolation?\n\nthis is an example of both case access foo key that is probably not safe to run in parallel.\n\n```\nt.Run("GETEX bitmap no option", func(t *testing.T) {\n\t\trequire.NoError(t, rdb.Del(ctx, "foo").Err())\n\t\trequire.NoError(t, rdb.SetBit(ctx, "foo", 0, 0).Err())\n\t\trequire.Equal(t, "\\x00", rdb.GetEx(ctx, "foo", 0).Val())\n\n\t\t// Make sure the expiration time is not erased by plain GETEX.\n\t\trequire.NoError(t, rdb.Expire(ctx, "foo", 10*time.Second).Err())\n\t\trequire.Equal(t, "\\x00", rdb.Do(ctx, "getex", "foo").Val())\n\t\tutil.BetweenValues(t, rdb.TTL(ctx, "foo").Val(), 5*time.Second, 10*time.Second)\n\t})\n\n\tt.Run("GETEX bitmap EX/EXAT/PX/PXAT option", func(t *testing.T) {\n\t\trequire.NoError(t, rdb.Del(ctx, "foo").Err())\n\t\trequire.NoError(t, rdb.SetBit(ctx, "foo", 0, 0).Err())\n```', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2629744642/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2629770047', 'html_url': 'https://github.com/apache/kvrocks/issues/2642#issuecomment-2629770047', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2642', 'id': 2629770047, 'node_id': 'IC_kwDODBGmlM6cvxs_', 'user': {'login': 'lyang24', 'id': 20375035, 'node_id': 'MDQ6VXNlcjIwMzc1MDM1', 'avatar_url': 'https://avatars.githubusercontent.com/u/20375035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lyang24', 'html_url': 'https://github.com/lyang24', 'followers_url': 'https://api.github.com/users/lyang24/followers', 'following_url': 'https://api.github.com/users/lyang24/following{/other_user}', 'gists_url': 'https://api.github.com/users/lyang24/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lyang24/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lyang24/subscriptions', 'organizations_url': 'https://api.github.com/users/lyang24/orgs', 'repos_url': 'https://api.github.com/users/lyang24/repos', 'events_url': 'https://api.github.com/users/lyang24/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lyang24/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-03T02:40:39Z', 'updated_at': '2025-02-03T02:40:39Z', 'author_association': 'CONTRIBUTOR', 'body': 'geo was the longest test in ci \n`ok  \tgithub.com/apache/kvrocks/tests/gocase/unit/geo\t226.507s`\nit was just a big function runs under a different config \nhttps://github.com/apache/kvrocks/blob/b8b969d80b9183106284049ff5338d0156ee5686/tests/gocase/unit/geo/geo_test.go#L90\n\nwe can look into break down the testGeo into smaller functions that can be parallelized ', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2629770047/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2630141894', 'html_url': 'https://github.com/apache/kvrocks/issues/2642#issuecomment-2630141894', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2642', 'id': 2630141894, 'node_id': 'IC_kwDODBGmlM6cxMfG', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-03T07:12:23Z', 'updated_at': '2025-02-03T07:12:40Z', 'author_association': 'MEMBER', 'body': '> And for unit tests with a lot of sub tests such as the bitmap tests I wonder if we can change the key of the different sub cases so they can be safely running concurrently with isolation?\n\nYeah it can be changed as long as the test case keeps its functionality.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2630141894/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2628: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2445657155', 'html_url': 'https://github.com/apache/kvrocks/issues/2628#issuecomment-2445657155', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2628', 'id': 2445657155, 'node_id': 'IC_kwDODBGmlM6RxcRD', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-30T01:57:01Z', 'updated_at': '2024-10-30T01:57:01Z', 'author_association': 'MEMBER', 'body': "@Taymindis Delete keys with the specified prefix would be easy in Kvrocks, but Redis now doesn't have a command for this and we need to invent one if we would like to support this. What do you think? @apache/kvrocks-committers ", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2445657155/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2447536142', 'html_url': 'https://github.com/apache/kvrocks/issues/2628#issuecomment-2447536142', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2628', 'id': 2447536142, 'node_id': 'IC_kwDODBGmlM6R4nAO', 'user': {'login': 'ShooterIT', 'id': 18362176, 'node_id': 'MDQ6VXNlcjE4MzYyMTc2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18362176?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ShooterIT', 'html_url': 'https://github.com/ShooterIT', 'followers_url': 'https://api.github.com/users/ShooterIT/followers', 'following_url': 'https://api.github.com/users/ShooterIT/following{/other_user}', 'gists_url': 'https://api.github.com/users/ShooterIT/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ShooterIT/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ShooterIT/subscriptions', 'organizations_url': 'https://api.github.com/users/ShooterIT/orgs', 'repos_url': 'https://api.github.com/users/ShooterIT/repos', 'events_url': 'https://api.github.com/users/ShooterIT/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ShooterIT/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-30T15:23:56Z', 'updated_at': '2024-10-30T15:23:56Z', 'author_association': 'MEMBER', 'body': 'As all keys are sorted by lexicographic order in kvrocks, maybe we can think of a set of commands about key prefix operation, of course, deleting keys by the prefix.\r\noh `scan` already supports key pattern, but kvrocks is faster than expected', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2447536142/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2447562875', 'html_url': 'https://github.com/apache/kvrocks/issues/2628#issuecomment-2447562875', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2628', 'id': 2447562875, 'node_id': 'IC_kwDODBGmlM6R4th7', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-30T15:32:32Z', 'updated_at': '2024-10-30T15:32:40Z', 'author_association': 'MEMBER', 'body': '> oh scan already supports key pattern, but kvrocks is faster than expected\r\n\r\n@ShooterIT Yes, another fast path is to use `DeleteRange` for the deletion command.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2447562875/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2617: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2449438681', 'html_url': 'https://github.com/apache/kvrocks/issues/2617#issuecomment-2449438681', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2617', 'id': 2449438681, 'node_id': 'IC_kwDODBGmlM6R_3fZ', 'user': {'login': 'PokIsemaine', 'id': 46661603, 'node_id': 'MDQ6VXNlcjQ2NjYxNjAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/46661603?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PokIsemaine', 'html_url': 'https://github.com/PokIsemaine', 'followers_url': 'https://api.github.com/users/PokIsemaine/followers', 'following_url': 'https://api.github.com/users/PokIsemaine/following{/other_user}', 'gists_url': 'https://api.github.com/users/PokIsemaine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PokIsemaine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PokIsemaine/subscriptions', 'organizations_url': 'https://api.github.com/users/PokIsemaine/orgs', 'repos_url': 'https://api.github.com/users/PokIsemaine/repos', 'events_url': 'https://api.github.com/users/PokIsemaine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PokIsemaine/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-31T09:44:37Z', 'updated_at': '2024-10-31T09:44:37Z', 'author_association': 'CONTRIBUTOR', 'body': 'I\'m guessing that\'s because the `WriteArgs` command was actually accepted by the server later than the next two RPUSHs\r\n```\r\nrequire.NoError(t, rdb.RPush(ctx, key2, "one", "two").Err()) // 1\r\nrequire.NoError(t, rdb.RPush(ctx, key1, "ONE", "TWO").Err()) // 2\r\nrequire.NoError(t, rd.WriteArgs("blmpop", "1", "2", key1, key2, direction, "count", "2")) // 3\r\n```\r\nThe most simple solution is to add a sleep, but this can be confusing in testing, because some `WriteArgs` don\'t require the code to be executed exactly in the order of the code, as long as it has been executed, and sleep is not required.\r\n\r\nWe may need a clearer way to articulate our testing expectations, what do you think?', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2449438681/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2449484719', 'html_url': 'https://github.com/apache/kvrocks/issues/2617#issuecomment-2449484719', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2617', 'id': 2449484719, 'node_id': 'IC_kwDODBGmlM6SACuv', 'user': {'login': 'PokIsemaine', 'id': 46661603, 'node_id': 'MDQ6VXNlcjQ2NjYxNjAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/46661603?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PokIsemaine', 'html_url': 'https://github.com/PokIsemaine', 'followers_url': 'https://api.github.com/users/PokIsemaine/followers', 'following_url': 'https://api.github.com/users/PokIsemaine/following{/other_user}', 'gists_url': 'https://api.github.com/users/PokIsemaine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PokIsemaine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PokIsemaine/subscriptions', 'organizations_url': 'https://api.github.com/users/PokIsemaine/orgs', 'repos_url': 'https://api.github.com/users/PokIsemaine/repos', 'events_url': 'https://api.github.com/users/PokIsemaine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PokIsemaine/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-31T10:05:37Z', 'updated_at': '2024-10-31T10:10:53Z', 'author_association': 'CONTRIBUTOR', 'body': "I'd like to eliminate sleep from the test as much as possible, or add comments to sleep.\r\n\r\n**Keep and add comments**\r\n* Temporarily patch for known issues, e.g.: https://github.com/apache/kvrocks/issues/2473\r\n* You really need to use sleep to ensure the order of command execution\r\n\r\n**Identify and eliminate:** Unnecessary sleep\r\n\r\n**Identify and eliminate/ add comments:** Unclear why sleep is needed. They might be hiding some issues. We might need to clear them all first and then determine whether we need to sleep and why we need to do so.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2449484719/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2610: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2423422149', 'html_url': 'https://github.com/apache/kvrocks/issues/2610#issuecomment-2423422149', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2610', 'id': 2423422149, 'node_id': 'IC_kwDODBGmlM6QcnzF', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-19T01:10:10Z', 'updated_at': '2024-10-19T01:10:10Z', 'author_association': 'MEMBER', 'body': '@Rafiot Thanks for your report. Redis did have a different reply behavior when count is 1.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2423422149/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2423788447', 'html_url': 'https://github.com/apache/kvrocks/issues/2610#issuecomment-2423788447', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2610', 'id': 2423788447, 'node_id': 'IC_kwDODBGmlM6QeBOf', 'user': {'login': 'Rafiot', 'id': 248875, 'node_id': 'MDQ6VXNlcjI0ODg3NQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/248875?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Rafiot', 'html_url': 'https://github.com/Rafiot', 'followers_url': 'https://api.github.com/users/Rafiot/followers', 'following_url': 'https://api.github.com/users/Rafiot/following{/other_user}', 'gists_url': 'https://api.github.com/users/Rafiot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Rafiot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Rafiot/subscriptions', 'organizations_url': 'https://api.github.com/users/Rafiot/orgs', 'repos_url': 'https://api.github.com/users/Rafiot/repos', 'events_url': 'https://api.github.com/users/Rafiot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Rafiot/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-19T11:56:48Z', 'updated_at': '2024-10-19T11:56:48Z', 'author_association': 'NONE', 'body': "yep. I don't know if it is something to change or not, I don't see a good solution to that, as you will either break existing kvrocks-only tools in a very weird way, or keep the difference. \r\n\r\nIt would probably make sense to document the difference somewhere so people don't spend hours debugging it, and make sure to always pass the count parameter.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2423788447/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2423789303', 'html_url': 'https://github.com/apache/kvrocks/issues/2610#issuecomment-2423789303', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2610', 'id': 2423789303, 'node_id': 'IC_kwDODBGmlM6QeBb3', 'user': {'login': 'mapleFU', 'id': 24351052, 'node_id': 'MDQ6VXNlcjI0MzUxMDUy', 'avatar_url': 'https://avatars.githubusercontent.com/u/24351052?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mapleFU', 'html_url': 'https://github.com/mapleFU', 'followers_url': 'https://api.github.com/users/mapleFU/followers', 'following_url': 'https://api.github.com/users/mapleFU/following{/other_user}', 'gists_url': 'https://api.github.com/users/mapleFU/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mapleFU/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mapleFU/subscriptions', 'organizations_url': 'https://api.github.com/users/mapleFU/orgs', 'repos_url': 'https://api.github.com/users/mapleFU/repos', 'events_url': 'https://api.github.com/users/mapleFU/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mapleFU/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-19T12:00:31Z', 'updated_at': '2024-10-19T12:00:31Z', 'author_association': 'MEMBER', 'body': "I'm ok with changing this to same as redis 🤔", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2423789303/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2423967976', 'html_url': 'https://github.com/apache/kvrocks/issues/2610#issuecomment-2423967976', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2610', 'id': 2423967976, 'node_id': 'IC_kwDODBGmlM6QetDo', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-19T15:30:26Z', 'updated_at': '2024-10-19T15:30:26Z', 'author_association': 'MEMBER', 'body': 'Yes, we can fix it to align with Redis.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2423967976/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2423983226', 'html_url': 'https://github.com/apache/kvrocks/issues/2610#issuecomment-2423983226', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2610', 'id': 2423983226, 'node_id': 'IC_kwDODBGmlM6Qewx6', 'user': {'login': 'Rafiot', 'id': 248875, 'node_id': 'MDQ6VXNlcjI0ODg3NQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/248875?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Rafiot', 'html_url': 'https://github.com/Rafiot', 'followers_url': 'https://api.github.com/users/Rafiot/followers', 'following_url': 'https://api.github.com/users/Rafiot/following{/other_user}', 'gists_url': 'https://api.github.com/users/Rafiot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Rafiot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Rafiot/subscriptions', 'organizations_url': 'https://api.github.com/users/Rafiot/orgs', 'repos_url': 'https://api.github.com/users/Rafiot/repos', 'events_url': 'https://api.github.com/users/Rafiot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Rafiot/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-19T15:36:41Z', 'updated_at': '2024-10-19T15:36:41Z', 'author_association': 'NONE', 'body': "That's an option, but it will break existing codebases:\r\n\r\n```python\r\nfrom redis import Redis\r\nr.sadd('foo', 'bar')\r\nif member := r.srandmember('foo'):\r\n    print(member[0])\r\n    # do something with member[0]\r\n```\r\n\r\nThat call was getting the one element from the list and will now get the first char of the response, and it won't even fail.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2423983226/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2424462116', 'html_url': 'https://github.com/apache/kvrocks/issues/2610#issuecomment-2424462116', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2610', 'id': 2424462116, 'node_id': 'IC_kwDODBGmlM6Qglsk', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-20T02:48:05Z', 'updated_at': '2024-10-20T02:48:05Z', 'author_association': 'MEMBER', 'body': "@Rafiot Good point. It'd be better to document explicitly instead of silently breaking old behaviors in some programming languages. And always return the array format makes sense whether the count is bigger than 1 or not.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2424462116/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2594: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408847614', 'html_url': 'https://github.com/apache/kvrocks/issues/2594#issuecomment-2408847614', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2594', 'id': 2408847614, 'node_id': 'IC_kwDODBGmlM6PlBj-', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-13T06:37:25Z', 'updated_at': '2024-10-13T06:43:04Z', 'author_association': 'MEMBER', 'body': 'It seems related to the logical logging cc @mapleFU .\r\n\r\nCould you elabrate the detailed design of the "event" field?\r\n\r\nHow to define a new event? e.g. for ZSET data type, could you list all event, for every write commands [here](https://kvrocks.apache.org/docs/supported-commands#zset-commands)?\r\n\r\nAlso the "subkey" is related to different encoding for each data type. If we store "subkey" here, it\'s too "low level" to be a recorder for structured semantics. Also could you list all "subkey"s for all ZSET commands?', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408847614/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408851107', 'html_url': 'https://github.com/apache/kvrocks/issues/2594#issuecomment-2408851107', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2594', 'id': 2408851107, 'node_id': 'IC_kwDODBGmlM6PlCaj', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-13T06:51:57Z', 'updated_at': '2024-10-13T06:53:48Z', 'author_association': 'MEMBER', 'body': 'IMHO we should have a quite clear mind about the layered (or, leveled) semantics of execution of Kvrocks:\r\n\r\n- High level: Redis commands\r\n- Middle level: An **orthogonal**, but **structured** operations.\r\n- Low level: RocksDB key-value read/writes\r\n\r\nToday we talk about the middle level operations.\r\n\r\nThis middle layer needs to have a clear design to meet three goals:\r\n- Orthogonal: Redis commands are obviously not orthogonal, but the middle layer must be orthogonal and can be "lower" from each Redis command to the middle layer.\r\n- Structured: The middle layer operators must have clear semantics, retaining high-level data structure information, rather than fragmenting into rocksdb reads and writes.\r\n- Integrated: The middle layer must have complete context information to avoid irreproducibility due to execution order changes.\r\n\r\nAs you can see, this is a complex task. I hope we can have a clearer design: for example, for each redis data type, what is the detailed design of its middle-layer operator?\r\n\r\nThen, we can talk about implementations.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408851107/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408852066', 'html_url': 'https://github.com/apache/kvrocks/issues/2594#issuecomment-2408852066', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2594', 'id': 2408852066, 'node_id': 'IC_kwDODBGmlM6PlCpi', 'user': {'login': 'mapleFU', 'id': 24351052, 'node_id': 'MDQ6VXNlcjI0MzUxMDUy', 'avatar_url': 'https://avatars.githubusercontent.com/u/24351052?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mapleFU', 'html_url': 'https://github.com/mapleFU', 'followers_url': 'https://api.github.com/users/mapleFU/followers', 'following_url': 'https://api.github.com/users/mapleFU/following{/other_user}', 'gists_url': 'https://api.github.com/users/mapleFU/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mapleFU/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mapleFU/subscriptions', 'organizations_url': 'https://api.github.com/users/mapleFU/orgs', 'repos_url': 'https://api.github.com/users/mapleFU/repos', 'events_url': 'https://api.github.com/users/mapleFU/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mapleFU/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-13T06:56:03Z', 'updated_at': '2024-10-13T06:56:03Z', 'author_association': 'MEMBER', 'body': "By the way, would it better to making rdb have the same structure? Or they're totally different?", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408852066/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408878613', 'html_url': 'https://github.com/apache/kvrocks/issues/2594#issuecomment-2408878613', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2594', 'id': 2408878613, 'node_id': 'IC_kwDODBGmlM6PlJIV', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-13T08:17:43Z', 'updated_at': '2024-10-13T08:18:25Z', 'author_association': 'MEMBER', 'body': "> By the way, would it better to making rdb have the same structure? Or they're totally different?\r\n\r\nrdb is for serialization of **data**, not for serialization of **execution**. so I don't think it's so suitable.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408878613/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408898753', 'html_url': 'https://github.com/apache/kvrocks/issues/2594#issuecomment-2408898753', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2594', 'id': 2408898753, 'node_id': 'IC_kwDODBGmlM6PlODB', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-13T09:20:08Z', 'updated_at': '2024-10-13T09:20:08Z', 'author_association': 'MEMBER', 'body': '> How to define a new event? e.g. for ZSET data type, could you list all event, for every write commands [here](https://kvrocks.apache.org/docs/supported-commands#zset-commands)?\r\n\r\nIt generally contains: `ADD|DELETE|SET`. For example, the ZPOP command should generate a DELETE event.\r\n\r\n> If we store "subkey" here, it\'s too "low level" to be a recorder for structured semantics. Also could you list all "subkey"s for all ZSET commands?\r\n\r\nWhat I mean by subkey here depends on the data type. For the Hash type, which we can see in the example, its subkey is the field `f0`. And for the ZSet type, its subkey should be its member.\r\n\r\nI don\'t quite understand the meaning of `low level` here. Could you elaborate a bit about what you think?\r\n\r\n> Structured: The middle layer operators must have clear semantics, retaining high-level data structure information, rather than fragmenting into rocksdb reads and writes.\r\n\r\nFor the change stream event is now mapping to what\'s command changed instead of rocksdb read/writes. So that\'s why we have `key` and `subkey`. ', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408898753/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408899580', 'html_url': 'https://github.com/apache/kvrocks/issues/2594#issuecomment-2408899580', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2594', 'id': 2408899580, 'node_id': 'IC_kwDODBGmlM6PlOP8', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-13T09:22:22Z', 'updated_at': '2024-10-13T09:22:36Z', 'author_association': 'MEMBER', 'body': '> As you can see, this is a complex task. I hope we can have a clearer design: for example, for each redis data type, what is the detailed design of its middle-layer operator?\r\n\r\nYes, I agree we should take care of the design before starting the implementation. We can reach a consensus about the high-level proposal, and then go into the details if all of us feel good about the proposal.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408899580/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408917188', 'html_url': 'https://github.com/apache/kvrocks/issues/2594#issuecomment-2408917188', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2594', 'id': 2408917188, 'node_id': 'IC_kwDODBGmlM6PlSjE', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-13T10:15:48Z', 'updated_at': '2024-10-13T11:11:16Z', 'author_association': 'MEMBER', 'body': "> It generally contains: ADD|DELETE|SET. For example, the ZPOP command should generate a DELETE event.\r\n\r\nHow about commands like ZINTERSTORE, ZMPOP, ZPOPMIN? I'm still not sure if the current design is general enough. From my view it can easily become hard to model some complex scenarios.\r\n\r\ne.g. for ZADD, the value should be member and score, but here you use just one `std::string value`, how to encode? and we need to decode to retrieve the score. IMHO it sounds a weird design. \r\n\r\nAlso I think it's better to generalize it to logical logging instead of just for migrate/sync.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408917188/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408954450', 'html_url': 'https://github.com/apache/kvrocks/issues/2594#issuecomment-2408954450', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2594', 'id': 2408954450, 'node_id': 'IC_kwDODBGmlM6PlbpS', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-13T12:10:18Z', 'updated_at': '2024-10-13T12:10:18Z', 'author_association': 'MEMBER', 'body': '@PragmaTwice I have changed to value to the payload which is a union type.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408954450/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408974985', 'html_url': 'https://github.com/apache/kvrocks/issues/2594#issuecomment-2408974985', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2594', 'id': 2408974985, 'node_id': 'IC_kwDODBGmlM6PlgqJ', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-13T13:11:44Z', 'updated_at': '2024-10-13T13:12:12Z', 'author_association': 'MEMBER', 'body': "My current point is, if we cannot use it to model all operations, e.g. ZREMRANGE..., we'd better to keep the current (redis commands) form to make the impl unified and let user easily to understand.\r\n\r\nBut we can continuely focus and figure out a better design.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408974985/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408979636', 'html_url': 'https://github.com/apache/kvrocks/issues/2594#issuecomment-2408979636', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2594', 'id': 2408979636, 'node_id': 'IC_kwDODBGmlM6Plhy0', 'user': {'login': 'git-hulk', 'id': 4987594, 'node_id': 'MDQ6VXNlcjQ5ODc1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4987594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/git-hulk', 'html_url': 'https://github.com/git-hulk', 'followers_url': 'https://api.github.com/users/git-hulk/followers', 'following_url': 'https://api.github.com/users/git-hulk/following{/other_user}', 'gists_url': 'https://api.github.com/users/git-hulk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/git-hulk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/git-hulk/subscriptions', 'organizations_url': 'https://api.github.com/users/git-hulk/orgs', 'repos_url': 'https://api.github.com/users/git-hulk/repos', 'events_url': 'https://api.github.com/users/git-hulk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/git-hulk/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-13T13:25:38Z', 'updated_at': '2024-10-13T13:25:38Z', 'author_association': 'MEMBER', 'body': 'Got your point. I agree that using the commands would make it easy to have a unified way to implement the change logs. My concern is that need to rewrite many commands like HINCR/HINCRY to  HSET to simplify the downstream implementation.\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2408979636/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2409608810', 'html_url': 'https://github.com/apache/kvrocks/issues/2594#issuecomment-2409608810', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2594', 'id': 2409608810, 'node_id': 'IC_kwDODBGmlM6Pn7Zq', 'user': {'login': 'Genuineh', 'id': 38518057, 'node_id': 'MDQ6VXNlcjM4NTE4MDU3', 'avatar_url': 'https://avatars.githubusercontent.com/u/38518057?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Genuineh', 'html_url': 'https://github.com/Genuineh', 'followers_url': 'https://api.github.com/users/Genuineh/followers', 'following_url': 'https://api.github.com/users/Genuineh/following{/other_user}', 'gists_url': 'https://api.github.com/users/Genuineh/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Genuineh/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Genuineh/subscriptions', 'organizations_url': 'https://api.github.com/users/Genuineh/orgs', 'repos_url': 'https://api.github.com/users/Genuineh/repos', 'events_url': 'https://api.github.com/users/Genuineh/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Genuineh/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-14T01:24:08Z', 'updated_at': '2024-10-14T01:24:08Z', 'author_association': 'NONE', 'body': "I am not very familiar with the internal structure of kvrocks, nor am I very familiar with C++. However, I personally think that it is only necessary to connect to rocksdb itself. As for the need for RESP or which data structure in https://kvrocks.apache.org/community/data-structure-on-rocksdb needs to be connected may be related to the user's needs (simply put, when considering performance, one will be more inclined to directly connect to the data-structure-on-rocksdb or kv of rocksdb). Only the parsing method of business-class data structures needs to be provided for users to use. In addition, maybe kvrocks will have its own business protocol and data structures that redis does not have in the future. Directly connecting to the structure on rocksdb can avoid this risk. And even if one only wants to use it as redis, if this structure is fully compatible with redis, it can be freely converted through the RESP parser.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2409608810/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2587: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2406523070', 'html_url': 'https://github.com/apache/kvrocks/issues/2587#issuecomment-2406523070', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2587', 'id': 2406523070, 'node_id': 'IC_kwDODBGmlM6PcKC-', 'user': {'login': 'beingPro007', 'id': 120173992, 'node_id': 'U_kgDOBym1qA', 'avatar_url': 'https://avatars.githubusercontent.com/u/120173992?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/beingPro007', 'html_url': 'https://github.com/beingPro007', 'followers_url': 'https://api.github.com/users/beingPro007/followers', 'following_url': 'https://api.github.com/users/beingPro007/following{/other_user}', 'gists_url': 'https://api.github.com/users/beingPro007/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/beingPro007/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/beingPro007/subscriptions', 'organizations_url': 'https://api.github.com/users/beingPro007/orgs', 'repos_url': 'https://api.github.com/users/beingPro007/repos', 'events_url': 'https://api.github.com/users/beingPro007/events{/privacy}', 'received_events_url': 'https://api.github.com/users/beingPro007/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-11T04:16:13Z', 'updated_at': '2024-10-11T04:16:13Z', 'author_association': 'NONE', 'body': '@PragmaTwice i would be happy if you assign this to me!!!', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2406523070/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2406545220', 'html_url': 'https://github.com/apache/kvrocks/issues/2587#issuecomment-2406545220', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2587', 'id': 2406545220, 'node_id': 'IC_kwDODBGmlM6PcPdE', 'user': {'login': 'beingPro007', 'id': 120173992, 'node_id': 'U_kgDOBym1qA', 'avatar_url': 'https://avatars.githubusercontent.com/u/120173992?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/beingPro007', 'html_url': 'https://github.com/beingPro007', 'followers_url': 'https://api.github.com/users/beingPro007/followers', 'following_url': 'https://api.github.com/users/beingPro007/following{/other_user}', 'gists_url': 'https://api.github.com/users/beingPro007/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/beingPro007/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/beingPro007/subscriptions', 'organizations_url': 'https://api.github.com/users/beingPro007/orgs', 'repos_url': 'https://api.github.com/users/beingPro007/repos', 'events_url': 'https://api.github.com/users/beingPro007/events{/privacy}', 'received_events_url': 'https://api.github.com/users/beingPro007/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-11T04:44:14Z', 'updated_at': '2024-10-11T04:44:14Z', 'author_association': 'NONE', 'body': "@PragmaTwice \r\n**Could you clarify which specific commands currently lack subcommand listings?**\r\n\r\nI've noticed that commands like CLUSTER and CLUSTERX have detailed subcommand lists, but other commands such as CLIENT and SCRIPT don't. To improve the consistency of the documentation, it would be helpful to know which commands require subcommand listings to be added. Could you provide a list of such commands so we can address this gap?", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2406545220/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2406564519', 'html_url': 'https://github.com/apache/kvrocks/issues/2587#issuecomment-2406564519', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2587', 'id': 2406564519, 'node_id': 'IC_kwDODBGmlM6PcUKn', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-11T05:08:40Z', 'updated_at': '2024-10-11T05:08:40Z', 'author_association': 'MEMBER', 'body': "> @PragmaTwice **Could you clarify which specific commands currently lack subcommand listings?**\r\n> \r\n> I've noticed that commands like CLUSTER and CLUSTERX have detailed subcommand lists, but other commands such as CLIENT and SCRIPT don't. To improve the consistency of the documentation, it would be helpful to know which commands require subcommand listings to be added. Could you provide a list of such commands so we can address this gap?\r\n\r\nHi, thank you for your interest and question.\r\n\r\nYou can check Redis documentation to know if a command has subcommands. All commands that have subcommands need to be listed.\r\n\r\nBTW I recommend to be familiar with Redis before taking this task. Then you can easily identify what kind of commands are likely to have subcommands.\r\n", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2406564519/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2406576954', 'html_url': 'https://github.com/apache/kvrocks/issues/2587#issuecomment-2406576954', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2587', 'id': 2406576954, 'node_id': 'IC_kwDODBGmlM6PcXM6', 'user': {'login': 'beingPro007', 'id': 120173992, 'node_id': 'U_kgDOBym1qA', 'avatar_url': 'https://avatars.githubusercontent.com/u/120173992?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/beingPro007', 'html_url': 'https://github.com/beingPro007', 'followers_url': 'https://api.github.com/users/beingPro007/followers', 'following_url': 'https://api.github.com/users/beingPro007/following{/other_user}', 'gists_url': 'https://api.github.com/users/beingPro007/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/beingPro007/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/beingPro007/subscriptions', 'organizations_url': 'https://api.github.com/users/beingPro007/orgs', 'repos_url': 'https://api.github.com/users/beingPro007/repos', 'events_url': 'https://api.github.com/users/beingPro007/events{/privacy}', 'received_events_url': 'https://api.github.com/users/beingPro007/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-11T05:24:02Z', 'updated_at': '2024-10-11T05:24:02Z', 'author_association': 'NONE', 'body': "> > @PragmaTwice **Could you clarify which specific commands currently lack subcommand listings?**\n> > \n> > I've noticed that commands like CLUSTER and CLUSTERX have detailed subcommand lists, but other commands such as CLIENT and SCRIPT don't. To improve the consistency of the documentation, it would be helpful to know which commands require subcommand listings to be added. Could you provide a list of such commands so we can address this gap?\n> \n> Hi, thank you for your interest and question.\n> \n> You can check Redis documentation to know if a command has subcommands. All commands that have subcommands need to be listed.\n> \n> BTW I recommend to be familiar with Redis before taking this task. Then you can easily identify what kind of commands are likely to have subcommands.\n> \n\nOk let me first be familiar with redis. Thank you for your consideration ", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2406576954/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2577: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2394330350', 'html_url': 'https://github.com/apache/kvrocks/pull/2577#issuecomment-2394330350', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2577', 'id': 2394330350, 'node_id': 'IC_kwDODBGmlM6OtpTu', 'user': {'login': 'jonathanc-n', 'id': 86070045, 'node_id': 'MDQ6VXNlcjg2MDcwMDQ1', 'avatar_url': 'https://avatars.githubusercontent.com/u/86070045?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanc-n', 'html_url': 'https://github.com/jonathanc-n', 'followers_url': 'https://api.github.com/users/jonathanc-n/followers', 'following_url': 'https://api.github.com/users/jonathanc-n/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanc-n/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanc-n/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanc-n/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanc-n/orgs', 'repos_url': 'https://api.github.com/users/jonathanc-n/repos', 'events_url': 'https://api.github.com/users/jonathanc-n/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanc-n/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-04T18:22:38Z', 'updated_at': '2024-10-04T18:22:38Z', 'author_association': 'CONTRIBUTOR', 'body': "Is somebody able to resolve the conflict, its just the previous command is just in the same place. When I try to retrieve from origin the previous commits aren't showing up right now, sorry about that", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2394330350/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2394846657', 'html_url': 'https://github.com/apache/kvrocks/pull/2577#issuecomment-2394846657', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2577', 'id': 2394846657, 'node_id': 'IC_kwDODBGmlM6OvnXB', 'user': {'login': 'jonathanc-n', 'id': 86070045, 'node_id': 'MDQ6VXNlcjg2MDcwMDQ1', 'avatar_url': 'https://avatars.githubusercontent.com/u/86070045?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanc-n', 'html_url': 'https://github.com/jonathanc-n', 'followers_url': 'https://api.github.com/users/jonathanc-n/followers', 'following_url': 'https://api.github.com/users/jonathanc-n/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanc-n/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanc-n/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanc-n/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanc-n/orgs', 'repos_url': 'https://api.github.com/users/jonathanc-n/repos', 'events_url': 'https://api.github.com/users/jonathanc-n/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanc-n/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-05T01:18:27Z', 'updated_at': '2024-10-05T01:18:27Z', 'author_association': 'CONTRIBUTOR', 'body': '@PragmaTwice I decided to switch it up the serialization on the implementation, I can include it on the pr. As for the field_alias, you can use this implementation to use index fields to look and see if the alias matches when it receives a non matching index in a command (which will be implemented in a GetAlias function).', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2394846657/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2394918008', 'html_url': 'https://github.com/apache/kvrocks/pull/2577#issuecomment-2394918008', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2577', 'id': 2394918008, 'node_id': 'IC_kwDODBGmlM6Ov4x4', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-05T04:18:02Z', 'updated_at': '2024-10-05T04:22:53Z', 'author_association': 'MEMBER', 'body': "`FT.ALIAS*` is for alias of **indexes**.\r\n\r\nFIELD_ALIAS is for alias of **fields**.\r\n\r\n**Indexes** is not **fields**, and one **index** can includes several **fields**.\r\n\r\nYour implementation is quite confusing, if you really want to add alias of indexes, the encoding should be something like\r\n```\r\nns | INDEX_ALIAS | alias => index\r\n```\r\n\r\nIf you put index name before alias, how do you quickly map from alias to the index name before you know the original index?\r\n\r\nI'd suggest that figure out what you want to do and how to do before writing some random code.\r\n", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2394918008/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2394967670', 'html_url': 'https://github.com/apache/kvrocks/pull/2577#issuecomment-2394967670', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2577', 'id': 2394967670, 'node_id': 'IC_kwDODBGmlM6OwE52', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-05T07:41:32Z', 'updated_at': '2024-10-05T07:41:32Z', 'author_association': 'MEMBER', 'body': "Besides ADD, UPDATE and DELETE operations of alias, the most important part of aliasing is to find the corresponding index by the user-provided alias in query commands (e.g. FT.SEARCH, FT.SEARCHSQL).\r\n\r\nSo we need to consider how to efficiently identify the alias and find the corresponding index in the query (in a very little runtime overhead). e.g. for index `a`, `b` and their aliases (`c` -> index `a`, `d` -> index `b`), we can put a key like this:\r\n```\r\n// alias\r\nns | INDEX_ALIAS | c -> a\r\nns | INDEX_ALIAS | d ->b\r\n\r\n// index metadata (already exists)\r\nns | INDEX_META | a -> ...\r\nns | INDEX_META | b -> ...\r\n```\r\n\r\nAnd when we saw a query like `select * from <idx>`, we need to check if `<idx>` is a real index name or it's an alias, e.g.\r\n- `select * from a`: `a` is a real index name.\r\n- `select * from d`: `d` is an alias and the real index is `b`.\r\n- `select * from e`: `e` doesn't exist.\r\n\r\nFor index names and its metadata, we will load all of them into the memory from start instead of getting it from rocksdb every time we need it to achieve better performance. \r\n\r\nSo I think for alias we should also load from start.\r\n\r\nIn your design:\r\n> Alias Subkey\r\n> ns | type | *index* | alias_name => *index_name*\r\n\r\nThe index name seems repeated in both keys and values, which is not so useful.\r\n", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2394967670/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2395170981', 'html_url': 'https://github.com/apache/kvrocks/pull/2577#issuecomment-2395170981', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2577', 'id': 2395170981, 'node_id': 'IC_kwDODBGmlM6Ow2il', 'user': {'login': 'jonathanc-n', 'id': 86070045, 'node_id': 'MDQ6VXNlcjg2MDcwMDQ1', 'avatar_url': 'https://avatars.githubusercontent.com/u/86070045?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanc-n', 'html_url': 'https://github.com/jonathanc-n', 'followers_url': 'https://api.github.com/users/jonathanc-n/followers', 'following_url': 'https://api.github.com/users/jonathanc-n/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanc-n/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanc-n/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanc-n/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanc-n/orgs', 'repos_url': 'https://api.github.com/users/jonathanc-n/repos', 'events_url': 'https://api.github.com/users/jonathanc-n/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanc-n/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-05T19:46:56Z', 'updated_at': '2024-10-05T19:51:44Z', 'author_association': 'CONTRIBUTOR', 'body': "@PragmaTwice While the load commands happen do you think it'd be better to create a global alias map in index_manager? \r\nThere would be two places for aliases to be stored:\r\n1. A global alias map where it is 'alias -> index' for quick alias to index lookups.\r\n2. A alias array in IndexInfo for deleting all aliases that are associated with the index quickly if ft.dropindex is called.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2395170981/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2574: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2390468738', 'html_url': 'https://github.com/apache/kvrocks/issues/2574#issuecomment-2390468738', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2574', 'id': 2390468738, 'node_id': 'IC_kwDODBGmlM6Oe6iC', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-03T03:59:37Z', 'updated_at': '2024-10-03T03:59:37Z', 'author_association': 'MEMBER', 'body': "```\r\nAssertionError: Data mismatch for key 'set_key_0': source data: '['set_value_0_1', 'set_value_0_2', 'set_value_0_3']' destination data: '['set_value_0_3', 'set_value_0_2', 'set_value_0_1']'\r\n```\r\nI think it is possible that a behavior change in a new version of Redis caused this reordering.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2390468738/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2573: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2390458708', 'html_url': 'https://github.com/apache/kvrocks/pull/2573#issuecomment-2390458708', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2573', 'id': 2390458708, 'node_id': 'IC_kwDODBGmlM6Oe4FU', 'user': {'login': 'jonathanc-n', 'id': 86070045, 'node_id': 'MDQ6VXNlcjg2MDcwMDQ1', 'avatar_url': 'https://avatars.githubusercontent.com/u/86070045?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanc-n', 'html_url': 'https://github.com/jonathanc-n', 'followers_url': 'https://api.github.com/users/jonathanc-n/followers', 'following_url': 'https://api.github.com/users/jonathanc-n/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanc-n/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanc-n/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanc-n/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanc-n/orgs', 'repos_url': 'https://api.github.com/users/jonathanc-n/repos', 'events_url': 'https://api.github.com/users/jonathanc-n/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanc-n/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-03T03:47:34Z', 'updated_at': '2024-10-03T03:47:34Z', 'author_association': 'CONTRIBUTOR', 'body': '@PragmaTwice @Beihao-Zhou @LindaSummer Feel free to leave changes!', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2390458708/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2390875115', 'html_url': 'https://github.com/apache/kvrocks/pull/2573#issuecomment-2390875115', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2573', 'id': 2390875115, 'node_id': 'IC_kwDODBGmlM6Ogdvr', 'user': {'login': 'LindaSummer', 'id': 14014471, 'node_id': 'MDQ6VXNlcjE0MDE0NDcx', 'avatar_url': 'https://avatars.githubusercontent.com/u/14014471?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/LindaSummer', 'html_url': 'https://github.com/LindaSummer', 'followers_url': 'https://api.github.com/users/LindaSummer/followers', 'following_url': 'https://api.github.com/users/LindaSummer/following{/other_user}', 'gists_url': 'https://api.github.com/users/LindaSummer/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/LindaSummer/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/LindaSummer/subscriptions', 'organizations_url': 'https://api.github.com/users/LindaSummer/orgs', 'repos_url': 'https://api.github.com/users/LindaSummer/repos', 'events_url': 'https://api.github.com/users/LindaSummer/events{/privacy}', 'received_events_url': 'https://api.github.com/users/LindaSummer/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-03T08:53:29Z', 'updated_at': '2024-10-03T08:55:41Z', 'author_association': 'CONTRIBUTOR', 'body': "Hi @jonathanc-n ,\r\n\r\nFor improving review efficiency, we could enable our fork repo's github actions.\r\n\r\nIt will be triggered once we push to our own fork repo and after our own repo's github action passed, we can push our changes to the PR branch.\r\n\r\nThis can accelerate our own development process and reduce review time. 😊\r\n\r\nBest Regards,\r\nEdward", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2390875115/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2391816215', 'html_url': 'https://github.com/apache/kvrocks/pull/2573#issuecomment-2391816215', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2573', 'id': 2391816215, 'node_id': 'IC_kwDODBGmlM6OkDgX', 'user': {'login': 'jonathanc-n', 'id': 86070045, 'node_id': 'MDQ6VXNlcjg2MDcwMDQ1', 'avatar_url': 'https://avatars.githubusercontent.com/u/86070045?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanc-n', 'html_url': 'https://github.com/jonathanc-n', 'followers_url': 'https://api.github.com/users/jonathanc-n/followers', 'following_url': 'https://api.github.com/users/jonathanc-n/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanc-n/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanc-n/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanc-n/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanc-n/orgs', 'repos_url': 'https://api.github.com/users/jonathanc-n/repos', 'events_url': 'https://api.github.com/users/jonathanc-n/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanc-n/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-03T16:15:39Z', 'updated_at': '2024-10-03T16:15:39Z', 'author_association': 'CONTRIBUTOR', 'body': 'Took out column temporarily as it was failing tests. Will put it back in the full implementation.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2391816215/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2393562612', 'html_url': 'https://github.com/apache/kvrocks/pull/2573#issuecomment-2393562612', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2573', 'id': 2393562612, 'node_id': 'IC_kwDODBGmlM6Oqt30', 'user': {'login': 'Beihao-Zhou', 'id': 68083940, 'node_id': 'MDQ6VXNlcjY4MDgzOTQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/68083940?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Beihao-Zhou', 'html_url': 'https://github.com/Beihao-Zhou', 'followers_url': 'https://api.github.com/users/Beihao-Zhou/followers', 'following_url': 'https://api.github.com/users/Beihao-Zhou/following{/other_user}', 'gists_url': 'https://api.github.com/users/Beihao-Zhou/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Beihao-Zhou/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Beihao-Zhou/subscriptions', 'organizations_url': 'https://api.github.com/users/Beihao-Zhou/orgs', 'repos_url': 'https://api.github.com/users/Beihao-Zhou/repos', 'events_url': 'https://api.github.com/users/Beihao-Zhou/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Beihao-Zhou/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-04T12:10:45Z', 'updated_at': '2024-10-04T12:10:45Z', 'author_association': 'MEMBER', 'body': 'Thanks! Would it be possible to add details about the encoding and outline the next steps in this PR, similar to how it was done in [this PR](https://github.com/apache/kvrocks/pull/2368)? I think it would help make everything clearer. :)\r\n', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2393562612/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2393586857', 'html_url': 'https://github.com/apache/kvrocks/pull/2573#issuecomment-2393586857', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2573', 'id': 2393586857, 'node_id': 'IC_kwDODBGmlM6Oqzyp', 'user': {'login': 'Beihao-Zhou', 'id': 68083940, 'node_id': 'MDQ6VXNlcjY4MDgzOTQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/68083940?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Beihao-Zhou', 'html_url': 'https://github.com/Beihao-Zhou', 'followers_url': 'https://api.github.com/users/Beihao-Zhou/followers', 'following_url': 'https://api.github.com/users/Beihao-Zhou/following{/other_user}', 'gists_url': 'https://api.github.com/users/Beihao-Zhou/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Beihao-Zhou/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Beihao-Zhou/subscriptions', 'organizations_url': 'https://api.github.com/users/Beihao-Zhou/orgs', 'repos_url': 'https://api.github.com/users/Beihao-Zhou/repos', 'events_url': 'https://api.github.com/users/Beihao-Zhou/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Beihao-Zhou/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-04T12:23:21Z', 'updated_at': '2024-10-04T12:23:21Z', 'author_association': 'MEMBER', 'body': 'Also can we move the encoding under folder `types` instead of `storage`? Maybe similar to https://github.com/apache/kvrocks/blob/0a43bade1a4c3c885947fdd42eacefac934bf1bd/src/types/redis_stream_base.h', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2393586857/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2393694964', 'html_url': 'https://github.com/apache/kvrocks/pull/2573#issuecomment-2393694964', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2573', 'id': 2393694964, 'node_id': 'IC_kwDODBGmlM6OrOL0', 'user': {'login': 'jonathanc-n', 'id': 86070045, 'node_id': 'MDQ6VXNlcjg2MDcwMDQ1', 'avatar_url': 'https://avatars.githubusercontent.com/u/86070045?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanc-n', 'html_url': 'https://github.com/jonathanc-n', 'followers_url': 'https://api.github.com/users/jonathanc-n/followers', 'following_url': 'https://api.github.com/users/jonathanc-n/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanc-n/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanc-n/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanc-n/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanc-n/orgs', 'repos_url': 'https://api.github.com/users/jonathanc-n/repos', 'events_url': 'https://api.github.com/users/jonathanc-n/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanc-n/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-04T13:20:42Z', 'updated_at': '2024-10-04T13:20:42Z', 'author_association': 'CONTRIBUTOR', 'body': '@Beihao-Zhou I could, but I assumed that creating the time_encoding in storage is fine as it needs its own search and querying capabilities over subkeys unlike the stream data.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2393694964/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2395025455', 'html_url': 'https://github.com/apache/kvrocks/pull/2573#issuecomment-2395025455', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2573', 'id': 2395025455, 'node_id': 'IC_kwDODBGmlM6OwTAv', 'user': {'login': 'sonarqubecloud[bot]', 'id': 39514782, 'node_id': 'MDM6Qm90Mzk1MTQ3ODI=', 'avatar_url': 'https://avatars.githubusercontent.com/in/12526?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D', 'html_url': 'https://github.com/apps/sonarqubecloud', 'followers_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/received_events', 'type': 'Bot', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-05T11:27:31Z', 'updated_at': '2024-10-05T11:27:31Z', 'author_association': 'NONE', 'body': "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=apache_kvrocks&pullRequest=2573) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=apache_kvrocks&pullRequest=2573&issueStatuses=OPEN,CONFIRMED&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/project/issues?id=apache_kvrocks&pullRequest=2573&issueStatuses=ACCEPTED)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=apache_kvrocks&pullRequest=2573&issueStatuses=OPEN,CONFIRMED&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [67.1% Coverage on New Code](https://sonarcloud.io/component_measures?id=apache_kvrocks&pullRequest=2573&metric=new_coverage&view=list)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0.0% Duplication on New Code](https://sonarcloud.io/component_measures?id=apache_kvrocks&pullRequest=2573&metric=new_duplicated_lines_density&view=list)  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=apache_kvrocks&pullRequest=2573)\n\n", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2395025455/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': {'id': 12526, 'client_id': 'Iv1.dc610988574d1724', 'slug': 'sonarqubecloud', 'node_id': 'MDM6QXBwMTI1MjY=', 'owner': {'login': 'SonarSource', 'id': 545988, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjU0NTk4OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/545988?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/SonarSource', 'html_url': 'https://github.com/SonarSource', 'followers_url': 'https://api.github.com/users/SonarSource/followers', 'following_url': 'https://api.github.com/users/SonarSource/following{/other_user}', 'gists_url': 'https://api.github.com/users/SonarSource/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/SonarSource/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/SonarSource/subscriptions', 'organizations_url': 'https://api.github.com/users/SonarSource/orgs', 'repos_url': 'https://api.github.com/users/SonarSource/repos', 'events_url': 'https://api.github.com/users/SonarSource/events{/privacy}', 'received_events_url': 'https://api.github.com/users/SonarSource/received_events', 'type': 'Organization', 'user_view_type': 'public', 'site_admin': False}, 'name': 'SonarQubeCloud', 'description': "\r\nSonarQube Cloud (formerly SonarCloud) is a SaaS code analysis tool designed to detect coding issues in 30+ languages, frameworks, and IaC platforms.Your code is checked against an extensive set of rules that cover many attributes of code, such as maintainability, reliability, and security issues, on each merge/pull request.\r\n\r\nSonarQube Cloud integrates seamlessly into your GitHub workflow and provides clear guidance for resolving any code quality and security issues detected. The majority of popular languages can be analyzed automatically; no configuration is required!\r\n\r\nWith [SonarQube Cloud](https://sonarcloud.io/github), you get:\r\n\r\n-   Fast, precise static analysis and feedback on your code\r\n    \r\n-   Support for popular languages, frameworks, and IaC tools\r\n    \r\n-   Free analysis for open-source projects and private projects up to max 50k LoC\r\n    \r\n-   Automatic analysis of pull requests and branches with results reported inline\r\n    \r\n-   IDE Support with [SonarQube for IDE](https://www.sonarsource.com/products/sonarlint/) integration\r\n    \r\n-   Quality Gate (added as a GitHub check) acting at two different levels - first, preventing you from merging pull requests that contain issues - and later, helping you to release only clean, safe code\r\n    \r\n-   Sign up for SonarQube free tier and begin scanning your private and public repositories\r\n    \r\n\r\nA [GitHub Action](https://github.com/marketplace/actions/sonarcloud-scan) is available in the marketplace to make it easy for you (for projects where automatic analysis isn't available). SonarQube Cloud also integrates smoothly with Jenkins, CircleCI, TravisCI, CirrusCI, and many other tools.\r\n\r\nA free tier is available that allows you to explore the benefits of SonarQube Cloud using your public and private repositories. We also provide a no-commitment, [14-day trial](https://www.sonarsource.com/products/sonarcloud/signup/) of SonarQube Cloud Team for unlimited team members, up to 1.9M LoC, AI CodeFix recommendations, and more. No need to speak with a sales rep or request a license key - get automatic code analysis results on your private projects in minutes! Want to see more examples of SonarCloud in action? You can [explore current Open Source projects in SonarCloud](https://sonarcloud.io/explore/projects?sort=-analysis_date) that are using the [Clean as You Code](https://www.sonarsource.com/solutions/our-unique-approach/) methodology.\r\n\r\nWhat are you waiting for? SonarQube Cloud helps you consistently deliver cleaner, secure software that future developers will appreciate and your users will love. Start writing Clean Code. [Now](https://www.sonarsource.com/products/sonarcloud/signup/)!", 'external_url': 'https://sonarcloud.io', 'html_url': 'https://github.com/apps/sonarqubecloud', 'created_at': '2018-05-22T07:36:37Z', 'updated_at': '2024-12-19T05:52:18Z', 'permissions': {'checks': 'write', 'contents': 'read', 'emails': 'read', 'members': 'read', 'metadata': 'read', 'pull_requests': 'write', 'security_events': 'write', 'statuses': 'write'}, 'events': ['code_scanning_alert', 'organization', 'pull_request', 'push', 'repository']}}]
Comments for Issue 2562: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2383673535', 'html_url': 'https://github.com/apache/kvrocks/issues/2562#issuecomment-2383673535', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2562', 'id': 2383673535, 'node_id': 'IC_kwDODBGmlM6OE_i_', 'user': {'login': 'mapleFU', 'id': 24351052, 'node_id': 'MDQ6VXNlcjI0MzUxMDUy', 'avatar_url': 'https://avatars.githubusercontent.com/u/24351052?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mapleFU', 'html_url': 'https://github.com/mapleFU', 'followers_url': 'https://api.github.com/users/mapleFU/followers', 'following_url': 'https://api.github.com/users/mapleFU/following{/other_user}', 'gists_url': 'https://api.github.com/users/mapleFU/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mapleFU/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mapleFU/subscriptions', 'organizations_url': 'https://api.github.com/users/mapleFU/orgs', 'repos_url': 'https://api.github.com/users/mapleFU/repos', 'events_url': 'https://api.github.com/users/mapleFU/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mapleFU/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-30T16:34:56Z', 'updated_at': '2024-09-30T16:34:56Z', 'author_association': 'MEMBER', 'body': 'cc @PragmaTwice @PokIsemaine ', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2383673535/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2396600603', 'html_url': 'https://github.com/apache/kvrocks/issues/2562#issuecomment-2396600603', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2562', 'id': 2396600603, 'node_id': 'IC_kwDODBGmlM6O2Tkb', 'user': {'login': 'PokIsemaine', 'id': 46661603, 'node_id': 'MDQ6VXNlcjQ2NjYxNjAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/46661603?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PokIsemaine', 'html_url': 'https://github.com/PokIsemaine', 'followers_url': 'https://api.github.com/users/PokIsemaine/followers', 'following_url': 'https://api.github.com/users/PokIsemaine/following{/other_user}', 'gists_url': 'https://api.github.com/users/PokIsemaine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PokIsemaine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PokIsemaine/subscriptions', 'organizations_url': 'https://api.github.com/users/PokIsemaine/orgs', 'repos_url': 'https://api.github.com/users/PokIsemaine/repos', 'events_url': 'https://api.github.com/users/PokIsemaine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PokIsemaine/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-07T11:00:34Z', 'updated_at': '2024-10-07T11:00:34Z', 'author_association': 'CONTRIBUTOR', 'body': 'I think the `engine::Context` for each command needs to be promoted to `Connection::ExecuteCommand`, and `ExecuteCommand` also accepts an `engine::Context` parameter. This allows multiple commands (or internal procedures) to use the same `engine::Context` while facilitating unified management', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2396600603/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2396630498', 'html_url': 'https://github.com/apache/kvrocks/issues/2562#issuecomment-2396630498', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2562', 'id': 2396630498, 'node_id': 'IC_kwDODBGmlM6O2a3i', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-07T11:14:05Z', 'updated_at': '2024-10-07T11:14:30Z', 'author_association': 'MEMBER', 'body': 'Refer to #2563.\r\n\r\nAlso same for scripting transaction optimization.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2396630498/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2558: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2554034163', 'html_url': 'https://github.com/apache/kvrocks/issues/2558#issuecomment-2554034163', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2558', 'id': 2554034163, 'node_id': 'IC_kwDODBGmlM6YO3fz', 'user': {'login': 'LindaSummer', 'id': 14014471, 'node_id': 'MDQ6VXNlcjE0MDE0NDcx', 'avatar_url': 'https://avatars.githubusercontent.com/u/14014471?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/LindaSummer', 'html_url': 'https://github.com/LindaSummer', 'followers_url': 'https://api.github.com/users/LindaSummer/followers', 'following_url': 'https://api.github.com/users/LindaSummer/following{/other_user}', 'gists_url': 'https://api.github.com/users/LindaSummer/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/LindaSummer/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/LindaSummer/subscriptions', 'organizations_url': 'https://api.github.com/users/LindaSummer/orgs', 'repos_url': 'https://api.github.com/users/LindaSummer/repos', 'events_url': 'https://api.github.com/users/LindaSummer/events{/privacy}', 'received_events_url': 'https://api.github.com/users/LindaSummer/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-12-19T13:38:56Z', 'updated_at': '2024-12-19T13:38:56Z', 'author_association': 'CONTRIBUTOR', 'body': "Hi @PragmaTwice ,\r\n\r\nSorry for delay. \r\n\r\nThis issue's implementation is still in progress. 😊\r\n\r\nI will try my best to implement and test the first fundamental commands in one month.\r\n\r\nBest Regards,\r\nEdward", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2554034163/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2600884037', 'html_url': 'https://github.com/apache/kvrocks/issues/2558#issuecomment-2600884037', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2558', 'id': 2600884037, 'node_id': 'IC_kwDODBGmlM6bBldF', 'user': {'login': 'LindaSummer', 'id': 14014471, 'node_id': 'MDQ6VXNlcjE0MDE0NDcx', 'avatar_url': 'https://avatars.githubusercontent.com/u/14014471?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/LindaSummer', 'html_url': 'https://github.com/LindaSummer', 'followers_url': 'https://api.github.com/users/LindaSummer/followers', 'following_url': 'https://api.github.com/users/LindaSummer/following{/other_user}', 'gists_url': 'https://api.github.com/users/LindaSummer/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/LindaSummer/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/LindaSummer/subscriptions', 'organizations_url': 'https://api.github.com/users/LindaSummer/orgs', 'repos_url': 'https://api.github.com/users/LindaSummer/repos', 'events_url': 'https://api.github.com/users/LindaSummer/events{/privacy}', 'received_events_url': 'https://api.github.com/users/LindaSummer/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-01-19T14:26:34Z', 'updated_at': '2025-01-20T00:28:31Z', 'author_association': 'CONTRIBUTOR', 'body': "Hi @PragmaTwice ,\n\n  Sorry that I may need some more time to finish the first PR of t-digest feature. \n\n  Major part of `create`, `add` and `quantile` are nearly finished and I'm now trying to do self-testing and add unit tests. 😊\n\n  Here is my draft PR https://github.com/LindaSummer/kvrocks/pull/1 in my own repo.\n  I'll try my best to add more tests and make it ready to be reviewed. 😊\n\nBest Regards,\nEdward\n  \n", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2600884037/reactions', 'total_count': 2, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2659219695', 'html_url': 'https://github.com/apache/kvrocks/issues/2558#issuecomment-2659219695', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2558', 'id': 2659219695, 'node_id': 'IC_kwDODBGmlM6egHjv', 'user': {'login': 'yunxiao3', 'id': 31088940, 'node_id': 'MDQ6VXNlcjMxMDg4OTQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/31088940?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yunxiao3', 'html_url': 'https://github.com/yunxiao3', 'followers_url': 'https://api.github.com/users/yunxiao3/followers', 'following_url': 'https://api.github.com/users/yunxiao3/following{/other_user}', 'gists_url': 'https://api.github.com/users/yunxiao3/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yunxiao3/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yunxiao3/subscriptions', 'organizations_url': 'https://api.github.com/users/yunxiao3/orgs', 'repos_url': 'https://api.github.com/users/yunxiao3/repos', 'events_url': 'https://api.github.com/users/yunxiao3/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yunxiao3/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-14T12:32:11Z', 'updated_at': '2025-02-14T12:32:11Z', 'author_association': 'NONE', 'body': 'Hello @LindaSummer,  I am very interested in your project, and it seems that there is a lot of development tasks that need to be done. If possible, could you assign me some sub-tasks or areas where I can help?  I’d like to contribute to the growth of the kvrocks community.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2659219695/reactions', 'total_count': 5, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 3, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2660863930', 'html_url': 'https://github.com/apache/kvrocks/issues/2558#issuecomment-2660863930', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2558', 'id': 2660863930, 'node_id': 'IC_kwDODBGmlM6emY-6', 'user': {'login': 'LindaSummer', 'id': 14014471, 'node_id': 'MDQ6VXNlcjE0MDE0NDcx', 'avatar_url': 'https://avatars.githubusercontent.com/u/14014471?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/LindaSummer', 'html_url': 'https://github.com/LindaSummer', 'followers_url': 'https://api.github.com/users/LindaSummer/followers', 'following_url': 'https://api.github.com/users/LindaSummer/following{/other_user}', 'gists_url': 'https://api.github.com/users/LindaSummer/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/LindaSummer/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/LindaSummer/subscriptions', 'organizations_url': 'https://api.github.com/users/LindaSummer/orgs', 'repos_url': 'https://api.github.com/users/LindaSummer/repos', 'events_url': 'https://api.github.com/users/LindaSummer/events{/privacy}', 'received_events_url': 'https://api.github.com/users/LindaSummer/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2025-02-15T10:37:44Z', 'updated_at': '2025-02-15T10:37:44Z', 'author_association': 'CONTRIBUTOR', 'body': '> Hello [<img alt="" width="16" height="16" src="https://avatars.githubusercontent.com/u/14014471?u=ddefac063166b1a2f14250b595de2a3e8412b9db&amp;v=4&amp;size=80">@LindaSummer](https://github.com/LindaSummer), I am very interested in your project, and it seems that there is a lot of development tasks that need to be done. If possible, could you assign me some sub-tasks or areas where I can help? I’d like to contribute to the growth of the kvrocks community.\n\nHi @yunxiao3 ,\n\nThanks for your interests in this topic! 😊\n\nYou can try to pick up one command for implementation.\n\nI will implement this #2791 command first in recent days.\nYou can follow it for other commands.\n\nBefore `TDIGEST.CRETAE` and `TDIGEST.INFO` commands finished, you can take STREAM command #745 implementation as example.\n\nBest Regards,\nEdward', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2660863930/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2556: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2381029553', 'html_url': 'https://github.com/apache/kvrocks/pull/2556#issuecomment-2381029553', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2556', 'id': 2381029553, 'node_id': 'IC_kwDODBGmlM6N66Cx', 'user': {'login': 'jonathanc-n', 'id': 86070045, 'node_id': 'MDQ6VXNlcjg2MDcwMDQ1', 'avatar_url': 'https://avatars.githubusercontent.com/u/86070045?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanc-n', 'html_url': 'https://github.com/jonathanc-n', 'followers_url': 'https://api.github.com/users/jonathanc-n/followers', 'following_url': 'https://api.github.com/users/jonathanc-n/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanc-n/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanc-n/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanc-n/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanc-n/orgs', 'repos_url': 'https://api.github.com/users/jonathanc-n/repos', 'events_url': 'https://api.github.com/users/jonathanc-n/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanc-n/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-29T00:04:56Z', 'updated_at': '2024-09-29T00:04:56Z', 'author_association': 'CONTRIBUTOR', 'body': '@PragmaTwice One thing noted for this pr, is that it is not fully removing the key from index from being searched. After deletion is called, the key and data is deleted however when calling the search function again, the key is still looked for and will call a notfound error', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2381029553/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2381884380', 'html_url': 'https://github.com/apache/kvrocks/pull/2556#issuecomment-2381884380', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2556', 'id': 2381884380, 'node_id': 'IC_kwDODBGmlM6N-Kvc', 'user': {'login': 'sonarqubecloud[bot]', 'id': 39514782, 'node_id': 'MDM6Qm90Mzk1MTQ3ODI=', 'avatar_url': 'https://avatars.githubusercontent.com/in/12526?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D', 'html_url': 'https://github.com/apps/sonarqubecloud', 'followers_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sonarqubecloud%5Bbot%5D/received_events', 'type': 'Bot', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-30T02:29:54Z', 'updated_at': '2024-09-30T02:29:54Z', 'author_association': 'NONE', 'body': "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=apache_kvrocks&pullRequest=2556) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [15 New issues](https://sonarcloud.io/project/issues?id=apache_kvrocks&pullRequest=2556&issueStatuses=OPEN,CONFIRMED&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/project/issues?id=apache_kvrocks&pullRequest=2556&issueStatuses=ACCEPTED)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=apache_kvrocks&pullRequest=2556&issueStatuses=OPEN,CONFIRMED&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [60.8% Coverage on New Code](https://sonarcloud.io/component_measures?id=apache_kvrocks&pullRequest=2556&metric=new_coverage&view=list)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [2.1% Duplication on New Code](https://sonarcloud.io/component_measures?id=apache_kvrocks&pullRequest=2556&metric=new_duplicated_lines_density&view=list)  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=apache_kvrocks&pullRequest=2556)\n\n", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2381884380/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': {'id': 12526, 'client_id': 'Iv1.dc610988574d1724', 'slug': 'sonarqubecloud', 'node_id': 'MDM6QXBwMTI1MjY=', 'owner': {'login': 'SonarSource', 'id': 545988, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjU0NTk4OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/545988?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/SonarSource', 'html_url': 'https://github.com/SonarSource', 'followers_url': 'https://api.github.com/users/SonarSource/followers', 'following_url': 'https://api.github.com/users/SonarSource/following{/other_user}', 'gists_url': 'https://api.github.com/users/SonarSource/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/SonarSource/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/SonarSource/subscriptions', 'organizations_url': 'https://api.github.com/users/SonarSource/orgs', 'repos_url': 'https://api.github.com/users/SonarSource/repos', 'events_url': 'https://api.github.com/users/SonarSource/events{/privacy}', 'received_events_url': 'https://api.github.com/users/SonarSource/received_events', 'type': 'Organization', 'user_view_type': 'public', 'site_admin': False}, 'name': 'SonarQubeCloud', 'description': "\r\nSonarQube Cloud (formerly SonarCloud) is a SaaS code analysis tool designed to detect coding issues in 30+ languages, frameworks, and IaC platforms.Your code is checked against an extensive set of rules that cover many attributes of code, such as maintainability, reliability, and security issues, on each merge/pull request.\r\n\r\nSonarQube Cloud integrates seamlessly into your GitHub workflow and provides clear guidance for resolving any code quality and security issues detected. The majority of popular languages can be analyzed automatically; no configuration is required!\r\n\r\nWith [SonarQube Cloud](https://sonarcloud.io/github), you get:\r\n\r\n-   Fast, precise static analysis and feedback on your code\r\n    \r\n-   Support for popular languages, frameworks, and IaC tools\r\n    \r\n-   Free analysis for open-source projects and private projects up to max 50k LoC\r\n    \r\n-   Automatic analysis of pull requests and branches with results reported inline\r\n    \r\n-   IDE Support with [SonarQube for IDE](https://www.sonarsource.com/products/sonarlint/) integration\r\n    \r\n-   Quality Gate (added as a GitHub check) acting at two different levels - first, preventing you from merging pull requests that contain issues - and later, helping you to release only clean, safe code\r\n    \r\n-   Sign up for SonarQube free tier and begin scanning your private and public repositories\r\n    \r\n\r\nA [GitHub Action](https://github.com/marketplace/actions/sonarcloud-scan) is available in the marketplace to make it easy for you (for projects where automatic analysis isn't available). SonarQube Cloud also integrates smoothly with Jenkins, CircleCI, TravisCI, CirrusCI, and many other tools.\r\n\r\nA free tier is available that allows you to explore the benefits of SonarQube Cloud using your public and private repositories. We also provide a no-commitment, [14-day trial](https://www.sonarsource.com/products/sonarcloud/signup/) of SonarQube Cloud Team for unlimited team members, up to 1.9M LoC, AI CodeFix recommendations, and more. No need to speak with a sales rep or request a license key - get automatic code analysis results on your private projects in minutes! Want to see more examples of SonarCloud in action? You can [explore current Open Source projects in SonarCloud](https://sonarcloud.io/explore/projects?sort=-analysis_date) that are using the [Clean as You Code](https://www.sonarsource.com/solutions/our-unique-approach/) methodology.\r\n\r\nWhat are you waiting for? SonarQube Cloud helps you consistently deliver cleaner, secure software that future developers will appreciate and your users will love. Start writing Clean Code. [Now](https://www.sonarsource.com/products/sonarcloud/signup/)!", 'external_url': 'https://sonarcloud.io', 'html_url': 'https://github.com/apps/sonarqubecloud', 'created_at': '2018-05-22T07:36:37Z', 'updated_at': '2024-12-19T05:52:18Z', 'permissions': {'checks': 'write', 'contents': 'read', 'emails': 'read', 'members': 'read', 'metadata': 'read', 'pull_requests': 'write', 'security_events': 'write', 'statuses': 'write'}, 'events': ['code_scanning_alert', 'organization', 'pull_request', 'push', 'repository']}}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2387240919', 'html_url': 'https://github.com/apache/kvrocks/pull/2556#issuecomment-2387240919', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2556', 'id': 2387240919, 'node_id': 'IC_kwDODBGmlM6OSmfX', 'user': {'login': 'jonathanc-n', 'id': 86070045, 'node_id': 'MDQ6VXNlcjg2MDcwMDQ1', 'avatar_url': 'https://avatars.githubusercontent.com/u/86070045?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanc-n', 'html_url': 'https://github.com/jonathanc-n', 'followers_url': 'https://api.github.com/users/jonathanc-n/followers', 'following_url': 'https://api.github.com/users/jonathanc-n/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanc-n/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanc-n/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanc-n/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanc-n/orgs', 'repos_url': 'https://api.github.com/users/jonathanc-n/repos', 'events_url': 'https://api.github.com/users/jonathanc-n/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanc-n/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-10-01T23:11:34Z', 'updated_at': '2024-10-01T23:11:34Z', 'author_association': 'CONTRIBUTOR', 'body': '@PragmaTwice Is there a particular way you would want key expiration to be handled? ', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2387240919/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2555: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2367286445', 'html_url': 'https://github.com/apache/kvrocks/issues/2555#issuecomment-2367286445', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2555', 'id': 2367286445, 'node_id': 'IC_kwDODBGmlM6NGeyt', 'user': {'login': 'PragmaTwice', 'id': 20042607, 'node_id': 'MDQ6VXNlcjIwMDQyNjA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/20042607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PragmaTwice', 'html_url': 'https://github.com/PragmaTwice', 'followers_url': 'https://api.github.com/users/PragmaTwice/followers', 'following_url': 'https://api.github.com/users/PragmaTwice/following{/other_user}', 'gists_url': 'https://api.github.com/users/PragmaTwice/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PragmaTwice/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PragmaTwice/subscriptions', 'organizations_url': 'https://api.github.com/users/PragmaTwice/orgs', 'repos_url': 'https://api.github.com/users/PragmaTwice/repos', 'events_url': 'https://api.github.com/users/PragmaTwice/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PragmaTwice/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-23T05:52:12Z', 'updated_at': '2024-09-23T05:52:50Z', 'author_association': 'MEMBER', 'body': "Thank you for the tracking issue.\r\n\r\nHowever, Kvrocks Search is a relatively large feature and there are so many underlying design and components behind just these commands.\r\n\r\nSo it's hard to say if a command-level tracking is useful.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2367286445/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2367289064', 'html_url': 'https://github.com/apache/kvrocks/issues/2555#issuecomment-2367289064', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2555', 'id': 2367289064, 'node_id': 'IC_kwDODBGmlM6NGfbo', 'user': {'login': 'jonathanc-n', 'id': 86070045, 'node_id': 'MDQ6VXNlcjg2MDcwMDQ1', 'avatar_url': 'https://avatars.githubusercontent.com/u/86070045?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanc-n', 'html_url': 'https://github.com/jonathanc-n', 'followers_url': 'https://api.github.com/users/jonathanc-n/followers', 'following_url': 'https://api.github.com/users/jonathanc-n/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanc-n/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanc-n/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanc-n/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanc-n/orgs', 'repos_url': 'https://api.github.com/users/jonathanc-n/repos', 'events_url': 'https://api.github.com/users/jonathanc-n/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanc-n/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-23T05:55:06Z', 'updated_at': '2024-09-23T05:55:06Z', 'author_association': 'CONTRIBUTOR', 'body': '@PragmaTwice I guess when proposals/prs come up we can list the issues opened under the commands here. This can act as a tracker for people to know what has been done and is being worked on for Redisearch commands.', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2367289064/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
Comments for Issue 2554: [{'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2367238318', 'html_url': 'https://github.com/apache/kvrocks/issues/2554#issuecomment-2367238318', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2554', 'id': 2367238318, 'node_id': 'IC_kwDODBGmlM6NGTCu', 'user': {'login': 'jonathanc-n', 'id': 86070045, 'node_id': 'MDQ6VXNlcjg2MDcwMDQ1', 'avatar_url': 'https://avatars.githubusercontent.com/u/86070045?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanc-n', 'html_url': 'https://github.com/jonathanc-n', 'followers_url': 'https://api.github.com/users/jonathanc-n/followers', 'following_url': 'https://api.github.com/users/jonathanc-n/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanc-n/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanc-n/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanc-n/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanc-n/orgs', 'repos_url': 'https://api.github.com/users/jonathanc-n/repos', 'events_url': 'https://api.github.com/users/jonathanc-n/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanc-n/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-23T04:56:14Z', 'updated_at': '2024-09-23T04:56:14Z', 'author_association': 'CONTRIBUTOR', 'body': '@PokIsemaine You can mark this in your issue you posted', 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2367238318/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}, {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2367260405', 'html_url': 'https://github.com/apache/kvrocks/issues/2554#issuecomment-2367260405', 'issue_url': 'https://api.github.com/repos/apache/kvrocks/issues/2554', 'id': 2367260405, 'node_id': 'IC_kwDODBGmlM6NGYb1', 'user': {'login': 'PokIsemaine', 'id': 46661603, 'node_id': 'MDQ6VXNlcjQ2NjYxNjAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/46661603?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/PokIsemaine', 'html_url': 'https://github.com/PokIsemaine', 'followers_url': 'https://api.github.com/users/PokIsemaine/followers', 'following_url': 'https://api.github.com/users/PokIsemaine/following{/other_user}', 'gists_url': 'https://api.github.com/users/PokIsemaine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/PokIsemaine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/PokIsemaine/subscriptions', 'organizations_url': 'https://api.github.com/users/PokIsemaine/orgs', 'repos_url': 'https://api.github.com/users/PokIsemaine/repos', 'events_url': 'https://api.github.com/users/PokIsemaine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/PokIsemaine/received_events', 'type': 'User', 'user_view_type': 'public', 'site_admin': False}, 'created_at': '2024-09-23T05:22:29Z', 'updated_at': '2024-09-23T05:22:29Z', 'author_association': 'CONTRIBUTOR', 'body': "Thanks for the reminder, I'm sorry for the slow progress due to my busy work lately.\r\n\r\nMy initial idea was to provide a snapshot-like mechanism based on the recently added `engine::Context` and apply it to Multi/Exec.\r\nA single `engine::Context` will manage multiple commands and replace exclusive locks compared to normal commands.\r\n\r\n![image](https://github.com/user-attachments/assets/fdd638aa-3e77-4ae1-8ab9-f25ed77fad4f)\r\n\r\nNow to consider:\r\n1. `engine::Context` is still experimental and unstable, do we want to support the new Multi/Exec pattern based on it now?\r\n2. An implementation based on `engine::Context` may improve concurrency, but at the cost of not achieving a serializable level of isolation, which I'm not sure fits into Multi/Exec's semantics\r\n\r\nThe above is my current thoughts, if you have other better suggestions, please also welcome to discuss.", 'reactions': {'url': 'https://api.github.com/repos/apache/kvrocks/issues/comments/2367260405/reactions', 'total_count': 3, '+1': 3, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}]
